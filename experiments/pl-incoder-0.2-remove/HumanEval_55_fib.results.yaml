language: pl
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    $fibs[$n] = $fibs[$n-1] + $fibs[$n-2]\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    if ($n <= 0) {\n        $fib = 0;\n\
    \    }\n    elsif ($n == 1) {\n        $fib = 1;\n    }\n    else {\n        while\
    \ ($n > 0) {\n            $fib += $a;\n            $a *= $b;\n            $b +=\
    \ $a;\n            $n--;\n        }\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    \n    if ($n <= 0) {\n        $fib =\
    \ 0;\n    }\n    elsif ($n == 1) {\n        $fib = 1;\n    }\n    else {\n   \
    \     while ($n > 0) {\n            $fib += $a;\n            $a *= $b;\n     \
    \       $b += $a;\n            $n--;\n        }\n    }\n    \n    return $fib;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n == 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmpvr1ec15p.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    $fibs[$n] = $fibs[$n-1] + $fibs[$n-2]\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])\
    \ / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    my $a = $fib[$n-1];\n    my $b = $fib[$n-2] +\
    \ $a;\n    $fib[$n] = $b;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    $fib[$n] = $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n if $n <= 1;\n    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660012996
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib)\
    \ / 2;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1]);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    my $a = $fib[$n-1];\n    my $b = $fib[$n-2] +\
    \ $a;\n    $fib[$n] = $b;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    my $a = $fibs[$n-2];\n    my $b = $fibs[$n-1];\n\
    \    return $a + $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])/2;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n > 1;\n    return $fib[$n-2] if $n == 1;\n    return $fib[$n-1]\
    \ + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n if $n <= 1;\n    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660012996
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n\
    \    my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n \
    \   my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n\
    \    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n\
    \    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n\
    \    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n\
    \    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n\
    \    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n\
    \    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n\
    \    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n\
    \    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n\
    \    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n\
    \    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n\
    \    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n\
    \    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n\
    \    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n\
    \    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n\
    \    my $fib85;\n    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp9r4g24ju.pl line 93, at end
    of line

    syntax error at /tmp/tmp9r4g24ju.pl line 93, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp9r4g24ju.pl line 120, at end
    of line

    syntax error at /tmp/tmp9r4g24ju.pl line 120, at EOF

    Execution of /tmp/tmp9r4g24ju.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    return $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp9jffo1l7.pl line 34, at
    end of line

    syntax error at /tmp/tmp9jffo1l7.pl line 34, at EOF

    Execution of /tmp/tmp9jffo1l7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    while($n > 0) {\n        $fib2\
    \ = $fib1;\n        $fib1 = $fib + $fib1;\n        $fib = $fib1 + $fib2;\n   \
    \     $n--;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])/2;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    while($n > 0) {\n        $fib2\
    \ = $fib1;\n        $fib1 = $fib;\n        $fib += $fib2;\n        $n--;\n   \
    \ }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    return $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    return fib($n-1) + fib($n-2);\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1]);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $a = 1;\n    my $b = 1;\n    my $i;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $fib = $a + $b;\n        $a = $b;\n        $b = $fib;\n   \
    \ }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n <= 1 ? 1 : fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    my $a = 1;\n    my $b = 1;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpli9wz_wg.pl line 35, at
    end of line

    syntax error at /tmp/tmpli9wz_wg.pl line 35, at EOF

    Execution of /tmp/tmpli9wz_wg.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Bad argument to fib(): $n\\n\";\n    }\n    if ($n <=\
    \ 1) {\n        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Bad argument to fib(): 0

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n] = $fibs[$n-1] + $fibs[$n-2]\n\
    \        if $n == 0 || $n == 1;\n    my $fib;\n    for (my $i = 0; $i < $n; $i++)\
    \ {\n        $fib = $fibs[$i] + $fibs[$i-1];\n        $fibs[$i] = $fib;\n    }\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    my $a = $fibs[$n-2];\n    my $b = $fibs[$n-1];\n\
    \    return $a + $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    my $a = $fib[$n-1];\n    my $b = $fib[$n-2] +\
    \ $a;\n    $fib[$n] = $b;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n\
    \    my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n \
    \   my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n\
    \    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n\
    \    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n\
    \    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n\
    \    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n\
    \    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n\
    \    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n\
    \    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n\
    \    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n\
    \    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n\
    \    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n\
    \    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n\
    \    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n\
    \    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n\
    \    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n\
    \    my $fib85;\n    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp9r4g24ju.pl line 93, at end
    of line

    syntax error at /tmp/tmp9r4g24ju.pl line 93, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp9r4g24ju.pl line 120, at end
    of line

    syntax error at /tmp/tmp9r4g24ju.pl line 120, at EOF

    Execution of /tmp/tmp9r4g24ju.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    my $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn0_r_e2c.pl line 93, at end
    of line

    syntax error at /tmp/tmpn0_r_e2c.pl line 93, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn0_r_e2c.pl line 120, at end
    of line

    syntax error at /tmp/tmpn0_r_e2c.pl line 120, at EOF

    Execution of /tmp/tmpn0_r_e2c.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n <= 1 ? $n : fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n] = $fibs[$n-2] + $fibs[$n-1];\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n    return\
    \ $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Fibonacci number must be positive\";\n    }\n    if ($n\
    \ == 1) {\n        return 1;\n    }\n    if ($n == 2) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    $fib[$n] = $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > $#fibs;\n    my $a = $fibs[$n-2];\n    my $b = $fibs[$n-1];\n\
    \    $fibs[$n] = $a+$b;\n    return $fibs[$n];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Fibonacci number must be positive\";\n    }\n    if ($n\
    \ == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Fibonacci number must be positive at /tmp/tmp19j0s4uj.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1)\
    \ + fib($n-2)\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n > 1;\n    return $fib[$n-2] if $n == 1;\n    return $fib[$n-3]\
    \ if $n == 2;\n    return $fib[$n-4] if $n == 3;\n    return $fib[$n-5] if $n\
    \ == 4;\n    return $fib[$n-6] if $n == 5;\n    return $fib[$n-7] if $n == 6;\n\
    \    return $fib[$n-8] if $n == 7;\n    return $fib[$n-9] if $n == 8;\n    return\
    \ $fib[$n-10] if $n == 9;\n    return $fib[$n-11] if $n == 10;\n    return $fib[$n-12]\
    \ if $n == 11;\n    return $fib[$n-13] if $n == 12;\n    return $fib[$n-14] if\
    \ $n == 13;\n    return $fib[$n-15] if $n == 14;\n    return $fib[$n-16] if $n\
    \ == 15;\n    return $fib[$n-17] if $n == 16;\n    return $fib[$n-18] if $n ==\
    \ 17;\n    return $fib[$n-19] if $n == 18;\n    return $fib[$n-20] if $n == 19;\n\
    \    return $fib[$n-21] if $n == 20;\n    return $fib[$n-22] if $n == 21;\n  \
    \  return $fib[$n-23] if $n == 22;\n    return $fib[$n-24] if $n == 23;\n    return\
    \ $fib[$n-25] if $n == 24;\n    return $fib[$n-26] if $n == 25;\n    return $fib[$n-27]\
    \ if $n == 26;\n    return $fib[$n-28] if $n == 27;\n    return $fib[$n-29] if\
    \ $n == 28;\n    return $fib[$n-30] if $n == 29;\n    return $fib[$n-31] if $n\
    \ == 31;\n    return $fib[$n-32] if $n == 32;\n    return $fib[$n-33] if $n ==\
    \ 33;\n    return $fib[$n-34] if $n == 34;\n    return $fib[$n-35] if $n == 35;\n\
    \    return $fib[$n-36] if $n == 36;\n    return $fib[$n-37] if $n == 37;\n  \
    \  return $fib[$n-38] if $n == 38;\n    return $fib[$n-39] if $n == 39;\n    return\
    \ $fib[$n-40] if $n == 41;\n    return $fib[$n-41] if $n == 42;\n    return $fib[$n-42]\
    \ if $n == 43;\n    return $fib[$n-43] if $n == 44;\n    return $fib[$n-44] if\
    \ $n == 45;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpmhbijnt4.pl line 75, at
    end of line

    syntax error at /tmp/tmpmhbijnt4.pl line 75, at EOF

    Execution of /tmp/tmpmhbijnt4.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp8pc3ffvr.pl line 36, at
    end of line

    syntax error at /tmp/tmp8pc3ffvr.pl line 36, at EOF

    Execution of /tmp/tmp8pc3ffvr.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n  \
    \      $fib = $a + $b;\n        $a = $b;\n        $b = $fib;\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])\
    \ / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    return $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    \n    if ($n < 0) {\n        $fib =\
    \ $a;\n    } else {\n        $fib = $b;\n    }\n    \n    while ($n > 0) {\n \
    \       $fib = $a + $b;\n        $a = $b;\n        $b = $fib;\n        $n--;\n\
    \    }\n    \n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    for($i = 0;\
    \ $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n <= 1;\n    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    my $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $fib;\n    if\
    \ ($n < 0) {\n        $fib = 0;\n    }\n    elsif ($n == 0) {\n        $fib =\
    \ 0;\n    }\n    elsif ($n == 1) {\n        $fib = 1;\n    }\n    else {\n   \
    \     for ($i = 2; $i <= $n; $i++) {\n            $c = $a + $b;\n            $a\
    \ = $b;\n            $b = $c;\n        }\n        $fib = $b;\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n] = $fibs[$n-2] + $fibs[$n-1];\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    $fib[$n] = $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $fib;\n\
    \    \n    if ($n < 0) {\n        $fib = 0;\n    }\n    elsif ($n == 0) {\n  \
    \      $fib = 1;\n    }\n    elsif ($n == 1) {\n        $fib = 0;\n    }\n   \
    \ else {\n        $c = $a + $b;\n        $i = $n;\n        while ($i > 0) {\n\
    \            $fib += $c;\n            $a = $b;\n            $b = $c;\n       \
    \     $c = $a + $b;\n            $i -= 1;\n        }\n    }\n    return $fib;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    my $a = $fibs[$n-2];\n    my $b = $fibs[$n-1];\n\
    \    $fibs[$n] = $a+$b;\n    return $fibs[$n];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n <= 1) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n <= 1;\n    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2)\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib)\
    \ / 2;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with negative argument: $n\\n\";\n    }\n\
    \    if ($n <= 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n\
    \ - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with negative argument: 0

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > 0;\n    return $fibs[$n-2] if $n == 1;\n    return $fibs[$n-3]\
    \ if $n == 2;\n    return $fibs[$n-4] if $n == 3;\n    return $fibs[$n-5] if $n\
    \ == 4;\n    return $fibs[$n-6] if $n == 5;\n    return $fibs[$n-7] if $n == 6;\n\
    \    return $fibs[$n-8] if $n == 7;\n    return $fibs[$n-9] if $n == 8;\n    return\
    \ $fibs[$n-10] if $n == 9;\n    return $fibs[$n-11] if $n == 10;\n    return $fibs[$n-12]\
    \ if $n == 11;\n    return $fibs[$n-13] if $n == 12;\n    return $fibs[$n-14]\
    \ if $n == 13;\n    return $fibs[$n-15] if $n == 14;\n    return $fibs[$n-16]\
    \ if $n == 15;\n    return $fibs[$n-17] if $n == 16;\n    return $fibs[$n-18]\
    \ if $n == 17;\n    return $fibs[$n-19] if $n == 18;\n    return $fibs[$n-20]\
    \ if $n == 19;\n    return $fibs[$n-21] if $n == 20;\n    return $fibs[$n-22]\
    \ if $n == 21;\n    return $fibs[$n-23] if $n == 22;\n    return $fibs[$n-24]\
    \ if $n == 23;\n    return $fibs[$n-25] if $n == 24;\n    return $fibs[$n-26]\
    \ if $n == 25;\n    return $fibs[$n-27] if $n == 26;\n    return $fibs[$n-28]\
    \ if $n == 27;\n    return $fibs[$n-29] if $n == 28;\n    return $fibs[$n-30]\
    \ if $n == 29;\n    return $fibs[$n-31] if $n == 31;\n    return $fibs[$n-32]\
    \ if $n == 32;\n    return $fibs[$n-33] if $n == 33;\n    return $fibs[$n-34]\
    \ if $n == 34;\n    return $fibs[$n-35] if $n == 35;\n    return $fibs[$n-36]\
    \ if $n == 36;\n    return $fibs[$n-37] if $n == 37;\n    return $fibs[$n-38]\
    \ if $n == 38;\n    return $fibs[$n-39] if $n == 39;\n    return $fibs[$n-44]\
    \ if $n == 44;\n    return $fibs[$n-45] if $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpcxwdiesm.pl line 45,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpcxwdiesm.pl line 45, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpcxwdiesm.pl line 72, at end of line\nsyntax\
    \ error at /tmp/tmpcxwdiesm.pl line 72, at EOF\nExecution of /tmp/tmpcxwdiesm.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1]);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib + $fib)\
    \ / $n;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-1]**2);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n <= 1;\n    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    while($n--) {\n        $fib2\
    \ = $fib1;\n        $fib1 = $fib1 + $fib2;\n        $fib = $fib1 + $fib2;\n  \
    \  }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n <= 1) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    return fib($n-1) + fib($n-2);\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Fibonacci number must be positive\";\n    }\n    if ($n\
    \ == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Fibonacci number must be positive at /tmp/tmp19j0s4uj.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Fibonacci number $n must be positive\";\n    }\n    if\
    \ ($n == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Fibonacci number 0 must be positive at /tmp/tmpbirxlcsk.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib)\
    \ / 2;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n if $n <= 1;\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    if ($n < 0) {\n        $fib = 0;\n \
    \   }\n    elsif ($n == 0) {\n        $fib = 0;\n    }\n    elsif ($n == 1) {\n\
    \        $fib = 1;\n    }\n    else {\n        while ($n > 0) {\n            $fib\
    \ = ($a + $b) % $n;\n            $a = $b;\n            $b = $fib;\n          \
    \  $n--;\n        }\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    return $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n <= 2) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n <= 1 ? 1 : fib($n-1) + fib($n-2)\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    $fib[$n] = $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    my $a = $fib->fib(int($n/2)+1);\n\
    \    my $b = $fib->fib(int($n%2)+1);\n    return $a+$b;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t call method "fib" on an undefined value at /tmp/tmp4bto6bm7.pl line
    8.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n <= 1;\n    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > 0;\n    return $fibs[$n-2] if $n == 1;\n    return $fibs[$n-3]\
    \ if $n == 2;\n    return $fibs[$n-4] if $n == 3;\n    return $fibs[$n-5] if $n\
    \ == 4;\n    return $fibs[$n-6] if $n == 5;\n    return $fibs[$n-7] if $n == 6;\n\
    \    return $fibs[$n-8] if $n == 7;\n    return $fibs[$n-9] if $n == 8;\n    return\
    \ $fibs[$n-10] if $n == 9;\n    return $fibs[$n-11] if $n == 10;\n    return $fibs[$n-12]\
    \ if $n == 11;\n    return $fibs[$n-13] if $n == 12;\n    return $fibs[$n-14]\
    \ if $n == 13;\n    return $fibs[$n-15] if $n == 14;\n    return $fibs[$n-16]\
    \ if $n == 15;\n    return $fibs[$n-17] if $n == 16;\n    return $fibs[$n-18]\
    \ if $n == 17;\n    return $fibs[$n-19] if $n == 18;\n    return $fibs[$n-20]\
    \ if $n == 19;\n    return $fibs[$n-21] if $n == 20;\n    return $fibs[$n-22]\
    \ if $n == 21;\n    return $fibs[$n-23] if $n == 22;\n    return $fibs[$n-24]\
    \ if $n == 23;\n    return $fibs[$n-25] if $n == 24;\n    return $fibs[$n-26]\
    \ if $n == 25;\n    return $fibs[$n-27] if $n == 26;\n    return $fibs[$n-28]\
    \ if $n == 27;\n    return $fibs[$n-29] if $n == 28;\n    return $fibs[$n-30]\
    \ if $n == 29;\n    return $fibs[$n-31] if $n == 31;\n    return $fibs[$n-32]\
    \ if $n == 32;\n    return $fibs[$n-33] if $n == 33;\n    return $fibs[$n-34]\
    \ if $n == 34;\n    return $fibs[$n-35] if $n == 35;\n    return $fibs[$n-36]\
    \ if $n == 36;\n    return $fibs[$n-37] if $n == 37;\n    return $fibs[$n-38]\
    \ if $n == 38;\n    return $fibs[$n-39] if $n == 39;\n    return $fibs[$n-42]\
    \ if $n == 42;\n    return $fibs[$n-43] if $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpifradglh.pl line 45,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpifradglh.pl line 45, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpifradglh.pl line 72, at end of line\nsyntax\
    \ error at /tmp/tmpifradglh.pl line 72, at EOF\nExecution of /tmp/tmpifradglh.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > 0;\n    return $fibs[$n-2] if $n == 1;\n    return $fibs[$n-3]\
    \ if $n == 2;\n    return $fibs[$n-4] if $n == 3;\n    return $fibs[$n-5] if $n\
    \ == 4;\n    return $fibs[$n-6] if $n == 5;\n    return $fibs[$n-7] if $n == 6;\n\
    \    return $fibs[$n-8] if $n == 7;\n    return $fibs[$n-9] if $n == 8;\n    return\
    \ $fibs[$n-10] if $n == 9;\n    return $fibs[$n-11] if $n == 10;\n    return $fibs[$n-12]\
    \ if $n == 11;\n    return $fibs[$n-13] if $n == 12;\n    return $fibs[$n-14]\
    \ if $n == 13;\n    return $fibs[$n-15] if $n == 14;\n    return $fibs[$n-16]\
    \ if $n == 15;\n    return $fibs[$n-17] if $n == 16;\n    return $fibs[$n-18]\
    \ if $n == 17;\n    return $fibs[$n-19] if $n == 18;\n    return $fibs[$n-20]\
    \ if $n == 19;\n    return $fibs[$n-21] if $n == 20;\n    return $fibs[$n-22]\
    \ if $n == 21;\n    return $fibs[$n-23] if $n == 22;\n    return $fibs[$n-24]\
    \ if $n == 23;\n    return $fibs[$n-25] if $n == 24;\n    return $fibs[$n-26]\
    \ if $n == 25;\n    return $fibs[$n-27] if $n == 26;\n    return $fibs[$n-28]\
    \ if $n == 27;\n    return $fibs[$n-29] if $n == 28;\n    return $fibs[$n-30]\
    \ if $n == 29;\n    return $fibs[$n-31] if $n == 31;\n    return $fibs[$n-32]\
    \ if $n == 32;\n    return $fibs[$n-33] if $n == 33;\n    return $fibs[$n-34]\
    \ if $n == 34;\n    return $fibs[$n-35] if $n == 35;\n    return $fibs[$n-36]\
    \ if $n == 36;\n    return $fibs[$n-37] if $n == 37;\n    return $fibs[$n-38]\
    \ if $n == 38;\n    return $fibs[$n-39] if $n == 39;\n    return $fibs[$n-40]\
    \ if $n == 41;\n    return $fibs[$n-42] if \nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "\"use\" not allowed in expression at /tmp/tmp20skx4j5.pl line 45, near\
    \ \"if \n\"\nsyntax error at /tmp/tmp20skx4j5.pl line 45, near \"if \nuse Test::Deep\"\
    \nMissing right curly or square bracket at /tmp/tmp20skx4j5.pl line 72, at end\
    \ of line\nsyntax error at /tmp/tmp20skx4j5.pl line 72, at EOF\nExecution of /tmp/tmp20skx4j5.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    if ($n < 0) {\n        $fib = $a;\n\
    \    }\n    else {\n        $fib = 0;\n        while ($n < $#_) {\n          \
    \  $fib += $b;\n            $b = $a;\n            $a = $fib;\n            $fib\
    \ += $b;\n            $n++;\n        }\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    my $a = $fibs[$n-2];\n    my $b = $fibs[$n-1];\n\
    \    $fibs[$n] = $a+$b;\n    return $fibs[$n];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    return $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 0) {\n        $fib = 0;\n    }\n    elsif ($n == 1) {\n       \
    \ $fib = 1;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2)\n    }\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] if $n <= 1;\n    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    $fibs[$n] = $fibs[$n-1] + $fibs[$n-2]\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with negative argument\";\n    }\n    if\
    \ ($n <= 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with negative argument at /tmp/tmp1a2l98d2.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n] if ($n >= 0 && $n < $#fibs);\n    $fibs[$n] = $fibs[$n-1] + $fibs[$n-2]\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp8pc3ffvr.pl line 36, at
    end of line

    syntax error at /tmp/tmp8pc3ffvr.pl line 36, at EOF

    Execution of /tmp/tmp8pc3ffvr.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib + $fib)\
    \ / 3;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > 0;\n    return $fibs[$n-2] if $n == 1;\n    return $fibs[$n-3]\
    \ if $n == 2;\n    return $fibs[$n-4] if $n == 3;\n    return $fibs[$n-5] if $n\
    \ == 4;\n    return $fibs[$n-6] if $n == 5;\n    return $fibs[$n-7] if $n == 6;\n\
    \    return $fibs[$n-8] if $n == 7;\n    return $fibs[$n-9] if $n == 8;\n    return\
    \ $fibs[$n-10] if $n == 9;\n    return $fibs[$n-11] if $n == 10;\n    return $fibs[$n-12]\
    \ if $n == 11;\n    return $fibs[$n-13] if $n == 12;\n    return $fibs[$n-14]\
    \ if $n == 13;\n    return $fibs[$n-15] if $n == 14;\n    return $fibs[$n-16]\
    \ if $n == 15;\n    return $fibs[$n-17] if $n == 16;\n    return $fibs[$n-18]\
    \ if $n == 17;\n    return $fibs[$n-19] if $n == 18;\n    return $fibs[$n-20]\
    \ if $n == 19;\n    return $fibs[$n-21] if $n == 20;\n    return $fibs[$n-22]\
    \ if $n == 21;\n    return $fibs[$n-23] if $n == 22;\n    return $fibs[$n-24]\
    \ if $n == 23;\n    return $fibs[$n-25] if $n == 24;\n    return $fibs[$n-26]\
    \ if $n == 25;\n    return $fibs[$n-27] if $n == 26;\n    return $fibs[$n-28]\
    \ if $n == 27;\n    return $fibs[$n-29] if $n == 28;\n    return $fibs[$n-30]\
    \ if $n == 29;\n    return $fibs[$n-31] if $n == 31;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])\
    \ / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib + $fib)\
    \ / 3;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])\
    \ / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        return $n;\n    }\n    $fib = $fib + $fib;\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n > 0;\n    return $fibs[$n-2] if $n == 0;\n    return $fibs[$n-3]\
    \ if $n == 1;\n    return $fibs[$n-4] if $n == 2;\n    return $fibs[$n-5] if $n\
    \ == 3;\n    return $fibs[$n-6] if $n == 4;\n    return $fibs[$n-7] if $n == 5;\n\
    \    return $fibs[$n-8] if $n == 6;\n    return $fibs[$n-9] if $n == 7;\n    return\
    \ $fibs[$n-10] if $n == 8;\n    return $fibs[$n-11] if $n == 9;\n    return $fibs[$n-12]\
    \ if $n == 10;\n    return $fibs[$n-13] if $n == 11;\n    return $fibs[$n-14]\
    \ if $n == 12;\n    return $fibs[$n-15] if $n == 13;\n    return $fibs[$n-16]\
    \ if $n == 14;\n    return $fibs[$n-17] if $n == 15;\n    return $fibs[$n-18]\
    \ if $n == 16;\n    return $fibs[$n-19] if $n == 17;\n    return $fibs[$n-20]\
    \ if $n == 18;\n    return $fibs[$n-21] if $n == 19;\n    return $fibs[$n-22]\
    \ if $n == 20;\n    return $fibs[$n-23] if $n == 21;\n    return $fibs[$n-24]\
    \ if $n == 22;\n    return $fibs[$n-25] if $n == 23;\n    return $fibs[$n-26]\
    \ if $n == 24;\n    return $fibs[$n-27] if $n == 25;\n    return $fibs[$n-28]\
    \ if $n == 26;\n    return $fibs[$n-29] if $n == 27;\n    return $fibs[$n-30]\
    \ if $n == 28;\n    return $fibs[$n-31] if $n == 29;\n    return $fibs[$n-32]\
    \ if $n == 30;\n    return $fibs[$n-33] if $n == 31;\n    return $fibs[$n-34]\
    \ if $n == 32;\n    return $fibs[$n-35] if $n == 33;\n    return $fibs[$n-36]\
    \ if $n == 34;\n    return $fibs[$n-37] if $n == 35;\n    return $fibs[$n-38]\
    \ if $n == 36;\n    return $fibs[$n-39] if $n == 37;\n    return $fibs[$n-40]\
    \ if $n == 38;\n    return $fibs[$n-39] if \nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "\"use\" not allowed in expression at /tmp/tmpfzlwhq26.pl line 45, near\
    \ \"if \n\"\nsyntax error at /tmp/tmpfzlwhq26.pl line 45, near \"if \nuse Test::Deep\"\
    \nMissing right curly or square bracket at /tmp/tmpfzlwhq26.pl line 72, at end\
    \ of line\nsyntax error at /tmp/tmpfzlwhq26.pl line 72, at EOF\nExecution of /tmp/tmpfzlwhq26.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 0) {\n        $fib = 0;\n    } elsif ($n == 1) {\n        $fib\
    \ = 1;\n    } else {\n        $fib = fib($n - 1) + fib($n - 2);\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp9jffo1l7.pl line 34, at
    end of line

    syntax error at /tmp/tmp9jffo1l7.pl line 34, at EOF

    Execution of /tmp/tmp9jffo1l7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"Fibonacci number must be positive\";\n    }\n    if ($n\
    \ == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Fibonacci number must be positive at /tmp/tmp19j0s4uj.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    $fibs[$n] = $fibs[$n-2] + $fibs[$n-1];\n \
    \   return $fibs[$n];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= $#fib;\n    $fib[$n] = $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n  \
    \      $fib = $a + $b;\n        $a = $b;\n        $b = $fib;\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n <= 2) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-2] + ($fibs[$n-2] + $fibs[$n-1])\
    \ / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $n if $n <= 1;\n    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660012996
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib\
    \ = 0;\n    my $fib1 = 1;\n    my $fib2 = 1;\n    while($n > 0) {\n        $fib\
    \ = $fib1 + $fib2;\n        $fib1 = $fib2;\n        $fib2 = $fib;\n        $n--;\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n] if $n <= 1;\n    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    if ($n < 0) {\n        $fib = 0;\n \
    \   }\n    elsif ($n == 0) {\n        $fib = 0;\n    }\n    elsif ($n == 1) {\n\
    \        $fib = 1;\n    }\n    else {\n        while ($n > 0) {\n            $fib\
    \ = $a + $b;\n            $a = $b;\n            $b = $fib;\n            $n--;\n\
    \        }\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        return 0;\n    }\n    if ($n <= 2) {\n        return 1;\n \
    \   }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $fib;\n    \n    if ($n < 0) {\n        $fib =\
    \ 0;\n    }\n    elsif ($n == 0) {\n        $fib = 0;\n    }\n    elsif ($n ==\
    \ 1) {\n        $fib = 1;\n    }\n    else {\n        while ($n > 0) {\n     \
    \       $fib += $a;\n            $a *= $b;\n            $b += 1;\n           \
    \ $n -= 1;\n        }\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 0
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n -\
    \ 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with negative argument\";\n    }\n    if\
    \ ($n <= 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with negative argument at /tmp/tmp1a2l98d2.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 255
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    if ($n\
    \ <= 0) {\n        die \"fib() called with $n <= 0\";\n    }\n    if ($n <= 1)\
    \ {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'fib() called with 0 <= 0 at /tmp/tmp502n6792.pl line 5.

    '
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fibs[$n-1] if $n <= $#fibs;\n    return $fibs[$n-1] + $fibs[$n-2]\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    return\
    \ $fib[$n-1] + $fib[$n-2]\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039
- exit_code: 1
  program: "# Return n-th Fibonacci number.\nsub fib {\n    my($n) = @_;\n    my $fib;\n\
    \    if ($n <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013039

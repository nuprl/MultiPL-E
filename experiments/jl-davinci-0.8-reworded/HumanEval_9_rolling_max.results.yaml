name: HumanEval_9_rolling_max
language: jl
results:
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(length(numbers))\n    max = numbers[1]\n    result[1] =\
    \ max\n    for i in 2:length(numbers)\n        current = numbers[i]\n        if\
    \ current > max\n            max = current\n        end\n        result[i] = max\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjlbijvgk.jl:24\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpjlbijvgk.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjlbijvgk.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjlbijvgk.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjlbijvgk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    window_max = zeros(Int64, length(numbers))\n    window_size = 0\n    for\
    \ i = 1:length(numbers)\n        while window_size > 0 && numbers[window_size]\
    \ <= numbers[i]\n            window_size -= 1\n        end\n        window_size\
    \ += 1\n        window_max[i] = numbers[window_size]\n    end\n    return window_max\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv143weyr.jl:24\n  Expression: candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n   Evaluated: [1, 1, 1, 1] == [1, 2, 3, 4]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv143weyr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv143weyr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv143weyr.jl:25\n  Expression: candidate([4, 3, 2, 1]) == [4,\
    \ 4, 4, 4]\n   Evaluated: [4, 3, 2, 1] == [4, 4, 4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv143weyr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv143weyr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv143weyr.jl:26\n  Expression: candidate([3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100]\n   Evaluated: [3, 2, 3, 3, 3] == [3, 3, 3, 100, 100]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv143weyr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv143weyr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv143weyr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    N = length(numbers)\n    result = ones(Int64, N)\n    for i in 1:N\n \
    \       result[i] = max(numbers[1:i])\n    end\n    return result\nend\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvx76pbsx.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  MethodError: no method\
    \ matching max(::Vector{Int64})\n  Closest candidates are:\n    max(::Any, !Matched::Missing)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n    max(::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvx76pbsx.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvx76pbsx.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvx76pbsx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpvx76pbsx.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n  MethodError: no method matching max(::Vector{Int64})\n\
    \  Closest candidates are:\n    max(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:137\n\
    \    max(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:492\n\
    \    max(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    ...\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvx76pbsx.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvx76pbsx.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvx76pbsx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpvx76pbsx.jl:23\n  Test threw exception\n  Expression:\
    \ candida"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvx76pbsx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(length(numbers))\n    current_max = numbers[1]\n    result[1]\
    \ = current_max\n    for i = 2:length(numbers)\n        if numbers[i] > current_max\n\
    \            current_max = numbers[i]\n        end\n        result[i] = current_max\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgnlue1nl.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpgnlue1nl.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgnlue1nl.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgnlue1nl.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnlue1nl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max = numbers[1]\n    result = [max]\n    for i in 2:length(numbers)\n\
    \        max = max(max, numbers[i])\n        push!(result, max)\n    end\n   \
    \ return result\nend\n \nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0_syhqnf.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp0_syhqnf.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0_syhqnf.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0_syhqnf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0_syhqnf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n     @ Main /tmp/tmp0_syhqnf.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_syhqnf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_syhqnf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0_syhqnf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n     @ Main /tmp/tmp0_syhqnf.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_syhqnf.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_syhqnf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    # Initialise the result vector with first element from input\n    res\
    \ = [numbers[1]]\n    # The slice is initialised with two first elements: current\
    \ and previous maximum\n    slice = [numbers[1], numbers[1]]\n    # For each element\
    \ in the input vector\n    for num in numbers[2:end]\n        # If the new number\
    \ is greater than previous maximum,\n        # update the slice with previous\
    \ maximum and the new number\n        if num > slice[2]\n            slice = [slice[2],\
    \ num]\n        # Otherwise the previous maximum is enough\n        else\n   \
    \         slice = [slice[1], slice[2]]\n        end\n        # Push the previous\
    \ maximum to the result vector\n        push!(res, slice[1])\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp296rlcdb.jl:31\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp296rlcdb.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp296rlcdb.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp296rlcdb.jl:30\ntest set:\
    \ Test Failed at /tmp/tmp296rlcdb.jl:32\n  Expression: candidate([1, 2, 3, 4])\
    \ == [1, 2, 3, 4]\n   Evaluated: [1, 1, 2, 3] == [1, 2, 3, 4]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp296rlcdb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp296rlcdb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp296rlcdb.jl:34\n  Expression: candidate([3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100]\n   Evaluated: [3, 3, 3, 3, 3] == [3, 3, 3, 100, 100]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp296rlcdb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp296rlcdb.jl:30\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    1     2      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp296rlcdb.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    max_so_far = -1\n\
    \    for (i, n) in enumerate(numbers)\n        max_so_far = max(max_so_far, n)\n\
    \        result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    roll_max = zeros(length(numbers))\n\
    \    roll_max[1] = numbers[1]\n    for i in 2:length(numbers)\n        roll_max[i]\
    \ = max(roll_max[i-1], numbers[i])\n    end\n    return roll_max\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsgvthxg8.jl:24\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpsgvthxg8.jl:13\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsgvthxg8.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsgvthxg8.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsgvthxg8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    # Init the array with the first element\n    out = [numbers[1]]\n    max\
    \ = numbers[1]\n    for i = 2:length(numbers)\n        # We must keep the running\
    \ max\n        if max < numbers[i]\n            max = numbers[i]\n        end\n\
    \        # We append it at the end of the output\n        push!(out, max)\n  \
    \  end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4oxxd1uw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp4oxxd1uw.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4oxxd1uw.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4oxxd1uw.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4oxxd1uw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = ones(Int64, length(numbers))\n    max = 0\n    for i = 1:length(numbers)\n\
    \        result[i] = max(max, numbers[i])\n        max = result[i]\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi3yhexzk.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  MethodError: objects\
    \ of type Int64 are not callable\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpi3yhexzk.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3yhexzk.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi3yhexzk.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpi3yhexzk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n     @ Main /tmp/tmpi3yhexzk.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3yhexzk.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi3yhexzk.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpi3yhexzk.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n  MethodError: objects\
    \ of type Int64 are not callable\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\n  Stacktrace:\n   [1] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpi3yhexzk.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi3yhexzk.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3yhexzk.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i = 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp6xmm8hhf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp6xmm8hhf.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6xmm8hhf.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6xmm8hhf.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6xmm8hhf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    maximums = Vector{Int64}(undef, length(numbers))\n    maximums[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        maximums[i] = max(maximums[i-1], numbers[i])\n\
    \    end\n    return maximums\nend\n\"\"\" From a given vector of integers, generate\
    \ a vector of rolling minimum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_min([1, 2, 3, 2, 3, 4, 2])\n    [1, 1, 1, 1, 1, 1, 1]\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpl1_ukwgl.jl:14\nin expression starting at /tmp/tmpl1_ukwgl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    # max_so_far\n    max_so_far = numbers[1]\n    # result = [max_so_far]\n\
    \    result = [max_so_far]\n    # iterate over the rest of the numbers\n    for\
    \ i in 2:length(numbers)\n        if numbers[i] > max_so_far\n            max_so_far\
    \ = numbers[i]\n        end\n        push!(result, max_so_far)\n    end\n    #\
    \ return result\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptgm_v3yl.jl:26\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptgm_v3yl.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptgm_v3yl.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptgm_v3yl.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptgm_v3yl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for idx in 2:length(numbers)\n        result[idx] = max(result[idx-1], numbers[idx])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpd_1v1ide.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpd_1v1ide.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd_1v1ide.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd_1v1ide.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_1v1ide.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Array{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphjndblqs.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmphjndblqs.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphjndblqs.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphjndblqs.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphjndblqs.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i = 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpof3ec2_6.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpof3ec2_6.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpof3ec2_6.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpof3ec2_6.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpof3ec2_6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    cur_max = numbers[1]\n    out = [cur_max]\n    for n in numbers[2:end]\n\
    \        if n > cur_max\n            cur_max = n\n        end\n        push!(out,\
    \ cur_max)\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo7lun82n.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpo7lun82n.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo7lun82n.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo7lun82n.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo7lun82n.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(numbers)\n    result = zeros(Int64, n)\n    result[1] = numbers[1]\n\
    \    for i in 2:n\n        result[i] = max(result[i-1], numbers[i])\n    end\n\
    \    return result\nend\nrolling_max([1, 2, 3, 2, 3, 4, 2])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn04q1cfr.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpn04q1cfr.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn04q1cfr.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn04q1cfr.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn04q1cfr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    min_found = minimum(numbers)\n    output = zeros(Int64, length(numbers))\n\
    \    for i = 1:length(numbers)\n        if numbers[i] > min_found\n          \
    \  min_found = numbers[i]\n        end\n        output[i] = min_found\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdp95qse2.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  ArgumentError:\
    \ reducing over an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] reduce_empty(op::Function, #unused#::Type{Int64})\n\
    \      @ Base ./reduce.jl:311\n    [3] mapreduce_empty(#unused#::typeof(identity),\
    \ op::Function, T::Type)\n      @ Base ./reduce.jl:345\n    [4] reduce_empty(op::Base.MappingRF{typeof(identity),\
    \ typeof(min)}, #unused#::Type{Int64})\n      @ Base ./reduce.jl:331\n    [5]\
    \ reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [6] mapreduce_empty_iter(f::Function,\
    \ op::Function, itr::Vector{Int64}, ItrEltype::Base.HasEltype)\n      @ Base ./reduce.jl:353\n\
    \    [7] _mapreduce\n      @ ./reduce.jl:402 [inlined]\n    [8] _mapreduce_dim\n\
    \      @ ./reducedim.jl:330 [inlined]\n    [9] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n   [10] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n   [11]\
    \ #_minimum#753\n      @ ./reducedim.jl:894 [inlined]\n   [12] _minimum\n    \
    \  @ ./reducedim.jl:894 [inlined]\n   [13] #_minimum#752\n      @ ./reducedim.jl:893\
    \ [inlined]\n   [14] _minimum\n      @ ./reducedim.jl:893 [inlined]\n   [15] #minimum#750\n\
    \      @ ./reducedim.jl:889 [inlined]\n   [16] minimum\n      @ ./reducedim.jl:889\
    \ [inlined]\n   [17] rolling_max(numbers::Vector{Int64})\n      @ Main /tmp/tmpdp95qse2.jl:7\n\
    \   [18] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [19] macro expansion\n      @ /tmp/tmpdp95qse2.jl:22 [inlined]\n\
    \   [20] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [21] top-level scope\n      @ /tmp/tmpdp95qse2.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdp95qse2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given vector of integers, generate a vector of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(numbers)\n    maximums = Vector{Int64}(undef, n)\n    maximums[1]\
    \ = numbers[1]\n    for i = 2:n\n        maximums[i] = max(maximums[i-1], numbers[i])\n\
    \    end\n    return maximums\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxw4knfwe.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxw4knfwe.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxw4knfwe.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxw4knfwe.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxw4knfwe.jl:18\n"
  exit_code: 1
  status: SyntaxError

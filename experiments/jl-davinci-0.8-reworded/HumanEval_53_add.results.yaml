language: jl
name: HumanEval_53_add
results:
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n```\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf9u9m9x4.jl:10\nin expression starting at\
    \ /tmp/tmpf9u9m9x4.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \nadd(2, 3)\nadd(2, 3.)\nadd(2., 3)\nadd(2., 3.)\n@code_warntype\
    \ add(2, 3)\n@code_warntype add(2, 3.)\n@code_warntype add(2., 3)\n@code_warntype\
    \ add(2., 3.)\n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching add(::Int64, ::Float64)\n\
    Closest candidates are:\n  add(::Int64, !Matched::Int64) at /tmp/tmpq7je9s5d.jl:7\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpq7je9s5d.jl:12\nin expression\
    \ starting at /tmp/tmpq7je9s5d.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n```\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp47zry4fn.jl:10\nin expression starting at\
    \ /tmp/tmp47zry4fn.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n  return x\
    \ + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n```\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp47zry4fn.jl:10\nin expression starting at\
    \ /tmp/tmp47zry4fn.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nadd(5, 7)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\n```\n#### lss\n```julia\n```\n### plot\n```julia\n```\n### plot!\n```julia\n\
    ```\n### scatter\n```julia\n```\n### scatter!\n```julia\n```\n### bar\n```julia\n\
    ```\n### bar!\n```julia\n```\n### imshow\n```julia\n```\n### imshow!\n```julia\n\
    ```\n### contour\n```julia\n```\n### contour!\n```julia\n```\n### heatmap\n```julia\n\
    ```\n### heatmap!\n```julia\n```\n### surf\n```julia\n```\n### surf!\n```julia\n\
    ```\n### mesh\n```julia\n```\n### mesh!\n```julia\n```\n### plot3D\n```julia\n\
    ```\n### plot3D!\n```julia\n```\n### scatter3D\n```julia\n```\n### scatter3D!\n\
    ```julia\n```\n### stem\n```julia\n```\n### stem!\n```julia\n```\n### errorbar\n\
    ```julia\n```\n### errorbar!\n```julia\n```\n### histogram\n```julia\n```\n###\
    \ histogram!\n```julia\n```\n### boxplot\n```julia\n```\n### boxplot!\n```julia\n\
    ```\n### streamplot\n```julia\n```\n### streamplot!\n```julia\n```\n### quiver\n\
    ```julia\n```\n### quiver!\n```julia\n```\n### pie\n```julia\n```\n### pie!\n\
    ```julia\n```\n### show\n```julia\n```\n### savefig\n```julia\n```\n### show_plot\n\
    ```julia\n```\n### plt\n```julia\n```\n### fig\n```julia\n```\n### axes\n```julia\n\
    ```\n### figure\n``\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: parsing command `#### lss\n`: special characters \"#{}()[]<>|&*?~;\"\
    \ must be quoted in commands\nStacktrace:\n [1] error(s::String)\n   @ Base ./error.jl:33\n\
    \ [2] shell_parse(str::String, interpolate::Bool; special::String, filename::String)\n\
    \   @ Base ./shell.jl:114\n [3] var\"@cmd\"(__source__::LineNumberNode, __module__::Module,\
    \ str::Any)\n   @ Base ./cmd.jl:442\nin expression starting at /tmp/tmpfim6n9ui.jl:10\n\
    in expression starting at /tmp/tmpfim6n9ui.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    # x +\
    \ y == x + y\n    # x + y == x + y\n    # x + y == x + y\n    return x + y\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\
    \t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\n\"\"\"Multiply two numbers x and y\n    >>> multiply(2, 3)\n    6\n    >>>\
    \ multiply(5, 7)\n    35\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpx4wcutbo.jl:10\nin expression starting at /tmp/tmpx4wcutbo.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n   x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nprintln(add(2, 3))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: '5

    Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n  return x\
    \ + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n   x + y\n\
    end\n```\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ktgiycs.jl:10\nin expression starting at\
    \ /tmp/tmp5ktgiycs.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n#add(2, 3)\nadd(5, 7)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nadd(2, 3)\nadd(2, 3.5)\n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching add(::Int64, ::Float64)\n\
    Closest candidates are:\n  add(::Int64, !Matched::Int64) at /tmp/tmp13kxgfbx.jl:7\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp13kxgfbx.jl:11\nin expression\
    \ starting at /tmp/tmp13kxgfbx.jl:11\n"
  stdout: ''
  timestamp: 1659978327
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n\"\"\"\n#=\n```@docs\nadd\n```\n=#\n\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1,\
    \ 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t\
    @test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpt5_axn6n.jl:10\nin expression starting at /tmp/tmpt5_axn6n.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nx = add(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nadd(5, 7)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n\"\"\"Parabolic differential equation\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1,\
    \ 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t\
    @test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpthn71o86.jl:10\nin expression starting at /tmp/tmpthn71o86.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n```\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp47zry4fn.jl:10\nin expression starting at\
    \ /tmp/tmp47zry4fn.jl:10\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n\"\"\"\nsolve ax + by = c\n    >>> solve(1, 1, 0)\n    (0, 0)\n\
    \    >>> solve(1, 2, 0)\n    (0, 0)\n    >>> solve(1, 1, 2)\n    (2, 0)\n    >>>\
    \ solve(1, 2, 3)\n    (1, 1)\n    >>> solve(2, 1, 3)\n    (1, 1)\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\
    \t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp3ki7adw4.jl:10\nin expression starting at /tmp/tmp3ki7adw4.jl:10\n"
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nadd(5, 7)\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n  return x\
    \ + y\nend\nx = 3; y = 5\nadd(x, y)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n   return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    \"Add\
    \ two numbers x and y.\"\n    return x + y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) ==\
    \ 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7,\
    \ 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    println(\"\
    ADDING\")\n    return x + y\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'ADDING

    ADDING

    ADDING

    ADDING

    ADDING

    Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    println(\"\
    x is $x, y is $y\")\n    x + y\nend\nadd(5, 6)\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) ==\
    \ 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7,\
    \ 5) == 12)\nend\n"
  status: OK
  stderr: 'x is 5, y is 6

    x is 0, y is 1

    x is 1, y is 0

    x is 2, y is 3

    x is 5, y is 7

    x is 7, y is 5

    Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    println(\"\
    Inside the add function\")\n    return x + y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) ==\
    \ 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7,\
    \ 5) == 12)\nend\n"
  status: OK
  stderr: 'Inside the add function

    Inside the add function

    Inside the add function

    Inside the add function

    Inside the add function

    Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 1
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nprintln(add(5, 7))\nadd(5, 7)\nadd(5.5, 7.5)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1,\
    \ 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t\
    @test(candidate(7, 5) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching add(::Float64, ::Float64)\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpicoum_8w.jl:12\nin expression\
    \ starting at /tmp/tmpicoum_8w.jl:12\n"
  stdout: '12

    '
  timestamp: 1659978328
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    \"\"\"\
    Add two numbers x and y\"\"\"\n    return x + y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) ==\
    \ 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7,\
    \ 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n \n \n \n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\n# add(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978325
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n  return x\
    \ + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nadd(2, 3)\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate(0, 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2,\
    \ 3) == 5)\n\t@test(candidate(5, 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n   x + y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
    \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978324
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5,\
    \ 7)\n    12\n    \"\"\"\nfunction add(x::Int64, y::Int64)::Int64 \n    return\
    \ x + y\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0,\
    \ 1) == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
    \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''

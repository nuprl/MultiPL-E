name: HumanEval_136_largest_smallest_integers
language: jl
prompt: "\"\"\"\n    Create a function that returns a tuple (a, b), where 'a' is\n\
  \    the largest of negative integers, and 'b' is the smallest\n    of positive\
  \ integers in a vector.\n    If there is no negative or positive integers, return\
  \ them as nothing.\n\n    Examples:\n    >>> largest_smallest_integers([2, 4, 1,\
  \ 3, 5, 7])\n    (nothing, 1)\n    >>> largest_smallest_integers([])\n    (nothing,\
  \ nothing)\n    >>> largest_smallest_integers([0])\n    (nothing, nothing)\n   \
  \ \"\"\"\nfunction largest_smallest_integers(lst::Vector{Int64})::Tuple{Union{Int64,\
  \ Nothing}, Union{Int64, Nothing}} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = largest_smallest_integers;\n\t\
  @test(candidate([2, 4, 1, 3, 5, 7]) == (nothing, 1))\n\t@test(candidate([2, 4, 1,\
  \ 3, 5, 7, 0]) == (nothing, 1))\n\t@test(candidate([1, 3, 2, 4, 5, 6, -2]) == (-2,\
  \ 1))\n\t@test(candidate([4, 5, 3, 6, 2, 7, -7]) == (-7, 2))\n\t@test(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]) == (-9, 2))\n\t@test(candidate(Vector{Int64}([])) == (nothing,\
  \ nothing))\n\t@test(candidate([0]) == (nothing, nothing))\n\t@test(candidate([-1,\
  \ -3, -5, -6]) == (-1, nothing))\n\t@test(candidate([-1, -3, -5, -6, 0]) == (-1,\
  \ nothing))\n\t@test(candidate([-6, -4, -4, -3, 1]) == (-3, 1))\n\t@test(candidate([-6,\
  \ -4, -4, -3, -100, 1]) == (-3, 1))\nend\n"
completions: ["    if isempty(lst)\n        return (nothing, nothing)\n    end\n \
    \   a = lst[1]\n    b = lst[1]\n    for x in lst\n        if x < 0 && x >= a\n\
    \            a = x\n        end\n        if x > 0 && x <= b\n            b = x\n\
    \        end\n    end\n    return (a, b)\nend", "    if isempty(lst)\n       \
    \ return (nothing, nothing)\n    end\n    neg = Int64[]\n    pos = Int64[]\n \
    \   for i in lst\n        if i < 0\n            push!(neg, i)\n        elseif\
    \ i > 0\n            push!(pos, i)\n        end\n    end\n    if isempty(neg)\n\
    \        return (nothing, minimum(pos))\n    elseif isempty(pos)\n        return\
    \ (maximum(neg), nothing)\n    else\n        return (maximum(neg), minimum(pos))\n\
    \    end\nend", "    if length(lst) == 0\n        return (nothing, nothing)\n\
    \    end\n    a = nothing\n    b = nothing\n    for i in lst\n        if i < 0\
    \ && a == nothing\n            a = i\n        elseif i < 0 && i > a\n        \
    \    a = i\n        elseif i > 0 && b == nothing\n            b = i\n        elseif\
    \ i > 0 && i < b\n            b = i\n        end\n    end\n    return (a, b)\n\
    end", "    a = nothing\n    b = nothing\n    for i in lst\n        if i < 0\n\
    \            if a == nothing\n                a = i\n            elseif i > a\n\
    \                a = i\n            end\n        elseif i > 0\n            if\
    \ b == nothing\n                b = i\n            elseif i < b\n            \
    \    b = i\n            end\n        end\n    end\n    return (a, b)\nend", " \
    \   a::Union{Int64, Nothing} = nothing\n    b::Union{Int64, Nothing} = nothing\n\
    \    for i in lst\n        if a==nothing && i<0\n            a = i\n        elseif\
    \ a!=nothing && i<0 && i>a\n            a = i\n        end\n        if b==nothing\
    \ && i>0\n            b = i\n        elseif b!=nothing && i>0 && i<b\n       \
    \     b = i\n        end\n    end\n    return (a, b)\nend", "    large = nothing\n\
    \    small = nothing\n    for i in lst\n        if i > 0 && small == nothing\n\
    \            small = i\n        elseif i > 0 && i < small\n            small =\
    \ i\n        elseif i < 0 && large == nothing\n            large = i\n       \
    \ elseif i < 0 && i > large\n            large = i\n        end\n    end\n   \
    \ return (large, small)\nend", "    positive = nothing\n    negative = nothing\n\
    \    for i in lst\n        if i >= 0 && positive == nothing\n            positive\
    \ = i\n        elseif i >= 0 && positive != nothing\n            positive = minimum(positive,\
    \ i)\n        elseif i < 0 && negative == nothing\n            negative = i\n\
    \        elseif i < 0 && negative != nothing\n            negative = maximum(negative,\
    \ i)\n        end\n    end\n    return negative, positive\nend", "    pos = minimum(filter(!isnothing,\
    \ map(x -> x > 0 ? x : nothing, lst)))\n    neg = maximum(filter(!isnothing, map(x\
    \ -> x < 0 ? x : nothing, lst)))\n    return neg, pos\nend", "    max_neg, min_pos\
    \ = nothing, nothing\n    for elem in lst\n        isneg(elem) && (max_neg ==\
    \ nothing || elem > max_neg) && (max_neg = elem)\n        ispos(elem) && (min_pos\
    \ == nothing || elem < min_pos) && (min_pos = elem)\n    end\n    return (max_neg,\
    \ min_pos)\nend", "    min_pos = nothing\n    max_neg = nothing\n    for element\
    \ in lst\n        if element > 0\n            if isnothing(min_pos)\n        \
    \        min_pos = element\n            elseif element < min_pos\n           \
    \     min_pos = element\n            end\n        elseif element < 0\n       \
    \     if isnothing(max_neg)\n                max_neg = element\n            elseif\
    \ element > max_neg\n                max_neg = element\n            end\n    \
    \    end\n    end\n    return (max_neg, min_pos)\nend\n ", "    # Type restriction\n\
    \    a = b = nothing\n    for i in lst\n        if i < 0 && a == nothing\n   \
    \         a = i\n        elseif i < 0 && i > a\n            a = i\n        elseif\
    \ i > 0 && b == nothing\n            b = i\n        elseif i > 0 && i < b\n  \
    \          b = i\n        end\n    end\n    return (a, b)\nend", "    (largest_neg,\
    \ smallest_pos) = (nothing, nothing)\n    for val in lst\n        if val < 0\n\
    \            largest_neg = val\n        elseif val > 0\n            smallest_pos\
    \ = val\n        end\n    end\n    (largest_neg, smallest_pos)\nend\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])", "    neg_lst = [i for i in lst if i < 0]\n    pos_lst = [i\
    \ for i in lst if i > 0]\n    return (nothing, nothing)\nend", "    a = findfirst(!ispositive,\
    \ lst)\n    b = findfirst(!isnegative, lst)\n    if a == nothing && b == nothing\n\
    \        return (nothing, nothing)\n    elseif a == nothing\n        return (nothing,\
    \ lst[b])\n    elseif b == nothing\n        return (lst[a], nothing)\n    else\n\
    \        return (lst[a], lst[b])\n    end\nend", "    max_neg = nothing; min_pos\
    \ = nothing\n    for i in lst\n        if i < 0 && (max_neg == nothing || i >\
    \ max_neg)\n            max_neg = i\n        elseif i > 0 && (min_pos == nothing\
    \ || i < min_pos)\n            min_pos = i\n        end\n    end\n    return (max_neg,\
    \ min_pos)\nend", "    return nothing, nothing\nend\n ", "    if length(lst) ==\
    \ 0\n        return (nothing, nothing)\n    end\n    min_pos = 999999999\n   \
    \ max_neg = -999999999\n    for e in lst\n        if e > 0\n            if e <\
    \ min_pos\n                min_pos = e\n            end\n        elseif e < 0\n\
    \            if e > max_neg\n                max_neg = e\n            end\n  \
    \      end\n    end\n    if max_neg == -999999999\n        max_neg = nothing\n\
    \    end\n    if min_pos == 999999999\n        min_pos = nothing\n    end\n  \
    \  return (max_neg, min_pos)\nend", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing)\n    end\n    a = nothing\n    b = nothing\n    for i in\
    \ lst\n        if i > 0 && (b == nothing || i < b)\n            b = i\n      \
    \  end\n        if i < 0 && (a == nothing || i > a)\n            a = i\n     \
    \   end\n    end\n    return (a, b)\nend", "    a = nothing\n    b = nothing\n\
    \    if (length(lst) == 0)\n        return (a, b)\n    end\n    for i in lst\n\
    \        if i < 0\n            if (a == nothing)\n                a = i\n    \
    \        elseif (a > i)\n                a = i\n            end\n        elseif\
    \ i > 0\n            if (b == nothing)\n                b = i\n            elseif\
    \ (b < i)\n                b = i\n            end\n        end\n    end\n    return\
    \ (a, b)\nend\nlargest_smallest_integers([])", "    \n    if isempty(lst)\n  \
    \      return (nothing, nothing)\n    end\n    \n    negative = maximum(filter(x\
    \ -> x < 0, lst))\n    positive = minimum(filter(x -> x > 0, lst))\n    \n   \
    \ return (negative, positive)\nend", "    a = filter(x -> x < 0, lst)\n    b =\
    \ filter(x -> x > 0, lst)\n    (nothing, nothing) = (nothing, nothing)\n    if\
    \ !isempty(a) && !isempty(b)\n        (nothing, nothing) = (maximum(a), minimum(b))\n\
    \    elseif !isempty(a) && isempty(b)\n        (nothing, nothing) = (maximum(a),\
    \ nothing)\n    elseif isempty(a) && !isempty(b)\n        (nothing, nothing) =\
    \ (nothing, minimum(b))\n    end\n    return (nothing, nothing)\nend", "    #\
    \ your code here\nend\n```", "    if isempty(lst)\n        return (nothing, nothing)\n\
    \    end\n    n = length(lst)\n    a, b = nothing, nothing\n    for i in 1:n\n\
    \        if lst[i] > 0 && (b == nothing || lst[i] < b)\n            b = lst[i]\n\
    \        elseif lst[i] < 0 && (a == nothing || lst[i] > a)\n            a = lst[i]\n\
    \        end\n    end\n    return (a, b)\nend", "    positives = ispositive.(lst)\n\
    \    negatives = isnegative.(lst)\n    if !all(positives) && !all(negatives)\n\
    \        largenegative = nothing\n        smallpositive = nothing\n    elseif\
    \ all(positives) && !all(negatives)\n        largenegative = nothing\n       \
    \ smallpositive = minimum(lst)\n    elseif !all(positives) && all(negatives)\n\
    \        largenegative = maximum(lst)\n        smallpositive = nothing\n    else\n\
    \        largenegative = maximum(lst[negatives])\n        smallpositive = minimum(lst[positives])\n\
    \    end\n    (largenegative, smallpositive)\nend", "    smallest = nothing\n\
    \    largest = nothing\n    for x in lst\n        if x > 0\n            if smallest\
    \ == nothing\n                smallest = x\n            elseif x < smallest\n\
    \                smallest = x\n            end\n        elseif x < 0\n       \
    \     if largest == nothing\n                largest = x\n            elseif x\
    \ > largest\n                largest = x\n            end\n        end\n    end\n\
    \    return (largest, smallest)\nend", "    if lst == []\n        return (nothing,\
    \ nothing)\n    end\n    negative_lst = []\n    positive_lst = []\n    for i in\
    \ lst\n        if i < 0\n            push!(negative_lst, i)\n        elseif i\
    \ > 0\n            push!(positive_lst, i)\n        end\n    end\n    if negative_lst\
    \ == []\n        a = nothing\n    else\n        a = maximum(negative_lst)\n  \
    \  end\n    if positive_lst == []\n        b = nothing\n    else\n        b =\
    \ minimum(positive_lst)\n    end\n    return (a, b)\nend", "    a = nothing\n\
    \    b = nothing\n    for x in lst\n        if x > 0 && b === nothing\n      \
    \      b = x\n        elseif x > 0 && x < b\n            b = x\n        elseif\
    \ x < 0 && a === nothing\n            a = x\n        elseif x < 0 && x > a\n \
    \           a = x\n        end\n    end\n    return (a, b)\nend", "    a::Union{Int64,\
    \ Nothing} = nothing\n    b::Union{Int64, Nothing} = nothing\n    for x in lst\n\
    \        if x < 0 && x > a\n            a = x\n        elseif x > 0 && b == nothing\n\
    \            b = x\n        elseif x > 0 && x < b\n            b = x\n       \
    \ end\n    end\n    return (a, b)\nend", "    a = nothing\n    b = nothing\n \
    \   for i in lst\n        if i > 0 && (b isa nothing || i < b)\n            b\
    \ = i\n        end\n        if i < 0 && (a isa nothing || i > a)\n           \
    \ a = i\n        end\n    end\n    return (a, b)\nend", "    if isempty(lst)\n\
    \        return (nothing, nothing)\n    end\n    neg = nothing\n    pos = nothing\n\
    \    for x in lst\n        if x < 0 && (neg == nothing || x > neg)\n         \
    \   neg = x\n        end\n        if x > 0 && (pos == nothing || x < pos)\n  \
    \          pos = x\n        end\n    end\n    return (neg, pos)\nend\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\nlargest_smallest_integers([])\nlargest_smallest_integers([0])",
  "    negative_ints = []\n    positive_ints = []\n    nothing = nothing\n    for\
    \ item in lst\n        if item < 0\n            push!(negative_ints, item)\n \
    \       elseif item > 0\n            push!(positive_ints, item)\n        end\n\
    \    end\n    if isempty(negative_ints)\n        return (nothing, nothing)\n \
    \   elseif isempty(positive_ints)\n        return (nothing, nothing)\n    else\n\
    \        a = maximum(negative_ints)\n        b = minimum(positive_ints)\n    \
    \    return (a, b)\n    end\nend", "    negs = Nothing\n    poss = Nothing\n \
    \   for elem in lst\n        if elem < 0\n            if negs == Nothing\n   \
    \             negs = elem\n            elseif elem > negs\n                negs\
    \ = elem\n            end\n        elseif elem > 0\n            if poss == Nothing\n\
    \                poss = elem\n            elseif elem < poss\n               \
    \ poss = elem\n            end\n        end\n    end\n    return negs, poss\n\
    end", "    if isempty(lst)\n        return (nothing, nothing)\n    end\n    positive_counter\
    \ = 0\n    negative_counter = 0\n    positive_min = lst[1]\n    negative_max =\
    \ lst[1]\n    for i in lst\n        if i < 0\n            negative_counter +=\
    \ 1\n            if i > negative_max\n                negative_max = i\n     \
    \       end\n        elseif i > 0\n            positive_counter += 1\n       \
    \     if i < positive_min\n                positive_min = i\n            end\n\
    \        end\n    end\n    if positive_counter == 0\n        positive_min = nothing\n\
    \    end\n    if negative_counter == 0\n        negative_max = nothing\n    end\n\
    \    return (negative_max, positive_min)\nend", "    return nothing, nothing \n\
    end", "    if length(lst) == 0\n        return (nothing, nothing)\n    end\n \
    \   # get the minimum and maximum integers in the list\n    max_negative = findmax(lst)[1]\n\
    \    min_positive = findmin(lst)[1]\n    # find the minimum positive and maximum\
    \ negative integers\n    for integer in lst\n        if integer > 0\n        \
    \    if integer < min_positive\n                min_positive = integer\n     \
    \       end\n        elseif integer < 0\n            if integer > max_negative\n\
    \                max_negative = integer\n            end\n        end\n    end\n\
    \    # check for no positive or negative integers\n    if max_negative == 0\n\
    \        max_negative = nothing\n    end\n    if min_positive == 0\n        min_positive\
    \ = nothing\n    end\n    return (max_negative, min_positive)\nend", "    if isempty(lst)\n\
    \        return (nothing, nothing)\n    end\n    a = nothing\n    b = nothing\n\
    \    for i in lst\n        if i<0\n            if a == nothing\n             \
    \   a = i\n            elseif i>a\n                a = i\n            end\n  \
    \      elseif i>0\n            if b == nothing\n                b = i\n      \
    \      elseif i<b\n                b = i\n            end\n        end\n    end\n\
    \    return (a, b)\nend\nprintln(largest_smallest_integers([2, 4, 1, 3, 5, 7]))\n\
    println(largest_smallest_integers([]))\nprintln(largest_smallest_integers([0]))",
  "    \"\"\"\n    Create a function that returns a tuple (a, b), where 'a' is\n \
    \   the largest of negative integers, and 'b' is the smallest\n    of positive\
    \ integers in a vector.\n    If there is no negative or positive integers, return\
    \ them as nothing.", "    negs = lst[lst .< 0]\n    if isempty(negs)\n       \
    \ neg = nothing\n    else\n        neg = maximum(negs)\n    end\n    poss = lst[lst\
    \ .> 0]\n    if isempty(poss)\n        pos = nothing\n    else\n        pos =\
    \ minimum(poss)\n    end\n    return (neg, pos)\nend", "    neg, pos = [], []\n\
    \    for n in lst\n        n < 0 ? push!(neg, n) : push!(pos, n)\n    end\n  \
    \  a = maximum(neg)\n    b = minimum(pos)\n    a == nothing ? (nothing, b) : (a,\
    \ b)\nend", "    if length(lst) == 0\n        return (nothing, nothing)\n    end\n\
    \    a = nothing\n    b = nothing\n    for i in lst\n        if i > 0 && (b ==\
    \ nothing || i < b)\n            b = i\n        end\n        if i < 0 && (a ==\
    \ nothing || i > a)\n            a = i\n        end\n    end\n    return (a, b)\n\
    end", "    negative_numbers = [x for x in lst if x < 0]\n    positive_numbers\
    \ = [x for x in lst if x > 0]\n    if length(negative_numbers) > 0\n        largest_negative\
    \ = maximum(negative_numbers)\n    else\n        largest_negative = nothing\n\
    \    end\n    if length(positive_numbers) > 0\n        smallest_positive = minimum(positive_numbers)\n\
    \    else\n        smallest_positive = nothing\n    end\n    return (largest_negative,\
    \ smallest_positive)\nend", "    pos_ints = filter(i -> i > 0, lst)\n    neg_ints\
    \ = filter(i -> i < 0, lst)\n    return (maximum(neg_ints), minimum(pos_ints))\n\
    end", "    neg_lst = Int[]\n    pos_lst = Int[]\n    for i in lst\n        if\
    \ i < 0\n            push!(neg_lst, i)\n        elseif i > 0\n            push!(pos_lst,\
    \ i)\n        end\n    end\n    if length(neg_lst) != 0\n        neg_max = maximum(neg_lst)\n\
    \    else\n        neg_max = nothing\n    end\n    if length(pos_lst) != 0\n \
    \       pos_min = minimum(pos_lst)\n    else\n        pos_min = nothing\n    end\n\
    \    return neg_max, pos_min\nend", "    is_negative = isempty(lst[lst .< 0])\n\
    \    is_positive = isempty(lst[lst .> 0])\n    if is_negative && is_positive\n\
    \        return (nothing, nothing)\n    elseif is_negative\n        return (nothing,\
    \ minimum(lst))\n    elseif is_positive\n        return (maximum(lst), nothing)\n\
    \    else\n        return (maximum(lst[lst .< 0]), minimum(lst[lst .> 0]))\n \
    \   end\nend", "    negative_ints = filter(x -> x < 0, lst)\n    positive_ints\
    \ = filter(x -> x > 0, lst)\n    if length(negative_ints) > 0 && length(positive_ints)\
    \ > 0\n        return maximum(negative_ints), minimum(positive_ints)\n    elseif\
    \ length(negative_ints) > 0\n        return maximum(negative_ints), nothing\n\
    \    elseif length(positive_ints) > 0\n        return nothing, minimum(positive_ints)\n\
    \    else\n        return nothing, nothing\n    end\nend", "    if isempty(lst)\n\
    \        return (nothing, nothing)\n    end\n    a = nothing\n    b = nothing\n\
    \    for i in lst\n        if i > 0 && (b == nothing || i < b)\n            b\
    \ = i\n        end\n        if i < 0 && (a == nothing || i > a)\n            a\
    \ = i\n        end\n    end\n    return (a, b)\nend", "    if length(lst) == 0\n\
    \        return (nothing, nothing)\n    end\n    s_max = -Inf\n    s_min = Inf\n\
    \    for num in lst\n        if num < 0\n            if num > s_max\n        \
    \        s_max = num\n            end\n        elseif num > 0\n            if\
    \ num < s_min\n                s_min = num\n            end\n        end\n   \
    \ end\n    if s_max == -Inf\n        s_max = nothing\n    end\n    if s_min ==\
    \ Inf\n        s_min = nothing\n    end\n    return (s_max, s_min)\nend\n\"\"\"\
    \n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest\
    \ of negative integers, and 'b' is the smallest\n    of positive integers in a\
    \ vector.\n    If there is no negative or positive integers, return them as nothing.",
  "    maximum_negative = nothing\n    minimum_positive = nothing\n    for x in lst\n\
    \        if (x < 0) && (maximum_negative == nothing || x > maximum_negative)\n\
    \            maximum_negative = x\n        end\n        if (x > 0) && (minimum_positive\
    \ == nothing || x < minimum_positive)\n            minimum_positive = x\n    \
    \    end\n    end\n    return maximum_negative, minimum_positive\nend", "    max_neg\
    \ = nothing\n    min_pos = nothing\n    for elem in lst\n        if elem < 0\n\
    \            if max_neg == nothing || elem > max_neg\n                max_neg\
    \ = elem\n            end\n        elseif elem > 0\n            if min_pos ==\
    \ nothing || elem < min_pos\n                min_pos = elem\n            end\n\
    \        end\n    end\n    return (max_neg, min_pos)\nend", "    # Your code here\n\
    \    a = nothing\n    b = nothing\n    for i in lst\n        if i < 0\n      \
    \      if a == nothing\n                a = i\n            elseif a < i\n    \
    \            a = i\n            end\n        elseif i > 0\n            if b ==\
    \ nothing\n                b = i\n            elseif b > i\n                b\
    \ = i\n            end\n        end\n    end\n    return (a, b)\nend", "    n_pos\
    \ = n_neg = nothing \n    for i in lst \n        if n_pos === nothing && i > 0\
    \ \n            n_pos = i \n        elseif i > 0 && i < n_pos \n            n_pos\
    \ = i \n        end \n        if n_neg === nothing && i < 0 \n            n_neg\
    \ = i \n        elseif i < 0 && i > n_neg \n            n_neg = i \n        end\
    \ \n    end \n    return n_neg, n_pos \nend ", "    \n    a = nothing\n    b =\
    \ nothing\n    \n    for e in lst\n        if e < 0\n            if a == nothing\n\
    \                a = e\n            elseif e > a\n                a = e\n    \
    \        end\n        elseif e > 0\n            if b == nothing\n            \
    \    b = e\n            elseif e < b\n                b = e\n            end\n\
    \        end\n    end\n    \n    return (a, b)\nend\n        ", "    neg_ints\
    \ = filter(x -> x < 0, lst)\n    pos_ints = filter(x -> x > 0, lst)\n    return\
    \ (get(maximum(neg_ints), nothing), get(minimum(pos_ints), nothing))\nend", " \
    \   lst_neg = sort(lst[lst .< 0])\n    lst_pos = sort(lst[lst .> 0])\n    if isempty(lst_neg)\
    \ || isempty(lst_pos)\n        return (nothing, nothing)\n    else\n        return\
    \ (lst_neg[end], lst_pos[1])\n    end\nend", "    a, b = nothing, nothing\n  \
    \  for n in lst\n        if n > 0\n            b = n if b == nothing || n < b\
    \ else b\n        elseif n < 0\n            a = n if a == nothing || n > a else\
    \ a\n        end\n    end\n    return a, b\nend", "    if length(lst) == 0\n \
    \       return (nothing, nothing)\n    end\n    max_neg = nothing\n    min_pos\
    \ = nothing\n    for i in lst\n        if i < 0\n            if max_neg == nothing\n\
    \                max_neg = i\n            elseif i > max_neg\n               \
    \ max_neg = i\n            end\n        elseif i > 0\n            if min_pos ==\
    \ nothing\n                min_pos = i\n            elseif i < min_pos\n     \
    \           min_pos = i\n            end\n        end\n    end\n    return (max_neg,\
    \ min_pos)\nend", "    a = nothing\n    b = nothing\n    for i in lst\n      \
    \  if i < 0 && a == nothing\n            a = i\n        elseif i < 0 && i > a\n\
    \            a = i\n        elseif i > 0 && b == nothing\n            b = i\n\
    \        elseif i > 0 && i < b\n            b = i\n        end\n    end\n    return\
    \ (a, b)\nend", "    negatives = findall(x -> x < 0, lst)\n    positives = findall(x\
    \ -> x > 0, lst)\n    neg_max = maximum(lst[negatives]) if length(negatives) >\
    \ 0 else nothing\n    pos_min = minimum(lst[positives]) if length(positives) >\
    \ 0 else nothing\n    return (neg_max, pos_min)\nend", "    max_negative = minimum(filter(x\
    \ -> x < 0, lst))\n    min_positive = maximum(filter(x -> x > 0, lst))\n    if\
    \ isempty(max_negative)\n        max_negative = nothing\n    end\n    if isempty(min_positive)\n\
    \        min_positive = nothing\n    end\n    return (max_negative, min_positive)\n\
    end", "    \n    smallest_positive = nothing\n    largest_negative = nothing\n\
    \    \n    for n in lst\n        if n > 0\n            if smallest_positive ==\
    \ nothing\n                smallest_positive = n\n            elseif n < smallest_positive\n\
    \                smallest_positive = n\n            end\n        elseif n < 0\n\
    \            if largest_negative == nothing\n                largest_negative\
    \ = n\n            elseif n > largest_negative\n                largest_negative\
    \ = n\n            end\n        end\n    end\n    \n    return (largest_negative,\
    \ smallest_positive)\nend", "    a = nothing\n    b = nothing\n    for i in lst\n\
    \        if i > 0 && isnothing(b)\n            b = i\n        elseif i > 0 &&\
    \ i < b\n            b = i\n        elseif i < 0 && isnothing(a)\n           \
    \ a = i\n        elseif i < 0 && i > a\n            a = i\n        end\n    end\n\
    \    return (a, b)\nend", "    neg_int = findfirst(x -> x < 0, lst)\n    pos_int\
    \ = findfirst(x -> x > 0, lst)\n    if neg_int == nothing && pos_int == nothing\n\
    \        return (nothing, nothing)\n    elseif neg_int == nothing\n        return\
    \ (nothing, lst[pos_int])\n    elseif pos_int == nothing\n        return (lst[neg_int],\
    \ nothing)\n    else\n        return (lst[neg_int], lst[pos_int])\n    end\nend",
  "    nmax, nmin = nothing, nothing\n    for i in lst\n        if i > 0 && nmin ==\
    \ nothing\n            nmin = i\n        elseif i > 0 && i < nmin\n          \
    \  nmin = i\n        elseif i < 0 && nmax == nothing\n            nmax = i\n \
    \       elseif i < 0 && i > nmax\n            nmax = i\n        end\n    end\n\
    \    return (nmax, nmin)\nend", "    largest_neg = nothing\n    smallest_pos =\
    \ nothing\n    for x in lst\n        if x < 0\n            if largest_neg == nothing\
    \ || x > largest_neg\n                largest_neg = x\n            end\n     \
    \   elseif x > 0\n            if smallest_pos == nothing || x < smallest_pos\n\
    \                smallest_pos = x\n            end\n        end\n    end\n   \
    \ return (largest_neg, smallest_pos)\nend", "    a = nothing\n    b = nothing\n\
    \    for i in lst\n        if i > 0 && (b == nothing || i < b)\n            b\
    \ = i\n        end\n        if i < 0 && (a == nothing || i > a)\n            a\
    \ = i\n        end\n    end\n    return (a, b)\nend", "    neg_largest, pos_smallest\
    \ = (nothing, nothing)\n    for i = 1:length(lst)\n        if lst[i] < 0 && (neg_largest\
    \ == nothing || lst[i] > neg_largest)\n            neg_largest = lst[i]\n    \
    \    elseif lst[i] > 0 && (pos_smallest == nothing || lst[i] < pos_smallest)\n\
    \            pos_smallest = lst[i]\n        end\n    end\n    return (neg_largest,\
    \ pos_smallest)\nend", "    min_pos = minimum(filter(x -> x >= 0, lst))\n    max_neg\
    \ = maximum(filter(x -> x < 0, lst))\n    return (max_neg, min_pos)\nend", " \
    \   negatives = lst[lst .< 0]\n    positives = lst[lst .> 0]\n    negative = maximum(negatives)\n\
    \    positive = minimum(positives)\n    if isempty(negative)\n        negative\
    \ = nothing\n    end\n    if isempty(positive)\n        positive = nothing\n \
    \   end\n    return negative, positive\nend", "    negatives, positives = Int64[],\
    \ Int64[]\n    for i in lst\n        if i < 0\n            push!(negatives, i)\n\
    \        elseif i > 0\n            push!(positives, i)\n        end\n    end\n\
    \    a = nothing\n    b = nothing\n    if length(negatives) > 0\n        a = maximum(negatives)\n\
    \    end\n    if length(positives) > 0\n        b = minimum(positives)\n    end\n\
    \    return (a, b)\nend", "    a, b = nothing, nothing\n    for x in lst\n   \
    \     if x < 0\n            if a isa Nothing\n                a = x\n        \
    \    elseif x > a\n                a = x\n            end\n        elseif x >\
    \ 0\n            if b isa Nothing\n                b = x\n            elseif x\
    \ < b\n                b = x\n            end\n        end\n    end\n    return\
    \ a, b\nend", "    a = nothing\n    b = nothing\n    for i in lst\n        if\
    \ i > 0\n            if b == nothing\n                b = i\n            elseif\
    \ i < b\n                b = i\n            end\n        elseif i < 0\n      \
    \      if a == nothing\n                a = i\n            elseif i > a\n    \
    \            a = i\n            end\n        end\n    end\n    return (a, b)\n\
    end", "    neg_largest = nothing\n    pos_smallest = nothing\n    for i in lst\n\
    \        if i < 0 && (neg_largest == nothing || i > neg_largest)\n           \
    \ neg_largest = i\n        elseif i > 0 && (pos_smallest == nothing || i < pos_smallest)\n\
    \            pos_smallest = i\n        end\n    end\n    return neg_largest, pos_smallest\n\
    end", "    neg_int = nothing\n    pos_int = nothing\n    for i in lst\n      \
    \  if i < 0 && neg_int == nothing || i < neg_int\n            neg_int = i\n  \
    \      end\n        if i > 0 && pos_int == nothing || i < pos_int\n          \
    \  pos_int = i\n        end\n    end\n    return neg_int, pos_int\nend", "   \
    \ a, b = nothing, nothing\n    for i in lst\n        if i > 0\n            if\
    \ b == nothing || i < b\n                b = i\n            end\n        elseif\
    \ i < 0\n            if a == nothing || i > a\n                a = i\n       \
    \     end\n        end\n    end\n    return a, b\nend", "    # Find minimum positive\
    \ and maximum negative integers.\n    (max_neg, min_pos) = (nothing, nothing)\n\
    \    for i = 1:length(lst)\n        if lst[i] > 0 && (min_pos isa Nothing || lst[i]\
    \ < min_pos)\n            min_pos = lst[i]\n        elseif lst[i] < 0 && (max_neg\
    \ isa Nothing || lst[i] > max_neg)\n            max_neg = lst[i]\n        end\n\
    \    end\n    return (max_neg, min_pos)\nend", "    # TODO: Implement!\nend",
  "    a = nothing\n    b = nothing\n    for i in lst\n        if i < 0\n        \
    \    if a == nothing\n                a = i\n            elseif i > a\n      \
    \          a = i\n            end\n        elseif i > 0\n            if b == nothing\n\
    \                b = i\n            elseif i < b\n                b = i\n    \
    \        end\n        end\n    end\n    return (a, b)\nend", "    a = nothing\n\
    \    b = nothing\n    for i in lst\n        if i < 0 && i > a\n            a =\
    \ i\n        end\n        if i > 0 && i < b\n            b = i\n        end\n\
    \    end\n    return (a, b)\nend", "    return \n        maximum(filter(i -> i\
    \ < 0, lst)), \n        minimum(filter(i -> i > 0, lst))\nend\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\nlargest_smallest_integers([])\nlargest_smallest_integers([0])",
  "    if isempty(lst)\n        return (nothing, nothing)\n    end\n    if all(lst\
    \ .== 0)\n        return (nothing, nothing)\n    end\n    if any(lst .< 0) &&\
    \ any(lst .> 0)\n        return (maximum(lst[lst .< 0]), minimum(lst[lst .> 0]))\n\
    \    elseif any(lst .< 0)\n        return (maximum(lst[lst .< 0]), nothing)\n\
    \    elseif any(lst .> 0)\n        return (nothing, minimum(lst[lst .> 0]))\n\
    \    end\nend", "    negatives = []\n    positives = []\n    for i in lst\n  \
    \      if i > 0\n            push!(positives, i)\n        elseif i < 0\n     \
    \       push!(negatives, i)\n        end\n    end\n    a = nothing\n    b = nothing\n\
    \    if length(negatives) > 0\n        a = findmax(negatives)[1]\n    end\n  \
    \  if length(positives) > 0\n        b = findmin(positives)[1]\n    end\n    return\
    \ (a, b)\nend", "    pos_min = nothing\n    neg_max = nothing\n    for item in\
    \ lst\n        if item > 0 && (pos_min == nothing || item < pos_min)\n       \
    \     pos_min = item\n        end\n        if item < 0 && (neg_max == nothing\
    \ || item > neg_max)\n            neg_max = item\n        end\n    end\n    return\
    \ neg_max, pos_min\nend", "    min_pos = nothing\n    max_neg = nothing\n    for\
    \ i in lst\n        if i > 0\n            if isnothing(min_pos)\n            \
    \    min_pos = i\n            elseif i < min_pos\n                min_pos = i\n\
    \            end\n        elseif i < 0\n            if isnothing(max_neg)\n  \
    \              max_neg = i\n            elseif i > max_neg\n                max_neg\
    \ = i\n            end\n        end\n    end\n    return (max_neg, min_pos)\n\
    end", "    max_neg = nothing\n    min_pos = nothing\n    for i in lst\n      \
    \  if i > 0 && min_pos isa Nothing\n            min_pos = i\n        elseif i\
    \ > 0 && i < min_pos\n            min_pos = i\n        elseif i < 0 && max_neg\
    \ isa Nothing\n            max_neg = i\n        elseif i < 0 && i > max_neg\n\
    \            max_neg = i\n        end\n    end\n    return (max_neg, min_pos)\n\
    end", "    \"\"\"\n    Gives back the largest of negative integers and the smallest\
    \ of positive integers in a vector.\n    \"\"\"\n    neg, pos = nothing, nothing\n\
    \    neg_max, pos_min = 0, 0\n    for i in lst\n        if i < 0\n           \
    \ if i > neg_max\n                neg = i\n                neg_max = i\n     \
    \       end\n        elseif i > 0\n            if pos == nothing\n           \
    \     pos = i\n                pos_min = i\n            elseif i < pos_min\n \
    \               pos = i\n                pos_min = i\n            end\n      \
    \  end\n    end\n    return neg, pos\nend", "    negs = filter(x -> x < 0, lst)\n\
    \    pos = filter(x -> x > 0, lst)\n    if length(negs) == 0\n        neg = nothing\n\
    \    else\n        neg = reduce(max, negs)\n    end\n    if length(pos) == 0\n\
    \        p = nothing\n    else\n        p = reduce(min, pos)\n    end\n    return\
    \ (neg, p)\nend", "    return nothing, nothing\nend\n\"\"\"\n    Create a function\
    \ that returns a set of unique values of a series.", "    a = nothing\n    b =\
    \ nothing\n    for i in lst\n        if i > 0\n            if b == nothing\n \
    \               b = i\n            elseif i < b\n                b = i\n     \
    \       end\n        elseif i < 0\n            if a == nothing\n             \
    \   a = i\n            elseif i > a\n                a = i\n            end\n\
    \        end\n    end\n    return (a, b)\nend", "    a, b = (nothing, nothing)\n\
    \    is_positive = false\n    is_negative = false\n    for i = 1:length(lst)\n\
    \        if lst[i] >= 0\n            is_positive = true\n            if (b isa\
    \ Nothing) || lst[i] < b\n                b = lst[i]\n            end\n      \
    \  elseif lst[i] < 0\n            is_negative = true\n            if (a isa Nothing)\
    \ || lst[i] > a\n                a = lst[i]\n            end\n        end\n  \
    \  end\n    if !is_positive\n        b = nothing\n    end\n    if !is_negative\n\
    \        a = nothing\n    end\n    return (a, b)\nend", "    mn = minimum(lst)\n\
    \    mx = maximum(lst)\n    if mn < 0 && mx > 0\n        return (mx, mn)\n   \
    \ elseif mn < 0\n        return (mx, nothing)\n    elseif mx > 0\n        return\
    \ (nothing, mn)\n    else\n        return (nothing, nothing)\n    end\nend", " \
    \   if length(lst) == 0 \n        return (nothing, nothing)\n    end \n    # Find\
    \ the smallest positive integer\n    positive_int = minimum(lst[lst .> 0])\n \
    \   # Find the largest negative integer\n    negative_int = maximum(lst[lst .<\
    \ 0])\n    return (negative_int, positive_int)\nend ", '    n, p = nothing, nothing',
  "    neg_max = minimum(lst)\n    pos_min = maximum(lst)\n    for i in lst\n    \
    \    if i < 0 && i > neg_max\n            neg_max = i\n        elseif i > 0 &&\
    \ i < pos_min\n            pos_min = i\n        end\n    end\n    if pos_min ==\
    \ maximum(lst)\n        pos_min = nothing\n    end\n    if neg_max == minimum(lst)\n\
    \        neg_max = nothing\n    end\n    return neg_max, pos_min\nend", "    \n\
    \    neg_int = 0\n    pos_int = 0\n    \n    for n in lst\n        if n < 0 &&\
    \ n > neg_int\n            neg_int = n\n        elseif n > 0 && n < pos_int\n\
    \            pos_int = n\n        end\n    end\n    \n    if neg_int == 0\n  \
    \      neg_int = nothing\n    end\n    \n    if pos_int == 0\n        pos_int\
    \ = nothing\n    end\n    \n    return neg_int, pos_int\nend", "    nmin, nmax\
    \ = nothing, nothing\n    for i in lst\n        if i > 0\n            if isnothing(nmin)\n\
    \                nmin = i\n            elseif i < nmin\n                nmin =\
    \ i\n            end\n        elseif i < 0\n            if isnothing(nmax)\n \
    \               nmax = i\n            elseif i > nmax\n                nmax =\
    \ i\n            end\n        end\n    end\n    return nmax, nmin\nend", "   \
    \ maximum_negative_integer = maximum(filter(x -> x < 0, lst))\n    minimum_positive_integer\
    \ = minimum(filter(x -> x > 0, lst))\n    return (maximum_negative_integer, minimum_positive_integer)\n\
    end", "    a, b = nothing, nothing\n    a = findmax(lst)\n    b = findmin(lst)\n\
    \    if a == 0 || b == 0\n        a, b = nothing, nothing\n    end\n    return\
    \ a, b\nend", "    n_int = n_pos_int = n_neg_int = nothing\n    if isempty(lst)\n\
    \        return (n_int, n_int)\n    end\n    if length(lst) == 1\n        return\
    \ (n_int, n_int)\n    end\n    n_int = n_pos_int = lst[1]\n    for i = 2:length(lst)\n\
    \        if lst[i] > n_pos_int\n            n_pos_int = lst[i]\n        end\n\
    \        if lst[i] < n_neg_int\n            n_neg_int = lst[i]\n        end\n\
    \    end\n    return (n_neg_int, n_pos_int)\nend", "    largest = nothing\n  \
    \  smallest = nothing\n    for v in lst\n        if v > 0\n            if isnothing(smallest)\
    \ || v < smallest\n                smallest = v\n            end\n        elseif\
    \ v < 0\n            if isnothing(largest) || v > largest\n                largest\
    \ = v\n            end\n        end\n    end\n    return (largest, smallest)\n\
    end", "    index_positive = findfirst(l -> l > 0, lst)\n    index_negative = findfirst(l\
    \ -> l < 0, lst)\n    if isempty(index_positive) && isempty(index_negative)\n\
    \        return (nothing, nothing)\n    elseif isempty(index_positive)\n     \
    \   return (nothing, minimum(lst[index_negative:end]))\n    elseif isempty(index_negative)\n\
    \        return (maximum(lst[index_positive:end]), nothing)\n    else\n      \
    \  return (maximum(lst[index_negative:end]), minimum(lst[index_positive:end]))\n\
    \    end\nend", "    neg = (nothing, nothing)\n    pos = (nothing, nothing)\n\
    \    for x in lst\n        if x > 0\n            pos = update_tuple(pos, x)\n\
    \        elseif x < 0\n            neg = update_tuple(neg, x)\n        end\n \
    \   end\n    return neg[1], pos[2]\nend\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])", "    neg_lst = filter(x -> x < 0, lst)\n    pos_lst = filter(x -> x\
    \ > 0, lst)\n    if isempty(neg_lst)\n        neg_out = nothing\n    else\n  \
    \      neg_out = neg_lst[argmax(neg_lst)]\n    end\n    if isempty(pos_lst)\n\
    \        pos_out = nothing\n    else\n        pos_out = pos_lst[argmin(pos_lst)]\n\
    \    end\n    return neg_out, pos_out\nend", "    if length(lst) == 0\n      \
    \  return (nothing, nothing)\n    end\n    if length(lst) == 1\n        if lst[1]\
    \ > 0\n            return (nothing, lst[1])\n        elseif lst[1] < 0\n     \
    \       return (lst[1], nothing)\n        else \n            return (nothing,\
    \ nothing)\n        end\n    end\n    pos_ints = Int64[]\n    neg_ints = Int64[]\n\
    \    for i in lst\n        if i > 0\n            push!(pos_ints, i)\n        elseif\
    \ i < 0\n            push!(neg_ints, i)\n        end\n    end\n    if length(pos_ints)\
    \ == 0 && length(neg_ints) == 0\n        return (nothing, nothing)\n    elseif\
    \ length(pos_ints) == 0\n        return (minimum(neg_ints), nothing)\n    elseif\
    \ length(neg_ints) == 0\n        return (nothing, maximum(pos_ints))\n    else\n\
    \        return (minimum(neg_ints), maximum(pos_ints))\n    end\nend", "    nothing_count\
    \ = 0\n    largest_neg = nothing\n    smallest_pos = nothing\n    for x in lst\n\
    \        if x == 0\n            nothing_count += 1\n        elseif x < 0 && largest_neg\
    \ == nothing\n            largest_neg = x\n        elseif x < 0 && largest_neg\
    \ != nothing\n            if x > largest_neg\n                largest_neg = x\n\
    \            end\n        elseif x > 0 && smallest_pos == nothing\n          \
    \  smallest_pos = x\n        elseif x > 0 && smallest_pos != nothing\n       \
    \     if x < smallest_pos\n                smallest_pos = x\n            end\n\
    \        end\n    end\n    if nothing_count == length(lst)\n        largest_neg\
    \ = nothing\n        smallest_pos = nothing\n    end\n    return (largest_neg,\
    \ smallest_pos)\nend", "    neg = nothing\n    pos = nothing\n    for i in lst\n\
    \        if i < 0\n            if neg == nothing\n                neg = i\n  \
    \          elseif i > neg\n                neg = i\n            end\n        elseif\
    \ i > 0\n            if pos == nothing\n                pos = i\n            elseif\
    \ i < pos\n                pos = i\n            end\n        end\n    end\n  \
    \  return neg, pos\nend\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\nlargest_smallest_integers([])\n\
    largest_smallest_integers([0])\n \n \n \n\"\"\"\n    Create a function that returns\
    \ a tuple (a, b), where 'a' is\n    the largest of even integers, and 'b' is the\
    \ smallest\n    of odd integers in a vector.\n    If there is no even or odd integers,\
    \ return them as nothing.", "    lst_neg = lst[lst.<0]\n    lst_pos = lst[lst.>0]\n\
    \    return (nothing, nothing)\nend", "    n, p = nothing, nothing\n    for e\
    \ in lst\n        if e < 0 && isnothing(n)\n            n = e\n        elseif\
    \ e < 0 && e > n\n            n = e\n        elseif e > 0 && isnothing(p)\n  \
    \          p = e\n        elseif e > 0 && e < p\n            p = e\n        end\n\
    \    end\n    return n, p\nend", "    l1 = []\n    l2 = []\n    for i in lst\n\
    \        if i < 0\n            push!(l1, i)\n        elseif i > 0\n          \
    \  push!(l2, i)\n        end\n    end\n    if length(l1) == 0\n        l1 = nothing\n\
    \    else\n        l1 = maximum(l1)\n    end\n    if length(l2) == 0\n       \
    \ l2 = nothing\n    else\n        l2 = minimum(l2)\n    end\n    return l1, l2\n\
    end", "    # TODO: implement this function\n    a=nothing\n    b=nothing\n   \
    \ c=nothing\n    d=nothing\n    if length(lst)==0\n        return (nothing, nothing)\n\
    \    end\n    for i in lst\n        if i>0 && isnothing(b)==true\n           \
    \ b=i\n        elseif i>0 && i<b\n            b=i\n        end\n    end\n    for\
    \ i in lst\n        if i<0 && isnothing(a)==true\n            a=i\n        elseif\
    \ i<0 && i>a\n            a=i\n        end\n    end\n    if isnothing(a)==true\
    \ && isnothing(b)==true\n        return (nothing, nothing)\n    elseif isnothing(a)==true\
    \ && isnothing(b)==false\n        return (nothing, b)\n    elseif isnothing(a)==false\
    \ && isnothing(b)==true\n        return (a, nothing)\n    else\n        return\
    \ (a, b)\n    end\nend\n    ", "    a = nothing\n    b = nothing\n    for i in\
    \ lst\n        if i < 0\n            if a == nothing\n                a = i\n\
    \            elseif i > a\n                a = i\n            end\n        elseif\
    \ i > 0\n            if b == nothing\n                b = i\n            elseif\
    \ i < b\n                b = i\n            end\n        end\n    end\n    return\
    \ (a, b)\nend", "    negative_numbers = lst[lst .< 0]\n    positive_numbers =\
    \ lst[lst .> 0]\n    (a, b) = (nothing, nothing)\n    if length(negative_numbers)\
    \ > 0\n        a = maximum(negative_numbers)\n    end\n    if length(positive_numbers)\
    \ > 0\n        b = minimum(positive_numbers)\n    end\n    return (a, b)\nend",
  "    negs = findall(x -> x < 0, lst)\n    poss = findall(x -> x > 0, lst)\n    return\
    \ (maximum(negs), minimum(poss))\nend", "    # TODO: Return a tuple\nend", '    smallest_positive,
    largest_negative = nothing, nothing', "    neg_lst = findall(x -> x < 0, lst)\n\
    \    pos_lst = findall(x -> x > 0, lst)\n    try\n        return (maximum(neg_lst),\
    \ minimum(pos_lst))\n    catch e\n        return (nothing, nothing)\n    end\n\
    end", "    if isempty(lst) \n        return (nothing, nothing)\n    end\n    positive\
    \ = nothing\n    negative = nothing\n    for i in lst\n        if i >= 0 && positive\
    \ isa Nothing\n            positive = i\n        elseif i < 0 && negative isa\
    \ Nothing\n            negative = i\n        elseif i >= 0 && positive > i\n \
    \           positive = i\n        elseif i < 0 && negative < i\n            negative\
    \ = i\n        end\n    end\n    return (negative, positive)\nend", "    if isempty(lst)\n\
    \        return (nothing, nothing)\n    end\n    a = nothing\n    b = nothing\n\
    \    for i in lst\n        if i < 0\n            if a === nothing\n          \
    \      a = i\n            elseif i > a\n                a = i\n            end\n\
    \        elseif i > 0\n            if b === nothing\n                b = i\n \
    \           elseif i < b\n                b = i\n            end\n        end\n\
    \    end\n    return (a, b)\nend", "    a = nothing\n    b = nothing\n    for\
    \ i in lst\n        if i < 0\n            if a == nothing\n                a =\
    \ i\n            elseif a < i\n                a = i\n            end\n      \
    \  elseif i > 0\n            if b == nothing\n                b = i\n        \
    \    elseif b > i\n                b = i\n            end\n        end\n    end\n\
    \    return (a, b)\nend", "    negs = []\n    poss = []\n    for i in lst\n  \
    \      if i < 0\n            push!(negs, i)\n        elseif i > 0\n          \
    \  push!(poss, i)\n        end\n    end\n    if isempty(negs)\n        negs =\
    \ nothing\n    else\n        negs = negs[end]\n    end\n    if isempty(poss)\n\
    \        poss = nothing\n    else\n        poss = poss[1]\n    end\n    return\
    \ negs, poss\nend", "    pos_ints = lst[lst .> 0]\n    neg_ints = lst[lst .< 0]\n\
    \    pos_smallest = nothing\n    neg_largest = nothing\n    if !isempty(pos_ints)\n\
    \        pos_smallest = minimum(pos_ints)\n    end\n    if !isempty(neg_ints)\n\
    \        neg_largest = maximum(neg_ints)\n    end\n    return neg_largest, pos_smallest\n\
    end", "    a = nothing\n    b = nothing\n    for i in lst\n        if (i < 0)\
    \ && (i > a)\n            a = i\n        end\n        if (i > 0) && (b == nothing)\n\
    \            b = i\n        end\n        if (i > 0) && (i < b)\n            b\
    \ = i\n        end\n    end\n    return (a, b)\nend", "    nn_pos, nn_neg = findn(lst,\
    \ x -> x > 0), findn(lst, x -> x < 0)\n    return (nothing, nothing) if length(nn_pos)\
    \ == 0 && length(nn_neg) == 0 else\n        (lst[maximum(nn_neg)], lst[minimum(nn_pos)])\n\
    end", "    neg, pos = nothing, nothing\n    if length(lst) == 0\n        return\
    \ (neg, pos)\n    end\n    for i in lst\n        if i < 0\n            if neg\
    \ == nothing\n                neg = i\n            elseif i > neg\n          \
    \      neg = i\n            end\n        elseif i > 0\n            if pos == nothing\n\
    \                pos = i\n            elseif i < pos\n                pos = i\n\
    \            end\n        end\n    end\n    return (neg, pos)\nend", "    largest\
    \ = nothing\n    smallest = nothing\n    for i in lst\n        if i >= 0\n   \
    \         if (smallest == nothing) || (i < smallest)\n                smallest\
    \ = i\n            end\n        else\n            if (largest == nothing) || (i\
    \ > largest)\n                largest = i\n            end\n        end\n    end\n\
    \    return (largest, smallest)\nend", "    \n    if length(lst) == 0\n      \
    \  return (nothing, nothing)\n    end\n    \n    maximum_negative_integer = nothing\n\
    \    minimum_positive_integer = nothing\n    \n    for item in lst\n        if\
    \ item < 0\n            if maximum_negative_integer == nothing\n             \
    \   maximum_negative_integer = item\n            else\n                maximum_negative_integer\
    \ = max(maximum_negative_integer, item)\n            end\n        elseif item\
    \ > 0\n            if minimum_positive_integer == nothing\n                minimum_positive_integer\
    \ = item\n            else\n                minimum_positive_integer = min(minimum_positive_integer,\
    \ item)\n            end\n        end\n    end\n    \n    return (maximum_negative_integer,\
    \ minimum_positive_integer)\nend", "    \n    # Get largest negative integer\n\
    \    largest_negative = Nothing\n    for i in lst\n        if i < 0 && (largest_negative\
    \ == Nothing || i > largest_negative)\n            largest_negative = i\n    \
    \    end\n    end\n    \n    # Get smallest positive integer\n    smallest_positive\
    \ = Nothing\n    for i in lst\n        if i > 0 && (smallest_positive == Nothing\
    \ || i < smallest_positive)\n            smallest_positive = i\n        end\n\
    \    end\n    \n    return (largest_negative, smallest_positive)\nend", "    negative\
    \ = nothing\n    positive = nothing\n    for i in lst\n        if i > 0 && (positive\
    \ == nothing || i < positive)\n            positive = i\n        end\n       \
    \ if i < 0 && (negative == nothing || i > negative)\n            negative = i\n\
    \        end\n    end\n    return negative, positive\nend", "    negs = []\n \
    \   poses = []\n    for i in lst\n        if i < 0\n            push!(negs, i)\n\
    \        elseif i > 0\n            push!(poses, i)\n        end\n    end\n   \
    \ if isempty(negs)\n        largest_neg = nothing\n    else\n        largest_neg\
    \ = maximum(negs)\n    end\n    if isempty(poses)\n        smallest_pos = nothing\n\
    \    else\n        smallest_pos = minimum(poses)\n    end\n    return largest_neg,\
    \ smallest_pos\nend", "    \n    a = nothing\n    b = nothing\n    \n    if length(lst)\
    \ > 0\n        a = minimum(lst[lst .< 0])\n        b = maximum(lst[lst .> 0])\n\
    \    end\n    \n    return (a, b)\nend", "    negativos=[]\n    positivos=[]\n\
    \    for i in lst\n        if i<0\n            push!(negativos,i)\n        elseif\
    \ i>0\n            push!(positivos,i)\n        end\n    end\n    if isempty(negativos)\n\
    \        maximo=nothing\n    else\n        maximo=maximum(negativos)\n    end\n\
    \    if isempty(positivos)\n        minimo=nothing\n    else\n        minimo=minimum(positivos)\n\
    \    end\n    return (maximo,minimo)\nend", "    a = nothing\n    b = nothing\n\
    \    for i in lst\n        if (i < 0) && (a == nothing || i > a)\n           \
    \ a = i\n        end\n        if (i > 0) && (b == nothing || i < b)\n        \
    \    b = i\n        end\n    end\n    return (a, b)\nend", "    # YOUR CODE HERE\n\
    \    neg = []\n    pos = []\n    for i in lst\n        if i < 0\n            push!(neg,\
    \ i)\n        elseif i > 0\n            push!(pos, i)\n        end\n    end\n\
    \    if length(neg) == 0\n        return (nothing,nothing)\n    elseif length(pos)\
    \ == 0\n        return (nothing,nothing)\n    else\n        return (maximum(neg),\
    \ minimum(pos))\n    end\nend", "    smallest = nothing\n    largest = nothing\n\
    \    for x in lst\n        if x < 0 && x > largest\n            largest = x\n\
    \        elseif x > 0 && x < smallest\n            smallest = x\n        end\n\
    \    end\n    return (largest, smallest)\nend", "    if length(lst) == 0\n   \
    \     return (nothing, nothing)\n    end\n    (largest_negative, smallest_positive)\
    \ = lst[1], lst[1]\n    for i in lst\n        if i < 0\n            if i > largest_negative\n\
    \                largest_negative = i\n            end\n        elseif i > 0\n\
    \            if i < smallest_positive\n                smallest_positive = i\n\
    \            end\n        end\n    end\n    if largest_negative >= 0\n       \
    \ largest_negative = nothing\n    end\n    if smallest_positive <= 0\n       \
    \ smallest_positive = nothing\n    end\n    return (largest_negative, smallest_positive)\n\
    end", "    lst_negative = Int64[]\n    lst_positive = Int64[]\n    for i in lst\n\
    \        if i < 0\n            push!(lst_negative, i)\n        elseif i > 0\n\
    \            push!(lst_positive, i)\n        end\n    end\n    if length(lst_negative)\
    \ == 0 || length(lst_positive) == 0\n        return (nothing, nothing)\n    else\n\
    \        return (minimum(lst_negative), maximum(lst_positive))\n    end\nend",
  "    # Get the indices of negative and positive integers\n    neg_idx = findall(x\
    \ -> x < 0, lst)\n    pos_idx = findall(x -> x > 0, lst)\n    \n    # If there\
    \ is no negative or positive integers, return them as nothing\n    if isempty(neg_idx)\n\
    \        a = nothing\n    else\n        a = lst[argmax(lst[neg_idx])]\n    end\n\
    \    if isempty(pos_idx)\n        b = nothing\n    else\n        b = lst[argmin(lst[pos_idx])]\n\
    \    end\n    \n    return (a, b)\nend", "    \n    a = nothing\n    b = nothing\n\
    \    \n    for i in lst\n        if i < 0 && a == nothing\n            a = i\n\
    \        elseif i < 0 && i > a\n            a = i\n        elseif i > 0 && b ==\
    \ nothing\n            b = i\n        elseif i > 0 && i < b\n            b = i\n\
    \        end\n    end\n    \n    return (a, b)\nend", "    a = nothing\n    b\
    \ = nothing\n    for i in lst\n        if i < 0\n            if a == nothing\n\
    \                a = i\n            elseif a < i\n                a = i\n    \
    \        end\n        elseif i > 0\n            if b == nothing\n            \
    \    b = i\n            elseif b > i\n                b = i\n            end\n\
    \        end\n    end\n    return (a, b)\nend", "    if isempty(lst)\n       \
    \ return (nothing, nothing)\n    end\n    maximum(Int,lst)\n    minimum(Int,lst)\n\
    \    neg_values=filter(x->x<0,lst)\n    pos_values=filter(x->x>0,lst)\n    if\
    \ isempty(neg_values) && isempty(pos_values)\n        return (nothing, nothing)\n\
    \    elseif isempty(neg_values)\n        return (nothing, minimum(pos_values))\n\
    \    elseif isempty(pos_values)\n        return (maximum(neg_values), nothing)\n\
    \    else\n        return (maximum(neg_values), minimum(pos_values))\n    end\n\
    end", "    largest = nothing; smallest = nothing\n    for i in lst\n        if\
    \ i > 0 && smallest == nothing\n            smallest = i\n        elseif i > 0\
    \ && i < smallest\n            smallest = i\n        elseif i < 0 && largest ==\
    \ nothing\n            largest = i\n        elseif i < 0 && i > largest\n    \
    \        largest = i\n        end\n    end\n    return (largest, smallest)\nend",
  "    negatives = filter(x -> x < 0, lst)\n    positives = filter(x -> x > 0, lst)\n\
    \    if isempty(negatives)\n        a = nothing\n    else\n        a = maximum(negatives)\n\
    \    end\n    if isempty(positives)\n        b = nothing\n    else\n        b\
    \ = minimum(positives)\n    end\n    return (a, b)\nend", "    neg = nothing\n\
    \    pos = nothing\n    for x in lst\n        if x < 0 && (neg == nothing || x\
    \ > neg)\n            neg = x\n        elseif x > 0 && (pos == nothing || x <\
    \ pos)\n            pos = x\n        end\n    end\n    return neg, pos\nend",
  "    if lst == Int64[]\n        return (nothing, nothing)\n    end\n    pos = [i\
    \ for i in lst if i > 0]\n    neg = [i for i in lst if i < 0]\n    if pos == Int64[]\n\
    \        return (nothing, nothing)\n    end\n    if neg == Int64[]\n        return\
    \ (nothing, nothing)\n    end\n    return (maximum(neg), minimum(pos))\nend",
  "    # ...\nend", "    largest_negative = nothing\n    smallest_positive = nothing\n\
    \    for x in lst\n        if x < 0 && (largest_negative == nothing || x > largest_negative)\n\
    \            largest_negative = x\n        elseif x > 0 && (smallest_positive\
    \ == nothing || x < smallest_positive)\n            smallest_positive = x\n  \
    \      end\n    end\n    return (largest_negative, smallest_positive)\nend", " \
    \   return nothing, nothing\nend\n ", "    \n    neg = [x for x in lst if x <\
    \ 0]\n    pos = [x for x in lst if x > 0]\n    \n    if neg == []\n        a =\
    \ nothing\n    else\n        a = maximum(neg)\n    end\n    \n    if pos == []\n\
    \        b = nothing\n    else\n        b = minimum(pos)\n    end\n    \n    return\
    \ a, b\nend", "    # nothing\u3068\u306A\u308B\u5834\u5408\u3092\u8003\u616E\u3057\
    \u3066\u8A2D\u5B9A\n    a, b = nothing, nothing\n    if length(lst) > 0\n    \
    \    c = []\n        for i in lst\n            if i > 0\n                push!(c,\
    \ i)\n            end\n        end\n        if length(c) > 0\n            b =\
    \ minimum(c)\n        end\n        c = []\n        for i in lst\n            if\
    \ i < 0\n                push!(c, i)\n            end\n        end\n        if\
    \ length(c) > 0\n            a = maximum(c)\n        end\n    end\n    return\
    \ a, b\nend", "    if length(lst) != 0\n        neg_nums = []\n        pos_nums\
    \ = []\n        for i in lst\n            if i <= 0\n                push!(neg_nums,\
    \ i)\n            elseif i > 0\n                push!(pos_nums, i)\n         \
    \   end\n        end\n        if length(neg_nums) == 0\n            if length(pos_nums)\
    \ == 0\n                return (nothing, nothing)\n            else\n        \
    \        a = nothing\n                b = minimum(pos_nums)\n                return\
    \ (a, b)\n            end\n        elseif length(pos_nums) == 0\n            if\
    \ length(neg_nums) == 0\n                return (nothing, nothing)\n         \
    \   else\n                a = maximum(neg_nums)\n                b = nothing\n\
    \                return (a, b)\n            end\n        else\n            a =\
    \ maximum(neg_nums)\n            b = minimum(pos_nums)\n            return (a,\
    \ b)\n        end\n    else\n        return (nothing, nothing)\n    end\nend",
  "    neg_int, pos_int = nothing, nothing\n    for i in lst\n        if i < 0\n \
    \           if neg_int === nothing\n                neg_int = i\n            elseif\
    \ i > neg_int\n                neg_int = i\n            end\n        elseif i\
    \ > 0\n            if pos_int === nothing\n                pos_int = i\n     \
    \       elseif i < pos_int\n                pos_int = i\n            end\n   \
    \     end\n    end\n    return neg_int, pos_int\nend", "    nothing_tuple = (nothing,\
    \ nothing)\n    if length(lst) == 0\n        return nothing_tuple\n    end\n \
    \   min_pos_idx = nothing\n    max_neg_idx = nothing\n    for i in eachindex(lst)\n\
    \        if lst[i] < 0\n            if max_neg_idx == nothing\n              \
    \  max_neg_idx = i\n            elseif lst[i] > lst[max_neg_idx]\n           \
    \     max_neg_idx = i\n            end\n        elseif lst[i] > 0\n          \
    \  if min_pos_idx == nothing\n                min_pos_idx = i\n            elseif\
    \ lst[i] < lst[min_pos_idx]\n                min_pos_idx = i\n            end\n\
    \        end\n    end\n    return (get(max_neg_idx, lst, nothing), get(min_pos_idx,\
    \ lst, nothing))\nend", "    a = nothing\n    b = nothing\n    for n in lst\n\
    \        if n < 0\n            if a == nothing\n                a = n\n      \
    \      elseif n > a\n                a = n\n            end\n        elseif n\
    \ > 0\n            if b == nothing\n                b = n\n            elseif\
    \ n < b\n                b = n\n            end\n        end\n    end\n    return\
    \ (a, b)\nend", "    sorted_lst = sort(lst)\n    if isempty(sorted_lst)\n    \
    \    return (nothing, nothing)\n    end\n    if all(sorted_lst .>= 0) || all(sorted_lst\
    \ .<= 0)\n        return (nothing, nothing)\n    end\n    negative_start = 0\n\
    \    negative_end = length(sorted_lst)\n    while sorted_lst[negative_start] <\
    \ 0\n        negative_start += 1\n    end\n    while sorted_lst[negative_end]\
    \ > 0\n        negative_end -= 1\n    end\n    return (sorted_lst[negative_start-1],\
    \ sorted_lst[negative_end+1])\nend", "    # We will start with the simplest case,\
    \ where the vector is empty.\n    if lst == []\n        return (nothing, nothing)\n\
    \    else\n        # We will calculate the minimum element using a `for` loop.\n\
    \        small = first(lst)\n        for i in lst\n            if i < small\n\
    \                small = i\n            end\n        end\n        # Now, we can\
    \ use the `findfirst` function to find the maximum\n        # negative element\
    \ (if it exists).\n        large = findfirst(i -> i < 0, lst)\n        # Finally,\
    \ we must deal with the case where 'lst' contains no\n        # negative elements,\
    \ and thus 'large' is set to `nothing`.\n        if large == nothing\n       \
    \     large = nothing\n        end\n        # And now we just return.\n      \
    \  return (large, small)\n    end\nend", "    mn = nothing\n    mx = nothing\n\
    \    for v in lst\n        if v > 0 && (mx == nothing || v < mx)\n           \
    \ mx = v\n        end\n        if v < 0 && (mn == nothing || v > mn)\n       \
    \     mn = v\n        end\n    end\n    return (mn, mx)\nend", "    negs = nothing\n\
    \    poss = nothing\n    for num in lst\n        if num < 0\n            if negs\
    \ == nothing\n                negs = num\n            elseif num > negs\n    \
    \            negs = num\n            end\n        elseif num > 0\n           \
    \ if poss == nothing\n                poss = num\n            elseif num < poss\n\
    \                poss = num\n            end\n        end\n    end\n    return\
    \ negs, poss\nend\n@assert largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (nothing,\
    \ 1)\n@assert largest_smallest_integers([]) == (nothing, nothing)\n@assert largest_smallest_integers([0])\
    \ == (nothing, nothing)\n ", "    neg = filter(x -> x < 0, lst)\n    pos = filter(x\
    \ -> x > 0, lst)\n    if isempty(neg) || isempty(pos)\n        return (nothing,\
    \ nothing)\n    else\n        neg = sort(neg, rev=true)\n        pos = sort(pos)\n\
    \        return (neg[1], pos[1])\n    end\nend\n@testset \"Large Small\" begin\n\
    \    @test largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (nothing, 1)\n   \
    \ @test largest_smallest_integers([]) == (nothing, nothing)\n    @test largest_smallest_integers([0])\
    \ == (nothing, nothing)\nend", "    if isempty(lst)\n        return (nothing,\
    \ nothing)\n    end\n    smallest_positive_integer = nothing\n    largest_negative_integer\
    \ = nothing\n    for i in lst\n        if i > 0\n            if smallest_positive_integer\
    \ == nothing\n                smallest_positive_integer = i\n            elseif\
    \ i < smallest_positive_integer\n                smallest_positive_integer = i\n\
    \            end\n        elseif i < 0\n            if largest_negative_integer\
    \ == nothing\n                largest_negative_integer = i\n            elseif\
    \ i > largest_negative_integer\n                largest_negative_integer = i\n\
    \            end\n        end\n    end\n    return (largest_negative_integer,\
    \ smallest_positive_integer)\nend", "    negs = filter(x -> x < 0, lst)\n    pos\
    \ = filter(x -> x > 0, lst)\n    if isempty(negs)\n        a = nothing\n    else\n\
    \        a = maximum(negs)\n    end\n    if isempty(pos)\n        b = nothing\n\
    \    else\n        b = minimum(pos)\n    end\n    return (a, b)\nend", "    negative\
    \ = findall(x -> x < 0, lst)\n    positive = findall(x -> x > 0, lst)\n    if\
    \ isempty(negative)\n        a = nothing\n    else\n        a = maximum(negative)\n\
    \    end\n    if isempty(positive)\n        b = nothing\n    else\n        b =\
    \ minimum(positive)\n    end\n    return (a, b)\nend\n@testset \"largest_smallest_integers_test\"\
    \ begin\n    @test largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (nothing,\
    \ 1)\n    @test largest_smallest_integers([]) == (nothing, nothing)\n    @test\
    \ largest_smallest_integers([0]) == (nothing, nothing)\nend", "    s, b = nothing,\
    \ nothing\n    for i in lst\n        if i > 0\n            if b == nothing ||\
    \ i < b\n                b = i\n            end\n        elseif i < 0\n      \
    \      if s == nothing || i > s\n                s = i\n            end\n    \
    \    end\n    end\n    return s, b\nend", "    neg = typemax(Int64)\n    pos =\
    \ typemin(Int64)\n    for x in lst\n        if x > 0 && x < pos\n            pos\
    \ = x\n        elseif x < 0 && x > neg\n            neg = x\n        end\n   \
    \ end\n    if neg == typemax(Int64)\n        neg = nothing\n    end\n    if pos\
    \ == typemin(Int64)\n        pos = nothing\n    end\n    return neg, pos\nend",
  "    if length(lst) == 0\n        return (nothing, nothing)\n    end\n    a = minimum(lst)\n\
    \    b = maximum(lst)\n    if a >= 0\n        return (nothing, b)\n    elseif\
    \ b <= 0\n        return (a, nothing)\n    else\n        return (a, b)\n    end\n\
    end", "    neg_max = nothing\n    pos_min = nothing\n    for num in lst\n    \
    \    if num < 0\n            if neg_max == nothing || num > neg_max\n        \
    \        neg_max = num\n            end\n        elseif num > 0\n            if\
    \ pos_min == nothing || num < pos_min\n                pos_min = num\n       \
    \     end\n        end\n    end\n    return neg_max, pos_min\nend", "    if length(lst)\
    \ == 0\n        return (nothing, nothing)\n    end\n    neg_ints = filter(x ->\
    \ x < 0, lst)\n    pos_ints = filter(x -> x > 0, lst)\n    if length(neg_ints)\
    \ == 0\n        a = nothing\n    else\n        a = maximum(neg_ints)\n    end\n\
    \    if length(pos_ints) == 0\n        b = nothing\n    else\n        b = minimum(pos_ints)\n\
    \    end\n    return (a, b)\nend", "    pos = nothing\n    neg = nothing\n   \
    \ for x in lst\n        if x > 0 && pos == nothing\n            pos = x\n    \
    \    elseif x > 0 && x < pos\n            pos = x\n        end\n        if x <\
    \ 0 && neg == nothing\n            neg = x\n        elseif x < 0 && x > neg\n\
    \            neg = x\n        end\n    end\n    return neg, pos\nend", "    if\
    \ length(lst) > 0\n        smallest = nothing\n        largest = nothing\n   \
    \     for i in lst\n            if i < 0 && (largest == nothing || i > largest)\n\
    \                largest = i\n            end\n            if i > 0 && (smallest\
    \ == nothing || i < smallest)\n                smallest = i\n            end\n\
    \        end\n        return (largest, smallest)\n    else\n        return (nothing,\
    \ nothing)\n    end\nend", "    # YOUR CODE HERE\n    # There is no negative or\
    \ positive integers, return them as nothing.\n    if length(lst) == 0\n      \
    \  return (nothing, nothing)\n    end\n    # If a and b are the largest of negative\
    \ integers, \n    # and 'a' is the smallest of positive integers in a vector,\
    \ return them.\n    a = nothing\n    b = nothing\n    for i in lst\n        if\
    \ i < 0 && (a == nothing || i > a)\n            a = i\n        end\n        if\
    \ i > 0 && (b == nothing || i < b)\n            b = i\n        end\n    end\n\
    \    return (a, b)\nend", "    negatives = filter(x -> x < 0, lst)\n    positives\
    \ = filter(x -> x > 0, lst)\n    if isempty(negatives)\n        neg = nothing\n\
    \    else\n        neg = maximum(negatives)\n    end\n    if isempty(positives)\n\
    \        pos = nothing\n    else\n        pos = minimum(positives)\n    end\n\
    \    return (neg, pos)\nend", "    if length(lst) == 0\n        return (nothing,\
    \ nothing)\n    end\n    a, b = nothing, nothing\n    for i in lst\n        if\
    \ i < 0 && a == nothing || i < a\n            a = i\n        end\n        if i\
    \ > 0 && b == nothing || i < b\n            b = i\n        end\n    end\n    return\
    \ (a, b)\nend", "    @assert length(lst) >= 0\n    p = findfirst(x -> x >= 0,\
    \ lst)\n    n = findfirst(x -> x < 0, lst)\n    if p == nothing\n        n = n\
    \ == nothing ? nothing : lst[n]\n        return n, nothing\n    elseif n == nothing\n\
    \        p = p == nothing ? nothing : lst[p]\n        return nothing, p\n    elseif\
    \ p < n\n        return lst[n], lst[p]\n    else\n        return nothing, nothing\n\
    \    end\nend", "    # Your code here\n    # tip: use type: Union{Int64, Nothing}\n\
    \    # Union{T, U} is a type that can be either T or U\n    if length(lst) ==\
    \ 0\n        return (nothing, nothing)\n    end\n    min, max = maximum(lst),\
    \ minimum(lst)\n    for n in lst\n        if n > 0\n            if n < min\n \
    \               min = n\n            end\n        elseif n < 0\n            if\
    \ n > max\n                max = n\n            end\n        end\n    end\n  \
    \  if max >= 0\n        max = nothing\n    end\n    if min <= 0\n        min =\
    \ nothing\n    end\n    return (max, min)\nend", "    a = nothing; b = nothing\n\
    \    for i in lst\n        if i >= 0\n            if b == nothing || i < b\n \
    \               b = i\n            end\n        else\n            if a == nothing\
    \ || i > a\n                a = i\n            end\n        end\n    end\n   \
    \ return (a, b)\nend", "    \n    neg_val = nothing\n    pos_val = nothing\n \
    \   \n    for i in lst\n        if neg_val === nothing && i < 0\n            neg_val\
    \ = i\n        elseif neg_val < i && i < 0\n            neg_val = i\n        end\n\
    \        \n        if pos_val === nothing && i > 0\n            pos_val = i\n\
    \        elseif pos_val > i && i > 0\n            pos_val = i\n        end\n \
    \   end\n    \n    return neg_val, pos_val\nend\n        ", "    a, b = nothing,\
    \ nothing\n    for i in lst\n        if i > 0\n            b = min(i, get(b, i))\n\
    \        elseif i < 0\n            a = max(i, get(a, i))\n        end\n    end\n\
    \    return a, b\nend", "    \n    neg_num = nothing\n    for i in lst\n     \
    \   if i < 0\n            if neg_num == nothing\n                neg_num = i\n\
    \            elseif i > neg_num\n                neg_num = i\n            end\n\
    \        end\n    end\n    \n    pos_num = nothing\n    for i in lst\n       \
    \ if i > 0\n            if pos_num == nothing\n                pos_num = i\n \
    \           elseif i < pos_num\n                pos_num = i\n            end\n\
    \        end\n    end\n    \n    return neg_num, pos_num\nend", "    negat = nothing\n\
    \    posit = nothing\n    for i in lst\n        if i < 0\n            if negat\
    \ == nothing\n                negat = i\n            elseif i > negat\n      \
    \          negat = i\n            end\n        elseif i > 0\n            if posit\
    \ == nothing\n                posit = i\n            elseif i < posit\n      \
    \          posit = i\n            end\n        end\n    end\n    return negat,\
    \ posit\nend", "    pos, neg = Int[], Int[]\n    for i in lst\n        if i >\
    \ 0\n            push!(pos, i)\n        elseif i < 0\n            push!(neg, i)\n\
    \        end\n    end\n    largest_negative, smallest_positive = nothing, nothing\n\
    \    if !isempty(neg)\n        largest_negative = maximum(neg)\n    end\n    if\
    \ !isempty(pos)\n        smallest_positive = minimum(pos)\n    end\n    return\
    \ largest_negative, smallest_positive\nend", "    # Initialize variables to store\
    \ the largest negative integer \n    # and the smallest positive integer\n   \
    \ pos_int = nothing\n    neg_int = nothing\n    \n    # Iterate through the vector\
    \ to find them\n    for el in lst\n        if el < 0\n            if neg_int ==\
    \ nothing\n                neg_int = el\n            elseif neg_int > el\n   \
    \             neg_int = el\n            end\n        elseif el > 0\n         \
    \   if pos_int == nothing\n                pos_int = el\n            elseif pos_int\
    \ < el\n                pos_int = el\n            end\n        end\n    end\n\
    \    \n    # Return the result\n    return (neg_int, pos_int)\nend", "    \"\"\
    \"Return a tuple of the largest negative and smallest positive numbers in the\
    \ vector. \"\"\"\n    a = nothing\n    b = nothing\n    n = length(lst)\n    if\
    \ n > 0\n        positives = Vector{Int64}()\n        negatives = Vector{Int64}()\n\
    \        for i in 1:n\n            if lst[i] >= 0\n                push!(positives,\
    \ lst[i])\n            else\n                push!(negatives, lst[i])\n      \
    \      end\n        end\n        a = maximum(negatives)\n        b = minimum(positives)\n\
    \    end\n    return (a, b)\nend\n ", "    a = nothing\n    b = nothing\n    n\
    \ = 0\n    p = 0\n    for x in lst\n        if x < 0\n            if isnothing(a)\n\
    \                a = x\n            elseif x > a\n                a = x\n    \
    \        end\n            n += 1\n        elseif x > 0\n            if isnothing(b)\n\
    \                b = x\n            elseif x < b\n                b = x\n    \
    \        end\n            p += 1\n        end\n    end\n    if n == 0\n      \
    \  a = nothing\n    end\n    if p == 0\n        b = nothing\n    end\n    return\
    \ (a, b)\nend", "    if isempty(lst) \n        return (nothing, nothing)\n   \
    \ end\n    a = nothing\n    b = nothing\n    for num in lst\n        if num <\
    \ 0 && (a == nothing || num > a)\n            a = num\n        end\n        if\
    \ num > 0 && (b == nothing || num < b)\n            b = num\n        end\n   \
    \ end\n    return (a, b)\nend", "    # Convert to a tuple, because we will be\
    \ using it a lot.\n    a, b = nothing, nothing\n    for x in lst\n        if x\
    \ > 0\n            # If a is nothing, it has not been set.\n            if a ==\
    \ nothing\n                a = x\n            else\n                a = min(a,\
    \ x)\n            end\n        elseif x < 0\n            if b == nothing\n   \
    \             b = x\n            else\n                b = max(b, x)\n       \
    \     end\n        end\n    end\n    return b, a\nend", "    # solution\n    if\
    \ isempty(lst)\n        return (nothing, nothing)\n    end\n    pos = [i for i\
    \ in lst if i > 0]\n    neg = [i for i in lst if i < 0]\n    if isempty(pos) &&\
    \ isempty(neg)\n        return (nothing, nothing)\n    end\n    return (maximum(neg),\
    \ minimum(pos))\nend", "    neg_min = nothing\n    pos_min = nothing\n    for\
    \ i in lst\n        if i < 0 && (neg_min == nothing || i > neg_min)\n        \
    \    neg_min = i\n        elseif i > 0 && (pos_min == nothing || i < pos_min)\n\
    \            pos_min = i\n        end\n    end\n    return neg_min, pos_min\n\
    end", "    a, b = nothing, nothing\n    for x in lst\n        if x < 0\n     \
    \       a = maximum(a, x)\n        elseif x > 0\n            b = minimum(b, x)\n\
    \        end\n    end\n    return a, b\nend", "    a, b = nothing, nothing\n \
    \   for i in lst\n        if i < 0\n            if a == nothing\n            \
    \    a = i\n            elseif a < i\n                a = i\n            end\n\
    \        elseif i > 0\n            if b == nothing\n                b = i\n  \
    \          elseif b > i\n                b = i\n            end\n        end\n\
    \    end\n    return a, b\nend", "    neg_list = [lst[i] for i in 1:length(lst)\
    \ if lst[i] < 0]\n    pos_list = [lst[i] for i in 1:length(lst) if lst[i] > 0]\n\
    \    if neg_list == []\n        neg_max = nothing\n    else\n        neg_max =\
    \ maximum(neg_list)\n    end\n    if pos_list == []\n        pos_min = nothing\n\
    \    else\n        pos_min = minimum(pos_list)\n    end\n    return (neg_max,\
    \ pos_min)\nend", "    negative_numbers = []\n    positive_numbers = []\n    for\
    \ i in lst\n        if i >= 0\n            push!(positive_numbers, i)\n      \
    \  else\n            push!(negative_numbers, i)\n        end\n    end\n    if\
    \ length(negative_numbers) == 0\n        a = nothing\n    else\n        a = maximum(negative_numbers)\n\
    \    end\n    if length(positive_numbers) == 0\n        b = nothing\n    else\n\
    \        b = minimum(positive_numbers)\n    end\n    return a, b\nend", "    if\
    \ isempty(lst)\n        return (nothing, nothing)\n    end\n    (nothing, nothing)\n\
    end", "    lst = filter(x -> x < 0, lst)\n    lst_s = filter(x -> x > 0, lst)\n\
    \    if (length(lst) == 0) && (length(lst_s) == 0)\n        return (nothing, nothing)\n\
    \    elseif length(lst) == 0\n        return (nothing, minimum(lst_s))\n    elseif\
    \ length(lst_s) == 0\n        return (maximum(lst), nothing)\n    else\n     \
    \   return (maximum(lst), minimum(lst_s))\n    end\nend", "    negative = nothing\n\
    \    positive = nothing\n    for i in lst\n        if i < 0 && negative == nothing\n\
    \            negative = i\n        elseif i < 0 && negative != nothing\n     \
    \       negative = maximum(negative, i)\n        elseif i > 0 && positive == nothing\n\
    \            positive = i\n        elseif i > 0 && positive != nothing\n     \
    \       positive = minimum(positive, i)\n        end\n    end\n    return negative,\
    \ positive\nend", "    return (nothing, nothing)\nend", "    return (get_largest_negative_integer(lst),\
    \ get_smallest_positive_integer(lst))\nend", "    if length(lst) == 0 \n     \
    \   return (nothing, nothing)\n    end \n    a = nothing \n    b = nothing \n\
    \    for i in lst \n        if i < 0 && i > a \n            a = i \n        end\
    \ \n        if i > 0 && (b == nothing || i < b) \n            b = i \n       \
    \ end \n    end \n    return (a, b)\nend ", "    negative_int = nothing\n    positive_int\
    \ = nothing\n    for integer in lst\n        if integer < 0\n            if negative_int\
    \ == nothing\n                negative_int = integer\n            elseif integer\
    \ > negative_int\n                negative_int = integer\n            end\n  \
    \      elseif integer > 0\n            if positive_int == nothing\n          \
    \      positive_int = integer\n            elseif integer < positive_int\n   \
    \             positive_int = integer\n            end\n        end\n    end\n\
    \    return negative_int, positive_int\nend", "    if length(lst) == 0\n     \
    \   return (nothing, nothing)\n    end\n    a = nothing\n    b = nothing\n   \
    \ for i = 1:length(lst)\n        if lst[i] < 0 && (a == nothing || lst[i] > a)\n\
    \            a = lst[i]\n        end\n        if lst[i] > 0 && (b == nothing ||\
    \ lst[i] < b)\n            b = lst[i]\n        end\n    end\n    return (a, b)\n\
    end", "    if length(lst) == 0\n        return (nothing, nothing)\n    end\n \
    \   n_max = maximum(lst)\n    n_min = minimum(lst)\n    if n_max <= 0\n      \
    \  return (n_max, nothing)\n    elseif n_min >= 0\n        return (nothing, n_min)\n\
    \    else\n        return (nothing, nothing)\n    end\nend", "    smallest_positive,\
    \ largest_negative = nothing, nothing\n    for x in lst\n        if x >= 0\n \
    \           if smallest_positive == nothing || x < smallest_positive\n       \
    \         smallest_positive = x\n            end\n        else\n            if\
    \ largest_negative == nothing || x > largest_negative\n                largest_negative\
    \ = x\n            end\n        end\n    end\n    return largest_negative, smallest_positive\n\
    end", "    pos, neg = nothing, nothing\n    for i in lst\n        pos = (i < 0\
    \ ? pos : minimum(pos, i))\n        neg = (i < 0 ? maximum(neg, i) : neg)\n  \
    \  end\n    return neg, pos\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

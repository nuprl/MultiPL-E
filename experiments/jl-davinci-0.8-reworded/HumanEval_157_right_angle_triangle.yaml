name: HumanEval_157_right_angle_triangle
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return true\
  \ if the three\n    sides form a right-angled triangle, false otherwise.\n    A\
  \ right-angled triangle is a triangle in which one angle is right angle or \n  \
  \  90 degree.\n    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n \
  \   >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
  \ b::Int64, c::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
  \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
  \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
  \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
  \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
  \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) ==\
  \ false)\nend\n"
completions: ["    \"\"\"Returns true if a, b, c form a right-angled triangle, false\
    \ otherwise\"\"\"\n    if c > a && c > b\n        return a^2 + b^2 == c^2\n  \
    \  elseif b > a && b > c\n        return a^2 + c^2 == b^2\n    else\n        return\
    \ c^2 + b^2 == a^2\n    end\nend", "    \"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return true if the three\n    sides form a right-angled\
    \ triangle, false otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\
    \n    (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", " \
    \   if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\n        return\
    \ true\n    else\n        return false\n    end\nend", "    \n    c^2 == a^2 +\
    \ b^2\n    \nend", "    # Your Code Here\nend", "  pythagorean_triple(a, b, c)\n\
    end", "    return a > 0 && b > 0 && c > 0 && (a^2 + b^2 == c^2 || a^2 + c^2 ==\
    \ b^2 || c^2 + b^2 == a^2)\nend\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1,\
    \ 2, 3))", "    if a > b && a > c # a must be hypotenuse\n        if b^2 + c^2\
    \ == a^2\n            return true\n        end\n    elseif b > a && b > c # b\
    \ must be hypotenuse\n        if a^2 + c^2 == b^2\n            return true\n \
    \       end\n    elseif c > a && c > b # c must be hypotenuse\n        if a^2\
    \ + b^2 == c^2\n            return true\n        end\n    end\n    return false\n\
    end", "    if ((a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a))\n\
    \        return true\n    else\n        return false\n    end\nend", "    if (a+b\
    \ > c) & (a+c > b) & (b+c > a)\n        if (a^2 + b^2 == c^2) | (a^2 + c^2 ==\
    \ b^2) | (b^2 + c^2 == a^2)\n            return true\n        else \n        \
    \    return false\n        end\n    else\n        return false\n    end\nend",
  "    ### BEGIN SOLUTION\n    if a == b == c\n        return false\n    end\n   \
    \ if a*a + b*b == c*c\n        return true\n    end\n    if a*a + c*c == b*b\n\
    \        return true\n    end\n    if b*b + c*c == a*a\n        return true\n\
    \    end\n    return false\n    ### END SOLUTION\nend", "    return (a^2 + b^2\
    \ == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    # Write your\
    \ code here.\n    return 0\nend", "    a2 = a^2\n    b2 = b^2\n    c2 = c^2\n\
    \    return a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2\nend", "    \n   \
    \ #a^2 + b^2 = c^2\n    if a^2 + b^2 == c^2:\n        return true\n    else:\n\
    \        return false\n    end\nend", "    return a^2 + b^2 == c^2 || a^2 + c^2\
    \ == b^2 || b^2 + c^2 == a^2\nend", "    if a^2 + b^2 == c^2\n        return true\n\
    \    else\n        return false\n    end\nend", "    if a==0 || b==0 || c==0\n\
    \        return false\n    end\n    if (a+b <= c) || (a+c <= b) || (b+c <= a)\n\
    \        return false\n    end\n    if (a*a+b*b == c*c) || (a*a+c*c == b*b) ||\
    \ (b*b+c*c == a*a)\n        return true\n    end\n    return false\nend\n    \n\
    \    \n\"\"\"\n    You are required to write a function that takes in an integer\
    \ as an \n    argument and returns the square of that integer.\n    Example:\n\
    \    >>> square(5)\n    25\n    >>> square(10)\n    100\n    \"\"\"", "    if\
    \ is_right_angle_triangle(a, b, c) || is_right_angle_triangle(a, c, b) || is_right_angle_triangle(b,\
    \ c, a)\n        return true\n    else\n        return false\n    end\nend", " \
    \   return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend",
  "    # check if a^2 + b^2 = c^2\n    return (a^2 + b^2 == c^2)\nend", "    return\
    \ (a > 0) && (b > 0) && (c > 0) && ((a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) ||\
    \ (b^2 + c^2 == a^2))\nend", "    if (a>b && a>c)\n        return a*a == b*b +\
    \ c*c\n    elseif (b>a && b>c)\n        return b*b == a*a + c*c\n    else\n  \
    \      return c*c == a*a + b*b\n    end\nend", "    if (c^2 == a^2 + b^2) || (a^2\
    \ == b^2 + c^2) || (b^2 == a^2 + c^2)\n        return true\n    else\n       \
    \ return false\n    end\nend", "    \n    a2, b2, c2 = a^2, b^2, c^2\n    \n \
    \   return a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2\n    \nend\nright_angle_triangle(3,\
    \ 4, 5)", "    if ((a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2))\n\
    \        return true\n    else\n        return false\n    end\nend", "    return\
    \ (a*a+b*b == c*c) || (a*a+c*c == b*b) || (b*b+c*c == a*a)\nend\nright_angle_triangle(3,\
    \ 4, 5)", "    \n    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2\
    \ == a^2)\n        return true\n    else\n        return false\n    end\nend",
  "    if a > 0 && b > 0 && c > 0\n        if a^2 + b^2 == c^2 || a^2 + c^2 == b^2\
    \ || b^2 + c^2 == a^2\n            return true\n        else\n            return\
    \ false\n        end\n    else\n        return false\n    end\nend", "    a2 =\
    \ a*a\n    b2 = b*b\n    c2 = c*c\n    return (a2 + b2 == c2) || (a2 + c2 == b2)\
    \ || (b2 + c2 == a2)\nend", "    pythagoras = a^2 + b^2\n    if pythagoras ==\
    \ c^2\n        return true\n    else\n        return false\n    end\nend", " \
    \   if (a^2) + (b^2) == (c^2)\n        return true\n    else\n        return false\n\
    \    end\nend", "    return a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2\
    \ == a^2\nend\n \n \n \n \n    \n    \n \n ", "    if (a^2 + b^2 == c^2) \n  \
    \      return true\n    else\n        return false\n    end\nend", "    hypotenuse\
    \ = maximum([a, b, c])\n    cathetus = sum([a, b, c]) - hypotenuse\n    return\
    \ hypotenuse^2 == cathetus^2\nend", "    return (a^2 + b^2 == c^2) || (a^2 + c^2\
    \ == b^2) || (b^2 + c^2 == a^2)\nend", "    if (a*a + b*b == c*c)\n        return\
    \ true\n    elseif (a*a + c*c == b*b)\n        return true\n    elseif (b*b +\
    \ c*c == a*a)\n        return true\n    else\n        return false\n    end\n\
    end", "    if a == 0 || b == 0 || c == 0\n        return false\n    end\n    if\
    \ a^2 + b^2 == c^2\n        return true\n    elseif b^2 + c^2 == a^2\n       \
    \ return true\n    elseif a^2 + c^2 == b^2\n        return true\n    else\n  \
    \      return false\n    end\nend", "    if a^2 + b^2 == c^2\n        return true\n\
    \    elseif a^2 + c^2 == b^2\n        return true\n    elseif b^2 + c^2 == a^2\n\
    \        return true\n    else\n        return false\n    end\nend", "    pythagorean_triple\
    \ = [3, 4, 5], [5, 12, 13], [8, 15, 17], [7, 24, 25], [20, 21, 29], [12, 35, 37],\
    \ [9, 40, 41], [28, 45, 53], [11, 60, 61], [16, 63, 65], [33, 56, 65], [48, 55,\
    \ 73], [13, 84, 85], [36, 77, 85], [39, 80, 89], [65, 72, 97]\n    for i in pythagorean_triple\n\
    \        if sort([a, b, c]) == sort(i)\n            return true\n        end\n\
    \    end\n    return false\nend\n ", "    # The sum of any two sides of a triangle\
    \ is greater than the measure of the third side.\n    if (a^2 + b^2 == c^2) ||\
    \ (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n    else\n  \
    \      return false\n    end\nend", "    if (a > b) && (a > c)\n        return\
    \ b^2 + c^2 == a^2\n    elseif (b > a) && (b > c)\n        return a^2 + c^2 ==\
    \ b^2\n    else\n        return a^2 + b^2 == c^2\n    end\nend", "    \"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return true if the three\n\
    \    sides form a right-angled triangle, false otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    >>> right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1,\
    \ 2, 3)\n    false\n    \"\"\"\n    return (a ^ 2 + b ^ 2 == c ^ 2) || (a ^ 2\
    \ + c ^ 2 == b ^ 2) || (b ^ 2 + c ^ 2 == a ^ 2)\nend", "    a2, b2, c2 = a*a,\
    \ b*b, c*c\n    return a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2\nend",
  "    c_sqr = c^2\n    a_sqr = a^2\n    b_sqr = b^2\n    a_sqr+b_sqr == c_sqr ||\
    \ a_sqr+c_sqr == b_sqr || b_sqr+c_sqr == a_sqr\nend", "    if a < b and a < c\n\
    \        return a^2 + b^2 == c^2\n    elseif b < a and b < c\n        return a^2\
    \ + b^2 == c^2\n    elseif c < a and c < b\n        return a^2 + b^2 == c^2\n\
    \    else\n        return false\n    end\nend", "    a2 = a^2\n    b2 = b^2\n\
    \    c2 = c^2\n    if a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2\n      \
    \  return true\n    else\n        return false\n    end\nend", "    a = [a, b,\
    \ c]\n    order!(a)\n    # a is the longest side\n    return a[3]^2 == a[1]^2\
    \ + a[2]^2\nend", "    return a^2 + b^2 == c^2\nend", "    return a^2 + b^2 ==\
    \ c^2\nend", "    \n    # check if one of the 3 sides is equal to zero or if one\
    \ side is greater than the sum of the other 2 sides\n    if (a == 0 || b == 0\
    \ || c == 0) || (a > b + c || b > a + c || c > a + b)\n        return false\n\
    \    end\n    \n    \"\"\"\n    because the problem is to check if the three sides\
    \ form a right-angled triangle,\n    then the sum of squares of two sides of the\
    \ triangle is equal to the square of the\n    third side for a right-angled triangle.\n\
    \    \"\"\"\n    return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2\
    \ == a^2)\nend", "    if a > b\n        is_triangle = a*a < b*b + c*c\n    else\n\
    \        is_triangle = b*b < a*a + c*c\n    end\n    \n    return is_triangle\n\
    end", "    a_sq = a^2\n    b_sq = b^2\n    c_sq = c^2\n    if a_sq + b_sq == c_sq\
    \ || a_sq + c_sq == b_sq || b_sq + c_sq == a_sq\n        return true\n    else\n\
    \        return false\n    end\nend", "    if a > 0 && b > 0 && c > 0 && (a^2\
    \ + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2)\n        return true\n\
    \    else\n        return false\n    end\nend", "    return a^2+b^2==c^2\nend",
  "     if a^2 == b^2 + c^2 || b^2 == a^2 + c^2 || c^2 == a^2 + b^2\n        return\
    \ true\n    else\n        return false\n    end\nend\n ", "    (a^2 + b^2 == c^2)\
    \ || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    # Return true if the\
    \ three sides form a right-angled triangle, false otherwise.\n    # i.e. if the\
    \ three sides of the triangle form a Pythagorean triplet.\n    if(a^2 + b^2 ==\
    \ c^2)\n        return true\n    elseif(a^2 + c^2 == b^2)\n        return true\n\
    \    elseif(b^2 + c^2 == a^2)\n        return true\n    else\n        return false\n\
    \    end\nend", "    # suppose a, b, c are the lengths of the three sides of a\
    \ triangle,\n    # and a is the largest one\n    a_sqr = a^2\n    b_sqr = b^2\n\
    \    c_sqr = c^2\n    if a_sqr == b_sqr + c_sqr\n        return true\n    else\n\
    \        return false\n    end\nend", "    if (a^2 + b^2 == c^2) || (b^2 + c^2\
    \ == a^2) || (a^2 + c^2 == b^2)\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if a > b && a > c\n        return a^2 == b^2 + c^2\n\
    \    elseif b > a && b > c\n        return b^2 == a^2 + c^2\n    elseif c > a\
    \ && c > b\n        return c^2 == a^2 + b^2\n    end\nend", "    hypotenuse =\
    \ max(a, b, c)\n    side1 = min(a, b, c)\n    side2 = [i for i in [a, b, c] if\
    \ i != hypotenuse && i != side1][1]\n    return hypotenuse ^ 2 == side1 ^ 2 +\
    \ side2 ^ 2\nend", "    if a^2 + b^2 == c^2\n        return true\n    else\n \
    \       return false\n    end\nend", "    c ^ 2 == a ^ 2 + b ^ 2\nend", "    if\
    \ a > b && a > c\n        return a^2 == b^2 + c^2\n    elseif b > a && b > c\n\
    \        return b^2 == a^2 + c^2\n    else\n        return c^2 == a^2 + b^2\n\
    \    end\nend", "    for side in [a, b, c]\n        if side == 0\n           \
    \ return false\n        end\n    end\n    if a >= b\n        a, b = b, a\n   \
    \ end\n    if b >= c\n        b, c = c, b\n    end\n    if a >= b\n        a,\
    \ b = b, a\n    end\n    return c^2 == a^2 + b^2\nend\nright_angle_triangle(a,\
    \ b, c) = right_angle_triangle(Int64(a), Int64(b), Int64(c))", "    if a == hypot(b,\
    \ c)\n        return true\n    elseif b == hypot(a, c)\n        return true\n\
    \    elseif c == hypot(a, b)\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a > b && a > c\n        if a^2 == b^2 + c^2\n        \
    \    return true\n        else\n            return false\n        end\n    elseif\
    \ b > a && b > c\n        if b^2 == a^2 + c^2\n            return true\n     \
    \   else\n            return false\n        end\n    else\n        if c^2 == a^2\
    \ + b^2\n            return true\n        else\n            return false\n   \
    \     end\n    end\nend", "    if a < b && a < c\n        return (a^2) + (b^2)\
    \ == (c^2)\n    elseif b < a && b < c\n        return (a^2) + (b^2) == (c^2)\n\
    \    else\n        return (a^2) + (b^2) == (c^2)\n    end\nend", "    a^2 + b^2\
    \ == c^2 ? true : false\nend", "    # your code here\nend", "    return a > 0\
    \ && b > 0 && c > 0 && a * a + b * b == c * c\nend", "    a == round(sqrt(b^2\
    \ + c^2)) || b == round(sqrt(a^2 + c^2)) || c == round(sqrt(a^2 + b^2))\nend",
  "    if a > b && a > c\n        a * a == b * b + c * c ? true : false\n    elseif\
    \ b > a && b > c\n        b * b == a * a + c * c ? true : false\n    else\n  \
    \      c * c == a * a + b * b ? true : false\n    end\nend", "    if a*a + b*b\
    \ == c*c\n        return true\n    else\n        return false\n    end\nend",
  "    if ((c^2 == a^2 + b^2)|(a^2 == b^2 + c^2)|(b^2 == a^2 + c^2))\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return (a < b+c) &&\
    \ (b < a+c) && (c < a+b) && (a^2 + b^2 == c^2)\nend", "    return true if (c >\
    \ b) & (c > a) & ((b^2 + a^2) == c^2) else false\nend", "    ## Your code goes\
    \ here. \n    return 0\nend\n ", "    ac = a * a + c * c\n    if a == 0 || c ==\
    \ 0\n        return false\n    end\n    if ac == b * b\n        return true\n\
    \    end\n    if a > c\n        right_angle_triangle(c, b, a)\n    else\n    \
    \    right_angle_triangle(a, b, c)\n    end\nend", "    max = maximum([a, b, c])\n\
    \    if max > sum([a, b, c]) - max\n        return false\n    end\n    return\
    \ a^2 + b^2 == c^2\nend", "    \"\"\"\n    Check if the triangle is right-angled\n\
    \    \"\"\"\n    @assert a > 0 && b > 0 && c > 0\n    # YOUR CODE HERE\n    if\
    \ a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\n        return true\n\
    \    else\n        return false\n    end\nend", "    a_sq = a^2\n    b_sq = b^2\n\
    \    c_sq = c^2\n    if a_sq + b_sq == c_sq || a_sq + c_sq == b_sq || b_sq + c_sq\
    \ == a_sq\n        return true\n    else\n        return false\n    end\nend",
  "    (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "   \
    \ if (a < b) \n        temp = a\n        a = b\n        b = temp\n    end\n  \
    \  return (a^2 == b^2 + c^2)\nend", "    if (a^2 + b^2 == c^2)\n        return\
    \ true\n    elseif (b^2 + c^2 == a^2)\n        return true\n    elseif (c^2 +\
    \ a^2 == b^2)\n        return true\n    else\n        return false\n    end\n\
    end", "    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n\
    \        return true\n    else\n        return false\n    end\nend", "    \n \
    \   if(a^2+b^2==c^2 || a^2+c^2==b^2 || b^2+c^2==a^2)\n        print(\"True\")\n\
    \    else\n        print(\"False\")\n    end\n    \nend", "    if a^2 + b^2 ==\
    \ c^2\n        return true\n    else\n        return false\n    end\nend", " \
    \   if c < b\n        b, c = c, b\n    end\n    if b < a\n        a, b = b, a\n\
    \    end\n    if c < b\n        b, c = c, b\n    end\n    a^2 + b^2 == c^2\nend",
  "    c>a && c>b && c==(a^2+b^2)^0.5 ? true : false\nend", "    \"\"\"\n    a, b,\
    \ c the lengths of the three sides of a triangle.\n    \"\"\"\n    h = hypot(a,\
    \ b)\n    return h == c\nend", "    return a^2 + b^2 == c^2 # wow I can just write\
    \ like this\nend", "    \"\"\"Check the 3 sides a, b, c form a right-angled triangle.\"\
    \"\"\n    if (a^2 + b^2 == c^2) | (a^2 + c^2 == b^2) | (b^2 + c^2 == a^2)\n  \
    \      return true\n    else\n        return false\n    end\nend", "    hypotenuse\
    \ = maximum([a, b, c])\n    if hypotenuse == a\n        if a == b + c \n     \
    \       return true\n        end\n    elseif hypotenuse == b\n        if b ==\
    \ a + c \n            return true\n        end\n    elseif hypotenuse == c\n \
    \       if c == a + b \n            return true\n        end\n    end\n    return\
    \ false\nend", "    if a == 0 || b == 0 || c == 0\n        return false\n    end\n\
    \    if a < 0 || b < 0 || c < 0\n        return false\n    end\n    if (a ^ 2\
    \ + b ^ 2 == c ^ 2) || (b ^ 2 + c ^ 2 == a ^ 2) || (a ^ 2 + c ^ 2 == b ^ 2)\n\
    \        return true\n    end\n    return false\nend", "  if a == b == c == 0\n\
    \    return false\n  end\n  if (a == 0 && b == 0) || (a == 0 && c == 0) || (b\
    \ == 0 && c == 0)\n    return false\n  end\n  if (a == 0 && b == c) || (a == b\
    \ && c == 0) || (a == c && b == 0)\n    return true\n  end\n  if (a < 0 && b <\
    \ 0 && c < 0) || (a < 0 && b < 0) || (a < 0 && c < 0) || (b < 0 && c < 0)\n  \
    \  return false\n  end\n  if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2\
    \ == a^2\n    return true\n  end\n  return false\nend", "    if abs(a*a + b*b\
    \ - c*c) <=0.0001\n        return true\n    elseif abs(a*a + c*c - b*b) <=0.0001\n\
    \        return true\n    elseif abs(b*b + c*c - a*a) <=0.0001\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return a*a + b*b ==\
    \ c*c\nend", "    #@assert a > 0 && b > 0 && c > 0 \n    max_side = max(a, b,\
    \ c)\n    return (max_side ^ 2) == (a ^ 2 + b ^ 2 + c ^ 2 - max_side ^ 2)\nend",
  "    if (a^2 + b^2 == c^2) return true \n    else \n        return false \n    end\
    \ \nend ", "    if \n    end\n    return false\nend", "    \"\"\"\n    Return\
    \ true if the three sides form a right-angled triangle, false otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    \"\"\"\n    if (a>b) && (a>c)\n        return a*a == b*b\
    \ + c*c\n    elseif (b>a) && (b>c)\n        return b*b == a*a + c*c\n    elseif\
    \ (c>a) && (c>b)\n        return c*c == a*a + b*b\n    else\n        return false\n\
    \    end\nend", "    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2\
    \ == a^2)\n        return true\n    else\n        return false\n    end\nend",
  "    return a^2 + b^2 == c^2\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"",
  "    sqa = a^2\n    sqb = b^2\n    sqc = c^2\n    if sqa + sqb == sqc || sqa + sqc\
    \ == sqb || sqb + sqc == sqa\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a^2 + b^2 == c^2\n        return true\n    else\n    \
    \    return false\n    end\nend", "    # code here\n    return (a^2 + b^2 == c^2)\
    \ || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    hypotenuse = maximum([a,\
    \ b, c])\n    x = hypotenuse^2\n    z = (a^2 + b^2 + c^2) - x\n    if hypotenuse\
    \ == x + z\n        return true\n    else\n        return false\n    end\nend\n\
    \ ", "    aa = a*a\n    bb = b*b\n    cc = c*c\n    return ((aa+bb) == cc) ||\
    \ ((aa+cc) == bb) || ((bb+cc) == aa)\nend", "    sqrt(a^2 + b^2) == c ? true :\
    \ false\nend", "    hyp = maximum([a, b, c])\n    if (a == hyp)\n        if (b^2\
    \ + c^2 == hyp^2)\n            return true\n        else\n            return false\n\
    \        end\n    elseif (b == hyp)\n        if (a^2 + c^2 == hyp^2)\n       \
    \     return true\n        else\n            return false\n        end\n    else\n\
    \        if (a^2 + b^2 == hyp^2)\n            return true\n        else\n    \
    \        return false\n        end\n    end\nend", "    return a^2 + b^2 == c^2\n\
    end", "    ab = a*a + b*b\n    bc = b*b + c*c\n    ac = a*a + c*c\n    if ab ==\
    \ c*c || bc == a*a || ac == b*b\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # TODO\n    return false\nend\nright_angle_triangle(3,\
    \ 4, 5)", "    # Your code\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return \n    -1 if the three sides form a right-angled triangle\n\
    \    -2 if the triangle is an isosceles triangle\n    -3 if the triangle is equilateral\n\
    \    -4 if the triangle is a scalene triangle.\n    Example:\n    >>> triangle_type(3,\
    \ 4, 5)\n    -1\n    >>> triangle_type(1, 2, 3)\n    -4\n    \"\"\"", "    if\
    \ a^2 == b^2 + c^2 || b^2 == a^2 + c^2 || c^2 == a^2 + b^2\n        return true\n\
    \    else\n        return false\n    end\nend", "    a >= b && a >= c && a^2 ==\
    \ b^2 + c^2 ||\n    b >= a && b >= c && b^2 == a^2 + c^2 ||\n    c >= a && c >=\
    \ b && c^2 == a^2 + b^2\nend", "    # Check if a is the right angle\n    if a^2\
    \ == b^2 + c^2\n        return true\n    end\n    # Check if b is the right angle\n\
    \    if b^2 == a^2 + c^2\n        return true\n    end\n    # Check if c is the\
    \ right angle\n    if c^2 == a^2 + b^2\n        return true\n    end\n    # otherwise\
    \ it is not a right-angled triangle\n    return false\nend", "    return (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    if a >\
    \ b && a > c\n        a^2 == b^2 + c^2\n    elseif b > a && b > c\n        b^2\
    \ == a^2 + c^2\n    else\n        c^2 == a^2 + b^2\n    end\nend", "    if (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n\
    \    else\n        return false\n    end\nend", "    # Use Pythagorean theorem\
    \ to check if a^2 + b^2 = c^2\n    # a^2 + b^2 = c^2\n    # (a^2 + b^2)^0.5 =\
    \ c\n    # a^2 + b^2 - c^2 = 0\n    # a^2 + b^2 - c^2 >= 0\n    # Discriminant\n\
    \    \u0394 = (a^2 + b^2 - c^2) >= 0\n    # Use Pythagorean theorem to check if\
    \ a^2 + b^2 = c^2\n    # (a^2 + b^2)^0.5 = c\n    # Use Pythagorean theorem to\
    \ check if a^2 + c^2 = b^2\n    # (a^2 + c^2)^0.5 = b\n    # Use Pythagorean theorem\
    \ to check if b^2 + c^2 = a^2\n    # (b^2 + c^2)^0.5 = a\n    # Check if a, b,\
    \ c are positive\n    return (a>0) & (b>0) & (c>0) & (((a^2 + b^2)^0.5 == c) |\
    \ ((a^2 + c^2)^0.5 == b) | ((b^2 + c^2)^0.5 == a)) & \u0394\nend", "    hypot(a,\
    \ b) == c || hypot(a, c) == b || hypot(b, c) == a\nend", "    return (a^2 + b^2\
    \ == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend", "    if a < b\n \
    \       a, b = b, a\n    end\n    if a < c\n        a, c = c, a\n    end\n   \
    \ if b < c\n        b, c = c, b\n    end\n    return (a^2) == (b^2 + c^2)\nend",
  "    if (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (a^2 + c^2 == b^2)\n       \
    \ return true\n    else\n        return false\n    end\nend", "    a2 = a*a\n\
    \    b2 = b*b\n    c2 = c*c\n    if ((a2 + b2 == c2) || (a2 + c2 == b2) || (b2\
    \ + c2 == a2))\n        return true\n    else\n        return false\n    end\n\
    end\n\"\"\"\n    Given an array of integers A. Return an array B where B[i] =\
    \ A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1].\n    Example:\n    >>> left_right_products([1,\
    \ 2, 3, 4, 5])\n    [120, 60, 40, 30, 24]\n    \"\"\"", "    # return true if\
    \ a triangle with edges of length a, b, c forms a right-angled triangle, false\
    \ otherwise. \n    return a^2 + b^2 == c^2\nend", "    return (a^2 + b^2 == c^2)\
    \ || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend", "    const max_value = maximum([a,\
    \ b, c])\n    const others = [v for v in [a, b, c] if v != max_value]\n    return\
    \ others[1]^2 + others[2]^2 == max_value^2\nend", "    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n    sides form a\
    \ right-angled triangle, false otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    true\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    false\n    \"\"\"\n    # YOUR CODE HERE\n    \n    \n    if (a*a)+(b*b)==(c*c)\
    \ || (a*a)+(c*c)==(b*b) || (b*b)+(c*c)==(a*a)\n        return true\n    else\n\
    \        return false\n    end\nend", "    return (a^2 + b^2 == c^2) || (a^2 +\
    \ c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    if (a^2 + b^2 == c^2) || (a^2\
    \ + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n    else\n       \
    \ return false\n    end\nend", "    if ((a+b)>c && (a+c)>b && (b+c)>a)\n     \
    \   return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (a^2 + c^2 == b^2)\n  \
    \  else\n        return false\n    end\nend", "    if a < b && a < c\n       \
    \ return a*a + b*b == c*c\n    elseif b < a && b < c\n        return a*a + b*b\
    \ == c*c\n    elseif c < a && c < b\n        return a*a + b*b == c*c\n    else\n\
    \        return false\n    end\nend", "    m = maximum([a, b, c])\n    others\
    \ = [a, b, c]\n    deleteat!(others, findall(x->x==m, others)[1])\n    return\
    \ m == sqrt(sum(x^2 for x in others))\nend", "    if (a + b > c) & (a + c > b)\
    \ & (b + c > a)\n        if ((a^2 + b^2 == c^2) | (a^2 + c^2 == b^2) | (b^2 +\
    \ c^2 == a^2))\n            return true\n        else \n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "    if a > b &&\
    \ a > c\n        hypotenuse = a\n        side_a = b\n        side_b = c\n    elseif\
    \ b > a && b > c\n        hypotenuse = b\n        side_a = a\n        side_b =\
    \ c\n    else\n        hypotenuse = c\n        side_a = a\n        side_b = b\n\
    \    end\n    return hypotenuse == sqrt(side_a^2 + side_b^2)\nend", "    if a\
    \ == 0 || b == 0 || c == 0 return false end\n    if a == b && b == c return false\
    \ end\n    if a > b && a > c\n        if a > b+c return false end\n        return\
    \ right_angle_triangle(b, c, a)\n    elseif b > a && b > c\n        if b > a+c\
    \ return false end\n        return right_angle_triangle(a, c, b)\n    else\n \
    \       if c > a+b return false end\n        return right_angle_triangle(a, b,\
    \ c)\n    end\nend", "    aa = a*a\n    bb = b*b\n    cc = c*c\n    if (aa+bb\
    \ == cc) || (aa+cc == bb) || (bb+cc == aa)\n        return true\n    else\n  \
    \      return false\n    end\nend", "    square_a = a^2\n    square_b = b^2\n\
    \    square_c = c^2\n    if square_a + square_b == square_c\n        return true\n\
    \    elseif square_a + square_c == square_b\n        return true\n    elseif square_b\
    \ + square_c == square_a\n        return true\n    else\n        return false\n\
    \    end\nend", "    if  a < b \n        if a < c\n            if b * b + c *\
    \ c == a * a\n                return true\n            end\n        else\n   \
    \         if b * b + a * a == c * c\n                return true\n           \
    \ end\n        end\n    else\n        if b < c\n            if a * a + c * c ==\
    \ b * b\n                return true\n            end\n        else\n        \
    \    if a * a + b * b == c * c\n                return true\n            end\n\
    \        end\n    end\n    return false\nend", "    if (a*a == b*b + c*c) || (b*b\
    \ == a*a + c*c) || (c*c == a*a + b*b)\n        return true\n    else\n       \
    \ return false\n    end\nend", "    a < b  && b < c && (a^2 + b^2 == c^2)\nend",
  "    sorted_tuple = sort([a, b, c])\n    return sorted_tuple[1]^2 + sorted_tuple[2]^2\
    \ == sorted_tuple[3]^2\nend", "    a2 = a*a\n    b2 = b*b\n    c2 = c*c\n    return\
    \ (b2+c2 == a2) || (a2+c2 == b2) || (a2+b2 == c2)\nend", "    # Write your code\
    \ here\n    if (a>b && a>c)\n        return (a*a==b*b+c*c)\n    elseif (b>a &&\
    \ b>c)\n        return (b*b==a*a+c*c)\n    else\n        return (c*c==a*a+b*b)\n\
    \    end\nend", "    return (c^2 == a^2 + b^2) || (a^2 == b^2 + c^2) || (b^2 ==\
    \ a^2 + c^2)\nend", "    return  a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 +\
    \ c^2 == a^2\nend", "    return false\nend", "    if a^2 + b^2 == c^2\n      \
    \  true\n    else\n        false\n    end\nend", "    # YOUR CODE HERE\nend",
  "    if a^2 + b^2 == c^2 \n        return true\n    elseif a^2 + c^2 == b^2\n  \
    \      return true\n    elseif b^2 + c^2 == a^2\n        return true\n    else\n\
    \        return false\n    end\nend", "    return a^2 + b^2 == c^2 || a^2 + c^2\
    \ == b^2 || b^2 + c^2 == a^2\nend", "    if a > b && a > c\n        hypotenuse\
    \ = a\n        side_one = b\n        side_two = c\n    elseif b > a && b > c\n\
    \        hypotenuse = b\n        side_one = a\n        side_two = c\n    elseif\
    \ c > a && c > b\n        hypotenuse = c\n        side_one = a\n        side_two\
    \ = b\n    end\n    hypotenuse^2 == side_one^2 + side_two^2\nend", "    return\
    \ a^2 + b^2 == c^2\nend", "    if (a == b == c) return false end\n   \n    # sort\
    \ the sides\n    sorted_sides = sort([a, b, c])\n    # check the side relation\n\
    \    if (sorted_sides[1]^2 + sorted_sides[2]^2 == sorted_sides[3]^2) return true\
    \ end\n    return false\nend", "    hypotenuse = [a, b, c]\n    hypotenuse = sort(hypotenuse)\n\
    \    a, b, c = hypotenuse[1], hypotenuse[2], hypotenuse[3]\n    if(a^2 + b^2 ==\
    \ c^2)\n        return true\n    else\n        return false\n    end\nend", " \
    \   c = maximum([a, b, c])\n    return a^2 + b^2 == c^2\nend", "    \"\"\"\"\n\
    \    a, b, c: length of each side\n    \"\"\"\n    if (a^2 + b^2 == c^2) || (a^2\
    \ + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n    else\n       \
    \ return false\n    end\nend", "    return a^2 + b^2 == c^2\nend", "    return\
    \ a > 0 && b > 0 && c > 0 && a^2 + b^2 == c^2\nend", "    if a*a + b*b == c*c\
    \ || b*b + c*c == a*a || c*c + a*a == b*b\n        return true\n    else\n   \
    \     return false\n    end\nend\n \nif right_angle_triangle(3, 4, 5) == true\n\
    \    println(\"It is a right angle triangle.\")\nelse\n    println(\"It is not\
    \ a right angle triangle.\")\nend", "    if a > 0 && b > 0 && c > 0\n        if\
    \ a * a + b * b == c * c || a * a + c * c == b * b || b * b + c * c == a * a\n\
    \            return true\n        end\n    end\n    return false\nend", "    return\
    \ (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    a2\
    \ = a^2; b2 = b^2; c2 = c^2\n    if (a2 + b2 == c2) || (a2 + c2 == b2) || (b2\
    \ + c2 == a2)\n        return true\n    else\n        return false\n    end\n\
    end", "    if (a>b) & (a>c)\n        return (a^2 == b^2 + c^2)\n    elseif (b>a)\
    \ & (b>c)\n        return (b^2 == a^2 + c^2)\n    elseif (c>a) & (c>b)\n     \
    \   return (c^2 == a^2 + b^2)\n    else\n        return false\n    end\nend",
  "    side_lengths = [a, b, c]\n    side_lengths = sort(side_lengths)\n    return\
    \ (side_lengths[1]^2 + side_lengths[2]^2) == side_lengths[3]^2\nend", "    if\
    \  a > b && a > c \n        return  a^2 == b^2 + c^2\n    elseif b > a && b >\
    \ c\n        return b^2 == a^2 + c^2\n    else\n        return c^2 == a^2 + b^2\n\
    \    end\nend", "    if a &gt; 0 &amp;&amp; b &gt; 0 &amp;&amp; c &gt; 0\n   \
    \     x = [a, b, c]\n        x = sort(x)\n        if x[1]^2 + x[2]^2 == x[3]^2\n\
    \            return true\n        else \n            return false\n        end\n\
    \    else\n        return false\n    end\nend", "    if ((a^2+b^2 == c^2) || (a^2+c^2\
    \ == b^2) || (b^2+c^2 == a^2))\n        return true\n    else\n        return\
    \ false\n    end\nend", "    \"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return true if the three\n    sides form a right-angled triangle,\
    \ false otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    >>> right_angle_triangle(3,\
    \ 4, 5)\n    true\n    >>> right_angle_triangle(1, 2, 3)\n    false\n    \"\"\"\
    \n    return a*a + b*b == c*c\nend", "    aa = a*a\n    bb = b*b\n    cc = c*c\n\
    \    (aa + bb == cc) || (aa + cc == bb) || (bb + cc == aa)\nend", "    if a ==\
    \ sqrt(b^2 + c^2) || b == sqrt(a^2 + c^2) || c == sqrt(a^2 + b^2)\n        return\
    \ true\n    else\n        return false\n    end\nend", "    hypotenuse = max(a,\
    \ b, c)\n    return hypotenuse ^ 2 == a ^ 2 + b ^ 2 + c ^ 2 - hypotenuse ^ 2\n\
    end", "    a = a > b ? a : b\n    b = a < b ? a : b\n    c = a < c ? a : c\n \
    \   a = a > c ? a : c\n    return a^2 == b^2 + c^2\nend", "    if a^2 + b^2 ==\
    \ c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\n        return true\n    else\n\
    \        return false\n    end\nend", "    hyp = maximum([a, b, c])\n    others\
    \ = [a, b, c]\n    others.remove(hyp)\n    return (hyp^2 == others[1]^2 + others[2]^2)\n\
    end", "    if a > 0 && b > 0 && c > 0\n        a2 = a*a\n        b2 = b*b\n  \
    \      c2 = c*c\n        if c2 == a2 + b2 || a2 == b2 + c2 || b2 == a2 + c2\n\
    \            return true\n        end\n    end\n    return false\nend", "    a*a\
    \ + b*b == c*c\nend", "    c > 0 && c^2 == a^2 + b^2\nend", "    a_sq = a^2\n\
    \    b_sq = b^2\n    c_sq = c^2\n    if (a_sq + b_sq == c_sq) || (a_sq + c_sq\
    \ == b_sq) || (b_sq + c_sq == a_sq)\n        return true\n    else\n        return\
    \ false\n    end\nend", "    \n    # Sort the three lengths in increasing order\n\
    \    if a > b\n        a, b = b, a\n    end\n    if b > c\n        b, c = c, b\n\
    \    end\n    if a > b\n        a, b = b, a\n    end\n    # Create a right-angled\
    \ triangle\n    if a^2 + b^2 == c^2\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # your code here\nend\n ", "    a, b, c = sort([a,\
    \ b, c])\n    return a*a + b*b == c*c\nend", "    hypotenuse = max(a, b, c)\n\
    \    if hypotenuse == a\n        return a ^ 2 == b ^ 2 + c ^ 2\n    elseif hypotenuse\
    \ == b\n        return b ^ 2 == a ^ 2 + c ^ 2\n    else\n        return c ^ 2\
    \ == a ^ 2 + b ^ 2\n    end\nend", "    return false\nend", "    if  a^2 + b^2\
    \ == c^2 \n        return true\n    elseif a^2 + c^2 == b^2\n        return true\n\
    \    elseif b^2 + c^2 == a^2\n        return true\n    else\n        return false\n\
    \    end\nend\nprintln(right_angle_triangle(3, 4, 5))\nprintln(right_angle_triangle(1,\
    \ 2, 3))", "    if ((a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 ==\
    \ a^2))\n        return true\n    else\n        return false\n    end\nend", " \
    \   \"\"\"\n    Tests if a triangle is right angled triangle\n    \"\"\"\n   \
    \ if (a > b) && (a > c)\n        sqrta = a^2\n        sqrtb = b^2\n        sqrtc\
    \ = c^2\n        if (sqrta == sqrtb + sqrtc)\n            return true\n      \
    \  else\n            return false\n        end\n    elseif (b > a) && (b > c)\n\
    \        sqrta = a^2\n        sqrtb = b^2\n        sqrtc = c^2\n        if (sqrtb\
    \ == sqrta + sqrtc)\n            return true\n        else\n            return\
    \ false\n        end\n    elseif (c > a) && (c > b)\n        sqrta = a^2\n   \
    \     sqrtb = b^2\n        sqrtc = c^2\n        if (sqrtc == sqrta + sqrtb)\n\
    \            return true\n        else\n            return false\n        end\n\
    \    else\n        return false\n    end\nend", "    return a^2 + b^2 == c^2\n\
    end", "    \"\"\"\n    Return true if the three sides form a right-angled triangle,\
    \ false otherwise.\n    \"\"\"\n    return b^2 + c^2 == a^2 || a^2 + c^2 == b^2\
    \ || a^2 + b^2 == c^2\nend", "    if a + b <= c || a + c <= b || b + c <= a ||\
    \ a == 0 || b == 0 || c == 0\n        return false\n    elseif (a^2 + b^2 == c^2)\
    \ || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n    else\n\
    \        return false\n    end\nend", "    a_bigger_b = a >= b\n    b_bigger_c\
    \ = b >= c\n    c_bigger_a = c >= a\n    if (a_bigger_b && a_bigger_c) || (b_bigger_a\
    \ && b_bigger_c) || (c_bigger_a && c_bigger_b)\n        if a_bigger_b && a_bigger_c\n\
    \            if (a^2) == (b^2 + c^2)\n                return true\n          \
    \  else\n                return false\n            end\n        elseif b_bigger_a\
    \ && b_bigger_c\n            if (b^2) == (a^2 + c^2)\n                return true\n\
    \            else\n                return false\n            end\n        elseif\
    \ c_bigger_a && c_bigger_b\n            if (c^2) == (a^2 + b^2)\n            \
    \    return true\n            else\n                return false\n           \
    \ end\n        end\n    else\n        return false\n    end\nend", "    return\
    \ a^2 + b^2 == c^2\nend", "    a_sqr = a^2\n    b_sqr = b^2\n    c_sqr = c^2\n\
    \    if (a_sqr == b_sqr + c_sqr) || (b_sqr == a_sqr + c_sqr) || (c_sqr == a_sqr\
    \ + b_sqr)\n        return true\n    else\n        return false\n    end\nend",
  "    sq_a = a * a\n    sq_b = b * b\n    sq_c = c * c\n    right_angled = sq_a +\
    \ sq_b == sq_c || sq_a + sq_c == sq_b || sq_b + sq_c == sq_a\n    return right_angled\n\
    end", "    hypo = sqrt(a^2 + b^2)\n    if c == hypo\n        return true\n   \
    \ else \n        return false\n    end\nend", "    # your code here!\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

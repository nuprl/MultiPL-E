name: HumanEval_102_choose_num
language: jl
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\
  \"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    if x < y && x%2 == 0\n        return x\n    elseif x < y && x%2\
    \ != 0\n        return choose_num(x+1, y)\n    elseif x > y && y%2 == 0\n    \
    \    return y\n    elseif x > y && y%2 != 0\n        return choose_num(x, y-1)\n\
    \    elseif x == y && x%2 == 0\n        return x\n    else\n        return -1\n\
    \    end\nend", "    if x > y\n        return -1\n    end\n    if y % 2 == 0\n\
    \        return y\n    else\n        return choose_num(x, y-1)\n    end\nend",
  "    for number in x:y\n        if number % 2 == 0\n            return number\n\
    \        end\n    end\n    return -1\nend\n \n\"\"\"This function returns the\
    \ number of substrings in the string s.", "    if x > y\n        return -1\n \
    \   end\n    if (y - x) % 2 == 0 \n        return y - 1\n    else\n        return\
    \ y - 2\n    end\nend", "    # Because we want to return -1 if no even number\
    \ is found, we set a\n    # flag_found to False.\n    flag_found = false\n   \
    \ # This is the variable that we will return. We set it to a negative\n    # number\
    \ to make sure we're not returning any garbage when we \n    # return it.\n  \
    \  max_even = -1\n    # We need to run a loop over the interval [x, y]. We can\
    \ just use the\n    # range function to do this for us.\n    for i in range(x,\
    \ y+1)\n        # Here we can check to see if i is even, and if it is, then we\
    \ can\n        # update the variable max_even to have the bigger value\n     \
    \   if iseven(i) == true\n            max_even = max(max_even, i)\n          \
    \  # We also need to update the flag_found variable to True so\n            #\
    \ that we don't return -1\n            flag_found = true\n        end\n    end\n\
    \    # Now, if flag_found is still false, then we never found an even\n    # number\
    \ in the range, so we want to return -1.\n    if flag_found == false\n       \
    \ return -1\n    end\n    # Otherwise, we want to return max_even.\n    return\
    \ max_even\nend", "    if x%2 == 0\n        if y%2 == 0\n            return y\n\
    \        else\n            return x\n        end\n    else\n        if y%2 ==\
    \ 0\n            return y\n        else\n            return -1\n        end\n\
    \    end\nend", "    x::Int64 = 50\n    y::Int64 = 56\n    if x%2==0\n       \
    \ return(x)\n    elseif y%2==0\n        return(y)\n    else\n        return(-1)\n\
    \    end\nend", "    if x>y\n        return -1\n    end\n    \n    i = y\n   \
    \ while i >= x\n        if i % 2 == 0\n            return i\n        end\n   \
    \     i -= 1\n    end\n    \n    return -1\nend", "    for i in range(y, x, -1)\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x > y\n        return -1\n    end\n    for num in x:y\n  \
    \      if num % 2 == 0\n            return num\n        end\n    end\n    return\
    \ -1\nend\nchoose_num(12, 15)", "    return -1\nend", "    for j in x:y\n    \
    \    if iseven(j)\n            return j\n        end\n    end\n    return -1\n\
    end", "    if x<y\n        for i in x:y\n            if i%2==0\n             \
    \   return i\n            end\n        end\n    elseif x>y\n        for i in y:x\n\
    \            if i%2==0\n                return i\n            end\n        end\n\
    \    elseif x==y\n        if x%2==0\n            return x\n        else\n    \
    \        return -1\n        end\n    end\n    return -1\nend", "    if x > y\n\
    \        return -1\n    end\n    # Get the maximum of x and y.\n    max_val =\
    \ max(x, y)\n    # Get the minimum of x and y.\n    min_val = min(x, y)\n    #\
    \ If the maximum is even, return it.\n    if max_val % 2 == 0\n        return\
    \ max_val\n    end\n    # Otherwise, subtract 1 from the maximum to get the previous\
    \ even number.\n    if max_val - 1 % 2 == 0\n        return max_val - 1\n    end\n\
    \    # Get the largest even number between x and y.\n    even_val = min_val -\
    \ min_val % 2\n    # If the largest even number is in the range [x, y], return\
    \ it.\n    if even_val <= max_val\n        return even_val\n    end\n    # Otherwise,\
    \ the largest even number isn't in the range [x, y], so\n    # return -1.\n  \
    \  return -1\nend", "    if x > y return -1\n    elif x%2 != 0 && y%2 != 0 return\
    \ -1\n    elif x%2 == 0 && y%2 == 0\n        for i in x:y \n            if i%2\
    \ == 0 return i\n    elseif x%2 != 0 && y%2 == 0\n        return (y-1)\n    end\n\
    end\n@show choose_num(12, 15)\n@show choose_num(13, 12)", "    if x > y\n    \
    \    return -1\n    end\n    if x % 2 == 0\n        return x\n    else\n     \
    \   return x + 1\n    end\nend", "    if x%2==0\n        return x\n    else\n\
    \        return x+1\n    end\nend", "    if y < x\n        return -1\n    end",
  "    x > y && return -1\n    evens = [i for i in x:y if iseven(i)]\n    if !isempty(evens)\n\
    \        return maximum(evens)\n    else\n        return -1\n    end\nend\n \n\
    #Test Cases\n@test choose_num(12, 15) == 14\n@test choose_num(13, 12) == -1\n\
    @test choose_num(5, 10) == 10\n@test choose_num(0, 4) == 4\n@test choose_num(8,\
    \ 8) == 8", "    if x > y\n        return -1\n    end\n    if x % 2 == 0\n   \
    \     return x\n    else\n        return x + 1\n    end\nend", "    if x > y \n\
    \        return -1\n    end\n    if x%2 == 0 \n        return x\n    end\n   \
    \ return x+1\nend", "    evens = [i for i = x:y if i % 2 == 0]\n    if length(evens)\
    \ > 0\n        return maximum(evens)\n    else\n        return -1\n    end\nend",
  "    if x%2 != 0\n        if y%2 != 0\n            return -1\n        else\n   \
    \         return y\n        end\n    else\n        return x\n    end\nend", " \
    \   num_list = []\n    if x <= y \n        while x <= y\n            iseven(x)\
    \ ? push!(num_list, x) : 0 \n            x += 1\n        end\n    else \n    \
    \    return -1\n    end\n    return num_list[end]\nend", "    if (x%2 != 0 &&\
    \ y%2 != 0) || (x%2 == 0 && y%2 == 0)\n        return (y-x)/2 + x\n    else\n\
    \        return -1\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)", "    if x > y\n        return -1\n    end\n    return\
    \ max(filter(iseven, x:y))\nend", "    num = x\n    while num <= y\n        if\
    \ num % 2 == 0\n            return num\n        end\n        num += 1\n    end\n\
    \    return -1\nend", "    for i in x:y\n        if (i % 2 == 0)\n           \
    \ return i\n        end\n    end\n    return -1\nend", "    \n    # if x is greater\
    \ than y, return -1\n    if x > y\n        return -1\n    end", "    # check if\
    \ x is between 1 and y, if x is bigger than y return -1\n    if 1 <= x <= y\n\
    \        for i in x:y\n            if (i % 2) == 0\n                return i\n\
    \            end\n        end\n    end\n    return -1\nend", "    if x > y\n \
    \       return -1\n    end\n    return choose_num_helper(x, y)\nend", "    if\
    \ x > y return -1 end\n    if x % 2 == 0 return x end\n    return x + 1\nend\n\
    \ \n \n \n\"\"\"This function takes two numbers a and b, and returns the maximum\
    \ number.", "    for z in range(x, y+1):\n        if z % 2 == 0:\n           \
    \ even_num = z\n    try:\n        return even_num\n    except:\n        return\
    \ -1\nend", "    ret = -1\n    for i in x:y\n        if i % 2 == 0\n         \
    \   ret = i\n        end\n    end\n    return ret\nend", "    \n    # check that\
    \ x and y are integers: \n    if typeof(x) != Int64 || typeof(y) != Int64\n  \
    \      println(\"Error: choose_num() takes two integers x and y\")\n        return\
    \ -1\n    end\n    \n    # check that x and y are positive:\n    if x <= 0 ||\
    \ y <= 0\n        println(\"Error: choose_num() takes two positive integers x\
    \ and y\")\n        return -1\n    end\n    \n    # check that x <= y:\n    if\
    \ x > y\n        println(\"Error: choose_num() takes x and y with x <= y\")\n\
    \        return -1\n    end\n    \n    # check that the biggest even integer in\
    \ the range exists:\n    if (y-x)%2 == 0\n        println(\"Error: choose_num()\
    \ takes x and y with a biggest even integer between them\")\n        return -1\n\
    \    end\n    \n    # compute the biggest even integer number in the range [x,\
    \ y] inclusive:\n    if x%2 == 0\n        return x+(y-x-1)\n    else\n       \
    \ return x+(y-x)\n    end\nend", "    # YOUR CODE HERE\nend", "    x>y && return\
    \ -1 \n    i = y\n    while (i >= x) \n        i % 2 == 0 && return i\n      \
    \  i-=1\n    end\n    return -1\nend", "    for i in x:y\n        if rem(i, 2)\
    \ == 0\n            return i\n        end\n    end\n    return -1\nend", "   \
    \ x:Int64\n    y:Int64\n    if x == y\n        return x\n    end\n    if x > y\n\
    \        return -1\n    end\n    for i in x:y\n        if i % 2 == 0\n       \
    \     return i\n        end\n    end\n    return -1\nend", "    num::Int64 = -1\n\
    \    for i in x:y\n        if (i % 2 == 0)\n            num = i\n        end\n\
    \    end\n    return num\nend", "    if x > y\n        return -1\n    end\n  \
    \  for i in x:y\n        if i % 2 == 0\n            return i\n        end\n  \
    \  end\n    return -1\nend", "    if x % 2 == 0 && y % 2 == 0\n        return\
    \ max(x, y)\n    elseif x % 2 == 1 && y % 2 == 1\n        return -1\n    elseif\
    \ x % 2 == 0 && y % 2 == 1\n        return x\n    else\n        return y\n   \
    \ end\nend", "    if x > y\n        return -1\n    end\n    if x % 2 == 0\n  \
    \      return x\n    else\n        return x + 1\n    end\nend", "    evens = filter(x\
    \ -> x % 2 == 0, collect(x:y))\n    if length(evens) == 0\n        return -1\n\
    \    else\n        return evens[end]\n    end\nend", "    if x < y\n        if\
    \ y % 2 == 0\n            return y\n        else \n            return y - 1\n\
    \        end\n    elseif x > y\n        if x % 2 == 0\n            return x\n\
    \        else \n            return x - 1\n        end\n    else\n        if x\
    \ % 2 == 0\n            return x\n        else\n            return -1\n      \
    \  end\n    end\nend", "    if x > y\n        return -1\n    end\n    if y % 2\
    \ == 0\n        return y\n    else\n        return y - 1\n    end\nend", "   \
    \ while x <= y\n        if x % 2 == 0\n            return x\n        end\n   \
    \     x += 1\n    end\n    return -1\nend", "    # we are going to check if x\
    \ and y are positive numbers, if one of them\n    # is negative we return -1.\n\
    \    if x < 0 || y < 0 \n        return -1\n    end\n    # we are going to use\
    \ the modulo operator to check if the number is even\n    #if it is then we return\
    \ it.\n    if mod(x, 2) == 0 \n        return x\n    elseif mod(y, 2) == 0\n \
    \       return y\n    end\n    #if the numbers are not even we return -1\n   \
    \ return -1\nend", "    if x < 0 || y < 0\n        println(\"x and y must be positive\
    \ numbers\")\n        return -1\n    end\n    even_list = []\n    for i in x:y\n\
    \        if iseven(i)\n            push!(even_list, i)\n        end\n    end\n\
    \    if isempty(even_list)\n        return -1\n    else\n        return maximum(even_list)\n\
    \    end\nend", "    if x%2 == 0\n        if x > y\n            return -1\n  \
    \      else\n            return x\n        end\n    else\n        if x+1 > y\n\
    \            return -1\n        else\n            return x+1\n        end\n  \
    \  end\nend\nchoose_num(12, 15)", "    if x % 2 == 0 && y % 2 == 0\n        return\
    \ max(x, y)\n    elseif x % 2 == 1 && y % 2 == 1\n        return -1\n    elseif\
    \ x % 2 == 0 && y % 2 == 1\n        return x\n    else\n        return y\n   \
    \ end\nend", "    for i in x:y\n        if i % 2 == 0\n            println(i)\n\
    \            break\n        else\n            println(-1)\n            break\n\
    \        end\n    end\nend", "    if x % 2 == 0\n        for i in range(x, y+1,\
    \ 2)\n            if i % 2 == 0\n                return i\n            end\n \
    \       end\n    else\n        for i in range(x+1, y+1, 2)\n            if i %\
    \ 2 == 0\n                return i\n            end\n        end\n    end\n  \
    \  return -1\nend", "    y = max(x, y)\n    if y%2 == 0\n        return y\n  \
    \  else\n        x = y-1\n        if x%2 == 0\n            return x\n        else\n\
    \            return -1\n        end\n    end\nend", "    if x > y\n        return\
    \ -1\n    end\n    if x%2 == 0\n        return max(x, choose_num(x+1, y))\n  \
    \  else\n        return max(x+1, choose_num(x+2, y))\n    end\nend\n@assert choose_num(12,\
    \ 15) == 14\n@assert choose_num(13, 12) == -1\n@assert choose_num(10, 50) == 50\n\
    @assert choose_num(1000, 1001) == 1002\n@assert choose_num(4550, 87890) == 87890\n\
    @assert choose_num(5, 5) == 5\n ", "    return -1\nend", "    x > y && return\
    \ -1\n    for n in y:-1:x\n        n % 2 == 0 && return n\n    end\n    return\
    \ -1\nend", "    for i in y:-1:x\n        if rem(i, 2) == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if x <= y\n        return\
    \ (min(x:2:y))\n    else\n        return -1\n    end\nend", "    if x%2 == 0 &&\
    \ y%2 == 0 \n        x\n    elseif x%2 == 1 && y%2 == 1 \n        x + 1\n    else\
    \ \n        -1\n    end\nend", "    max = 0\n    if x > y\n        max = -1\n\
    \    elseif x == y\n        if x % 2 == 0\n            max = x\n        else\n\
    \            max = -1\n        end\n    elseif x % 2 == 0\n        max = x\n \
    \       for num in (x+1):y\n            if num % 2 == 0\n                max =\
    \ num\n            end\n        end\n    else\n        for num in (x+1):y\n  \
    \          if num % 2 == 0\n                max = num\n                break\n\
    \            end\n        end\n    end\n    return max\nend\n\"\"\"This function\
    \ takes two positive numbers x and y and returns the\n    lowest even integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.", "    # initialize the variable that will\
    \ store the biggest even number\n    num = -1\n    # iterate through the range\
    \ [x, y] inclusive\n    for num in x:y \n        # check if the number is even\n\
    \        if num % 2 == 0\n            # if num is even then update num to be the\
    \ biggest even number\n            num = num\n        end\n    end\n    # return\
    \ the biggest even number\n    return num\nend\nprintln(choose_num(12, 15))\n\
    println(choose_num(13, 12))", "    if x > y\n        return -1\n    end\n    i\
    \ = y\n    while i >= x\n        if i % 2 == 0\n            return i\n       \
    \ end\n        i -= 1\n    end\n    return -1\nend", "    \"\"\"\n    Finding\
    \ the biggest even number in range [x, y].\n    \"\"\"\n    for i in range(y,\
    \ x-1, -1)\n        if i % 2 == 0\n            return i\n    return -1", "   \
    \ if x > y\n        return -1\n    end\n    if x % 2 == 0\n        return x\n\
    \    else\n        return x + 1\n    end\nend", "    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend", "    if x > y\n        return -1\n\
    \    end\n    for i = y:-1:x\n        if iseven(i)\n            return i\n   \
    \     end\n    end\n    return -1\nend", "    if x > y\n        return -1\n  \
    \  end\n    if x%2 == 0\n        return x\n    else\n        return x+1\n    end\n\
    end", "    if x % 2 == 0\n        even_num = x\n    else\n        even_num = x\
    \ + 1\n    end\n    if even_num <= y\n        return even_num\n    else\n    \
    \    return -1\n    end\nend", "    if x > y \n        return -1\n    end\n  \
    \  if x % 2 == 0\n        if x + 2 <= y\n            return x\n        else\n\
    \            return x + 2\n        end\n    else \n        if x + 1 <= y\n   \
    \         return x + 1\n        else\n            return -1\n        end\n   \
    \ end\nend", "    if x <= y\n        for num in x:y\n            if num % 2 ==\
    \ 0\n                return num\n            end\n        end\n        return\
    \ -1\n    else\n        return -1\n    end\nend\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)", "    if x > y \n        println(\"-1\")\n    else\n        for i in x:y\n\
    \            if i % 2 == 0\n                println(i)\n                break\n\
    \            end\n        end\n    end\nend", "    my_list = [i for i in x:y if\
    \ mod(i, 2) == 0]\n    if isempty(my_list)\n        return -1\n    else\n    \
    \    return max(my_list)\n    end\nend\n    \n    \n ", "    if x % 2 == 0\n \
    \       if y > x\n            return y\n        else\n            return x\n \
    \       end\n    else\n        if y > x\n            return y - 1\n        else\n\
    \            return x + 1\n        end\n    end\nend", "    range = [i for i in\
    \ x:y]\n    range_even = []\n    for i in range\n        if i % 2 == 0\n     \
    \       push!(range_even, i)\n        end\n    end\n    if length(range_even)\
    \ == 0\n        return -1\n    else\n        return maximum(range_even)\n    end\n\
    end", "    if y < x\n        return -1\n    end\n    if y % 2 == 0\n        return\
    \ y\n    else\n        return y - 1\n    end\nend", "    if x > y\n        return\
    \ -1\n    end\n    n = x\n    while n % 2 != 0\n        n += 1\n    end\n    for\
    \ i in range(x+1, y)\n        if i % 2 == 0\n            if i > n\n          \
    \      n = i\n            end\n        end\n    end\n    return n\nend", "   \
    \ \n    even_nums = [i for i in collect(x:y) if i % 2 == 0]\n    \n    if isempty(even_nums)\n\
    \        return -1\n    else\n        return maximum(even_nums)\n    end\n   \
    \ \nend", "    if y < x\n        return -1\n    end\n    for i in range(x, y+1)\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x > y\n        return -1\n    end\n    if x%2 == 0\n     \
    \   return x\n    else\n        return x+1\n    end\nend", "    y_plus1 = y +\
    \ 1\n    if x % 2 == 0\n        return x\n    else \n        if x % 2 == 1\n \
    \           x += 1\n            return x\n        end\n    end\n    return -1\n\
    end", "    \"\"\"This function takes two positive numbers x and y and returns\
    \ the\n    biggest even integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x % 2 == 0 && y % 2 == 0\n        return max(x, y)\n    elseif x % 2 == 1\
    \ && y % 2 == 1\n        return -1\n    elseif x % 2 == 0 && y % 2 == 1\n    \
    \    return x\n    else\n        return y\n    end\nend", "    for i in y:-1:x\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if (x <= y) & (x % 2 == 0)\n        return x\n    elseif (x <=\
    \ y) & (x % 2 != 0)\n        return choose_num(x + 1, y)\n    else\n        return\
    \ -1\n    end\nend", "    if x%2 == 0\n        return x\n    elseif y%2 == 0\n\
    \        return y\n    else\n        return -1\n    end\nend", "    x1 = ifelse(x\
    \ % 2 == 0, x, x + 1)\n    y1 = ifelse(y % 2 == 0, y, y - 1)\n    if y1 < x1\n\
    \        return -1\n    else\n        return y1\n    end\nend", "    if (x > y)\
    \ \n        return -1\n    end\n    n = x\n    while n <= y\n        if (n % 2\
    \ == 0)\n            return n\n        end\n        n += 1\n    end\n    return\
    \ -1\nend", "    if x <= y\n        if x%2 == 0\n            return x\n      \
    \  else\n            return x+1\n        end\n    else\n        return -1\n  \
    \  end\nend", "    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\n    \n    ", "    x % 2 == 0 ? return\
    \ x : return x + 1\n    choose_num(x + 2, y)\nend", "    if x % 2 == 0\n     \
    \   return max(x, y)\n    else\n        return max(x-1, y)\n    end\nend", " \
    \   \"\"\"This function takes two positive numbers x and y and returns the\n \
    \   biggest even integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.", "    for num\
    \ in (x:y)\n        if num % 2 == 0\n            return num\n        end\n   \
    \ end\n    return -1\nend", "    for i = x:y\n        if i % 2 == 0\n        \
    \    return i\n        end\n    end\n    return -1\nend", "    return maximum([i\
    \ for i in x:y if iseven(i)])\nend\n \n \n\"\"\"This function takes a string s\
    \ and returns a string that has the characters\n    of s in the reverse order.",
  "    if x > y\n        return -1\n    end\n    for i = x:y\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    if\
    \ x > y\n        return -1\n    end\n    if y % 2 == 0\n        return y\n   \
    \ else\n        return y - 1\n    end\nend", "    # we assume that x and y are\
    \ positive numbers\n    # end: choose_num\nend\nchoose_num(12,15)", "    if (y\
    \ < x)\n        return -1\n    end\n    if (y == x)\n        if (x % 2 == 0)\n\
    \            return x\n        else\n            return -1\n        end\n    end\n\
    \    if (y % 2 == 0)\n        return y\n    else\n        return choose_num(x,\
    \ y-1)\n    end\nend", "    if x%2 == 0 && y%2 == 0\n        return max(x, y)\n\
    \    elseif x%2 == 1 && y%2 == 1\n        return -1\n    elseif x%2 == 0 && y%2\
    \ == 1\n        return x\n    else \n        return y\n    end\nend", "    return\
    \ maximum(filter(isodd, collect(x:y)))\nend", "    if x > y\n        return -1\n\
    \    end\n    if (y - x) % 2 == 0\n        return y\n    else\n        return\
    \ y - 1\n    end\nend", "    if x > y\n        return -1\n    end\n    x = x +\
    \ mod(x, 2)\n    while x <= y\n        return x\n        x = x + 2\n    end\n\
    \    return -1\nend", "    if x > y\n        return -1\n    end\n    if x % 2\
    \ == 0\n        return x\n    else\n        return x + 1\n    end\nend\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)", "    # take the max of the range using the max function,\
    \ if even return it, else return -1\n    z = max(range(x,y+1))\n    if z % 2 ==\
    \ 0\n        return z\n    else\n        return -1\n    end\nend", "    for i\
    \ in x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend", "    if x > y \n        println(\"-1\")\n    elseif x <\
    \ y\n        if x % 2 == 0\n            println(x)\n        else\n           \
    \ println(x + 1)\n        end\n    else\n        if x % 2 == 0\n            println(x)\n\
    \        else\n            println(\"-1\")\n        end\n    end\nend", "    x\
    \ = if x % 2 == 0 ? x : x + 1\n    y = if y % 2 == 0 ? y : y - 1\n    return -1\
    \ if x > y else y\nend", "    if x % 2 == 0 \n        if x > y\n            return\
    \ -1\n        else\n            return x\n        end\n    else\n        if (x\
    \ + 1) > y\n            return -1\n        else\n            return x + 1\n  \
    \      end\n    end\nend", "    bigeven = 0\n    if x > y\n        return -1\n\
    \    end\n    for i in x:y\n        if i % 2 == 0\n            bigeven = i\n \
    \       end\n    end\n    if bigeven > 0\n        return bigeven\n    else\n \
    \       return -1\n    end\nend", "    l = [] # list of even integers in range\
    \ [x, y]\n    for i in x:y\n        if (i % 2 == 0)\n            append!(l, i)\n\
    \        end\n    end\n    if isempty(l)\n        return -1\n    else\n      \
    \  return maximum(l)\n    end\nend", "    if x <= 0 || y <= 0\n        println(\"\
    Both numbers need to be positive!\")\n        return\n    end\n    for i in x:y\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend\nchoose_num(13, 20)", "    if mod(x, 2) == 0 && mod(y, 2) == 0\n   \
    \     if x > y\n            return x\n        else\n            return y\n   \
    \     end\n    elseif mod(x, 2) == 0 && mod(y, 2) != 0\n        return x\n   \
    \ elseif mod(x, 2) != 0 && mod(y, 2) == 0\n        return y\n    else\n      \
    \  return -1\n    end\nend\n        ", "    if x > y\n        return -1\n    end\n\
    \    if x % 2 == 0\n        return x\n    else\n        return x + 1\n    end\n\
    end", "    if x>y\n        return -1\n    end\n    if x%2==0\n        return x\n\
    \    end\n    return x+1\nend", "    even_num = 0\n    if x > y\n        return\
    \ -1\n    end", "    if x < 0 || y < 0\n        println(\"Please enter positive\
    \ numbers only\")\n        return -1\n    end\n    if x > y\n        println(\"\
    The first number must be less than the second\")\n        return -1\n    end\n\
    \    if x % 2 == 0\n        return x\n    else\n        if x+1 < y\n         \
    \   if (x+1) % 2 == 0\n                return x+1\n            else\n        \
    \        return x+2\n            end\n        else\n            return -1\n  \
    \      end\n    end\nend", "    if x > y\n        return -1\n    end\n    while\
    \ x < y\n        if x % 2 == 0\n            return x\n        end\n        x +=\
    \ 1\n    end\n    if y % 2 == 0\n        return y\n    end\n    return -1\nend",
  "    if x > y\n        return -1\n    end\n    for i = y:x\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    if\
    \ x > y\n        return -1\n    end\n    m = (x + y) // 2\n    if iseven(m)\n\
    \        return m\n    else\n        return choose_num(x, m - 1)\n    end\nend\n\
    choose_num(12, 15)\nchoose_num(13, 12)", "    if x > y\n        return -1\n  \
    \  end\n    if (x%2) == 0\n        return x\n    else\n        return choose_num(x+1,\
    \ y)\n    end\nend", "    for i in range(x, y+1)\n        if (i % 2 == 0)\n  \
    \          return i\n        end\n    end\n    return -1\nend", "    if x <= y\
    \ \n        if x % 2 == 0\n            return x\n        elseif y % 2 == 0\n \
    \           return y\n        else\n            return -1\n        end\n    else\n\
    \        return -1\n    end\nend", "    if x > y\n        return -1\n    end\n\
    \    if x % 2 == 0\n        return max(x, y)\n    else\n        return max(x +\
    \ 1, y)\n    end\nend", "    a = collect(x:y)\n    for i in a\n        if i %\
    \ 2 == 0\n            return i\n        end\n    end\n    return -1\nend", " \
    \   if x > y\n        return -1\n    end\n    if (x % 2 == 0)\n        return\
    \ max(x, y - 1)\n    else\n        return max(x + 1, y - 1)\n    end\nend", " \
    \   if x % 2 == 0 \n        return max(x, y)\n    elseif y % 2 == 0\n        return\
    \ y\n    else\n        return -1\n    end\nend\nchoose_num(12, 15)", "    if x\
    \ > y\n        return -1\n    end\n    # Get the even numbers between x and y\n\
    \    evens = Int64[]\n    for i = x:y\n        if i % 2 == 0\n            push!(evens,\
    \ i)\n        end\n    end\n    if length(evens) == 0\n        return -1\n   \
    \ end\n    return maximum(evens)\nend", "    if x % 2 == 0\n        return max(x,\
    \ y)\n    else\n        return max(x+1, y)\n    end\nend", "    if x % 2 == 0\n\
    \        if x > y\n            return -1\n        else\n            return x\n\
    \        end\n    else\n        if x+1 > y\n            return -1\n        else\n\
    \            return x+1\n        end\n    end\nend", "    for i in x:y\n     \
    \   if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    if x < y && x % 2 == 0 \n        return x\n    elseif x < y && x %\
    \ 2 != 0\n        x += 1\n        return choose_num(x, y)\n    elseif x > y\n\
    \        return -1\n    elseif x == y && x % 2 == 0\n        return x\n    elseif\
    \ x == y && x % 2 != 0\n        return -1\n    end\nend", "    \"\"\"Return the\
    \ biggest even integer in the range [x, y].\n    \"\"\"\n    nums = map(x -> Int64(x),\
    \ x:y)\n    evens = map(x -> (x % 2 == 0), nums)\n    index = last(findall(evens))\n\
    \    if isempty(index)\n        return -1\n    else\n        return nums[index]\n\
    \    end\nend", "    if x > y\n        return -1\n    end\n    return max(minimum(x:2:y),\
    \ -1)\nend", "    if x%2==0\n        x\n    elseif x+1<=y\n        x+1\n    else\n\
    \        -1\n    end\nend", "    if x > y\n        return -1\n    end\n    if\
    \ x % 2 == 0\n        return x\n    else \n        return x + 1\n    end\nend",
  "    if x<y\n        for i in x:y\n            if i%2==0\n                choose_num=i\n\
    \            end\n        end\n    else\n        for i in y:x\n            if\
    \ i%2==0\n                choose_num=i\n            end\n        end\n    end\n\
    \    \n    if choose_num!=0\n        println(choose_num)\n    else\n        println(-1)\n\
    \    end\nend", "    if x > y\n        return -1\n    end\n    if y % 2 == 0\n\
    \        return y\n    else\n        return choose_num(x, y-1)\n    end\nend",
  "    if x>y return -1 end\n    i = x\n    while i <= y\n        if i%2 == 0 return\
    \ i end\n        i += 1\n    end\n    return -1\nend\nprintln(choose_num(12,15))\n\
    println(choose_num(13,12))\nprintln(choose_num(1,1))\nprintln(choose_num(1,2))\n\
    println(choose_num(2,2))\nprintln(choose_num(2,3))", "    for i in x:y\n     \
    \   if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    if x>y\n        return -1\n    end\n    \n    if x%2==0\n        return\
    \ x\n    elseif y%2==0\n        return y\n    else \n        return -1\n    end\n\
    end", "    if y < x\n        return -1\n    end\n    num = -1\n    for i in x:y\n\
    \        if i % 2 == 0 && i > num\n            num = i\n        end\n    end\n\
    \    return num\nend", "    if x > y\n        return -1\n    end\n    if x % 2\
    \ == 0\n        return x\n    else\n        return x + 1\n    end\nend", "   \
    \ if x % 2 == 0 && y % 2 == 0\n        return max(x, y)\n    elseif x % 2 == 1\
    \ && y % 2 == 1\n        return -1\n    else\n        return max(x, y) - 1\n \
    \   end\nend", "    if x > y\n        return -1\n    end\n    return y - (y %\
    \ 2)\nend", "    if x > y\n        return -1\n    end\n    while x < y && x %\
    \ 2 != 0\n        x += 1\n    end\n    if x % 2 != 0\n        return -1\n    end\n\
    \    return x\nend", "    z = 0\n    for i in x:y\n        if i % 2 == 0\n   \
    \         z = i\n        end\n    end\n    if z == 0\n        return -1\n    else\n\
    \        return z\n    end\nend", "    nums = [x:(y+1)]\n    x%2 == 0 && return\
    \ x\n    y%2 == 0 && return y\n    for num in nums\n        num%2 == 0 && return\
    \ num\n    end\n    return -1\nend", "    if x % 2 == 0\n        if x < y\n  \
    \          return x\n        else\n            return -1\n        end\n    else\n\
    \        if (x+1) < y\n            return x+1\n        else\n            return\
    \ -1\n        end\n    end\nend\nchoose_num(12, 15)", "    for i in x:y\n    \
    \    if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    if x < y\n        if x%2 == 0\n            return x\n        else\n\
    \            return x+1\n        end\n    else\n        if y%2 == 0\n        \
    \    return y\n        else\n            return y+1\n        end\n    end\nend\n\
    \ ", "    # we must declare the function type\n    l = [] # empty list\n    for\
    \ i = x:y\n        if i % 2 == 0\n            push!(l, i)\n        end\n    end\n\
    \    if isempty(l) # if there's no such number\n        return -1\n    else\n\
    \        return maximum(l)\n    end\nend", "    for i in x:y\n        if i % 2\
    \ == 0\n            return i\n    end\n    return -1\nend", "    if (y-x)%2 ==\
    \ 0\n        x + (y-x)/2\n    elseif (y-x+1)%2 == 0\n        y - (y-x+1)/2\n \
    \   else\n        -1\n    end\nend", "    if x % 2 == 0\n        return x\n  \
    \  elseif x+1 <= y\n        return x+1\n    else\n        return -1\n    end\n\
    end", "    for i in y:-1:x\n        if i % 2 == 0\n            return i\n    \
    \    end\n    end\n    return -1\nend", "    # We can use the function `range`\
    \ to get all the numbers in [x, y]\n    # using `x:y` notation.\n    for num in\
    \ x:y\n        # If the remainder of dividing the number by 2 is 0, then we have\
    \ \n        # an even number, so we can return it.\n        if num % 2 == 0\n\
    \            return num\n        end\n    end\n    # If we didn't find any even\
    \ number, then we can return -1.\n    return -1\nend", "    if x == y && x % 2\
    \ == 0\n        return x\n    elseif x == y && x % 2 != 0\n        return -1\n\
    \    elseif x > y && y % 2 == 0\n        return y\n    elseif x > y && y % 2 !=\
    \ 0\n        return -1\n    elseif x % 2 == 0\n        return x\n    else\n  \
    \      return choose_num(x+1, y)\n    end\nend", "    r = [n for n in range(x,\
    \ y+1) if n % 2 == 0]\n    if length(r) == 0\n        return -1\n    else\n  \
    \      return r[end]\n    end\nend", "    \n    if x > y\n        return -1\n\
    \    end\n    \n    i = y\n    while i > x\n        if i % 2 == 0\n          \
    \  return i\n        end\n        i -= 1\n    end\n    return -1\nend", "    return\
    \ x \nend", "    if x > y\n        return -1\n    end\n    if x % 2 == 0\n   \
    \     return x\n    else \n        return x + 1\n    end\nend\nchoose_num(12,\
    \ 15)", "    if x > y\n        return -1\n    end\n    even(x) ? return x : return\
    \ choose_num(x+1, y)\nend", "    if x > y\n        return -1\n    end\n    for\
    \ i in x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend", "    if x % 2 == 0\n        return x\n    else\n       \
    \ return x + 1\n    end\nend", "    for number in x:y \n        if number % 2\
    \ == 0 \n            return number\n        end\n    end\n    return -1\nend\n\
    choose_num(12, 15)\nchoose_num(13, 12)", "    if x > y return -1 end\n    if x\
    \ % 2 == 0 return x end\n    return x + 1\nend", "    min_num = min(x, y)\n  \
    \  max_num = max(x, y)\n    for num in min_num:max_num\n        if num % 2 ==\
    \ 0\n            return num\n        end\n    end\n    return -1\nend", "    #\
    \ Fill in your code here\nend", "    for i in x:y\n        if i % 2 == 0\n   \
    \         return i\n        end\n    end\n    return -1\nend", "    if x > y \n\
    \        return -1\n    end\n    for i in y:-1:x\n        if mod(i, 2) == 0\n\
    \            return i\n        end\n    end\n    return -1\nend\n \n \n \n\"\"\
    \"This function takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    return is_even(x, y)\
    \ ? x : choose_num(x + 1, y)\nend", "    if x <= y\n        if x % 2 == 0\n  \
    \          return x\n        else\n            return x + 1\n        end\n   \
    \ else\n        return -1\n    end\nend", "    if x > y\n        return -1\n \
    \   end", "    if x % 2 == 0\n        if y % 2 == 0\n            return y\n  \
    \      else\n            return y - 1\n        end\n    else\n        if y % 2\
    \ == 0\n            return y - 2\n        else\n            return y - 3\n   \
    \     end\n    end\nend", "    if x > y\n        return -1\n    end\n    for i\
    \ in x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend\nprintln(choose_num(12, 15))\nprintln(choose_num(13, 12))",
  "    if x <= 0 || y <= 0\n        error(\"Input numbers must be positive\")\n  \
    \  end\n    for i in range(x, y+1)\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if x % 2 == 0\n        if\
    \ x == y\n            return x\n        elseif x + 1 == y\n            return\
    \ x\n        else\n            return choose_num(x, y - 1)\n        end\n    elseif\
    \ x % 2 == 1\n        if x + 1 == y\n            return -1\n        else\n   \
    \         return choose_num(x + 1, y)\n        end\n    end\nend", "    if x >\
    \ y \n        return -1\n    end\n    if x%2 == 0\n        return x\n    else\n\
    \        return x+1\n    end\nend", "    if x>y return -1 end\n    if y%2 != 0\
    \ && y != x return choose_num(x, y-1) end\n    return y\nend", "    for i in range(x,\
    \ y)\n        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    # make sure we have a positive number\n    if x < 0 || y < 0\n\
    \        return -1\n    end\n    # make sure x is less than y\n    if x > y\n\
    \        return -1\n    end\n    # make sure x is even\n    if x % 2 != 0\n  \
    \      x += 1\n    end\n    # return the biggest even number in the range x, y]\n\
    \    return y % 2 == 0 ? y : y - 1\nend", "    if (y-x) >= 0\n        for i in\
    \ x:y\n            if i%2 == 0\n                return i\n            end\n  \
    \      end\n    else\n        return -1\n    end\nend", "    if x > y\n      \
    \  return -1\n    end\n    if x % 2 == 0\n        return x\n    else\n       \
    \ return x + 1\n    end\nend", "    if x < y\n        nums = [i for i in x:y if\
    \ i % 2 == 0]\n        if nums != Int[]\n            return nums[end]\n      \
    \  else \n            return -1\n    else\n        return -1\n    end\nend", " \
    \   \"\"\"\n    This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n    \"\"\"\n\
    \    if x > y \n        return -1\n    end\n    for i = y:-1:x\n        if i %\
    \ 2 == 0\n            return i\n        end\n    end\n    return -1\nend", " \
    \   # write your code here\n    return 0\nend", "    if x > y\n        return\
    \ -1\n    end\n    return (2 * floor(Int64, (y - x + 1) / 2) + x)\nend", "   \
    \ if x%2 == 0 && y%2 == 0\n        return max(x, y)\n    else\n        return\
    \ max(x-1, y-1)\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n   \
    \         return i\n        end\n    end\n    return -1\nend", "    for i = x:y\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x > y\n        return -1\n    end\n    if x % 2 == 0\n   \
    \     return x\n    else\n        return x + 1\n    end\nend", "    if x < y\n\
    \        x\n    else\n        return -1\n    end\nend", "    if x > y\n      \
    \  return -1\n    end", "    if (x < y) && (y % 2 == 0)\n        return y\n  \
    \  elseif (x < y) && (y % 2 != 0)\n        return y - 1\n    elseif (x % 2 ==\
    \ 0) && (y % 2 == 0)\n        return max(x, y)\n    elseif (x % 2 != 0) && (y\
    \ % 2 != 0)\n        return max(x, y) - 1\n    elseif (x % 2 != 0) && (y % 2 ==\
    \ 0)\n        return y\n    else\n        return -1\n    end\nend", "    # Note:\
    \ the type declaration above is not necessary in Julia, but it \n    # is a good\
    \ programming practice to include it\n    for i in x:y\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    if x >\
    \ y\n        return -1\n    end", "    if x % 2 == 0\n        for i in x:y\n \
    \           if i % 2 == 0\n                return i\n            end\n       \
    \ end\n    elseif x % 2 != 0\n        for i in x+1:y\n            if i % 2 ==\
    \ 0\n                return i\n            end\n        end\n    end\n    return\
    \ -1\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

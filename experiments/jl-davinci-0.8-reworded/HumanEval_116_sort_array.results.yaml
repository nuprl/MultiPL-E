language: jl
name: HumanEval_116_sort_array
results:
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmhqbmeiw.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;
    base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},
    ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Int64)\n      @ Main /tmp/tmpmhqbmeiw.jl:15\n    [2] lt(o::Base.Order.By{var"#1#2",
    Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3]
    sort!\n      @ ./sort.jl:507 [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5]
    sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725
    [inlined]\n    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var"#1#2", Tuple{Symbol},
    NamedTuple{(:by,), Tuple{var"#1#2"}}})\n      @ Base.Sort ./sort.jl:772\n    [8]
    sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpmhqbmeiw.jl:15\n    [9] macro
    expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [10] macro expansion\n      @ /tmp/tmpmhqbmeiw.jl:22 [inlined]\n   [11]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [12] top-level scope\n      @ /tmp/tmpmhqbmeiw.jl:21\ntest set:
    Error During Test at /tmp/tmpmhqbmeiw.jl:23\n  Test threw exception\n  Expression:
    candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method
    matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;
    base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},
    ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Int64)\n      @ Main /tmp/tmpmhqbmeiw.jl:15\n    [2] lt(o::Base.Order.By{var"#1#2",
    Base.Order.Forw'
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgksuww25.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgksuww25.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksuww25.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgksuww25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgksuww25.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksuww25.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgksuww25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgksuww25.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksuww25.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgksuww25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgksuww25.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksuww25.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    tmp = sort(collect(zip(arr,\
    \ [sum(parse.(Int, bits(i))) for i in arr])), by=x->(x[2], x[1]))\n    return\
    \ [x[1] for x in tmp]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpos6rclnv.jl:23\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:
    bits not defined\n  Stacktrace:\n   [1] (::var"#1#4")(i::Int64)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},
    var"#1#4"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @
    Main /tmp/tmpos6rclnv.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpos6rclnv.jl:23 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpos6rclnv.jl:22\ntest set: Error
    During Test at /tmp/tmpos6rclnv.jl:24\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1]
    (::var"#1#4")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64}, var"#1#4"})\n     @
    Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpos6rclnv.jl:15\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpos6rclnv.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpos6rclnv.jl:22\ntest set: Error
    During Test at /tmp/tmpos6rclnv.jl:25\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1]
    (::var"#1#4")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64}, var"#1#4"})\n     @
    Base ./array.jl:724\n   [4] sort_array(arr::'
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    temp = [0 for _\
    \ in 1:length(arr)]\n    for i in 1:length(arr)\n        arr[i] = convert(UInt64,\
    \ arr[i])\n        temp[i] = zero_one_ratio(arr[i])\n    end\n    sorted_indices\
    \ = sortperm(temp)\n    sorted_arr = [arr[i] for i in sorted_indices]\n    return\
    \ sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpsesq0p2b.jl:29\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:
    zero_one_ratio not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @
    Main /tmp/tmpsesq0p2b.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsesq0p2b.jl:29 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsesq0p2b.jl:28\ntest set: Error
    During Test at /tmp/tmpsesq0p2b.jl:30\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  InexactError: check_top_bit(UInt64,
    -2)\n  Stacktrace:\n    [1] throw_inexacterror(f::Symbol, #unused#::Type{UInt64},
    val::Int64)\n      @ Core ./boot.jl:612\n    [2] check_top_bit\n      @ ./boot.jl:626
    [inlined]\n    [3] toUInt64\n      @ ./boot.jl:737 [inlined]\n    [4] UInt64\n      @
    ./boot.jl:767 [inlined]\n    [5] convert\n      @ ./number.jl:7 [inlined]\n    [6]
    sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpsesq0p2b.jl:17\n    [7] macro
    expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmpsesq0p2b.jl:30 [inlined]\n    [9]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmpsesq0p2b.jl:28\ntest set:
    Error During Test at /tmp/tmpsesq0p2b.jl:31\n  Test threw exception\n  Expression:
    candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: zero_one_ratio
    not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main
    /tmp/tmpsesq0p2b.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsesq0p2b.jl:31 [inlined]\n   [4]
    macro'
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    In\
    \ this Kata, you have to sort a vector of non-negative integers according to\n\
    \    number of ones in their binary representation in ascending order.\n    For\
    \ similar number of ones, sort based on decimal value.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf7ur2tv8.jl:1\nin expression starting at /tmp/tmpf7ur2tv8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  len::Int64 = length(arr)\n\
    \  i::Int64 = 1\n  while i <= len\n    j::Int64 = 1\n    while j <= len - i\n\
    \      if (arr[j] > arr[j + 1]) && (bin(arr[j]) == bin(arr[j + 1]))\n        arr[j],\
    \ arr[j + 1] = arr[j + 1], arr[j]\n      end\n      j += 1\n    end\n    i +=\
    \ 1\n  end\n  i = 1\n  while i <= len\n    j = 1\n    while j <= len - i\n   \
    \   if length(bin(arr[j])) > length(bin(arr[j + 1]))\n        arr[j], arr[j +\
    \ 1] = arr[j + 1], arr[j]\n      end\n      j += 1\n    end\n    i += 1\n  end\n\
    \  return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkrhzc2n0.jl:42

    '
  stdout: "test set: Error During Test at /tmp/tmpkrhzc2n0.jl:45\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpkrhzc2n0.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrhzc2n0.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrhzc2n0.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpkrhzc2n0.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkrhzc2n0.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrhzc2n0.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrhzc2n0.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpkrhzc2n0.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpkrhzc2n0.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrhzc2n0.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrhzc2n0.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpkrhzc2n0.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bin not defined\n  Stacktrace:\n   [1] sort_arra"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqi58ecwz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqi58ecwz.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi58ecwz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi58ecwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqi58ecwz.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi58ecwz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi58ecwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqi58ecwz.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi58ecwz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi58ecwz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqi58ecwz.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 3, 5, 7, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi58ecwz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp00jhgn2g.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp00jhgn2g.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp00jhgn2g.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp00jhgn2g.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones\n    d = Dict()\n    for x in arr\n        b = Base.bitcount(x)\n  \
    \      push!(get!(d, b, []), x)\n    end\n    # sort each subarray\n    for k\
    \ in keys(d)\n        d[k] = sort(d[k])\n    end\n    # concatenate subarrays\n\
    \    res = []\n    for k in sort(collect(keys(d)))\n        append!(res, d[k])\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphvzjftup.jl:37\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching bitcount(::Int64)\n  Closest candidates are:\n    bitcount(!Matched::Vector{UInt64};
    init) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1442\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphvzjftup.jl:18\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmphvzjftup.jl:37 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmphvzjftup.jl:36\ntest set: Error
    During Test at /tmp/tmphvzjftup.jl:38\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method matching bitcount(::Int64)\n  Closest
    candidates are:\n    bitcount(!Matched::Vector{UInt64}; init) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1442\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphvzjftup.jl:18\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmphvzjftup.jl:38 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmphvzjftup.jl:36\ntest set: Error
    During Test at /tmp/tmphvzjftup.jl:39\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching bitcount(::Int64)\n  Closest
    candidates are:\n    bitcount(!Matched::Vector{UInt64}; init) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1442\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphvzjftup.jl:18\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/'
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Note the return\
    \ type of the function for the format constraint\n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj0baorf0.jl:23\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpj0baorf0.jl:17\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj0baorf0.jl:23 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj0baorf0.jl:22\ntest set: Error
    During Test at /tmp/tmpj0baorf0.jl:24\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpj0baorf0.jl:17\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:4'
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sort\
    \ vector according to number of ones in binary representation of elements.\n \
    \   \"\"\"\n    X = sortperm(arr)\n    Y = reverse(arr[X])\n    return Y\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3b0qrqha.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp3b0qrqha.jl:27\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b0qrqha.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b0qrqha.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3b0qrqha.jl:28\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b0qrqha.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b0qrqha.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3b0qrqha.jl:29\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b0qrqha.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b0qrqha.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3b0qrqha.jl:31\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b0qrqha.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ x -> [count_ones(x), x])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tfs63jn.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tfs63jn.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tfs63jn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tfs63jn.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sortperm(arr,\
    \ by = x -> (sum(bits(x)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5czjppse.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5czjppse.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @\
    \ Main /tmp/tmp5czjppse.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] lt\n    \
    \  @ ./ordering.jl:117 [inlined]\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64,\
    \ #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Perm{Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering}, Vector{Int64}})\n      @ Base.Sort ./sort.jl:507\n\
    \    [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Perm{Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, Vector{Int64}})\n\
    \      @ Base.Sort ./sort.jl:574\n    [6] sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg,\
    \ order::Base.Order.Perm{Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ Vector{Int64}})\n      @ Base.Sort ./sort.jl:664\n    [7] sortperm(v::Vector{Int64};\
    \ alg::Base.Sort.QuickSortAlg, lt::Function, by::Function, rev::Nothing, order::Base.Order.ForwardOrdering)\n\
    \      @ Base.Sort ./sort.jl:930\n    [8] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmp5czjppse.jl:15\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp5czjppse.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp5czjppse.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5czjppse.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp5czjppse.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] lt\n    \
    \  @ ./ordering.jl:11"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Function\
    \ to sort a vector of non-negative integers according to\n    number of ones in\
    \ their binary representation in ascending order.\n    For similar number of ones,\
    \ sort based on decimal value.\n    \"\"\"\n    binArr = convert.(Vector{Int64},\
    \ binary(arr))\n    newArr = sortperm(binArr, rev=true)\n    arr = arr[newArr]\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpngpnsx9r.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpngpnsx9r.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpngpnsx9r.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngpnsx9r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngpnsx9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpngpnsx9r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpngpnsx9r.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngpnsx9r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngpnsx9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpngpnsx9r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpngpnsx9r.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngpnsx9r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngpnsx9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpngpnsx9r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: binary not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr = sort(arr,\
    \ (x, y) -> (count_digits(x) == count_digits(y) ? x <=> y : count_digits(x) <=>\
    \ count_digits(y)))\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp70kkwbe3.jl:15\nin expression starting at\
    \ /tmp/tmp70kkwbe3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    numones = Dict{Int64,Vector{Int64}}()\n\
    \    for x in arr\n        num = x\n        ones = 0\n        while num > 0\n\
    \            ones += 1\n            num = floor(num/2)\n        end\n        if\
    \ haskey(numones, ones)\n            push!(numones[ones], x)\n        else\n \
    \           numones[ones] = [x]\n        end\n    end\n    sorted_arr = []\n \
    \   for (ones, vec) in numones\n        sort!(vec)\n        push!(sorted_arr,\
    \ vec)\n    end\n    return vcat(sorted_arr...)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4kmkue9z.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmp4kmkue9z.jl:41\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [2, 3, 4, 5, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4kmkue9z.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4kmkue9z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4kmkue9z.jl:42\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4kmkue9z.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4kmkue9z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4kmkue9z.jl:43\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 2, 3, 4, 1] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4kmkue9z.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4kmkue9z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4kmkue9z.jl:45\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 2,\
    \ 2, 3, 3, 4, 4, 5, 5, 5, 7] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4kmkue9z.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code goes\
    \ here\n    return sort(arr, by=x->[(bitstring(x)).count(\"1\"), x])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmps7k4ilqs.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmps7k4ilqs.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  type String has\
    \ no field count\n  Stacktrace:\n    [1] getproperty\n      @ ./Base.jl:42 [inlined]\n\
    \    [2] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmps7k4ilqs.jl:16\n    [3]\
    \ lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n\
    \      @ Base.Order ./ordering.jl:111\n    [4] sort!\n      @ ./sort.jl:507 [inlined]\n\
    \    [5] sort!\n      @ ./sort.jl:574 [inlined]\n    [6] sort!\n      @ ./sort.jl:664\
    \ [inlined]\n    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] sort(v::Vector{Int64};\
    \ kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"\
    #1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n    [9] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmps7k4ilqs.jl:16\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7k4ilqs.jl:23 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7k4ilqs.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps7k4ilqs.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  type String has no\
    \ field count\n  Stacktrace:\n    [1] getproperty\n      @ ./Base.jl:42 [inlined]\n\
    \    [2] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmps7k4ilqs.jl:16\n    [3]\
    \ lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n\
    \      @ Base.Order ./ordering.jl:111\n    [4] sort!\n      @ ./sort.jl:507 [inlined]\n\
    \    [5] sort!\n      @ ./sort.jl:574 [inlined]\n    [6] sort!\n      @ ./sort.jl:664\
    \ [inlined]\n    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] sort(v::Vector{Int64};\
    \ kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"\
    #1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n    [9] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmps7k4ilqs.jl:16\n   "
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnpx05pn7.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnpx05pn7.jl:1\n\
    in expression starting at /tmp/tmpnpx05pn7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp63hdmll6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp63hdmll6.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuyt2_ds4.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpuyt2_ds4.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyt2_ds4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyt2_ds4.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    newarr = sort(arr,\
    \ by = x -> (count_ones(x), x))\n    return newarr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwlcfzq2q.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpwlcfzq2q.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlcfzq2q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlcfzq2q.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    index_ones::Vector{Int64}\
    \ = [count_ones(arr[i]) for i in 1:length(arr)]\n    sort!(index_ones)\n    sort!(arr)\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpya6gh4zo.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpya6gh4zo.jl:25\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya6gh4zo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya6gh4zo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpya6gh4zo.jl:26\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya6gh4zo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya6gh4zo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpya6gh4zo.jl:27\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya6gh4zo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya6gh4zo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpya6gh4zo.jl:29\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya6gh4zo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya6gh4zo.jl:24\ntest set"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    global sortbyones\n\
    \    sortbyones = OrderedDict()\n    for i in arr\n        global sortbyones\n\
    \        if i >= 0\n            key = (count_ones(i), i)\n            if haskey(sortbyones,\
    \ key)\n                sortbyones[key] = sortbyones[key] .+ [i]\n           \
    \ else\n                sortbyones[key] = [i]\n            end\n        else\n\
    \            sortbyones[(count_ones(-i), -i)] = [i]\n        end\n    end\n  \
    \  global sortbyones\n    sortbyones = sort(collect(sortbyones))\n    ans = []\n\
    \    for (key, val) in sortbyones\n        ans = vcat(ans, val)\n    end\n   \
    \ return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp0sntomzv.jl:40

    '
  stdout: "test set: Error During Test at /tmp/tmp0sntomzv.jl:43\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ OrderedDict not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp0sntomzv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0sntomzv.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0sntomzv.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp0sntomzv.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: OrderedDict\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0sntomzv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0sntomzv.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0sntomzv.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp0sntomzv.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: OrderedDict\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0sntomzv.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0sntomzv.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0sntomzv.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp0sntomzv.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: OrderedDict\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Mai"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    s = sort(arr, by=x->(count_ones(x),\
    \ x))\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy49_w7k7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpy49_w7k7.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy49_w7k7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy49_w7k7.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    num = Dict()\n\
    \    for x in arr\n        num[x] = length(split(Int(x, 2)))\n    end\n    return\
    \ sort(arr, by = (x->(-num[x], x)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmphkm6rlw2.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmphkm6rlw2.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at ~/.conda/envs/polyglot/share/julia/base/boot.jl:762\n    (::Type{T})(::T)\
    \ where T<:Number at ~/.conda/envs/polyglot/share/julia/base/boot.jl:770\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphkm6rlw2.jl:17\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphkm6rlw2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphkm6rlw2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphkm6rlw2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at ~/.conda/envs/polyglot/share/julia/base/boot.jl:762\n    (::Type{T})(::T)\
    \ where T<:Number at ~/.conda/envs/polyglot/share/julia/base/boot.jl:770\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphkm6rlw2.jl:17\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphkm6rlw2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphkm6rlw2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphkm6rlw2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UIn"
  timestamp: 1659978874
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\"\n    Sorts\
    \ a vector of non-negative integers according to number of ones\n    in their\
    \ binary representation in ascending order.\n    For similar number of ones, sort\
    \ based on decimal value.\n    \"\"\"\n    return sort(arr, by=x->(length(Int64(x)),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxmbrfjy4.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpxmbrfjy4.jl:27\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxmbrfjy4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxmbrfjy4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxmbrfjy4.jl:28\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxmbrfjy4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxmbrfjy4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxmbrfjy4.jl:29\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxmbrfjy4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxmbrfjy4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxmbrfjy4.jl:31\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxmbrfjy4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxmbrfjy4.jl:26\ntest set"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    dist = Dict(i =>\
    \ sum(j == '1' for j in Base.bitstring(i)) for i in arr)\n    res = sort(arr,\
    \ by = i -> (-dist[i], i))\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq9yyk4ak.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpq9yyk4ak.jl:24\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [3, 5, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9yyk4ak.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9yyk4ak.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq9yyk4ak.jl:25\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-5, -3, -2, -6, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9yyk4ak.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9yyk4ak.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq9yyk4ak.jl:26\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9yyk4ak.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9yyk4ak.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq9yyk4ak.jl:28\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 3, 3, 5, 5, 5, 2, 2, 4, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9yyk4ak.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9yyk4ak.jl:23\ntest set"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr.sort(by=.!.)\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \".\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwlc2zr26.jl:15\nin expression starting at\
    \ /tmp/tmpwlc2zr26.jl:15\n"
  stdout: ''
  timestamp: 1659978871
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    ret::Vector{Int64}\
    \ = [i::Int64 for i in arr]\n    @show ret\n    indices = sortperm(count_ones(ret),\
    \ by=ret)\n    ret = ret[indices]\n    return ret\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp_fegcqsk.jl:23

    '
  stdout: "ret = [1, 5, 2, 3, 4]\ntest set: Error During Test at /tmp/tmp_fegcqsk.jl:26\n\
    \  Test threw exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4,\
    \ 3, 5]\n  MethodError: no method matching count_ones(::Vector{Int64})\n  Closest\
    \ candidates are:\n    count_ones(!Matched::Union{Int128, Int16, Int32, Int64,\
    \ Int8, UInt128, UInt16, UInt32, UInt64, UInt8}) at ~/.conda/envs/polyglot/share/julia/base/int.jl:404\n\
    \    count_ones(!Matched::BigInt) at ~/.conda/envs/polyglot/share/julia/base/gmp.jl:558\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp_fegcqsk.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fegcqsk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fegcqsk.jl:25\nret = [-2,\
    \ -3, -4, -5, -6]\ntest set: Error During Test at /tmp/tmp_fegcqsk.jl:27\n  Test\
    \ threw exception\n  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3]\n  MethodError: no method matching count_ones(::Vector{Int64})\n  Closest\
    \ candidates are:\n    count_ones(!Matched::Union{Int128, Int16, Int32, Int64,\
    \ Int8, UInt128, UInt16, UInt32, UInt64, UInt8}) at ~/.conda/envs/polyglot/share/julia/base/int.jl:404\n\
    \    count_ones(!Matched::BigInt) at ~/.conda/envs/polyglot/share/julia/base/gmp.jl:558\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp_fegcqsk.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fegcqsk.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fegcqsk.jl:25\nret = [1,\
    \ 0, 2, 3, 4]\ntest set: Error During Test at /tmp/tmp_fegcqsk.jl:28\n  Test threw\
    \ exception\n  Expression: candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError:\
    \ no method matching count_ones"
  timestamp: 1659978874
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones and then sort by value\n    sort(arr, by=collect.((i->(length(findall(x->x==1,\
    \ binary_repr(i))), i)) for i in arr))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp24cx1ta8.jl:23\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching length(::var"#2#5")\n  Closest candidates are:\n    length(!Matched::Union{Base.KeySet,
    Base.ValueIterator}) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n    length(!Matched::Union{LinearAlgebra.Adjoint{T,
    S}, LinearAlgebra.Transpose{T, S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n    length(!Matched::Base.Iterators.Stateful)
    at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n    ...\n  Stacktrace:\n    [1]
    _similar_shape(itr::Function, #unused#::Base.HasLength)\n      @ Base ./array.jl:600\n    [2]
    _collect(cont::UnitRange{Int64}, itr::Function, #unused#::Base.HasEltype, isz::Base.HasLength)\n      @
    Base ./array.jl:655\n    [3] collect(itr::Function)\n      @ Base ./array.jl:649\n    [4]
    _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [5] _broadcast_getindex\n      @
    ./broadcast.jl:643 [inlined]\n    [6] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [7]
    copy\n      @ ./broadcast.jl:899 [inlined]\n    [8] materialize\n      @ ./broadcast.jl:860
    [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp24cx1ta8.jl:16\n   [10]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [11] macro expansion\n      @ /tmp/tmp24cx1ta8.jl:23 [inlined]\n   [12]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [13] top-level scope\n      @ /tmp/tmp24cx1ta8.jl:22\ntest set:
    Error During Test at /tmp/tmp24cx1ta8.jl:24\n  Test threw exception\n  Expression:
    candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method
    matching length(::var"#2#5")\n  Closest candidates are:\n    length(!Matched::Union{Base.KeySet,
    Base.ValueIterator}) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n    l'
  timestamp: 1659978875
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #if length(arr)\
    \ == 0\n    #    return arr\n    #end\n    #if any(z -> z < 0, arr)\n    #   \
    \ error(\"Array has negative integers\")\n    #end\n    #return sort(arr, by=x\
    \ -> count_bits(x))\n    return sort(arr, by=x -> count_bits(x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp1wlrt3gj.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp1wlrt3gj.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmp1wlrt3gj.jl:22\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp1wlrt3gj.jl:22\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp1wlrt3gj.jl:29 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp1wlrt3gj.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1wlrt3gj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp1wlrt3gj.jl:22\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ s"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    @assert(!any(x\
    \ -> x < 0, arr)) # <-- check that all are positive\n    # Sort by number of 1's\
    \ in binary representation,\n    # and then sort those that are the same by their\
    \ decimal value.\n    return sort(arr, by=x -> (count_ones(x), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp56him7f1.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp56him7f1.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError:\
    \ !(any((x->begin\n                  #= /tmp/tmp56him7f1.jl:15 =#\n          \
    \        x < 0\n              end), arr))\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp56him7f1.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56him7f1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56him7f1.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    7      1      8\n"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # You can use the\
    \ function `sort` from `Base` library in Julia\n    # https://docs.julialang.org/en/v1/base/sort/#Base.sort\n\
    \    #\n    # sort([4, 5, 7, 1]) => [1, 4, 5, 7]\n    return sort(arr)\nend\n\"\
    \"\"\n    The Problem:\n    https://www.codewars.com/kata/52da3dbb4a5168369a0000fe/train/julia\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64xjr34m.jl:21\nin expression starting at\
    \ /tmp/tmp64xjr34m.jl:21\n"
  stdout: ''
  timestamp: 1659978871
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ lt = (a, b) -> get_ones(a) < get_ones(b) || (get_ones(a) == get_ones(b) && a\
    \ < b))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpzyq8pn2n.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpzyq8pn2n.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ get_ones not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(a::Int64, b::Int64)\n\
    \      @ Main /tmp/tmpzyq8pn2n.jl:15\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772\
    \ [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpzyq8pn2n.jl:15\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzyq8pn2n.jl:22 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzyq8pn2n.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpzyq8pn2n.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: get_ones\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(a::Int64, b::Int64)\n  \
    \    @ Main /tmp/tmpzyq8pn2n.jl:15\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6]"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #return Array{Any}(arr)\n\
    \    (map(x -> String(x), arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6eqr8fzi.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp6eqr8fzi.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching String(::Int64)\n  Closest candidates are:\n    String(!Matched::String)\
    \ at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n \
    \ Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp6eqr8fzi.jl:16\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp6eqr8fzi.jl:16\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp6eqr8fzi.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp6eqr8fzi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6eqr8fzi.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching String(::Int64)\n  Closest candidates are:\n    String(!Matched::String)\
    \ at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n \
    \ Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp6eqr8fzi.jl:16\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64"
  timestamp: 1659978874
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Convert all ints\
    \ to binary, count number of ones\n    # and make a sortable tuple from it\n \
    \   sortable = [(count_ones(Int64(x)), x) for x in arr]\n    sorted = sort(sortable)\n\
    \    # Extract the second elements of the sorted tuples and return them\n    return\
    \ [x[2] for x in sorted]\nend\nsort_array([1, 0, 2, 3, 4])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhr6yfj4.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpbhr6yfj4.jl:29\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhr6yfj4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhr6yfj4.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    ## If input is\
    \ empty then return empty vector\n    if length(arr) == 0\n        return []\n\
    \    end\n    ## Get number of ones in binary representation \n    ## of each\
    \ number in vector\n    ones = [sum(x->x=='1',string(bitstring(i))) for i in arr]\n\
    \    ## Get the indexed position of sorted ones\n    idx = sortperm(ones)\n  \
    \  ## Sort the elements of input vector using\n    ## indexed position of sorted\
    \ ones\n    return arr[idx]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvzq1x5bq.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpvzq1x5bq.jl:33\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzq1x5bq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzq1x5bq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpvzq1x5bq.jl:34\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzq1x5bq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzq1x5bq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpvzq1x5bq.jl:37\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzq1x5bq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzq1x5bq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpvzq1x5bq.jl:38\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzq1x5bq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort based on\
    \ the number of bits\n    indices = sortperm(map(x -> count_ones(x), arr))\n \
    \   res = zeros(Int64, length(arr))\n    for i in 1:length(arr)\n        res[i]\
    \ = arr[indices[i]]\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxz1ceh8m.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpxz1ceh8m.jl:28\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz1ceh8m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz1ceh8m.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpxz1ceh8m.jl:29\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz1ceh8m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz1ceh8m.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpxz1ceh8m.jl:32\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz1ceh8m.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz1ceh8m.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpxz1ceh8m.jl:33\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz1ceh8m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    A = []\n    for\
    \ i in arr\n        push!(A, (sum(i) - i))\n    end\n    return sortperm(A)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprqa2btjh.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmprqa2btjh.jl:26\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqa2btjh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqa2btjh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprqa2btjh.jl:27\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [1, 2, 3, 4, 5] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqa2btjh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqa2btjh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprqa2btjh.jl:28\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 2, 3, 4, 5] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqa2btjh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqa2btjh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprqa2btjh.jl:30\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqa2btjh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqa2btjh.jl:25\ntest set: Te"
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #sort!(arr, by=x->(bitstring(x)[end:-1:1]))\
    \ # OK but slow\n    return sort(arr, by=x->bitstring(x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsh4er5p5.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpsh4er5p5.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsh4er5p5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsh4er5p5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsh4er5p5.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsh4er5p5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsh4er5p5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsh4er5p5.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsh4er5p5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsh4er5p5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsh4er5p5.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsh4er5p5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsh4er5p5.jl:22\ntest set"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr1 = sort(arr)\n\
    \    for i in 1:length(arr1)\n        if arr1[i] >= 0\n            l = digits(arr1[i],\
    \ base=2)\n            arr1[i] = sum(l) * 10^(6) + arr1[i]\n        else\n   \
    \         l = digits(-arr1[i], base=2)\n            arr1[i] = -(sum(l) * 10^(6)\
    \ + arr1[i])\n        end\n    end\n    arr1 = sort(arr1)\n    for i in 1:length(arr1)\n\
    \        if arr1[i] >= 0\n            arr1[i] = arr1[i] % 10^(6)\n        else\n\
    \            arr1[i] = -(arr1[i] % 10^(6))\n        end\n    end\n    return arr1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfinv9r9h.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpfinv9r9h.jl:41\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [999997, 999995, 999994,\
    \ 999998, 999996] == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfinv9r9h.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfinv9r9h.jl:39\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978872
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    ones_count = zeros(Int64, n)\n    for i in 1:n\n        binary = bits(arr[i])\n\
    \        for j in 1:length(binary)\n            if binary[j] == '1'\n        \
    \        ones_count[i] += 1\n            end\n        end\n    end\n    sorted_idx\
    \ = sortperm(ones_count)\n    arr = arr[sorted_idx]\n    sort!(arr)\n    return\
    \ arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpwtk3rq8n.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpwtk3rq8n.jl:35\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpwtk3rq8n.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtk3rq8n.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtk3rq8n.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpwtk3rq8n.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpwtk3rq8n.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtk3rq8n.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtk3rq8n.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpwtk3rq8n.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwtk3rq8n.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtk3rq8n.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtk3rq8n.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpwtk3rq8n.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #convert to binary\n\
    \    bin_arr = map(Int,bits(arr))\n    #count number of 1s in binary\n    bin_count\
    \ = map(x -> count(1,x),bin_arr)\n    #sort by number of 1s in binary\n    sort!(bin_count,by=x->x[1])\n\
    \    #sort by decimal value if binary 1 count is equal\n    sort!(bin_count,by=x->x[2])\n\
    \    sorted_arr = map(x->x[2],bin_count)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpjucpxkmp.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpjucpxkmp.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpjucpxkmp.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjucpxkmp.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjucpxkmp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjucpxkmp.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpjucpxkmp.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjucpxkmp.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjucpxkmp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjucpxkmp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpjucpxkmp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjucpxkmp.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjucpxkmp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjucpxkmp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bits not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpjucpxkmp.jl:16\n\
    \   "
  timestamp: 1659978873
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sort\
    \ array by number of '1's in binary representation of each number\n    \"\"\"\n\
    \    s = sort(arr, by = (x -> (count(x -> x == '1', binary(x)), x)))\n    [s[i][2]\
    \ for i = 1:length(s)]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpftdhriey.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpftdhriey.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n     \
    \ @ Main /tmp/tmpftdhriey.jl:18\n    [2] lt(o::Base.Order.By{var\"#1#4\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpftdhriey.jl:18\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpftdhriey.jl:26 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpftdhriey.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpftdhriey.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n      @ Main\
    \ /tmp/tmpftdhriey.jl:18\n    [2] lt(o::Base.Order.By{var\"#1#4\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n   "
  timestamp: 1659978875
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (count(x -> x == '1', base(2, x)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0kgzk2rw.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp0kgzk2rw.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ base not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @\
    \ Main /tmp/tmp0kgzk2rw.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp0kgzk2rw.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp0kgzk2rw.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp0kgzk2rw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0kgzk2rw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: base\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @ Main\
    \ /tmp/tmp0kgzk2rw.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @"
  timestamp: 1659978875
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    sorted_arr = sort(arr, rev=true)\n    return sort(sorted_arr, by=bin)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpoenmz34i.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpoenmz34i.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpoenmz34i.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoenmz34i.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoenmz34i.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoenmz34i.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpoenmz34i.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoenmz34i.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoenmz34i.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoenmz34i.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpoenmz34i.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoenmz34i.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoenmz34i.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoenmz34i.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpoenmz34i.jl:17\n\
    \   [2] "
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort the array\
    \ based on the number of 1s and the decimal value\n    sort(arr, by = [count_ones,\
    \ id])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp0ntj8_gx.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp0ntj8_gx.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ id not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @\
    \ Main /tmp/tmp0ntj8_gx.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ntj8_gx.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ntj8_gx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0ntj8_gx.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: id\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0ntj8_gx.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ntj8_gx.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ntj8_gx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0ntj8_gx.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp0ntj8_gx.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ntj8_gx.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ntj8_gx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0ntj8_gx.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp0ntj8_gx.jl:16\n\
    \   [2] macr"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0\n        return arr\n    end\n    if arr[1] >= 0\n        return sort(arr,\
    \ by = x -> bits(x))\n    else\n        return sort(abs.(arr), by = x -> bits(x))\
    \ * -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4zxbrpms.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp4zxbrpms.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @\
    \ Main /tmp/tmp4zxbrpms.jl:19\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp4zxbrpms.jl:19\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp4zxbrpms.jl:29 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp4zxbrpms.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp4zxbrpms.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Int64)\n      @ Main\
    \ /tmp/tmp4zxbrpms.jl:21\n    [2] lt(o::Base.Order.By{var\"#2#4\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr_sorted = sort(arr,\
    \ rev=true)\n    return arr_sorted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8cweuim6.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8cweuim6.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cweuim6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cweuim6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8cweuim6.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cweuim6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cweuim6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8cweuim6.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cweuim6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cweuim6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8cweuim6.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cweuim6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cweuim6.jl:22\ntest set"
  timestamp: 1659978875
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort the vector\
    \ by number of ones\n    sorted_binary = sort(arr, by=count_ones)\n    # check\
    \ if there are any negative numbers\n    number_of_negatives = 0\n    for i =\
    \ 1:length(arr)\n        if arr[i] < 0\n            number_of_negatives += 1\n\
    \        end\n    end\n    # if there are, sort the negative numbers and replace\
    \ \n    # the negative values in the sorted vector\n    if number_of_negatives\
    \ > 0\n        sorted_negative = sort(arr[arr.<0], by=x->x)\n        # this loop\
    \ replaces the negative values\n        # with the sorted negative numbers\n \
    \       for i = 1:length(sorted_negative)\n            sorted_binary[i] = sorted_negative[i]\n\
    \        end\n    end\n    # return the sorted vector\n    return sorted_binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2wmf3795.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmp2wmf3795.jl:42\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wmf3795.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wmf3795.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2wmf3795.jl:43\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wmf3795.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wmf3795.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2wmf3795.jl:46\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wmf3795.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wmf3795.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2wmf3795.jl:47\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wmf3795.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by number\
    \ of ones in descending order\n    arr = sort(arr, by = x -> sum(BitArray(x),\
    \ dims = 1), rev = true)\n    # sort by number of ones in ascending order\n  \
    \  arr = sort(arr, by = x -> sum(BitArray(x), dims = 1))\n    # sort by number\
    \ of ones in descending order, but sort by dec value if number of ones is the\
    \ same\n    arr = sort(arr, by = x -> (sum(BitArray(x), dims = 1), x), rev = true)\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqvyo6vju.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpqvyo6vju.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  InexactError:\
    \ Bool(5)\n  Stacktrace:\n    [1] Bool\n      @ ./float.jl:158 [inlined]\n   \
    \ [2] convert\n      @ ./number.jl:7 [inlined]\n    [3] setindex!\n      @ ./bitarray.jl:699\
    \ [inlined]\n    [4] _setindex!\n      @ ./abstractarray.jl:1338 [inlined]\n \
    \   [5] setindex!\n      @ ./abstractarray.jl:1315 [inlined]\n    [6] gen_bitarray\n\
    \      @ ./bitarray.jl:587 [inlined]\n    [7] BitArray\n      @ ./bitarray.jl:574\
    \ [inlined]\n    [8] (::var\"#1#4\")(x::Int64)\n      @ Main /tmp/tmpqvyo6vju.jl:16\n\
    \    [9] lt(o::Base.Order.By{var\"#1#4\", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n   [10] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n   [11] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \   [12] sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg, order::Base.Order.By{var\"\
    #1#4\", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})\n      @ Base.Sort\
    \ ./sort.jl:664\n   [13] sort!(v::Vector{Int64}; alg::Base.Sort.QuickSortAlg,\
    \ lt::Function, by::Function, rev::Bool, order::Base.Order.ForwardOrdering)\n\
    \      @ Base.Sort ./sort.jl:725\n   [14] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \   [15] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpqvyo6vju.jl:16\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [17] macro expansion\n      @ /tmp/tmpqvyo6vju.jl:28 [inlined]\n\
    \   [18] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [19] top-level scope\n      @ /tmp/tmpqvyo6vju.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpqvyo6vju.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  InexactError: Bool(-3)\n\
    \  Stacktrace:\n    [1] Bool\n      @ ./float.jl:158 [inlined]\n    [2] convert\n\
    \      @ ./number.jl:7 [inlined]\n    [3] setindex!\n      @ ./bitarray.jl:699\
    \ [inlined]\n    [4] _setindex!\n      @ ./abstr"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    inds = sortperm(arr\
    \ .& .!(arr .< 0)) # take absolute values\n    reorder(arr, inds)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpudu5bpwp.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpudu5bpwp.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ reorder not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpudu5bpwp.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudu5bpwp.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudu5bpwp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudu5bpwp.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: reorder\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpudu5bpwp.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudu5bpwp.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudu5bpwp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudu5bpwp.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: reorder not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpudu5bpwp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudu5bpwp.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudu5bpwp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudu5bpwp.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: reorder\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpudu5bp"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort_array([1,\
    \ 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    # sort_array([-2, -3, -4, -5, -6]) == [-6,\
    \ -5, -4, -3, -2]\n    # sort_array([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n    \n\
    \    # \uD53C\uBCF4\uB098\uCE58 \uC218\uC5F4 \uC0DD\uC131\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7yqq5n8h.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7yqq5n8h.jl:1\n\
    in expression starting at /tmp/tmp7yqq5n8h.jl:1\n"
  stdout: ''
  timestamp: 1659978874
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    vcat(sort(filter(x\
    \ -> x<0, arr)), sort(filter(x -> x>=0, arr)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl4uyvph8.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpl4uyvph8.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl4uyvph8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl4uyvph8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl4uyvph8.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl4uyvph8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl4uyvph8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl4uyvph8.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl4uyvph8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl4uyvph8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl4uyvph8.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl4uyvph8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl4uyvph8.jl:21\ntest set"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ (y::Int64) -> (ones(Int(y))[1], y))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 3 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpvkyn0hjv.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpvkyn0hjv.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvkyn0hjv.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvkyn0hjv.jl:21\ntest set: Error\
    \ During Test at /tmp/tmpvkyn0hjv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] #1\n      @ /tmp/tmpvkyn0hjv.jl:15 [inlined]\n\
    \    [7] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [8] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [9]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   [10]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvkyn0hjv.jl:15\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvkyn0hjv.jl:23 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvkyn0hjv.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvky"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr2 = copy(arr)\n\
    \    arr3 = copy(arr)\n    arr2 = onecount(arr2)\n    arr3 = decsort(arr3)\n \
    \   #print(arr2)\n    #print(arr3)\n    return merge(arr2, arr3)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpuzijxdna.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpuzijxdna.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ onecount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpuzijxdna.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzijxdna.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzijxdna.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuzijxdna.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: onecount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpuzijxdna.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzijxdna.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzijxdna.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuzijxdna.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: onecount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpuzijxdna.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzijxdna.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzijxdna.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuzijxdna.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: onecount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpuz"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if arr == []\n\
    \        return []\n    end\n    sort(arr, by=x->[ones(x), x])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp8_t6yyod.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp8_t6yyod.jl:25\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_t6yyod.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_t6yyod.jl:24\ntest set: Error\
    \ During Test at /tmp/tmp8_t6yyod.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] #1\n      @ /tmp/tmp8_t6yyod.jl:18 [inlined]\n\
    \    [7] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [8] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [9]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   [10]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp8_t6yyod.jl:18\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmp8_t6yyod.jl:26 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmp8_t6yyod.jl:24\ntest set:\
    \ Test Failed at /tmp/tmp8_t6yyod."
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    indices = sortperm(Int64[sum(digits(integer(x),\
    \ base=2)) for x in arr])\n    return arr[indices]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpmwd662vm.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpmwd662vm.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ integer not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpmwd662vm.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmwd662vm.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmwd662vm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmwd662vm.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: integer\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmwd662vm.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmwd662vm.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmwd662vm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmwd662vm.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: integer not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpmwd662vm.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmwd662vm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmwd662vm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmwd662vm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: integer not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(sum(binary(x)),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9joyhzk3.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp9joyhzk3.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n     \
    \ @ Main /tmp/tmp9joyhzk3.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp9joyhzk3.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp9joyhzk3.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp9joyhzk3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp9joyhzk3.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp9joyhzk3.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n   "
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0\n        return []\n    end\n    if length(arr) == 1\n        return arr\n\
    \    end\n    sort(arr, by = (x->(sum(bits(x)),x)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvuhoedgq.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvuhoedgq.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @\
    \ Main /tmp/tmpvuhoedgq.jl:21\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvuhoedgq.jl:21\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpvuhoedgq.jl:28 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpvuhoedgq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvuhoedgq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpvuhoedgq.jl:21\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  sorted_indices =\
    \ sortperm(map(x -> count_ones(abs(x)), arr))\n  return [arr[i] for i in sorted_indices]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4hklyc9.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpq4hklyc9.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hklyc9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hklyc9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq4hklyc9.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -4, -3, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hklyc9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hklyc9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq4hklyc9.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hklyc9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4hklyc9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq4hklyc9.jl:28\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4hklyc9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978876
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_bits(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgm7gvqac.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpgm7gvqac.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmpgm7gvqac.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpgm7gvqac.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpgm7gvqac.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpgm7gvqac.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgm7gvqac.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpgm7gvqac.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ s"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=convert)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpfi3saasj.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfi3saasj.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching convert(::Int64)\n  Stacktrace:\n    [1] lt(o::Base.Order.By{typeof(convert),\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [2] sort!\n      @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol,\
    \ typeof(convert), Tuple{Symbol}, NamedTuple{(:by,), Tuple{typeof(convert)}}})\n\
    \      @ Base.Sort ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmpfi3saasj.jl:16\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpfi3saasj.jl:23 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpfi3saasj.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfi3saasj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching convert(::Int64)\n  Stacktrace:\n    [1] lt(o::Base.Order.By{typeof(convert),\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [2] sort!\n      @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol,\
    \ typeof(convert), Tuple{Symbol}, NamedTuple{(:by,), Tuple{typeof(convert)}}})\n\
    \      @ Base.Sort ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmpfi3saasj.jl:16\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpfi3saasj.jl:24 [inlined]\n\
    \   ["
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    A function\
    \ that sorts a vector of non-negative integers \n    according to number of ones\
    \ in their binary representation \n    in ascending order.\n    \"\"\"\n    x\
    \ = [ bin(i)[2:end] for i in arr ]\n    y = reverse(sort(arr, by = i -> (length(filter(c\
    \ -> c == '1', x[i])), i)))\n    return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpr2b246mn.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpr2b246mn.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpr2b246mn.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr2b246mn.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr2b246mn.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpr2b246mn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpr2b246mn.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr2b246mn.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr2b246mn.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpr2b246mn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpr2b246mn.jl:20\n   [5] macro expansion\n     "
  timestamp: 1659978878
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=eachindex(arr)) do i\n        count_ones(i)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpxy4hshdc.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxy4hshdc.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::var\"#1#2\", ::Vector{Int64}; by=Base.OneTo(5))\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxy4hshdc.jl:15\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy4hshdc.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy4hshdc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxy4hshdc.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::var\"#1#2\", ::Vector{Int64}; by=Base.OneTo(5))\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxy4hshdc.jl:15\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy4hshdc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy4hshdc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxy4hshdc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort(::var\"#1#2\", ::Vector{Int64}; by=Base.OneTo(5))\n  Stacktrace:\n   [1]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxy4hshdc.jl:15\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy4hshdc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy4hshdc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxy4hshdc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vecto"
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted_array =\
    \ sort(arr, by=x->(count_ones(x), x))\n    return sorted_array\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkjj80k53.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpkjj80k53.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjj80k53.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjj80k53.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978877
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ (x->begin (bin(x))[end-1:end], x end))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpy75xa_tf.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpy75xa_tf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpy75xa_tf.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpy75xa_tf.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy75xa_tf.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy75xa_tf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpy75xa_tf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpy75xa_tf.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ."
  timestamp: 1659978878
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    b = zeros(Int64,\
    \ length(arr))\n    for i in 1:length(arr)\n        b[i] = bitstring(arr[i]) |>\
    \ count(r\"1\")\n    end\n    # Return the indices of the sorted array in a vector\n\
    \    idx = sortperm(b)\n    return arr[idx]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpuev70lca.jl:28\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching iterate(::Regex)\n  Closest candidates are:\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n    iterate(!Matched::T)
    where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}} at ~/.conda/envs/polyglot/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n   [1]
    _simple_count(pred::typeof(identity), itr::Regex, init::Int64)\n     @ Base ./reduce.jl:1205\n   [2]
    count(f::Function, itr::Regex; init::Int64)\n     @ Base ./reduce.jl:1201\n   [3]
    count(itr::Regex; init::Int64)\n     @ Base ./reduce.jl:1199\n   [4] count(itr::Regex)\n     @
    Base ./reduce.jl:1199\n   [5] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpuev70lca.jl:17\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmpuev70lca.jl:28 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmpuev70lca.jl:27\ntest set: Error
    During Test at /tmp/tmpuev70lca.jl:29\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method matching iterate(::Regex)\n  Closest
    candidates are:\n    iterate(!Matched::Union{LinRange, StepRangeLen}) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n    iterate(!Matched::T)
    where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}} at ~/.conda/envs/polyglot/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n   [1]
    _simple_count(pred::typeof(identity),'
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    itr = 1\n    while\
    \ itr != length(arr)\n        if itr == 1\n            if arr[itr] < arr[itr +\
    \ 1]\n                arr[itr], arr[itr + 1] = arr[itr + 1], arr[itr]\n      \
    \      end\n        elseif itr == length(arr)\n            if arr[itr] < arr[itr\
    \ - 1]\n                arr[itr], arr[itr - 1] = arr[itr - 1], arr[itr]\n    \
    \        end\n        else\n            if arr[itr] < arr[itr - 1]\n         \
    \       arr[itr], arr[itr - 1] = arr[itr - 1], arr[itr]\n            elseif arr[itr]\
    \ < arr[itr + 1]\n                arr[itr], arr[itr + 1] = arr[itr + 1], arr[itr]\n\
    \            end\n        end\n        itr += 1\n    end\n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpcfcar36m.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpcfcar36m.jl:41\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 5, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcfcar36m.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcfcar36m.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcfcar36m.jl:42\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-3, -4, -5, -2, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcfcar36m.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcfcar36m.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcfcar36m.jl:43\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcfcar36m.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcfcar36m.jl:40\ntest set: Error\
    \ During Test at /tmp/tmpcfcar36m.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpcfcar36m.jl:18\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcfcar36m.jl:44 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/"
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    binary_arr = [pad(dec2bin(x),\
    \ 10, '0') for x in arr]\n    return sort(arr, by = (i -> (count(x -> x == '1',\
    \ binary_arr[i]), arr[i])))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpfi5yuifd.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfi5yuifd.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpfi5yuifd.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfi5yuifd.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfi5yuifd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfi5yuifd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpfi5yuifd.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfi5yuifd.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfi5yuifd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfi5yuifd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpfi5yuifd.jl:15\n   [5] macro exp"
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  # 1 <= arr.length\
    \ <= 1000\n  if length(arr) == 1\n    return arr\n  end\n  if all(arr .< 0)\n\
    \    return sort(arr, rev=true)\n  end\n  if all(arr .>= 0)\n    return sort(arr)\n\
    \  end\n  ones = [count_ones(Int64(abs(i))) for i in arr]\n  return sort(arr,\
    \ by=x->(ones[x], x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsaue283d.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpsaue283d.jl:33\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsaue283d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsaue283d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsaue283d.jl:34\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsaue283d.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsaue283d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsaue283d.jl:35\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsaue283d.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsaue283d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsaue283d.jl:37\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsaue283d.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsaue283d.jl:32\ntest set"
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr_sorted = sort(arr)\n\
    \    list_ones = []\n    for i in arr_sorted\n        push!(list_ones, sum(parse.(Int,\
    \ split(dec2bin(i)))))\n    end\n    return [x for (y,x) in sort(zip(list_ones,\
    \ arr_sorted))]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp8a_ogeka.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp8a_ogeka.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp8a_ogeka.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8a_ogeka.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8a_ogeka.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp8a_ogeka.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8a_ogeka.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8a_ogeka.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8a_ogeka.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp8a_ogeka.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8a_ogeka.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8a_ogeka.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8a_ogeka.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp8a_ogeka.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  MethodError: no method\
    \ matching sort(::Base.Iterators.Zip{Tuple{Vector{Any}, Vector{Int64}}})\n  Closest\
    \ candidate"
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0 \n        return []\n    end\n    @assert maximum(arr) > 0\n    arr = map(x\
    \ -> convert(Int64, digits(x, 2)), arr)\n    t = (max(arr) + 1)^2\n    #println(arr)\n\
    \    for i in 1:length(arr)\n        arr[i] = arr[i] + t * i\n    end\n    sort(arr)\n\
    \    arr = map(x -> convert(Int64, x % t), arr)\n    return arr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmptr1x3sz5.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmptr1x3sz5.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @ Main /tmp/tmptr1x3sz5.jl:19\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmptr1x3sz5.jl:19\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmptr1x3sz5.jl:34 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmptr1x3sz5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptr1x3sz5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: maximum(arr)\
    \ > 0\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptr1x3sz5.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptr1x3sz5.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptr1x3sz5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptr1x3sz5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer; base,\
    \ pad) at ~/.conda/envs/polyglot/share/julia/base/intf"
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sort\
    \ the given vector by number of 1s in their binary representation\n    \"\"\"\n\
    \    sorted_by_ones = sort(arr, by=count_ones)\n    sorted_by_ones_and_decimal\
    \ = sort(sorted_by_ones, by=identity)\n    return sorted_by_ones_and_decimal\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa4cde9z8.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpa4cde9z8.jl:27\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4cde9z8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4cde9z8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa4cde9z8.jl:28\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4cde9z8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4cde9z8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa4cde9z8.jl:29\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4cde9z8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4cde9z8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa4cde9z8.jl:31\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4cde9z8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4cde9z8.jl:26\ntest set"
  timestamp: 1659978879
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ [ones(bincode(x)[2])[1] for x in arr])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpcoh4q110.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpcoh4q110.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bincode not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpcoh4q110.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcoh4q110.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcoh4q110.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpcoh4q110.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bincode\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpcoh4q110.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcoh4q110.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcoh4q110.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpcoh4q110.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bincode not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpcoh4q110.jl:15\n   [5] macro exp"
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    s = unique(bincount(map(Int64,\
    \ bin(arr)) .- '0'))\n    map(x -> findall(y -> x == y, bincount(map(Int64, bin(arr))\
    \ .- '0')), s)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpsrbc4jj1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpsrbc4jj1.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpsrbc4jj1.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrbc4jj1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrbc4jj1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpsrbc4jj1.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpsrbc4jj1.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrbc4jj1.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrbc4jj1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpsrbc4jj1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpsrbc4jj1.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrbc4jj1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrbc4jj1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpsrbc4jj1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpsrbc4jj1.jl:15\n\
    \   [2] "
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    @assert length(arr)\
    \ > 0\n    n = length(arr)\n    #convert to string\n    str_arr = map(Int64, string.(arr))\n\
    \    bit_array = zeros(Int64, (n, 8))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxiyrdqjb.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxiyrdqjb.jl:1\n\
    in expression starting at /tmp/tmpxiyrdqjb.jl:1\n"
  stdout: ''
  timestamp: 1659978878
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"Sorts the\
    \ given array by number of ones in their binary representations in ascending order\n\
    \    For similar number of ones, sort based on decimal value.\n    \"\"\"\n  \
    \  s = map(x -> (x, bits(x)), arr)\n    sort!(s, by = x -> (count_ones(x[2]),\
    \ x[1]))\n    return map(x -> x[1], s)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp_8_0re8.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpp_8_0re8.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n      @\
    \ Main /tmp/tmpp_8_0re8.jl:18\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#1#4\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpp_8_0re8.jl:18\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpp_8_0re8.jl:27 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpp_8_0re8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpp_8_0re8.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n      @ Main\
    \ /tmp/tmpp_8_0re8.jl:18\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#1#4\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpp_8_0re8.jl:18\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpp_8_0re8.jl:28 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpp_8_0re8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpp_8_0re8."
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmprcoa_0o1.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmprcoa_0o1.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprcoa_0o1.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprcoa_0o1.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprcoa_0o1.jl:21\ntest set:\
    \ Error During Test at /tmp/tmprcoa_0o1.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprcoa_0o1.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprcoa_0o1.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(sum(digits(x,2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpn5gqw2jh.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpn5gqw2jh.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpn5gqw2jh.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpn5gqw2jh.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpn5gqw2jh.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpn5gqw2jh.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpn5gqw2jh.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpn5gqw2jh.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659978881
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr_sort = sort(arr,\
    \ (x, y) -> bin_ones(x) < bin_ones(y) ? true : (bin_ones(x) == bin_ones(y) ? x\
    \ < y : false))\n    return arr_sort\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpjui8q6fq.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpjui8q6fq.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::Vector{Int64}, ::var\"#1#2\")\n  Closest candidates are:\n\
    \    sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpjui8q6fq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjui8q6fq.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjui8q6fq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjui8q6fq.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::Vector{Int64}, ::var\"#1#2\")\n  Closest candidates are:\n \
    \   sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpjui8q6fq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjui8q6fq.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjui8q6fq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjui8q6fq.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort(::Vector{Int64}, ::var\"#1#2\")\n  Closest candidates are:\n    sort(::AbstractVector;\
    \ kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n    so"
  timestamp: 1659978881
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(bits(x)[2:end],x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxxb6fql7.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpxxb6fql7.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @\
    \ Main /tmp/tmpxxb6fql7.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpxxb6fql7.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpxxb6fql7.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpxxb6fql7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpxxb6fql7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpxxb6fql7.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @"
  timestamp: 1659978881
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuwxvfudk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpuwxvfudk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwxvfudk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwxvfudk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978880
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr = sort(arr,\
    \ by=t->reverse(tuple(digits(t, 2)))) \n    arr = sort(arr, by=t->count_ones(t))\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpo68c1gb2.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpo68c1gb2.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#3\")(t::Int64)\n      @ Main /tmp/tmpo68c1gb2.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#3\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#3\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpo68c1gb2.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo68c1gb2.jl:24 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo68c1gb2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpo68c1gb2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#3\")(t::Int64)\n      @ Main /tmp/tmpo68c1gb2.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659978881
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here!\n\
    \    if length(arr) < 2\n        return arr\n    end\n    if arr[2] >= arr[1]\n\
    \        return sort_array(arr[2:end])\n    else\n        return sort_array([arr[2:end];\
    \ arr[1]])\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5yrc9wv3.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp5yrc9wv3.jl:30\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5] == [1, 2, 4, 3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5yrc9wv3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5yrc9wv3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5yrc9wv3.jl:31\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2] == [-4, -2, -6, -5, -3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5yrc9wv3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5yrc9wv3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5yrc9wv3.jl:32\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4] == [0, 1, 2, 4, 3]\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5yrc9wv3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5yrc9wv3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5yrc9wv3.jl:34\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77] ==\
    \ [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5yrc9wv3.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5yrc9wv3.jl:29\ntest set: Test Failed at /tmp/tmp5yrc9wv3.jl:35\n\
    \  Expression: candidate([3, 6,"
  timestamp: 1659978880
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if all(x->x<0,\
    \ arr)\n        sort(abs.(arr))\n    else\n        sort(arr, by=x->(sum(digits(x,\
    \ 2)), x))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpud5g0e_e.jl:26\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;
    base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},
    ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n  Stacktrace:\n    [1]
    (::var"#2#4")(x::Int64)\n      @ Main /tmp/tmpud5g0e_e.jl:18\n    [2] lt(o::Base.Order.By{var"#2#4",
    Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3]
    sort!\n      @ ./sort.jl:507 [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5]
    sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725
    [inlined]\n    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var"#2#4", Tuple{Symbol},
    NamedTuple{(:by,), Tuple{var"#2#4"}}})\n      @ Base.Sort ./sort.jl:772\n    [8]
    sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpud5g0e_e.jl:18\n    [9] macro
    expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [10] macro expansion\n      @ /tmp/tmpud5g0e_e.jl:26 [inlined]\n   [11]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [12] top-level scope\n      @ /tmp/tmpud5g0e_e.jl:25\ntest set:
    Test Failed at /tmp/tmpud5g0e_e.jl:27\n  Expression: candidate([-2, -3, -4, -5,
    -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [2, 3, 4, 5, 6] == [-4, -2, -6, -5,
    -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpud5g0e_e.jl:27 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpud5g0e_e.jl:25\ntest set: Error
    During Test at /tmp/tmpud5g0e_e.jl:28\n  Test threw exception\n  Expression: candidate([1,'
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \n    # Get the\
    \ number of '1's for each integer.\n    # There is no need to sort the array right\
    \ now.\n    # Instead, we can store the number of '1's in a new array.\n    #\n\
    \    # Alternatively, we could sort the array in place and count\n    # the number\
    \ of '1's later.\n    #\n    # I'm choosing the first option because my instinct\
    \ is to \n    # avoid changing the array in place.\n    counter_arr = Array{Int64}(length(arr))\n\
    \    for i in 1:length(arr)\n        counter_arr[i] = count_ones(arr[i])\n   \
    \ end\n    \n    # Sort the first array in place.\n    # First element is 'arr'\
    \ and second element is 'counter_arr'.\n    # A '2' column sort is done: sort\
    \ based on the second array.\n    #\n    # In other words, sort the array based\
    \ on the number of '1's.\n    #\n    # If there are equal number of '1's, then\
    \ sort based on the \n    # decimal value of the integers.\n    sort!(zip(arr,\
    \ counter_arr), by = x -> (x[2], x[1]))\n    \n    # Now we just need to return\
    \ the first element of the tuple.\n    return [x[1] for x in zip(arr, counter_arr)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmphmo92wit.jl:45

    '
  stdout: "test set: Error During Test at /tmp/tmphmo92wit.jl:48\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphmo92wit.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphmo92wit.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphmo92wit.jl:47\ntest set:\
    \ Error During Test at /tmp/tmphmo92wit.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp"
  timestamp: 1659978883
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp00jhgn2g.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp00jhgn2g.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp00jhgn2g.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp00jhgn2g.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    index = [bin(i)[2:end]\
    \ for i in arr]\n    index = [length(i) - length(replace(i, \"1\" => \"\")) for\
    \ i in index]\n    index, arr = merge_sort([(x, y) for (x, y) in zip(index, arr)])\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp99gw4vjf.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp99gw4vjf.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp99gw4vjf.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp99gw4vjf.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp99gw4vjf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp99gw4vjf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp99gw4vjf.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp99gw4vjf.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp99gw4vjf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp99gw4vjf.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp99gw4vjf.jl:15\n   [5] macro expansion\n     "
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr1 = sort(arr,\
    \ by = x -> (Int(sum(digits(x, base = 2))), x))\n    return arr1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyf1v5aql.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpyf1v5aql.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyf1v5aql.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyf1v5aql.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978881
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort!(arr, by =\
    \ x -> count_ones(x) != 0 ? (count_ones(x), x) : (0, x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6vsuzjyk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp6vsuzjyk.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6vsuzjyk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6vsuzjyk.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(sum(digits(x,\
    \ base=2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp845nnlmc.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp845nnlmc.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp845nnlmc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp845nnlmc.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    numones = map(x\
    \ -> sum(collect(digits(x, 2))), arr)\n    sorted_arr = sort(arr, by = numones)\n\
    \    return sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpooduh5xb.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpooduh5xb.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpooduh5xb.jl:15\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpooduh5xb.jl:15\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpooduh5xb.jl:24 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpooduh5xb.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpooduh5xb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpooduh5xb.jl:15\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpooduh5xb.jl:15\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Tes"
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = nzones)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpad5_285e.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpad5_285e.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ nzones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpad5_285e.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpad5_285e.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpad5_285e.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpad5_285e.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: nzones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpad5_285e.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpad5_285e.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpad5_285e.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpad5_285e.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: nzones not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpad5_285e.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpad5_285e.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpad5_285e.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpad5_285e.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: nzones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpad5_285e.j"
  timestamp: 1659978883
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # store (1's, number)\
    \ pairs\n    onesAndNums = [(numOnes(x), x) for x in arr]\n    # sort according\
    \ to ones and numbers\n    onesAndNumsSorted = sort(onesAndNums, by = (a, b) ->\
    \ (a[1] < b[1] || \n    (a[1] == b[1] && a[2] < b[2])))\n    # extract the numbers\n\
    \    return map(x -> x[2], onesAndNumsSorted)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpmxbk3y3t.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpmxbk3y3t.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ numOnes not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpmxbk3y3t.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmxbk3y3t.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmxbk3y3t.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmxbk3y3t.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: numOnes\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpmxbk3y3t.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmxbk3y3t.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmxbk3y3t.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmxbk3y3t.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: numOnes not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpmxbk3y3t.jl:16\n   [5] macro exp"
  timestamp: 1659978883
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Sort based on\
    \ number of ones, then by value\n    return sort(arr, by=t -> [count_ones(t),\
    \ t])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3blac9vb.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp3blac9vb.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3blac9vb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3blac9vb.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted_arr = copy(arr)\n\
    \    sorted_arr = sort(sorted_arr, by=bin_ones)\n    return sorted_arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpg96ow5ro.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpg96ow5ro.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpg96ow5ro.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg96ow5ro.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg96ow5ro.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg96ow5ro.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpg96ow5ro.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg96ow5ro.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg96ow5ro.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg96ow5ro.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin_ones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpg96ow5ro.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg96ow5ro.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg96ow5ro.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg96ow5ro.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpg9"
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    temp_arr = copy(arr)\n\
    \    # Decimal to binary\n    function dec2bin(x::Int64)::Int64\n        x > 0\
    \ ? dec2bin(x \xF7 2) * 10 + x % 2 : 0\n    end\n    # Number of ones\n    function\
    \ num_ones(x::Int64)::Int64\n        x == 0 ? 0 : x % 10 + num_ones(x \xF7 10)\n\
    \    end\n    # Fill temp_arr with the number of ones\n    for i in 1:length(temp_arr)\n\
    \        temp_arr[i] = num_ones(dec2bin(temp_arr[i]))\n    end\n    # Sort temp_arr,\
    \ then sort arr\n    # with the sort_arr as the key\n    # based on temp_arr\n\
    \    sort!(temp_arr)\n    sort!(arr, by = x -> temp_arr[findfirst(arr .== x)])\n\
    \    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_b97ef7f.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmp_b97ef7f.jl:40\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_b97ef7f.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_b97ef7f.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp_b97ef7f.jl:41\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_b97ef7f.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_b97ef7f.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp_b97ef7f.jl:42\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_b97ef7f.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_b97ef7f.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp_b97ef7f.jl:44\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 5, 2, 4, 3, 7, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_b97ef7f.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_b97ef7f.jl:39\ntest set"
  timestamp: 1659978883
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    int_1s = [count_1s(x)\
    \ for x in arr]\n    idx = sortperm(int_1s)\n    sorted_arr = arr[idx]\n    return\
    \ sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkfgluh8i.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpkfgluh8i.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_1s not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n    \
    \ @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{Int64}, var\"#1#2\"})\n     @ Base ./array.jl:724\n\
    \   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpkfgluh8i.jl:15\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkfgluh8i.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkfgluh8i.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkfgluh8i.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_1s\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpkfgluh8i.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkfgluh8i.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkfgluh8i.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkfgluh8i.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: count_1s not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpkfgluh8i.jl:15\n   [5] macro "
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Example:\n  \
    \  # [10, 7, 1, 2, 8, 9, 15]\n    # Here 7 and 8 has same binary ones, so we need\
    \ to compare their decimal value.\n    # one_count_arr = [2, 3, 1, 1, 3, 2, 4]\n\
    \    # sorted_one_count_arr = sort(one_count_arr, by=identity)\n    # Here sorted_one_count_arr\
    \ is [1, 1, 2, 2, 3, 3, 4]\n    # Now we need to sort original array according\
    \ to sorted_one_count_arr\n    # First create a tuple of one_count_arr and original\
    \ array\n    # [(2, 10), (3, 7), (1, 1), (1, 2), (3, 8), (2, 9), (4, 15)]\n  \
    \  # Sort it based on one_count_arr in ascending order\n    # [(1, 1), (1, 2),\
    \ (2, 10), (2, 9), (3, 7), (3, 8), (4, 15)]\n    # Now after sorting, first element\
    \ of each tuple\n    # [(1, 1), (1, 2), (2, 10), (2, 9), (3, 7), (3, 8), (4, 15)]\n\
    \    # convert it back to original array, [1, 2, 10, 9, 7, 8, 15]\n    # Now let's\
    \ convert above statement to Julia code\n    # First we need to check if all array\
    \ elements are non-negative\n    if any(arr .< 0)\n        error(\"Array elements\
    \ can't be negative\")\n    end\n    # Now we need to sort array according to\
    \ binary representation of ones\n    # In each element\n    one_count_arr = [count_ones(i)\
    \ for i in arr]\n    sorted_one_count_arr = sort(one_count_arr, by=identity)\n\
    \    # Now we need to sort original array according to sorted_one_count_arr\n\
    \    # First create a tuple of one_count_arr and original array\n    tuple_arr\
    \ = [(one_count_arr[i], arr[i]) for i in 1:length(arr)]\n    # Sort it based on\
    \ one_count_arr in\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzwrc0280.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzwrc0280.jl:1\n\
    in expression starting at /tmp/tmpzwrc0280.jl:1\n"
  stdout: ''
  timestamp: 1659978882
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #[sort(arr, by\
    \ = x -> (count(x, 1), x)) for x in arr]\n    arr = sort(arr, by = x -> (count(x,\
    \ 1), x))\n    arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqre7ritv.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpqre7ritv.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Int64 are not callable\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\n  Stacktrace:\n    [1] _simple_count(pred::Int64, itr::Int64,\
    \ init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::Int64, itr::Int64;\
    \ init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(f::Int64, itr::Int64)\n\
    \      @ Base ./reduce.jl:1201\n    [4] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpqre7ritv.jl:16\n    [5] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [6] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [7] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [8] sort!\n      @ ./sort.jl:664 [inlined]\n    [9] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [10] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\"\
    , Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \   [11] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpqre7ritv.jl:16\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmpqre7ritv.jl:24 [inlined]\n\
    \   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmpqre7ritv.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqre7ritv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Int64 are not callable\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\n  Stacktrace:\n    [1] _simple_count(pred::Int64, itr::Int64,\
    \ init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::Int64, itr::Int64;\
    \ init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(f::Int64, itr::Int64)\n\
    \      @ Base ./reduce.jl:1201\n    [4] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpqre7ritv.jl:16\n    [5] lt(o::"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    a = map(x -> bitcount(Int(x)),\
    \ arr)\n    a, idx = sort(a)\n    b = arr[idx]\n    return b\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp3tv3mvdx.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp3tv3mvdx.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n   \
    \   @ Main /tmp/tmp3tv3mvdx.jl:15\n    [2] iterate\n      @ ./generator.jl:47\
    \ [inlined]\n    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp3tv3mvdx.jl:15\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp3tv3mvdx.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp3tv3mvdx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3tv3mvdx.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp3tv3mvdx.jl:15\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#1#2\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp3tv3mvdx.jl:15\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp3tv3mvdx.jl:26 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp3tv3mvdx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3"
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    ones = zeros(n)\n    for i = 1:n\n        bin_i = dec2bin(arr[i])\n     \
    \   ones[i] = count(isequal(bin_i), '1')\n    end\n    indices = sortperm(ones)\n\
    \    return arr[indices]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvis2yuwe.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpvis2yuwe.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpvis2yuwe.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvis2yuwe.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvis2yuwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpvis2yuwe.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvis2yuwe.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvis2yuwe.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvis2yuwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpvis2yuwe.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpvis2yuwe.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvis2yuwe.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvis2yuwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpvis2yuwe.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{"
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code is\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmps2g6s_ht.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmps2g6s_ht.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmps2g6s_ht.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps2g6s_ht.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps2g6s_ht.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps2g6s_ht.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmps2g6s_ht.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps2g6s_ht.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted_list = sort(arr)\n\
    \    return sorted_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewsagw2.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewsagw2.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewsagw2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewsagw2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0ewsagw2.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewsagw2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewsagw2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0ewsagw2.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewsagw2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewsagw2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0ewsagw2.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewsagw2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewsagw2.jl:22\ntest set"
  timestamp: 1659978883
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # TODO: Implement\
    \ code!\n    error(\"Not implemented\")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpflykmyzq.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpflykmyzq.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  Not implemented\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpflykmyzq.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpflykmyzq.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpflykmyzq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpflykmyzq.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  Not implemented\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpflykmyzq.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpflykmyzq.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpflykmyzq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpflykmyzq.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  Not implemented\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpflykmyzq.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpflykmyzq.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpflykmyzq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpflykmyzq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  Not implemented\n  St"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    a = zeros(Int64, n)\n    for i in 1:n\n        a[i] = sum(bits(arr[i]))\n\
    \    end\n    index = sortperm(a)\n    return arr[index]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprnxcorch.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmprnxcorch.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmprnxcorch.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnxcorch.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnxcorch.jl:27\ntest set:\
    \ Error During Test at /tmp/tmprnxcorch.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmprnxcorch.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnxcorch.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnxcorch.jl:27\ntest set:\
    \ Error During Test at /tmp/tmprnxcorch.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprnxcorch.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnxcorch.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnxcorch.jl:27\ntest set:\
    \ Error During Test at /tmp/tmprnxcorch.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659978885
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    (arr, [sum(bitstring(x)=='1')\
    \ for x in arr], sort(arr, by=x->sum(bitstring(x)=='1')))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp8vylhtpl.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Tuple{Vector{Int64}, Vector{Int64}, Vector{Int64}}
    to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8vylhtpl.jl:15\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8vylhtpl.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8vylhtpl.jl:21\ntest set: Error
    During Test at /tmp/tmp8vylhtpl.jl:23\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Tuple{Vector{Int64}, Vector{Int64}, Vector{Int64}} to an object of type
    Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8vylhtpl.jl:15\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/s'
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ < 2\n        return arr\n    end\n    pivot = arr[1]\n    l = sort_array([x\
    \ for x in arr[2:end] if x < pivot])\n    r = sort_array([x for x in arr[2:end]\
    \ if x >= pivot])\n    return [l..., pivot, r...]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy8ndqplz.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpy8ndqplz.jl:28\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ndqplz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ndqplz.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpy8ndqplz.jl:29\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ndqplz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ndqplz.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpy8ndqplz.jl:30\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ndqplz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ndqplz.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpy8ndqplz.jl:32\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ndqplz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ndqplz.jl:27\ntest set"
  timestamp: 1659978884
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr = sort(arr)\n\
    \    bin_arr = [Int(i) for i in binary_array(arr)]\n    n = length(arr)\n    count\
    \ = zeros(Int64, n)\n    for i in range(1, n)\n        if bin_arr[i] == 1\n  \
    \          count[i] = count[i - 1] + 1\n        else\n            count[i] = count[i\
    \ - 1]\n        end\n    end\n    arr = sortperm(count)\n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpmswiy4i7.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpmswiy4i7.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary_array not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpmswiy4i7.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmswiy4i7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmswiy4i7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmswiy4i7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmswiy4i7.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmswiy4i7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmswiy4i7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmswiy4i7.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmswiy4i7.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmswiy4i7.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmswiy4i7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmswiy4i7.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: binary_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdsdud4zu.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpdsdud4zu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdsdud4zu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdsdud4zu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    @assert length(arr)\
    \ > 0\n    @assert maximum(arr) >= 0\n    @assert minimum(arr) >= 0\n    ones\
    \ = [bincount(i)[1] for i in arr]\n    return sortperm(collect(zip(ones, arr)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpnpoy8z3e.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpnpoy8z3e.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bincount not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::Int64)\n    \
    \ @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{Int64}, var\"#1#2\"})\n     @ Base ./array.jl:724\n\
    \   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnpoy8z3e.jl:18\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnpoy8z3e.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnpoy8z3e.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnpoy8z3e.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: maximum(arr)\
    \ >= 0\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnpoy8z3e.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnpoy8z3e.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnpoy8z3e.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnpoy8z3e.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bincount not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnpoy8z3e.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnpoy8z3e.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.co"
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here...\n\
    \    return [1, 5, 2, 3, 4]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkegs550j.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpkegs550j.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkegs550j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkegs550j.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkegs550j.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [1, 5, 2, 3, 4] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkegs550j.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkegs550j.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkegs550j.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 5, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkegs550j.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkegs550j.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkegs550j.jl:26\n  Expression: candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([])\n   Evaluated: [1, 5, 2, 3, 4] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkegs550j.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkegs550j.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkegs550j.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    arr_with_ones =\
    \ []\n    for el in arr\n        bin_el = el == 1\n        el_ones = sum(bin_el)\n\
    \        push!(arr_with_ones, (el_ones, el))\n    end\n    sorted_array = sort(arr_with_ones,\
    \ lt = (x, y) -> x[1] < y[1] || x[1] == y[1] && x[2] < y[2])\n    return [el[2]\
    \ for el in sorted_array]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphmhtmh5e.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmphmhtmh5e.jl:29\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [2, 3, 4, 5, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmhtmh5e.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmhtmh5e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphmhtmh5e.jl:30\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmhtmh5e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmhtmh5e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphmhtmh5e.jl:31\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 2, 3, 4, 1] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmhtmh5e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmhtmh5e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphmhtmh5e.jl:33\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmhtmh5e.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmhtmh5e.jl:28\ntest set"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    a = zeros(size(arr)[1])\n\
    \    b = zeros(size(arr)[1])\n    for i in 1:size(arr)[1]\n        a[i] = count_ones(arr[i])\n\
    \        b[i] = arr[i]\n    end\n    arr = [a b]\n    for i in 1:size(arr)[1]\n\
    \        for j in 1:size(arr)[1]\n            if arr[i,1] < arr[j,1]\n       \
    \         temp = arr[i,:]\n                arr[i,:] = arr[j,:]\n             \
    \   arr[j,:] = temp\n            elseif arr[i,1] == arr[j,1]\n               \
    \ if arr[i,2] < arr[j,2]\n                    temp = arr[i,:]\n              \
    \      arr[i,:] = arr[j,:]\n                    arr[j,:] = temp\n            \
    \    end\n            end\n        end\n    end\n    arr[:,2]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnse6jabj.jl:41

    '
  stdout: "test set: Test Failed at /tmp/tmpnse6jabj.jl:45\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnse6jabj.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnse6jabj.jl:43\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    len = length(arr)\n\
    \    len2 = len*2 + 1\n    res = zeros(Int64,len2)\n    for (index, val) in enumerate(arr)\n\
    \        ones = bitcount(val)\n        index2 = 2*ones + 1\n        res[index2]\
    \ += val\n    end\n    return sort(res[2:len2-1])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpiukzrsh3.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpiukzrsh3.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpiukzrsh3.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiukzrsh3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiukzrsh3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiukzrsh3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpiukzrsh3.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiukzrsh3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiukzrsh3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiukzrsh3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpiukzrsh3.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiukzrsh3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiukzrsh3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiukzrsh3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vec"
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuyt2_ds4.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpuyt2_ds4.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyt2_ds4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyt2_ds4.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  return reverse(sort(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphw6ikopz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmphw6ikopz.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphw6ikopz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphw6ikopz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphw6ikopz.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphw6ikopz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphw6ikopz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphw6ikopz.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphw6ikopz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphw6ikopz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphw6ikopz.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphw6ikopz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphw6ikopz.jl:21\ntest set"
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    a=sort(arr, rev=true)\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpek1do2gx.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpek1do2gx.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpek1do2gx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpek1do2gx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpek1do2gx.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpek1do2gx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpek1do2gx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpek1do2gx.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpek1do2gx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpek1do2gx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpek1do2gx.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpek1do2gx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpek1do2gx.jl:22\ntest set"
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    inds = Int64[]\n\
    \    for i in 1:length(arr)\n        push!(inds, collect(eachindex(arr[i])))\n\
    \    end\n    return sort(arr, by = tuple)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpfkjg5oxl.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpfkjg5oxl.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Int64}, item::Vector{Int64})\n\
    \     @ Base ./array.jl:994\n   [2] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfkjg5oxl.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfkjg5oxl.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfkjg5oxl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfkjg5oxl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Int64}, item::Vector{Int64})\n\
    \     @ Base ./array.jl:994\n   [2] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfkjg5oxl.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfkjg5oxl.jl:27 [inlined]\n\
    \   [5] macro exp"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdsdud4zu.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpdsdud4zu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdsdud4zu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdsdud4zu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp63hdmll6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp63hdmll6.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hdmll6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp63hdmll6.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hdmll6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = tuple->(sum(map(isequal('1'),digits(2, tuple))),tuple))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0b_sp_fs.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp0b_sp_fs.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(tuple::Int64)\n      @ Main /tmp/tmp0b_sp_fs.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp0b_sp_fs.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp0b_sp_fs.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp0b_sp_fs.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0b_sp_fs.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(tuple::Int64)\n      @ Main /tmp/tmp0b_sp_fs.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    s = sort(arr, by=x->[find_zeros(x),\
    \ x])\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4nnx1xmx.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp4nnx1xmx.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ find_zeros not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmp4nnx1xmx.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp4nnx1xmx.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp4nnx1xmx.jl:23 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp4nnx1xmx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4nnx1xmx.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: find_zeros\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp4nnx1xmx.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ s"
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdsdud4zu.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpdsdud4zu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdsdud4zu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdsdud4zu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \n    # sort by\
    \ number of ones, then by decimal value\n    # count number of ones using (bits=Int(bin(x)[2:end])).count('1')\n\
    \    # sort!(arr, by=x->(bits=Int(bin(x)[2:end])).count('1'))\n    # sort!(arr,\
    \ by=x->(bits=Int(bin(x)[2:end])).count('1')*1e10+x)\n    \n    # n=length(arr)\n\
    \    # count_ones=map(x->(bits=Int(bin(x)[2:end])).count('1'), arr)\n    # sort!(arr,\
    \ by=x->(i=findfirst(arr.==x); count_ones[i]*1e10+x))\n    \n    # n=length(arr)\n\
    \    # @. count_ones = map(x->(bits=Int(bin(x)[2:end])).count('1'), arr)\n   \
    \ # @. arr[argsort(count_ones*1e10+arr)]\n    \n    n=length(arr)\n    @. count_ones\
    \ = (bits=Int(bin(arr)[2:end])).count('1')\n    @. arr[argsort(count_ones*1e10+arr)]\n\
    end\n@test sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n@test sort_array([-2,\
    \ -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n@test sort_array([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 3, 4]\n@test sort_array([1, 1, 1, 0, 0, 0]) == [0, 0, 0, 1, 1,\
    \ 1]\n@test sort_array([1, 2, 0, 2, 0, 1]) == [0, 0, 1, 1, 2, 2]\n@test sort_array([1,\
    \ 2, 0, 2, 0, 1, 7, 0, 6, 7, 7, 1, 6, 7, 7, 0, 1, 2\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpe5pa0czw.jl:33

    in expression starting at /tmp/tmpe5pa0czw.jl:33

    '
  stdout: ''
  timestamp: 1659978885
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by the number\
    \ of ones in their binary representation\n    sorted = sort(arr, by=get_ones,\
    \ rev=true)\n    # then sort by decimal value\n    return sort(sorted, by=identity)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpi0x8sbmm.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpi0x8sbmm.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ get_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpi0x8sbmm.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0x8sbmm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0x8sbmm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi0x8sbmm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: get_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpi0x8sbmm.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0x8sbmm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0x8sbmm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi0x8sbmm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: get_ones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpi0x8sbmm.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0x8sbmm.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0x8sbmm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi0x8sbmm.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: get_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpi0"
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code goes\
    \ here\n    arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf_mgv0es.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpf_mgv0es.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_mgv0es.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_mgv0es.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpf_mgv0es.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_mgv0es.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_mgv0es.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpf_mgv0es.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_mgv0es.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_mgv0es.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpf_mgv0es.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 3, 5, 7, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_mgv0es.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_mgv0es.jl:22\ntest set"
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    @assert all(arr\
    \ .>= 0)\n    bits = [bits(x) for x in arr]\n    return sort(arr, by = (x->bits[x],\
    \ x->x))\nend\n \nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6_8bsp75.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp6_8bsp75.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp6_8bsp75.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6_8bsp75.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6_8bsp75.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6_8bsp75.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: all(arr\
    \ .>= 0)\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp6_8bsp75.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6_8bsp75.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_8bsp75.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6_8bsp75.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp6_8bsp75.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6_8bsp75.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/po"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  new_arr = sort(arr,\
    \ by=x->sum(digits(x, base=2)))\n  new_arr = sort(new_arr, by=x->x)\n  return\
    \ new_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdtn9h1fi.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpdtn9h1fi.jl:24\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtn9h1fi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtn9h1fi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdtn9h1fi.jl:25\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtn9h1fi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtn9h1fi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdtn9h1fi.jl:26\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtn9h1fi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtn9h1fi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdtn9h1fi.jl:28\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtn9h1fi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtn9h1fi.jl:23\ntest set"
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0 return [] end\n    arr = sort(arr, by = x -> (bitcount(x), x))\n    return\
    \ arr\nend\n \n\"\"\"[a]:\n    https://www.codewars.com/kata/59f7fc109f0e86d705000043/train/julia\n\
    \    The input string will be:\n    a = \"--h-m--e--l--l--o-- -w--o--r--l--d--\"\
    \n    The string will contain one or more words (or parts of words) like\n   \
    \ \"hello\", \"world\", \"hi\", \"greetings\" and then random symbols as well.\n\
    \    The goal is to return a string that contains only the words that start\n\
    \    with a vowel.\n    >>> sort_string(\"--h-m--e--l--l--o-- -w--o--r--l--d--\"\
    )\n    \"--e--o-- --o-- -w--o--r--l--d--\"\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpg6ovwu0h.jl:20\nin expression starting at /tmp/tmpg6ovwu0h.jl:20\n"
  stdout: ''
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp00jhgn2g.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp00jhgn2g.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp00jhgn2g.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp00jhgn2g.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    @assert length(arr)\
    \ >= 1 \"Array length must be >= 1.\"\n    @assert all(x >= 0 for x in arr) \"\
    All elements must be non-negative.\"\n    if all(x >= 0 for x in arr)\n      \
    \  binarr = Array{String}(undef, length(arr))\n        for i = 1:length(arr)\n\
    \            binarr[i] = dec2bin(arr[i])\n        end\n        ones = Array{Int64}(undef,\
    \ length(arr))\n        for i = 1:length(arr)\n            ones[i] = count(x ->\
    \ x == '1', binarr[i])\n        end\n        # Same number of ones\n        sameones\
    \ = findall(ones .== ones[1])\n        sameonesarr = arr[sameones]\n        if\
    \ length(sameonesarr) > 1\n            sameonesarr = sort(sameonesarr)\n     \
    \   end\n        # Different number of ones\n        others = findall(ones .!=\
    \ ones[1])\n        othersarr = arr[others]\n        if length(othersarr) > 1\n\
    \            othersarr = sort(othersarr)\n        end\n        # Put the parts\
    \ together\n        if length(sameonesarr) == 1 && length(othersarr) == 1\n  \
    \          arr = [sameonesarr[1], othersarr[1]]\n        elseif length(sameonesarr)\
    \ == 1 && length(othersarr) > 1\n            arr = [sameonesarr[1], othersarr]\n\
    \        elseif length(sameonesarr) > 1 && length(othersarr) == 1\n          \
    \  arr = [sameonesarr, othersarr[1]]\n        else\n            arr = [sameonesarr,\
    \ othersarr]\n        end\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp07v4n7pf.jl:53

    '
  stdout: "test set: Error During Test at /tmp/tmp07v4n7pf.jl:56\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp07v4n7pf.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07v4n7pf.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07v4n7pf.jl:55\ntest set:\
    \ Error During Test at /tmp/tmp07v4n7pf.jl:57\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: All\
    \ elements must be non-negative.\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp07v4n7pf.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07v4n7pf.jl:57 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07v4n7pf.jl:55\ntest set:\
    \ Error During Test at /tmp/tmp07v4n7pf.jl:58\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp07v4n7pf.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07v4n7pf.jl:58 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07v4n7pf.jl:55\ntest set:\
    \ Error During Test at /tmp/tmp07v4n7pf.jl:59\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  AssertionError: Array length\
    \ must be >= 1.\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n  "
  timestamp: 1659978889
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n \n    for i in 1:length(arr)\n\
    \        for j in 1:length(arr)\n            if count_ones(arr[i]) < count_ones(arr[j])\n\
    \                temp = arr[i]\n                arr[i] = arr[j]\n            \
    \    arr[j] = temp\n            elseif count_ones(arr[i]) == count_ones(arr[j])\n\
    \                if arr[i] < arr[j]\n                    temp = arr[i]\n     \
    \               arr[i] = arr[j]\n                    arr[j] = temp\n         \
    \       end\n            end\n        end\n    end\n    \n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdgo0y2qd.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpdgo0y2qd.jl:40\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdgo0y2qd.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdgo0y2qd.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # \n    N = length(arr)\n\
    \    v = zeros(Int64, N)\n    for i = 1:N\n        # binary vals of arr\n    \
    \    v[i] = binary_vec(arr[i])\n    end\n    # sort v by the number of 1's they\
    \ have\n    sorted_v = sort(v, by = length)\n    # number of unique length of\
    \ v\n    unique_length = unique(length.(sorted_v))\n    # collect the values of\
    \ same length\n    unique_length_values = Vector{Vector{Int64}}()\n    for i =\
    \ 1:length(unique_length)\n        value = Vector{Int64}()\n        for j = 1:length(sorted_v)\n\
    \            if length(sorted_v[j]) == unique_length[i]\n                push!(value,\
    \ arr[findall(sorted_v .== sorted_v[j])[1]])\n            end\n        end\n \
    \       push!(unique_length_values, value)\n    end\n    # sort each value by\
    \ their decimal values\n    for i = 1:length(unique_length_values)\n        sort!(unique_length_values[i])\n\
    \    end\n    sorted_arr = zeros(Int64, N)\n    j = 1\n    for i = 1:length(unique_length_values)\n\
    \        sorted_arr[j:j+length(unique_length_values[i])-1] = unique_length_values[i]\n\
    \        j += length(unique_length_values[i])\n    end\n    return sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp79mwf_qs.jl:51

    '
  stdout: "test set: Error During Test at /tmp/tmp79mwf_qs.jl:54\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary_vec not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp79mwf_qs.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79mwf_qs.jl:54 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79mwf_qs.jl:53\ntest set:\
    \ Error During Test at /tmp/tmp79mwf_qs.jl:55\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary_vec\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp79mwf_qs.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79mwf_qs.jl:55 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79mwf_qs.jl:53\ntest set:\
    \ Error During Test at /tmp/tmp79mwf_qs.jl:56\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary_vec not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp79mwf_qs.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79mwf_qs.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79mwf_qs.jl:53\ntest set:\
    \ Error During Test at /tmp/tmp79mwf_qs.jl:58\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: binary_vec not defined\n  Stacktrace:\n   [1] sort_array("
  timestamp: 1659978889
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort on binary\
    \ representation and decimal representation\n    # of the vector elements\n  \
    \  sort(arr, by=x->(count_ones(x),x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnpbzzplf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpnpbzzplf.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnpbzzplf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnpbzzplf.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    ones = zeros(length(arr))\n\
    \    for i in 1:length(arr)\n        ones[i] = sum(map(x -> x == '1', string(arr[i])))\n\
    \    end\n    idx = argsort(ones)\n    return arr[idx]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpyzdzs6q2.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpyzdzs6q2.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  ArgumentError:\
    \ map(f, s::AbstractString) requires f to return AbstractChar; try map(f, collect(s))\
    \ or a comprehension instead\n  Stacktrace:\n   [1] map(f::var\"#1#2\", s::String)\n\
    \     @ Base ./strings/basic.jl:611\n   [2] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpyzdzs6q2.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyzdzs6q2.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyzdzs6q2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyzdzs6q2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: map(f,\
    \ s::AbstractString) requires f to return AbstractChar; try map(f, collect(s))\
    \ or a comprehension instead\n  Stacktrace:\n   [1] map(f::var\"#1#2\", s::String)\n\
    \     @ Base ./strings/basic.jl:611\n   [2] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpyzdzs6q2.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyzdzs6q2.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyzdzs6q2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyzdzs6q2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  ArgumentError: map(f, s::AbstractString)\
    \ requires f to return AbstractChar; try map(f, collect(s)) or a comprehension\
    \ instead\n  Stacktrace:\n   [1] map(f::var\"#1#2\", s::String)\n     @ Base ./strings/basic.jl:611\n\
    \   [2] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpyzdzs6q2.jl:17\n \
    \  [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inli"
  timestamp: 1659978889
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    function get_number_of_ones(number::Int64)::Int64\n\
    \        res::Int64 = 0\n        while number != 0\n            if number % 2\
    \ == 1\n                res += 1\n            end\n            number = div(number,\
    \ 2)\n        end\n        return res\n    end\n    return sort(arr, by = get_number_of_ones)\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7noydks.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpw7noydks.jl:33\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7noydks.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7noydks.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpw7noydks.jl:34\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7noydks.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7noydks.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpw7noydks.jl:37\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7noydks.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7noydks.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpw7noydks.jl:38\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7noydks.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorting_factor\
    \ = [count_ones(x) for x in arr]\n    return sortperm(sorting_factor, by=arr)\n\
    end\n```\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphv9rsaxb.jl:18\nin expression starting at\
    \ /tmp/tmphv9rsaxb.jl:18\n"
  stdout: ''
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sort\
    \ the array by integer and count the number of one\n    \"\"\"\n    # sort the\
    \ array by integers and count the number of one\n    dict_arr = Dict()\n    for\
    \ i in arr\n        bin_str = Int(i)\n        count = count_one(bin_str)\n   \
    \     if count in keys(dict_arr)\n            push!(dict_arr[count], i)\n    \
    \    else\n            dict_arr[count] = [i]\n        end\n    end\n    # sort\
    \ each element in the array and concatenate the array\n    sorted_arr = []\n \
    \   for key in sort(collect(keys(dict_arr)))\n        sorted_arr = vcat(sorted_arr,\
    \ sort(dict_arr[key]))\n    end\n    return sorted_arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqyd5j58r.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpqyd5j58r.jl:41\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_one not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpqyd5j58r.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqyd5j58r.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqyd5j58r.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqyd5j58r.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_one\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqyd5j58r.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqyd5j58r.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqyd5j58r.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqyd5j58r.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: count_one not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpqyd5j58r.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqyd5j58r.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqyd5j58r.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqyd5j58r.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: count_one not defined\n  Stacktrace:\n   [1] sort_array(arr:"
  timestamp: 1659978889
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  a = sort(arr, by\
    \ = x -> (count_ones(x), x))\n  return a\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzk88082r.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpzk88082r.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk88082r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk88082r.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    nnz_indices = findall(arr\
    \ .> 0)\n    nz_arr = arr[nnz_indices]\n    bit_counts = [bin(i)[2:end] for i\
    \ in nz_arr]\n    count_array = [count(x->x=='1', bit_counts[i]) for i in 1:length(bit_counts)]\n\
    \    sort_indices = sortperm(count_array)\n    sorted_arr = [nz_arr[i] for i in\
    \ sort_indices]\n    sorted_indices = [nnz_indices[i] for i in sort_indices]\n\
    \    arr[sorted_indices] = sorted_arr\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4m97f5rl.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp4m97f5rl.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#6\")(i::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#6\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp4m97f5rl.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp4m97f5rl.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp4m97f5rl.jl:29\ntest set:\
    \ Test Failed at /tmp/tmp4m97f5rl.jl:31\n  Expression: candidate([-2, -3, -4,\
    \ -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4,\
    \ -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m97f5rl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m97f5rl.jl:29\ntest set: Error\
    \ During Test at /tmp/tmp4m97f5rl.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#6\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#6\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp4m97f5rl.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp4m97f5rl.jl:32 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tm"
  timestamp: 1659978891
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    strarr = binary(arr)\n\
    \    tosort = sort(strarr)\n    sort_order = Array{Int64}(length(tosort))\n  \
    \  for (i, item) in enumerate(tosort)\n        sort_order[i] = argmax(strarr .==\
    \ item)\n    end\n    #@show sort_order\n    r = arr[sort_order]\n    return r\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptz3jcfmq.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmptz3jcfmq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmptz3jcfmq.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptz3jcfmq.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptz3jcfmq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptz3jcfmq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmptz3jcfmq.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptz3jcfmq.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptz3jcfmq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptz3jcfmq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptz3jcfmq.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptz3jcfmq.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptz3jcfmq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptz3jcfmq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: binary not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptz3jcfmq.j"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Given\
    \ a vector of integers, sort them according to the number of 1s in their\n   \
    \ binary representation.\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3zfxkxy4.jl:1\nin expression starting at /tmp/tmp3zfxkxy4.jl:1\n"
  stdout: ''
  timestamp: 1659978887
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = [count_ones(x) for x in arr])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnqydm763.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpnqydm763.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Int64},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Int64}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpnqydm763.jl:15\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpnqydm763.jl:22 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpnqydm763.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnqydm763.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Int64},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Int64}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpnqydm763.jl:15\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    bin_arr = [bin(x)\
    \ for x in arr]\n    bit_count_arr = [count_bits(x) for x in bin_arr]\n    return\
    \ sort(arr, by = (bit_count_arr, abs(arr)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpyzplfxmo.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyzplfxmo.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzplfxmo.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyzplfxmo.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyzplfxmo.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyzplfxmo.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzplfxmo.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyzplfxmo.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyzplfxmo.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyzplfxmo.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzplfxmo.jl:15\n   [5] macro expansion\n     "
  timestamp: 1659978891
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sorts\
    \ a vector of integers by the number of ones in their binary representation\n\
    \    and by value\n    \"\"\"\n    # This will help us know which binary representation\
    \ has the most ones\n    maxones = 0\n    # This will help us know which binary\
    \ representation has the least ones\n    minones = length(arr) + 1\n    # This\
    \ will help us know the max value\n    maxval = 0\n    # This will help us know\
    \ the min value\n    minval = 1e14\n    # The vector we will be returning\n  \
    \  sorted_vec = Vector{Int64}(undef, length(arr))\n    # Iterate through the input\
    \ vector, taking the binary representation\n    # of each number and counting\
    \ the number of ones. \n    # Update the min and max ones and min and max val\
    \ if needed\n    for (i, num) in enumerate(arr)\n        # Vector of binary number\n\
    \        bin_vec = Base.digits(num, 2)\n        # Count the number of ones\n \
    \       num_ones = sum(bin_vec)\n        # Update maxones, minones, maxval, minval\
    \ if needed\n        maxones = max(maxones, num_ones)\n        minones = min(minones,\
    \ num_ones)\n        maxval = max(maxval, num)\n        minval = min(minval, num)\n\
    \    end\n    # This will help us know the index in sorted_vec where we will be\
    \ inserting our numbers\n    index = 1\n    # Iterate through maxones down to\
    \ minones\n    for i in maxones:-1:minones\n        # Iterate through arr\n  \
    \      for (j, num) in enumerate(arr)\n            # If the number of ones is\
    \ i\n            if sum(Base.digits(num, 2)) == i\n                # If the number\
    \ is not equal to the maximum value\n                if num != maxval\n      \
    \              # Insert num into the proper position in sorted_vec\n         \
    \           sorted_vec[index] = num\n                    # increment index\n \
    \                   index += 1\n                else\n                    # number\
    \ of ones equals maxones\n                    # if we are at the end of arr\n\
    \                    if j == length(arr)\n                        # number of\
    \ ones equals maxones and we are at the end of arr\n                       \n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8du0is6.jl:1\nin expression starting at /tmp/tmpp8du0is6.jl:1\n"
  stdout: ''
  timestamp: 1659978888
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    one_index = findall(x\
    \ -> x > 0, arr)\n    zeros_index = findall(x -> x < 0, arr)\n    abs_arr = abs.(arr)\n\
    \    sorted_ones = sort(abs_arr[one_index], by = x -> -count_ones(x), rev = true)\n\
    \    sorted_zeros = sort(abs_arr[zeros_index], by = x -> -count_ones(x), rev =\
    \ true)\n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr[one_index]\
    \ = sorted_ones\n    sorted_arr[zeros_index] = -sorted_zeros\n    return sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu3lt7dv6.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpu3lt7dv6.jl:30\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3lt7dv6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3lt7dv6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu3lt7dv6.jl:31\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -4, -3, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3lt7dv6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3lt7dv6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu3lt7dv6.jl:32\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 4, 3] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3lt7dv6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3lt7dv6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu3lt7dv6.jl:34\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3lt7dv6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3lt7dv6.jl:29\ntest set"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    s = []\n    for\
    \ x in arr\n        count = count_ones(x)\n        push!(s, (count, x))\n    end\n\
    \    s = sort(s, by = x -> x[1])\n    ans = map(x -> x[2], s)\n    return(ans)\n\
    end\nsort_array([1, 5, 2, 3, 4])\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt4h605uu.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpt4h605uu.jl:30\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt4h605uu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt4h605uu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpt4h605uu.jl:31\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt4h605uu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt4h605uu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpt4h605uu.jl:34\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt4h605uu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt4h605uu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpt4h605uu.jl:35\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt4h605uu.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # @assert(length(arr)\
    \ <= 50)\n    # @assert(all(elem -> elem > -10000, arr))\n    # @assert(all(elem\
    \ -> elem < 10000, arr))\n    sorted_arr = Int[]\n    ones_dict = Dict{Int64,\
    \ Int64}()\n    zeros_dict = Dict{Int64, Int64}()\n    for num in arr\n      \
    \  binary_num = bin(num)\n        ones_dict[num] = count(x -> x == '1', binary_num)\n\
    \        zeros_dict[num] = count(x -> x == '0', binary_num)\n    end\n    sort!(arr,\
    \ by = (n -> ones_dict[n], n -> n))\n    return arr\nend\nsort_array([1, 5, 2,\
    \ 3, 4])\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: bin not defined\nStacktrace:\n [1] sort_array(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmpep3qnpjc.jl:22\n [2] top-level scope\n   @ /tmp/tmpep3qnpjc.jl:29\n\
    in expression starting at /tmp/tmpep3qnpjc.jl:29\n"
  stdout: ''
  timestamp: 1659978889
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Sort the input\
    \ vector of non-negative integers\n    # by the number of ones in their binary\
    \ representations\n    # For similar number of ones, sort based on decimal value\n\
    \    # Type: Vector{Int64} -> Vector{Int64}\n    # Example: sort_array([1, 5,\
    \ 2, 3, 4]) == [1, 2, 3, 4, 5]\n    return sort(arr, by = x -> (tuple(reverse(digits(x,\
    \ 2))), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp2jx2dvs5.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp2jx2dvs5.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp2jx2dvs5.jl:20\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp2jx2dvs5.jl:20\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp2jx2dvs5.jl:27 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp2jx2dvs5.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp2jx2dvs5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp2jx2dvs5.jl:20\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # 1. Get number\
    \ of ones in binary of each element\n    # 2. Sort based on number of ones and\
    \ then by decimal value\n    return sort(arr, by=x->(count_ones(x), x))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjy7nlk9h.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjy7nlk9h.jl:25\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy7nlk9h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy7nlk9h.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  \n  bin_ones = [count_ones(abs(i))\
    \ for i in arr]\n  return sortperm(bin_ones)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_jrlthc_.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp_jrlthc_.jl:24\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jrlthc_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jrlthc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_jrlthc_.jl:25\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [1, 3, 2, 4, 5] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jrlthc_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jrlthc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_jrlthc_.jl:26\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jrlthc_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jrlthc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_jrlthc_.jl:28\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 4,\
    \ 9, 11, 2, 5, 6, 7, 10, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jrlthc_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jrlthc_.jl:23\ntest set: Te"
  timestamp: 1659978891
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->(-count_ones(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpurxb0h_b.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpurxb0h_b.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [3, 5, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurxb0h_b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurxb0h_b.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpurxb0h_b.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-5, -3, -2, -6, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurxb0h_b.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurxb0h_b.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpurxb0h_b.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurxb0h_b.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurxb0h_b.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpurxb0h_b.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 3, 3, 5, 5, 5, 2, 2, 4, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurxb0h_b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurxb0h_b.jl:21\ntest set"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # ascending order,\
    \ first sort by ones, then by decimal value\n    sorted = sort(arr, lt=(x, y)\
    \ -> (bitcount(x) < bitcount(y)) || (bitcount(x) == bitcount(y) && x < y))\n \
    \   return sorted\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpeoqg8dbz.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpeoqg8dbz.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n\
    \      @ Main /tmp/tmpeoqg8dbz.jl:16\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772\
    \ [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpeoqg8dbz.jl:16\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpeoqg8dbz.jl:24 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpeoqg8dbz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpeoqg8dbz.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n  \
    \    @ Main /tmp/tmpeoqg8dbz.jl:16\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6]"
  timestamp: 1659978891
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # map to a tuple\
    \ (number of ones, number)\n    ones_and_numbers = [(count_ones(n), n) for n in\
    \ arr]\n    sort!(ones_and_numbers) # sort on the first element of the tuple\n\
    \    # map to the second element of the tuple\n    map(x -> x[2], ones_and_numbers)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsubpyo1h.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpsubpyo1h.jl:27\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsubpyo1h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsubpyo1h.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0 \n        return arr\n    end\n    sorted = sort(arr)\n    for i in 1:length(sorted)\n\
    \        sorted[i] = bin(sorted[i])\n    end\n    sort(sorted)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp85p0lewj.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp85p0lewj.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmp85p0lewj.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp85p0lewj.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp85p0lewj.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp85p0lewj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp85p0lewj.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp85p0lewj.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp85p0lewj.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp85p0lewj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp85p0lewj.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp85p0lewj.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp85p0lewj.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp85p0lewj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ M"
  timestamp: 1659978891
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    pairs = Vector{Tuple{Int64, Int64}}(undef, n)\n    for i = 1:n\n        pair\
    \ = Tuple{Int64, Int64}(arr[i], 0)\n        while pair[1] > 0\n            pair[2]\
    \ += pair[1] % 2\n            pair[1] = div(pair[1], 2)\n        end\n       \
    \ pairs[i] = pair\n    end\n    pairs = sort(pairs, by = x -> (x[2], x[1]))\n\
    \    for i = 1:n\n        arr[i] = pairs[i][1]\n    end\n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnn7pt7py.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpnn7pt7py.jl:36\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching Tuple{Int64, Int64}(::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    (::Type{T})(::Any) where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnn7pt7py.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnn7pt7py.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnn7pt7py.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpnn7pt7py.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching Tuple{Int64, Int64}(::Int64, ::Int64)\n  Closest candidates are:\n\
    \    (::Type{T})(::Any) where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnn7pt7py.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnn7pt7py.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnn7pt7py.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpnn7pt7py.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ Tuple{Int64, Int64}(::Int64, ::Int64)\n  Closest candidates are:\n    (::Type{T})(::Any)\
    \ where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnn7pt7py.jl:18\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro exp"
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code\n \
    \   return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9m8ry7g6.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp9m8ry7g6.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9m8ry7g6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9m8ry7g6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9m8ry7g6.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9m8ry7g6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9m8ry7g6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9m8ry7g6.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9m8ry7g6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9m8ry7g6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9m8ry7g6.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9m8ry7g6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9m8ry7g6.jl:22\ntest set"
  timestamp: 1659978890
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n   bin_sort(arr)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpuoyqwgmd.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpuoyqwgmd.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin_sort not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpuoyqwgmd.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoyqwgmd.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoyqwgmd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpuoyqwgmd.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpuoyqwgmd.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoyqwgmd.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoyqwgmd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpuoyqwgmd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin_sort not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpuoyqwgmd.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoyqwgmd.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoyqwgmd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpuoyqwgmd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpuo"
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort_array = [binary_count_to_decimal(bitcount(x))\
    \ for x in arr]\n    sort!(sort_array)\n    sort_array\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmptewrajir.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmptewrajir.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n    \
    \ @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{Int64}, var\"#1#2\"})\n     @ Base ./array.jl:724\n\
    \   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptewrajir.jl:15\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptewrajir.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptewrajir.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptewrajir.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmptewrajir.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptewrajir.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptewrajir.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptewrajir.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmptewrajir.jl:15\n   [5] macro "
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by=x->(sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxw0jsd2_.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpxw0jsd2_.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpxw0jsd2_.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpxw0jsd2_.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpxw0jsd2_.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpxw0jsd2_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpxw0jsd2_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpxw0jsd2_.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n   "
  timestamp: 1659978893
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \n    ones = Array{Int64}(undef,\
    \ length(arr))\n    for i in 1:length(arr)\n        ones[i] = bits(arr[i])\n \
    \   end\n    \n    order = sortperm(ones)\n    reverse!(order)\n    reverse!(arr)\n\
    \    arr = arr[order]\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnyymau99.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpnyymau99.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpnyymau99.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnyymau99.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnyymau99.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpnyymau99.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpnyymau99.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnyymau99.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnyymau99.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpnyymau99.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnyymau99.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnyymau99.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnyymau99.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpnyymau99.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdsdud4zu.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpdsdud4zu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdsdud4zu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdsdud4zu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdsdud4zu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdsdud4zu.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978886
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return sort(arr, by=x->[length(digits(x, base=2, pad=false)), x])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvv9ofhlc.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpvv9ofhlc.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv9ofhlc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv9ofhlc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvv9ofhlc.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-3, -2, -6, -5, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv9ofhlc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv9ofhlc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvv9ofhlc.jl:25\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv9ofhlc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv9ofhlc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvv9ofhlc.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv9ofhlc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv9ofhlc.jl:22\ntest set"
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Change the vector\
    \ to an array of tuples of the form:\n    # (count_ones, binary_representation,\
    \ original_number)\n    arr_tuple = [(count_ones(x), x, x) for x in arr]\n   \
    \ # Sort by number of ones\n    sorted_array = sort(arr_tuple, by=x->x[1])\n \
    \   # For the same number of ones, sort by the decimal representation\n    final_sorted_array\
    \ = sort(sorted_array, by=x->x[2])\n    # Return the vector of the sorted decimal\
    \ representation of the numbers\n    return [final_sorted_array[i][3] for i in\
    \ 1:length(final_sorted_array)]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoto2g2cn.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpoto2g2cn.jl:30\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoto2g2cn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoto2g2cn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpoto2g2cn.jl:31\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoto2g2cn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoto2g2cn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpoto2g2cn.jl:32\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoto2g2cn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoto2g2cn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpoto2g2cn.jl:34\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoto2g2cn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoto2g2cn.jl:29\ntest set"
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted = sort(arr,\
    \ by = x -> (count_ones(x), x))\n    return sorted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9xmy0rjr.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp9xmy0rjr.jl:24\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xmy0rjr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xmy0rjr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Replace these\
    \ with your code\n    n = length(arr)\n    S = zeros(Int64, n)\n    for i = 1:n\n\
    \        S[i] = popcount(arr[i])\n    end\n    S, inds = sort(S)\n    sorted =\
    \ zeros(Int64, n)\n    for i = 1:n\n        sorted[i] = arr[inds[i]]\n    end\n\
    \    sorted\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpddwp6547.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpddwp6547.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ popcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpddwp6547.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddwp6547.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddwp6547.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpddwp6547.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: popcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpddwp6547.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddwp6547.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddwp6547.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpddwp6547.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: popcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpddwp6547.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddwp6547.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddwp6547.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpddwp6547.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./arr"
  timestamp: 1659978893
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # sort by bin(arr)\
    \ then sort by arr\n    return sort(arr, by = i -> sort(bin(i), by = j -> sum(j\
    \ .== '1')))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyon7tqmp.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpyon7tqmp.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n      @ Main\
    \ /tmp/tmpyon7tqmp.jl:16\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg, order::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:664\n    [6]\
    \ sort!(v::Vector{Int64}; alg::Base.Sort.QuickSortAlg, lt::Function, by::Function,\
    \ rev::Nothing, order::Base.Order.ForwardOrdering)\n      @ Base.Sort ./sort.jl:725\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#3\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#3\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpyon7tqmp.jl:16\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpyon7tqmp.jl:23 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpyon7tqmp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyon7tqmp.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n      @ Main\
    \ /tmp/tmpyon7tqmp.jl:16\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64"
  timestamp: 1659978894
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    length(arr) >=\
    \ 1 && length(arr) <= 10^6 || error(\"\")\n    all(i -> i >= 0 && i <= 10^9, arr)\
    \ || error(\"\")\n    sort(arr, by=x->(sum(digits(x; base=2)), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpyryrsjn2.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyryrsjn2.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  \n \
    \ Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyryrsjn2.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyryrsjn2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyryrsjn2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyryrsjn2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  \n  Stacktrace:\n   [1]\
    \ error(s::String)\n     @ Base ./error.jl:33\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyryrsjn2.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyryrsjn2.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyryrsjn2.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    6      2      8\n"
  timestamp: 1659978893
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by=x->sum(digits(x,\
    \ 2, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp77cogxwt.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp77cogxwt.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64; base=2)\n  Closest candidates are:\n\
    \    digits(::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp77cogxwt.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp77cogxwt.jl:15\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp77cogxwt.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp77cogxwt.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp77cogxwt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64; base=2)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp77cogxwt.jl:15\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ord"
  timestamp: 1659978894
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    bin_counts = [sum(int2bin(x))\
    \ for x in arr]\n    return sortperm(bin_counts, arr)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp_wgejfko.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp_wgejfko.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ int2bin not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_wgejfko.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_wgejfko.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_wgejfko.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_wgejfko.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: int2bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_wgejfko.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_wgejfko.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_wgejfko.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_wgejfko.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: int2bin not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_wgejfko.jl:15\n   [5] macro exp"
  timestamp: 1659978895
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # iterate over\
    \ each element of the array\n    for i in eachindex(arr)\n        binary = convert(Vector{Int64},\
    \ bits(arr[i]))\n        # if the element is not a positive integer, skip it\n\
    \        if typeof(arr[i]) != Int64 || arr[i] < 0\n            continue\n    \
    \    end\n        # calculate the number of ones in the binary representation\
    \ of the\n        # element and append it to the end of the element\n        ones\
    \ = count(x -> x == 1, binary)\n        arr[i] = arr[i] * 10^(ones + 1)\n    end\n\
    \    # sort the array based on its decimal value with the number of ones in\n\
    \    # its binary representation appended to the end\n    sort!(arr)\n    # remove\
    \ the appended number of ones from each element\n    for i in eachindex(arr)\n\
    \        arr[i] = div(arr[i], 10^(digits(arr[i], 10) - 1))\n    end\n    return\
    \ arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph6i61aek.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmph6i61aek.jl:41\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmph6i61aek.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6i61aek.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6i61aek.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph6i61aek.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmph6i61aek.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6i61aek.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6i61aek.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph6i61aek.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmph6i61aek.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6i61aek.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6i61aek.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph6i61aek.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659978894
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n  new_arr = sort(arr,\
    \ by=x->bitcount(x))\n  for i in 1:length(new_arr)\n    if bitcount(new_arr[i])\
    \ == bitcount(new_arr[i+1])\n      if new_arr[i] > new_arr[i+1]\n        new_arr[i],\
    \ new_arr[i+1] = new_arr[i+1], new_arr[i]\n      end\n    end\n  end\n  return\
    \ new_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpg3kulweg.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpg3kulweg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n   \
    \   @ Main /tmp/tmpg3kulweg.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpg3kulweg.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpg3kulweg.jl:30 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpg3kulweg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg3kulweg.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpg3kulweg.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  timestamp: 1659978894
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted_ones,  sorted_dec\
    \ = sort(arr, by=m->count_ones(m))\n    sorted_dec = sort(sorted_dec, by=identity)\n\
    \    return sorted_ones .== sorted_dec ? sorted_ones : sorted_dec\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpefvu21er.jl:24\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching sort(::Int64; by=identity)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)
    at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304 got unsupported keyword
    argument "by"\n    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307
    got unsupported keyword argument "by"\n    sort(!Matched::SparseArrays.SparseVector{Tv,
    Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpefvu21er.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefvu21er.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpefvu21er.jl:23\ntest set: Error
    During Test at /tmp/tmpefvu21er.jl:25\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method matching sort(::Int64;
    by=identity)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)
    at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304 got unsupported keyword
    argument "by"\n    sort(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307
    got unsupported keyword argument "by"\n    sort(!Matched::SparseArrays.SparseVector{Tv,
    Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpefvu21er.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefvu21er.jl:25 [inlined]\n   ['
  timestamp: 1659978895
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ x -> count_ones(x), rev = true)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpslh8o6sg.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpslh8o6sg.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslh8o6sg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslh8o6sg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpslh8o6sg.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -5, -4, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslh8o6sg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslh8o6sg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpslh8o6sg.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslh8o6sg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslh8o6sg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpslh8o6sg.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 3, 5, 3, 2, 4, 2, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslh8o6sg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslh8o6sg.jl:21\ntest set"
  timestamp: 1659978893
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Your code here\n\
    end\n \n@testset \"Kata tests\" begin\n    @test sort_array([1, 5, 2, 3, 4]) ==\
    \ [1, 2, 3, 4, 5]\n    @test sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4,\
    \ -3, -2]\n    @test sort_array([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n    @test\
    \ sort_array([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaf9o0etc.jl:23\nin expression starting at\
    \ /tmp/tmpaf9o0etc.jl:23\n"
  stdout: ''
  timestamp: 1659978892
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    reverse_bits_and_sort(reverse_bits.(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpvw4jhs7v.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpvw4jhs7v.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ reverse_bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpvw4jhs7v.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvw4jhs7v.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvw4jhs7v.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvw4jhs7v.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: reverse_bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvw4jhs7v.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvw4jhs7v.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvw4jhs7v.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvw4jhs7v.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: reverse_bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvw4jhs7v.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvw4jhs7v.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvw4jhs7v.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvw4jhs7v.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: reverse_bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @"
  timestamp: 1659978894
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    tmp = Array{Int64,2}(undef,n,2)\n    for i = 1:n\n        tmp[i,:] = count_ones(arr[i])\n\
    \    end\n    tmp = sortrows(tmp, by = x -> (x[1], x[2]))\n    return tmp[:,2]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp_d3bpviy.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_d3bpviy.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  ArgumentError:\
    \ indexed assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64, ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(::IndexLinear,\
    \ ::Matrix{Int64}, ::Int64, ::Int64, ::Base.Slice{Base.OneTo{Int64}})\n     @\
    \ Base ./multidimensional.jl:903\n   [3] _setindex!\n     @ ./multidimensional.jl:894\
    \ [inlined]\n   [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp_d3bpviy.jl:18\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp_d3bpviy.jl:28 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp_d3bpviy.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_d3bpviy.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64, ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(::IndexLinear,\
    \ ::Matrix{Int64}, ::Int64, ::Int64, ::Base.Slice{Base.OneTo{Int64}})\n     @\
    \ Base ./multidimensional.jl:903\n   [3] _setindex!\n     @ ./multidimensional.jl:894\
    \ [inlined]\n   [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp_d3bpviy.jl:18\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp_d3bpviy.jl:29 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]"
  timestamp: 1659978895
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Assuming that\
    \ the input is always a vector\n    # of non-negative integers.\n    vec = sort(arr,\
    \ by = x -> x[1])\n    for i in 2:length(vec)\n        if vec[i][1] == vec[i-1][1]\n\
    \            vec[i] = sort(vec[i], by = x -> x[2])\n        end\n    end\n   \
    \ return vec[:,2]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpf73jbh1i.jl:30\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError:
    attempt to access 5-element Vector{Int64} at index [1:5, 2]\n  Stacktrace:\n   [1]
    throw_boundserror(A::Vector{Int64}, I::Tuple{Base.Slice{Base.OneTo{Int64}}, Int64})\n     @
    Base ./abstractarray.jl:691\n   [2] checkbounds\n     @ ./abstractarray.jl:656
    [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838 [inlined]\n   [4]
    getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5] sort_array(arr::Vector{Int64})\n     @
    Main /tmp/tmpf73jbh1i.jl:23\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmpf73jbh1i.jl:30 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmpf73jbh1i.jl:29\ntest set: Error
    During Test at /tmp/tmpf73jbh1i.jl:31\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  BoundsError: attempt to access 5-element
    Vector{Int64} at index [1:5, 2]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},
    I::Tuple{Base.Slice{Base.OneTo{Int64}}, Int64})\n     @ Base ./abstractarray.jl:691\n   [2]
    checkbounds\n     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @
    ./multidimensional.jl:838 [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218
    [inlined]\n   [5] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpf73jbh1i.jl:23\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmpf73jbh1i.jl:31 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmpf73jbh1i.jl:29\ntest set: Error
    During Test at /tmp/tmpf73jbh1i.jl:32\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) =='
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    nums = sort(arr)\
    \ \n    ones = collect(Int64, length(nums))\n    for (i, val) in enumerate(nums)\n\
    \        bin = decimal_to_binary(val)\n        ones[i] = count_digits(bin, 1)\n\
    \    end\n    return merge_sort(nums, ones)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpf_sboqyl.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpf_sboqyl.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ decimal_to_binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpf_sboqyl.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_sboqyl.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_sboqyl.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpf_sboqyl.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: decimal_to_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpf_sboqyl.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_sboqyl.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_sboqyl.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpf_sboqyl.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: decimal_to_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpf_sboqyl.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_sboqyl.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_sboqyl.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpf_sboqyl.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: merge_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{I"
  timestamp: 1659978895
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted = sort(arr)\n\
    \    # your code here\n    return sorted\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf61ejw3q.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf61ejw3q.jl:24\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf61ejw3q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf61ejw3q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf61ejw3q.jl:25\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf61ejw3q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf61ejw3q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf61ejw3q.jl:26\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf61ejw3q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf61ejw3q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf61ejw3q.jl:28\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf61ejw3q.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf61ejw3q.jl:23\ntest set"
  timestamp: 1659978894
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # Create a list\
    \ and sort it with vals\n    sort_lst = []\n    push!(sort_lst, val) for val in\
    \ arr\n    \n    # Sort sort_lst\n    sort!(sort_lst, by = x -> x)\n    return\
    \ sort_lst\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp1abh9ay1.jl:14 expected\
    \ \"end\", got \"for\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1abh9ay1.jl:17\n\
    in expression starting at /tmp/tmp1abh9ay1.jl:17\n"
  stdout: ''
  timestamp: 1659978893
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    return sort(arr,\
    \ by = x -> (sum(digits(x, base=2)), x))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqd0xcy4b.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqd0xcy4b.jl:23\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqd0xcy4b.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqd0xcy4b.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659978895
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    n = length(arr)\n\
    \    arr_ones = zeros(Int64, n)\n    for i in 1:n\n        arr_ones[i] = count_ones(arr[i])\n\
    \    end\n    return sort(arr, by=arr_ones, rev=true)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpv1zq4mcw.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpv1zq4mcw.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg, order::Base.Order.By{Vector{Int64},\
    \ Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})\n      @ Base.Sort\
    \ ./sort.jl:664\n    [5] sort!(v::Vector{Int64}; alg::Base.Sort.QuickSortAlg,\
    \ lt::Function, by::Vector{Int64}, rev::Bool, order::Base.Order.ForwardOrdering)\n\
    \      @ Base.Sort ./sort.jl:725\n    [6] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpv1zq4mcw.jl:20\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpv1zq4mcw.jl:27 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpv1zq4mcw.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpv1zq4mcw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg, order::Base.Order.By{Vector{Int64},\
    \ Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})\n      @ Base.Sort\
    \ ./sort.jl:664\n    [5] so"
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sorted = sort(arr,\
    \ by = x -> count_ones(x))\n    return sorted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuk_gvdg7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpuk_gvdg7.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuk_gvdg7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuk_gvdg7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuk_gvdg7.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuk_gvdg7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuk_gvdg7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuk_gvdg7.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuk_gvdg7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuk_gvdg7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuk_gvdg7.jl:28\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuk_gvdg7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978895
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \n    # Create\
    \ an empty vector which will contain the binary representations\n    # of the\
    \ numbers in arr.\n    binary_arr = Vector{String}(undef, length(arr))\n    \n\
    \    # Create an empty vector which will contain the number of ones in each\n\
    \    # of the binary representations in binary_arr.\n    num_ones = Vector{Int64}(undef,\
    \ length(arr))\n    \n    # Loop through arr and change the type of each element\
    \ to a string of\n    # binary values, store in binary_arr\n    for i = 1:length(arr)\n\
    \        binary_arr[i] = string(Base.binary(arr[i]))\n    end\n    \n    # Loop\
    \ through binary_arr, count the number of ones in each of the binary\n    # values\
    \ and store in num_ones\n    for i = 1:length(binary_arr)\n        count = 0\n\
    \        for j = 1:length(binary_arr[i])\n            if binary_arr[i][j] == '1'\n\
    \                count += 1\n            end\n        end\n        num_ones[i]\
    \ = count\n    end\n    \n    # Create a vector which contains the indices of\
    \ arr in the order in which\n    # the numbers should be sorted.\n    inds = sortperm(collect(1:length(arr)),\
    \ by = x -> (num_ones[x], arr[x]))\n    \n    # Return a vector containing the\
    \ elements of arr in the order specified\n    # by inds.\n    sorted_arr = Vector{Int64}(undef,\
    \ length(arr))\n    for i = 1:length(inds)\n        sorted_arr[i] = arr[inds[i]]\n\
    \    end\n    \n    return sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp76r5yi40.jl:57

    '
  stdout: "test set: Error During Test at /tmp/tmp76r5yi40.jl:60\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmp76r5yi40.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76r5yi40.jl:60 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76r5yi40.jl:59\ntest set:\
    \ Error During Test at /tmp/tmp76r5yi40.jl:61\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp76r5yi40.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76r5yi40.jl:61 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76r5yi40.jl:59\ntest set:\
    \ Error During Test at /tmp/tmp76r5yi40.jl:62\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp76r5yi40.jl:27\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76r5yi40.jl:62 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76r5yi40.jl:59\ntest set:\
    \ Error During Test at /tmp/tmp76r5yi40.jl:64\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int6"
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #_count_ones(x::Int64)\
    \ = count(x=='1' for x in bin(x))\n    _count_ones(x::Int64) = count(x=='1' for\
    \ x in dec2bin(x))\n    #_count_ones(x::Int64) = length(filter(x->x=='1', bin(x)))\n\
    \    sort!(arr, by=x->(sum(_count_ones.(x)), -x))\n    arr\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp49l3xxwh.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp49l3xxwh.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n    [1] (::var\"#_count_ones#3\")(x::Int64)\n\
    \      @ Main /tmp/tmp49l3xxwh.jl:16\n    [2] _broadcast_getindex_evalf\n    \
    \  @ ./broadcast.jl:670 [inlined]\n    [3] _broadcast_getindex\n      @ ./broadcast.jl:643\
    \ [inlined]\n    [4] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [5] copy\n\
    \      @ ./broadcast.jl:875 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860\
    \ [inlined]\n    [7] #2\n      @ /tmp/tmp49l3xxwh.jl:18 [inlined]\n    [8] lt\n\
    \      @ ./ordering.jl:111 [inlined]\n    [9] sort!(v::Vector{Int64}, lo::Int64,\
    \ hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"#2#5\"\
    {var\"#_count_ones#3\"}, Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n\
    \   [10] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#2#5\"{var\"#_count_ones#3\"}, Base.Order.ForwardOrdering})\n\
    \      @ Base.Sort ./sort.jl:574\n   [11] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \   [12] #sort!#8\n      @ ./sort.jl:725 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp49l3xxwh.jl:18\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmp49l3xxwh.jl:26 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmp49l3xxwh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp49l3xxwh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#_count_ones#3\")(x::Int64)\n  \
    \    @ Main /tmp/tmp49l3xxwh.jl:16\n    [2] _broadcast_getindex_evalf\n      @\
    \ ./broadcast.jl:670 [inlined]\n    [3] _broadcast_getindex\n      @ ./broadcast.jl:643\
    \ [inlined]\n    [4] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [5] copy\n\
    \   "
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    sort(arr, by =\
    \ (n -> (sum(digitize(n, 2)), n)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbugrwf3s.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpbugrwf3s.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ digitize not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n   \
    \   @ Main /tmp/tmpbugrwf3s.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpbugrwf3s.jl:15\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpbugrwf3s.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpbugrwf3s.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpbugrwf3s.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: digitize\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main\
    \ /tmp/tmpbugrwf3s.jl:15\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Sorts\
    \ the array arr in order of number of one bits and then by numerical value.\n\
    \    \"\"\"\n    sorter = []\n    for i = 1:length(arr)\n        push!(sorter,\
    \ (arr[i], count_ones(arr[i])))\n    end\n    sort!(sorter, by=x->x[2])\n    return\
    \ [x[1] for x in sorter]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp80sf8etm.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp80sf8etm.jl:30\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80sf8etm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80sf8etm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp80sf8etm.jl:31\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80sf8etm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80sf8etm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp80sf8etm.jl:34\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80sf8etm.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80sf8etm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp80sf8etm.jl:35\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80sf8etm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659978895
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if maximum(arr)\
    \ < 0\n        new_arr = sort(reverse(arr))\n    else\n        new_arr = zeros(Int64,\
    \ length(arr))\n        for x in arr\n            binary = Base.parse(Int, x,\
    \ 2)\n            digit = length(string(binary))\n            new_arr[digit] =\
    \ [new_arr[digit]; x]\n        end\n        new_arr = vcat(new_arr...)\n    end\n\
    \    return new_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpsryd7f9i.jl:33\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching parse(::Type{Int64}, ::Int64, ::Int64)\n  Closest candidates
    are:\n    parse(::Type{T}, !Matched::AbstractChar; base) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/parse.jl:40\n    parse(::Type{T},
    !Matched::AbstractString; base) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/parse.jl:240\n    parse(::Type{T},
    !Matched::AbstractString; kwargs...) where T<:Real at ~/.conda/envs/polyglot/share/julia/base/parse.jl:379\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpsryd7f9i.jl:20\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsryd7f9i.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsryd7f9i.jl:32\ntest set: Test
    Failed at /tmp/tmpsryd7f9i.jl:34\n  Expression: candidate([-2, -3, -4, -5, -6])
    == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6, -5,
    -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpsryd7f9i.jl:34 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpsryd7f9i.jl:32\ntest set: Error
    During Test at /tmp/tmpsryd7f9i.jl:35\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching parse(::Type{Int64},
    ::Int64, ::Int64)\n  Closest candidates are:\n    parse(::Type{T}, !Matched::AbstractChar;
    base) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/parse.jl:40\n    parse(::Type{T},
    !Matched::AbstractString; base) where T<:Integer at ~/.conda/envs/polyglot/share/julia/bas'
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    for i in 1:length(arr)\n\
    \        for j in i+1:length(arr)\n            bi = ones(arr[i])\n           \
    \ bj = ones(arr[j])\n            if bi > bj || (bi == bj && arr[i] > arr[j])\n\
    \                arr[i], arr[j] = arr[j], arr[i]\n            end\n        end\n\
    \    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpptcmzr3u.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpptcmzr3u.jl:31\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptcmzr3u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptcmzr3u.jl:30\ntest set: Error\
    \ During Test at /tmp/tmpptcmzr3u.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n    \
    \  @ Main /tmp/tmpptcmzr3u.jl:17\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpptcmzr3u.jl:32 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpptcmzr3u.jl:30\ntest set:\
    \ Test Failed at /tmp/tmpptcmzr3u.jl:33\n  Expression: candidate([1, 0, 2, 3,\
    \ 4]) == [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptcmzr3u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptcmzr3u.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpptcmzr3u.jl:35\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7"
  timestamp: 1659978897
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpzxjga3yu.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpzxjga3yu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpzxjga3yu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzxjga3yu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzxjga3yu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpzxjga3yu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpzxjga3yu.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzxjga3yu.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    temp_arr = []\n\
    \    for i in arr\n        x = dec2bin(i)\n        temp_arr = append!(temp_arr,\
    \ [length(findall(each=='1',x)),i])\n    end\n    sort!(temp_arr, by = x -> x[1])\n\
    \    res = []\n    for i in temp_arr\n        res = append!(res, i[2])\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprp9deqdg.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmprp9deqdg.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmprp9deqdg.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprp9deqdg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprp9deqdg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprp9deqdg.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmprp9deqdg.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprp9deqdg.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprp9deqdg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprp9deqdg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprp9deqdg.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprp9deqdg.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprp9deqdg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprp9deqdg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{"
  timestamp: 1659978897
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    [sort(abs.(arr),\
    \ by=x->(sum(digits(x, base=2)), x), rev=true)...][:]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0dp2ftx3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp0dp2ftx3.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 4, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dp2ftx3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dp2ftx3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0dp2ftx3.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [6, 5, 3, 4, 2] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dp2ftx3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dp2ftx3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0dp2ftx3.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 4, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dp2ftx3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dp2ftx3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0dp2ftx3.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 3, 3, 4, 4, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dp2ftx3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dp2ftx3.jl:21\ntest set: Tes"
  timestamp: 1659978896
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    nums = zeros(Int64,\
    \ length(arr))\n    for (i, num) in enumerate(arr)\n        nums[i] = ones(Int64,\
    \ 2)\n        nums[i][1] = num\n        nums[i][2] = count_ones(num)\n    end\n\
    \    nums = sort(nums, by = x -> x[2])\n    return [x[1] for x in nums]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpa6ensv5a.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpa6ensv5a.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{Int64}, x::Vector{Int64},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpa6ensv5a.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpa6ensv5a.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpa6ensv5a.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa6ensv5a.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{Int64}, x::Vector{Int64},\
    \ i1::Int64)\n     @ Base ./array.jl:903\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpa6ensv5a.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpa6ensv5a.jl:30 [i"
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    if length(arr)\
    \ == 0\n        return arr\n    end\n    if length(arr) == 1\n        return arr\n\
    \    end\n    if length(arr) == 2\n        if count_ones(arr[1]) > count_ones(arr[2])\n\
    \            return [arr[2], arr[1]]\n        elseif count_ones(arr[1]) < count_ones(arr[2])\n\
    \            return [arr[1], arr[2]]\n        else\n            if arr[1] > arr[2]\n\
    \                return [arr[2], arr[1]]\n            else\n                return\
    \ [arr[1], arr[2]]\n            end\n        end\n    end\n    pivot = ceil(Int64,\
    \ length(arr)/2)\n    right = sort_array(arr[pivot:end])\n    left = sort_array(arr[1:pivot-1])\n\
    \    return merge(left, right)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4gr60xay.jl:41

    '
  stdout: "test set: Error During Test at /tmp/tmp4gr60xay.jl:44\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates\
    \ are:\n    merge(!Matched::NamedTuple, ::Any) at ~/.conda/envs/polyglot/share/julia/base/namedtuple.jl:288\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp4gr60xay.jl:37\n\
    \   [2] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp4gr60xay.jl:35\n \
    \  [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4gr60xay.jl:44 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4gr60xay.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp4gr60xay.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n\
    \    merge(!Matched::NamedTuple, ::Any) at ~/.conda/envs/polyglot/share/julia/base/namedtuple.jl:288\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp4gr60xay.jl:37\n\
    \   [2] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp4gr60xay.jl:35\n \
    \  [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4gr60xay.jl:45 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4gr60xay.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp4gr60xay.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    merge(!Matched::NamedTuple,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/namedtuple.jl:288\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vect"
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # make sure the\
    \ set is sorted\n    # so it is aligned with the array\n    s = sort(Set(arr))\n\
    \    # order the array\n    # by sorting the set\n    # then getting the index\
    \ of\n    # each item of the set in the array\n    # then sorting the indexes\n\
    \    # and use the indexes to sort the array\n    order = sortperm(collect(s))\n\
    \    sort(arr)[order]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp2rflsciy.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp2rflsciy.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::Set{Int64})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp2rflsciy.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2rflsciy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2rflsciy.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2rflsciy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::Set{Int64})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp2rflsciy.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2rflsciy.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2rflsciy.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2rflsciy."
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    #  your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpb1yysc16.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpb1yysc16.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpb1yysc16.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1yysc16.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1yysc16.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpb1yysc16.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpb1yysc16.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1yysc16.jl:23 [inlined]\n\
    \   ["
  timestamp: 1659978898
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort a vector of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4])\n   \
    \ [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6])\n    [-6, -5, -4,\
    \ -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4])\n    [0, 1, 2, 3, 4]\n    \"\"\"\
    \nfunction sort_array(arr::Vector{Int64})::Vector{Int64} \n    # short circuit\
    \ for empty vectors\n    if length(arr) == 0\n        return arr\n    end\n  \
    \  # make a 2-column array to hold the number of ones and the original value\n\
    \    # for each element in arr\n    temp = zeros(Int64, length(arr), 2)\n    for\
    \ i in 1:length(arr)\n        num_ones = sum(digits(arr[i], base=2))\n       \
    \ temp[i, :] = [num_ones, arr[i]]\n    end\n    # sort by ones, then by value\n\
    \    sorted_temp = sortrows(temp, [1, 2])\n    # discard number of ones column\
    \ and return result\n    return sorted_temp[:, 2]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp88udf0bf.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmp88udf0bf.jl:36\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ sortrows not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp88udf0bf.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88udf0bf.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88udf0bf.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp88udf0bf.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: sortrows\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp88udf0bf.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88udf0bf.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88udf0bf.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp88udf0bf.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: sortrows not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp88udf0bf.jl:27\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88udf0bf.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88udf0bf.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp88udf0bf.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: sortrows not defined\n  Stacktrace:\n   [1] sort_array(arr::Vec"
  timestamp: 1659978898

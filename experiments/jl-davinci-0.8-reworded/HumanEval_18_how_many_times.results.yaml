language: jl
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    idx = start(string)\n    counter = 0\n    while !endof(string)\n     \
    \   nidx = nextind(string, idx)\n        if string[idx:nidx] == substring\n  \
    \          counter += 1\n        end\n        idx = nidx\n    end\n    return\
    \ counter\nend\n \n \n \n\"\"\" Find how many times a given substring can be found\
    \ in the original string. Count overlaping cases.\n    >>> how_many_times(\"\"\
    , \"a\")\n    0\n    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"\
    aaaa\", \"aa\")\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpb8kve5ff.jl:24\nin expression starting at /tmp/tmpb8kve5ff.jl:24\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # your code goes here\n    count = 0\n    for i = 1:length(string)\n \
    \       if length(string) >= i + length(substring) - 1\n            if string[i:i+length(substring)-1]\
    \ == substring\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    t=0\n    for i in 1:length(string)-length(substring)+1\n        if string[i:i+length(substring)-1]==substring\n\
    \            t+=1\n        end\n    end\n    return t\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    str_len = length(string)\n    sub_len = length(substring)\n\
    \    i = 1\n    while i <= str_len\n        if string[i:i+sub_len-1] == substring\n\
    \            count += 1\n            i += sub_len\n        else\n            i\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpuu43rt13.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpuu43rt13.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpuu43rt13.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpuu43rt13.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpuu43rt13.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpuu43rt13.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpuu43rt13.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpuu43rt13.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpuu43rt13.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    cnt = 0\n    if length(substring) > length(string)\n        return cnt\n\
    \    end\n    for i in 1:length(string)\n        if (i+length(substring) <= length(string))\
    \ && string[i:i+length(substring)] == substring\n            cnt += 1\n      \
    \  end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn9to1_tj.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpn9to1_tj.jl:27\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn9to1_tj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn9to1_tj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn9to1_tj.jl:28\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn9to1_tj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn9to1_tj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn9to1_tj.jl:29\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn9to1_tj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn9to1_tj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n_times = 0\n    for i in 1:size(string, 1)\n        if string[i:i+size(substring,\
    \ 1)-1] == substring\n            n_times += 1\n        end\n    end\n    return\
    \ n_times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpo29lphb3.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpo29lphb3.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpo29lphb3.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo29lphb3.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo29lphb3.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpo29lphb3.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching size(::String,\
    \ ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(stri"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            times += 1\n        end\n    end\n    return times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3gdp1ypi.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp3gdp1ypi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp3gdp1ypi.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3gdp1ypi.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3gdp1ypi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp3gdp1ypi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp3gdp1ypi.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3gdp1ypi.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3gdp1ypi.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i = 1:length(string) - length(substring) + 1\n  \
    \      if string[i:i+length(substring) - 1] == substring\n            counter\
    \ += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    i = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            times\
    \ += 1\n            i += length(substring)\n        else\n            i += 1\n\
    \        end\n    end\n    return times\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp15_s67qp.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp15_s67qp.jl:29\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15_s67qp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15_s67qp.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    j = 1\n    s = 0\n\
    \    while j <= n\n        if string[j:m] == substring\n            s += 1\n \
    \           j += m\n        else\n            j += 1\n        end\n    end\n \
    \   return s\nend\n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzqfm36fe.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpzqfm36fe.jl:31\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqfm36fe.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqfm36fe.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzqfm36fe.jl:32\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqfm36fe.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqfm36fe.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 1\n    while i <= length(string)\n        if contains(string, substring)\n\
    \            i += length(substring)\n        else\n            i += 1\n      \
    \  end\n    end\n    return i\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmwkebo3y.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmwkebo3y.jl:25\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmwkebo3y.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwkebo3y.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmwkebo3y.jl:26\n  Expression: candidate(\"xyxyxyx\", \"x\"\
    ) == 4\n   Evaluated: 8 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwkebo3y.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwkebo3y.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmwkebo3y.jl:27\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 10 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwkebo3y.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwkebo3y.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmwkebo3y.jl:28\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 9 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwkebo3y.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwkebo3y.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    occurences = 0\n    sub_len = length(substring)\n    for i in 1:length(string)\n\
    \        if string[i:i+sub_len-1] == substring\n            occurences += 1\n\
    \        end\n    end\n    return occurences\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp6uj95t1d.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp6uj95t1d.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp6uj95t1d.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6uj95t1d.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6uj95t1d.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6uj95t1d.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp6uj95t1d.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6uj95t1d.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6uj95t1d.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            if string[i:i+length(substring)-1] == substring\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpnhu8apcd.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpnhu8apcd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [9:11]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpnhu8apcd.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnhu8apcd.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnhu8apcd.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        j = 1\n        for k\
    \ in i:length(string)\n            if string[k] == substring[j]\n            \
    \    j += 1\n            else\n                break\n            end\n      \
    \      if j == length(substring) + 1\n                count += 1\n           \
    \     break\n            end\n        end\n    end\n    return count\nend\n \n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" return 0 end\n    l = length(substring)\n    c =\
    \ 0\n    for i = 1:length(string)\n        if string[i:i+l-1] == substring\n \
    \           c += 1\n        end\n    end\n    return c\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpxsq5qs8e.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpxsq5qs8e.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpxsq5qs8e.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxsq5qs8e.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxsq5qs8e.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxsq5qs8e.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpxsq5qs8e.jl:14\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxsq5qs8e.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxsq5qs8e.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    s = length(string)\n    sub = length(substring)\n    if s == 0 || sub\
    \ == 0\n        return 0\n    end\n    counter = 0\n    for i = 1:s\n        #\
    \ check if it is possible to find substring from the current index\n        if\
    \ s - i + 1 >= sub\n            # there is a potential match\n            potential_match\
    \ = string[i:i+sub-1]\n            if potential_match == substring\n         \
    \       counter += 1\n            end\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    occurences::Int64 = 0\n    find::Int64 = 1\n    while find != 0\n    \
    \    find = find(string, substring)\n        if find != 0\n            occurences\
    \ = occurences + 1\n            string = string[find+1:end]\n        end\n   \
    \ end\n    return occurences\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjxwl8tp3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjxwl8tp3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpjxwl8tp3.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjxwl8tp3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjxwl8tp3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjxwl8tp3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: objects of type Int64 are\
    \ not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpjxwl8tp3.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjxwl8tp3.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjxwl8tp3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjxwl8tp3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpjxwl8tp3.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjxwl8tp3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tm"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return Base.count(string, substring)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3f0nv1rw.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp3f0nv1rw.jl:17\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3f0nv1rw.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3f0nv1rw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3f0nv1rw.jl:18\n  Expression: candidate(\"xyxyxyx\", \"x\"\
    ) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3f0nv1rw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3f0nv1rw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3f0nv1rw.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3f0nv1rw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3f0nv1rw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3f0nv1rw.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3f0nv1rw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3f0nv1rw.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    j = 0\n    stringi = collect(string)\n    substringi = collect(substring)\n\
    \    for i in 1:length(string)\n        if stringi[i] == substringi[1]\n     \
    \       if substr(string, i, length(substring)) == substring\n               \
    \ j = j + 1\n            end\n        end\n    end\n    return j\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpufbqjf22.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpufbqjf22.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: substr not\
    \ defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpufbqjf22.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufbqjf22.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufbqjf22.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpufbqjf22.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: substr not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpufbqjf22.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufbqjf22.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufbqjf22.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpufbqjf22.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: substr not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpufbqjf22.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufbqjf22.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufbqjf22.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    last_index = 1\n    count = 0\n    for i in 1:length(substring)\n    \
    \    if string[i] == substring[i]\n            last_index = i\n            count\
    \ += 1\n        else \n            last_index = 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpb0abbpam.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpb0abbpam.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access empty\
    \ String at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpb0abbpam.jl:13\n   [5] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpb0abbpam.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpb0abbpam.jl:26\ntest set:\
    \ Test Failed at /tmp/tmpb0abbpam.jl:28\n  Expression: candidate(\"xyxyxyx\",\
    \ \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0abbpam.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0abbpam.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb0abbpam.jl:29\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0abbpam.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0abbpam.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb0abbpam.jl:30\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0abbpam.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/ju"
- exit_code: -1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    # Get the first\
    \ substring position\n    pos = findfirst(string, substring)\n    count = 0\n\
    \    while pos != nothing\n        # Remove last substring from string, adding\
    \ the count.\n        string = string[pos+length(substring):end]\n        count\
    \ += 1\n        # Find next substring\n        pos = findfirst(string, substring)\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp5m69sgx9.jl:30\n  Test threw
    exception\n  Expression: candidate("", "x") == 0\n  MethodError: no method matching
    +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting
    with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,
    !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp5m69sgx9.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5m69sgx9.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5m69sgx9.jl:29\ntest set: Test
    Failed at /tmp/tmp5m69sgx9.jl:31\n  Expression: candidate("xyxyxyx", "x") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m69sgx9.jl:31 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m69sgx9.jl:29\ntest set: Test Failed
    at /tmp/tmp5m69sgx9.jl:32\n  Expression: candidate("cacacacac", "cac") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m69sgx9.jl:32 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4]'
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    sum = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            sum += 1\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpzhdsffz_.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpzhdsffz_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpzhdsffz_.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzhdsffz_.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzhdsffz_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpzhdsffz_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpzhdsffz_.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzhdsffz_.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzhdsffz_.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    if length(string)\
    \ == 0\n        return 0\n    end\n    if string == substring\n        return\
    \ 1\n    end\n    if length(string) < length(substring)\n        return 0\n  \
    \  end\n    t = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            t += 1\n        end\n    end\n    return t\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmprvm4mdzy.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmprvm4mdzy.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmprvm4mdzy.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprvm4mdzy.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprvm4mdzy.jl:34\ntest set:\
    \ Error During Test at /tmp/tmprvm4mdzy.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmprvm4mdzy.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprvm4mdzy.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprvm4mdzy.jl:34\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    match_length = length(substring)\n\
    \    count = 0\n    index = 1\n    while index + match_length <= length(string)\n\
    \        if string[index:index+match_length-1] == substring\n            count\
    \ += 1\n        end\n        index += 1\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkbd5kkif.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpkbd5kkif.jl:30\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkbd5kkif.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkbd5kkif.jl:28\ntest set: Test Failed at /tmp/tmpkbd5kkif.jl:31\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 3 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbd5kkif.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbd5kkif.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659979419
- exit_code: -1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    index = findnext(string, substring, 1)\n    while !isnothing(index)\n\
    \        count += 1\n        index = findnext(string, substring, index + 1)\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpyuxsslaj.jl:23\n  Test threw
    exception\n  Expression: candidate("", "x") == 0\n  MethodError: no method matching
    +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting
    with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,
    !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpyuxsslaj.jl:14\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyuxsslaj.jl:23 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyuxsslaj.jl:22\ntest set: Test
    Failed at /tmp/tmpyuxsslaj.jl:24\n  Expression: candidate("xyxyxyx", "x") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpyuxsslaj.jl:24 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpyuxsslaj.jl:22\ntest set: Test Failed
    at /tmp/tmpyuxsslaj.jl:25\n  Expression: candidate("cacacacac", "cac") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpyuxsslaj.jl:25 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4]'
  timestamp: 1659979422
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" \n        return 0\n    end\n    occurances = 0\n  \
    \  while length(string) >= length(substring)\n        if string[1:length(substring)]\
    \ == substring\n            occurances += 1\n        end\n        string = string[2:end]\n\
    \    end\n    return occurances\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    counter = 0\n    for\
    \ i in 1:n-m+1\n        if string[i:i+m-1] == substring\n            counter +=\
    \ 1\n        end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return count(eachmatch(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpf5866p6v.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpf5866p6v.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ eachmatch(::String, ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex,\
    \ ::AbstractString; overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpf5866p6v.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf5866p6v.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf5866p6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5866p6v.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf5866p6v.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf5866p6v.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf5866p6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5866p6v.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf5866p6v.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Tes"
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    return length(matchall(r\"\
    (?=$substring)\", string))\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3i62ii_5.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp3i62ii_5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp3i62ii_5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3i62ii_5.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3i62ii_5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3i62ii_5.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp3i62ii_5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3i62ii_5.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3i62ii_5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3i62ii_5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp3i62ii_5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3i62ii_5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3i62ii_5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3i62ii_5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tm"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        substring_in_string =\
    \ string[i:i+length(substring)-1]\n        if substring_in_string == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3n9tn_v1.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp3n9tn_v1.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp3n9tn_v1.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3n9tn_v1.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3n9tn_v1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3n9tn_v1.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp3n9tn_v1.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3n9tn_v1.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3n9tn_v1.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # Your code goes here\n    return nothing\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw9qo319k.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpw9qo319k.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpw9qo319k.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw9qo319k.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw9qo319k.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpw9qo319k.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpw9qo319k.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw9qo319k.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw9qo319k.jl:17\ntest set:\
    \ Error During Test at /t"
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        for j = 1:length(substring)\n\
    \            if string[i+j-1] != substring[j]\n                break\n       \
    \     end\n            if j == length(substring)\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpesho7v33.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpesho7v33.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpesho7v33.jl:13\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpesho7v33.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpesho7v33.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    n = length(string)\n    m = length(substring)\n    for\
    \ i in 1:n-m+1\n        k = findlast(string[i:i+m-1], substring)\n        if k\
    \ == i && length(k) == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt22msq16.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpt22msq16.jl:27\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt22msq16.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt22msq16.jl:25\ntest set: Test Failed at /tmp/tmpt22msq16.jl:28\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22msq16.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22msq16.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt22msq16.jl:29\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22msq16.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22msq16.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979419
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    start_point = 0\n\
    \    end_point = length(substring)\n    counter = 0\n    while end_point <= length(string)\n\
    \        if string[start_point:end_point] == substring\n            counter +=\
    \ 1\n        end\n        start_point += 1\n        end_point += 1\n    end\n\
    \    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpucuwjffe.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpucuwjffe.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpucuwjffe.jl:17\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpucuwjffe.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpucuwjffe.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpucuwjffe.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpucuwjffe.jl:17\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpucuwjffe.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpucuwjffe.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpucuwjffe.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpucuwjffe.jl:17\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/t"
  timestamp: 1659979420
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    N = length(string)\n    M = length(substring)\n    if M > N\n        return\
    \ 0\n    end\n    res = 0\n    for i = 1:N-M+1\n        if string[i:i+M-1] ==\
    \ substring\n            res += 1\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    ...\nend\n \n \n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"...\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5x1nqd7s.jl:10\nin expression starting at\
    \ /tmp/tmp5x1nqd7s.jl:10\n"
  stdout: ''
  timestamp: 1659979419
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    l_substring = length(substring)\n    l_string = length(string)\n\
    \    if l_substring > l_string\n        return 0\n    end\n    for i = 1:l_string-l_substring+1\n\
    \        if string[i:i+l_substring-1] == substring\n            times += 1\n \
    \       end\n    end\n    return times\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    if n == 0 || m == 0\n\
    \        return 0\n    end\n    count = 0\n    for i = 1:n\n        if i + m <=\
    \ n + 1\n            if string[i:i+m-1] == substring\n                count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count::Int64 = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp4k8_1mqq.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp4k8_1mqq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp4k8_1mqq.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4k8_1mqq.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4k8_1mqq.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4k8_1mqq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp4k8_1mqq.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4k8_1mqq.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4k8_1mqq.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string==\"\"\n        return 0\n    end\n    if substring==\"\"\n \
    \       return 0\n    end\n    i=0\n    for j in 1:length(string)\n        if\
    \ string[j:j+length(substring)-1]==substring\n            i=i+1\n        end\n\
    \    end\n    return i\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpxpb3ux0g.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpxpb3ux0g.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpxpb3ux0g.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxpb3ux0g.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxpb3ux0g.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxpb3ux0g.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpxpb3ux0g.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxpb3ux0g.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxpb3ux0g.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfrj95rr0.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfrj95rr0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpfrj95rr0.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfrj95rr0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpfrj95rr0.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # YOUR CODE HERE\n    # return 0\n    count = 0\n    p = 1\n    while\
    \ p <= length(string)\n        if string[p:p+length(substring)-1] == substring\n\
    \            count += 1\n        end\n        p += 1\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpm4p_rk1k.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpm4p_rk1k.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpm4p_rk1k.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4p_rk1k.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4p_rk1k.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpm4p_rk1k.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpm4p_rk1k.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4p_rk1k.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4p_rk1k.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: -1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    first_index = findfirst(string, substring)\n    if first_index == nothing\n\
    \        return 0\n    else\n        return 1 + how_many_times(string[first_index+1:end],\
    \ substring)\n    end\nend\n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjaj0kig8.jl:23\n  Test threw
    exception\n  Expression: candidate("", "x") == 0\n  MethodError: no method matching
    +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting
    with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,
    !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpjaj0kig8.jl:14\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjaj0kig8.jl:23 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjaj0kig8.jl:22\ntest set: Test
    Failed at /tmp/tmpjaj0kig8.jl:24\n  Expression: candidate("xyxyxyx", "x") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpjaj0kig8.jl:24 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpjaj0kig8.jl:22\ntest set: Test Failed
    at /tmp/tmpjaj0kig8.jl:25\n  Expression: candidate("cacacacac", "cac") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpjaj0kig8.jl:25 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4]'
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    total = 0\n    start = 1\n    while true\n        pos = findfirst(string,\
    \ substring, start)\n        if pos == nothing\n            break\n        end\n\
    \        total += 1\n        start = pos + 1\n    end\n    return total\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp20jqi93m.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp20jqi93m.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ findfirst(::String, ::String, ::Int64)\n  Closest candidates are:\n    findfirst(::AbstractString,\
    \ ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    ...\n \
    \ Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n    \
    \ @ Main /tmp/tmp20jqi93m.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp20jqi93m.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp20jqi93m.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp20jqi93m.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching findfirst(::String,\
    \ ::String, ::Int64)\n  Closest candidates are:\n    findfirst(::AbstractString,\
    \ ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    ...\n \
    \ Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n    \
    \ @ Main /tmp/tmp20jqi93m.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp20jqi93m.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp20jqi93m.jl:26\ntest set:\
    \ Error During Test at "
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring) || isempty(string)\n        return 0\n    end\n\
    \    return length(occurrences(string, substring))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpn8yv1ki5.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpn8yv1ki5.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: occurrences\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpn8yv1ki5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn8yv1ki5.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn8yv1ki5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpn8yv1ki5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: occurrences not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpn8yv1ki5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn8yv1ki5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn8yv1ki5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpn8yv1ki5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: occurrences not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpn8yv1ki5.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn8yv1ki5.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn8yv1ki5.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
  timestamp: 1659979421
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n\
    \        if string[i:i+length(substring)-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979418
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    #Initialize counters\n    string_len = length(string)\n    substring_len\
    \ = length(substring)\n    count = 0 \n    \n    #Loop over string\n    for i\
    \ in 1:string_len-substring_len+1\n        if string[i:i+substring_len-1] == substring\n\
    \            count += 1\n        end\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp21al892s.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp21al892s.jl:1\n\
    in expression starting at /tmp/tmp21al892s.jl:1\n"
  stdout: ''
  timestamp: 1659979419
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    # Initialize a counter\
    \ to track the number of times the substring is found in the string\n    count\
    \ = 0\n    # Initialize an index variable to track the position of the string\
    \ being traversed\n    index = 1\n    # Iterate through the string once\n    while\
    \ index \u2264 length(string)\n        # If the substring is found in the string,\
    \ increment count and shift the index of the string forward to the end of the\
    \ match\n        if string[index:index+length(substring)-1] == substring\n   \
    \         count += 1\n            index += length(substring)\n        else\n \
    \           # If the substring is not found in the string, increment the index\
    \ of the string by one\n            index += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpp9th67tp.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpp9th67tp.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpp9th67tp.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpp9th67tp.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpp9th67tp.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpp9th67tp.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpp9th67tp.jl:20\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpp9th67tp.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpp9th67tp.jl:34\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    substring_len = length(substring)\n    string_len = length(string)\n\
    \    counter = 0\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4seqcizn.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4seqcizn.jl:1\n\
    in expression starting at /tmp/tmp4seqcizn.jl:1\n"
  stdout: ''
  timestamp: 1659979420
- exit_code: -1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    if length(string)\
    \ == 0\n        return 0\n    end\n    cnt = 0\n    if occursin(substring, string)\n\
    \        cnt += 1\n    end\n    return cnt + how_many_times(string[1:end], substring)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    count = 0\n    for i in range(1, length(string) - length(substring)\
    \ + 2)\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxfv8a1je.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxfv8a1je.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access empty\
    \ String at index [1:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpxfv8a1je.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxfv8a1je.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxfv8a1je.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxfv8a1je.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access 7-codeunit\
    \ String at index [8:8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpxfv8a1je.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxfv8a1je.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxfv8a1je.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxfv8a1je.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpxfv8a1je.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxfv8a1je.jl:2"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    matches = matchall(Regex(substring), string)\n    return size(matches,\
    \ 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpb_royr93.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpb_royr93.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpb_royr93.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb_royr93.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb_royr93.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpb_royr93.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpb_royr93.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb_royr93.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb_royr93.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpb_royr93.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpb_royr93.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb_royr93.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb_royr93.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpb_royr93.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tm"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\n    count = 0\n    for i in 1:length(string)\n \
    \       if string[i:i+length(substring)-1] == substring\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmppb_4m93f.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmppb_4m93f.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmppb_4m93f.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppb_4m93f.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppb_4m93f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmppb_4m93f.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmppb_4m93f.jl:20\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppb_4m93f.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppb_4m93f.jl:30\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:end] ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq5eh8fyy.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpq5eh8fyy.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\ntest set: Test Failed at /tmp/tmpq5eh8fyy.jl:25\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 1 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq5eh8fyy.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    splitted = split(string, substring)\n    return length(splitted) - 1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8mg2smqt.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp8mg2smqt.jl:20\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8mg2smqt.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8mg2smqt.jl:17\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  if length(substring) > length(string)\n        return 0\n    end\n    counter\
    \ = 0\n    i = 1\n    while i <= length(string) - length(substring) + 1\n    \
    \    if string[i:i+length(substring)-1] == substring\n            counter += 1\n\
    \            i += length(substring)\n        else\n            i += 1\n      \
    \  end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm3grta_w.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpm3grta_w.jl:35\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm3grta_w.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm3grta_w.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979422
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    L = length(substring)\n    n = length(string)\n    n_matches = zeros(Int64,\
    \ n-L+1)\n    for i in 1:n-L+1\n        if string[i:i+L-1] == substring\n    \
    \        n_matches[i] = 1\n        end\n    end\n    return sum(n_matches)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    index = 1\n    last = length(string) - length(substring) + 1\n    counter\
    \ = 0\n    while index <= last\n        if string[index:index+length(substring)-1]\
    \ == substring\n            counter += 1\n            index += length(substring)\n\
    \        else\n            index += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfw2gko4w.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpfw2gko4w.jl:30\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfw2gko4w.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfw2gko4w.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    if m == 0\n       \
    \ return 0\n    end\n    count = 0\n    for i = 1:n\n        if string[i:i+m-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfb61x33f.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpfb61x33f.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpfb61x33f.jl:17\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfb61x33f.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfb61x33f.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfb61x33f.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpfb61x33f.jl:17\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfb61x33f.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfb61x33f.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(substring, string))\nend\nhow_many_times(\"\", \"\
    a\")\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpezwwu5o4.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpezwwu5o4.jl:20\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpezwwu5o4.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpezwwu5o4.jl:17\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979423
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    nsub = length(substring)\n    count = 0\n    for\
    \ i in 1:n-nsub+1\n        if string[i:i+nsub-1] == substring\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    start = 1\n    string_length = length(string)\n    substring_length =\
    \ length(substring)\n    counter = 0\n    for idx in 1:string_length\n       \
    \ if start > string_length\n            break\n        if string[start:start+substring_length-1]\
    \ == substring\n            counter += 1\n        end\n        start += 1\n  \
    \  end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpixc9dbwi.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpixc9dbwi.jl:1\n\
    in expression starting at /tmp/tmpixc9dbwi.jl:1\n"
  stdout: ''
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    while i = findnext(string, substring, lastindex(string,\
    \ substring) + 1)\n        count += 1\n    end\n    return count\nend\n\"\"\"\n\
    \    # Try to avoid using this approach.\n    # This solution is O(nm) where n\
    \ is the length of string and m is the length of substring.\n    len = length(substring)\n\
    \    for i in 1:length(string) - len + 1\n        if string[i:i+len-1] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\n\"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgaceum1n.jl:11\nin expression starting at /tmp/tmpgaceum1n.jl:11\n"
  stdout: ''
  timestamp: 1659979422
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  string_length = length(string)\n    substring_length = length(substring)\n\
    \    counter = 0\n    for i in 1:string_length\n        if i+substring_length-1\
    \ <= string_length && string[i:i+substring_length-1] == substring\n          \
    \  counter += 1\n        end\n    end\n    return counter\nend\nprintln(how_many_times(\"\
    \", \"a\"))\nprintln(how_many_times(\"aaa\", \"a\"))\nprintln(how_many_times(\"\
    aaaa\", \"aa\"))\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: '0

    3

    3

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  k = 0\n    count = 0\n    while k + length(substring) <= length(string)\n \
    \       if string[k + 1:k + length(substring)] == substring\n            count\
    \ += 1\n        end\n        k += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            times += 1\n        end\n    end\n    return times\n\
    end\n    \n    \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp7d98wfc2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp7d98wfc2.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp7d98wfc2.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7d98wfc2.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7d98wfc2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7d98wfc2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp7d98wfc2.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7d98wfc2.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7d98wfc2.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979424
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcuts79wm.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpcuts79wm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpcuts79wm.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcuts79wm.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcuts79wm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpcuts79wm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpcuts79wm.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcuts79wm.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcuts79wm.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if length(substring)\
    \ > length(string)\n        return 0\n    end\n    how_many_times = 0\n    i =\
    \ 0\n    while i + length(substring) <= length(string)\n        if substring ==\
    \ string[i + 1:i + length(substring) + 1]\n            how_many_times += 1\n \
    \       end\n        i += 1\n    end\n    return how_many_times\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpdsmmaurj.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpdsmmaurj.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [7:8]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpdsmmaurj.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdsmmaurj.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdsmmaurj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdsmmaurj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [7:10]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpdsmmaurj.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdsmmaurj.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdsmmaurj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdsmmaurj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [5:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpdsmmaurj.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/"
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return count(eachmatch(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpf5866p6v.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpf5866p6v.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ eachmatch(::String, ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex,\
    \ ::AbstractString; overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpf5866p6v.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf5866p6v.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf5866p6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5866p6v.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf5866p6v.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf5866p6v.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf5866p6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5866p6v.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\n  Closest candidates are:\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:741\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf5866p6v.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Tes"
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpe6lubqus.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpe6lubqus.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpe6lubqus.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpe6lubqus.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpe6lubqus.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe6lubqus.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpe6lubqus.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpe6lubqus.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpe6lubqus.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    index = search(string, substring)\n    return count(string, substring)\n\
    end\nhow_many_times(\"\", \"a\")\nhow_many_times(\"aaa\", \"a\")\nhow_many_times(\"\
    aaaa\", \"aa\")\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: search not defined\nStacktrace:\n [1]\
    \ how_many_times(string::String, substring::String)\n   @ Main /tmp/tmprfxzad3r.jl:10\n\
    \ [2] top-level scope\n   @ /tmp/tmprfxzad3r.jl:13\nin expression starting at\
    \ /tmp/tmprfxzad3r.jl:13\n"
  stdout: ''
  timestamp: 1659979423
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    if m > n\n        return\
    \ 0\n    end\n    count = 0\n    for i in 1:n-m+1\n        if string[i:i+m-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if string == \"\"\
    \n        return 0\n    end\n    pos = findfirst(string, substring)\n    count\
    \ = 0\n    while length(pos) == 1\n        count += 1\n        string = string[pos+1:end]\n\
    \        pos = findfirst(string, substring)\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvrsbh1js.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpvrsbh1js.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching\
    \ length(::Nothing)\n  Closest candidates are:\n    length(!Matched::Union{Base.KeySet,\
    \ Base.ValueIterator}) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n\
    \    length(!Matched::Union{LinearAlgebra.Adjoint{T, S}, LinearAlgebra.Transpose{T,\
    \ S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.Iterators.Stateful) at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpvrsbh1js.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvrsbh1js.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvrsbh1js.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvrsbh1js.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching length(::Nothing)\n\
    \  Closest candidates are:\n    length(!Matched::Union{Base.KeySet, Base.ValueIterator})\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n    length(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ S}, LinearAlgebra.Transpose{T, S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.Iterators.Stateful) at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpvrsbh1js.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvrsbh1js.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/"
  timestamp: 1659979426
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    iters = length(string) - length(substring) + 1\n    count = 0\n    if\
    \ iters > 0\n        for i in 1:iters\n            if substring == string[i:i+length(substring)-1]\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    sub_len = length(substring)\n    for i = 1:length(string)\n\
    \        if string[i:(i+sub_len-1)] == substring\n            count += 1\n   \
    \     end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp1wf1eodn.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp1wf1eodn.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp1wf1eodn.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1wf1eodn.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1wf1eodn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1wf1eodn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp1wf1eodn.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1wf1eodn.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1wf1eodn.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979425
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    str_len = length(string)\n    substr_len = length(substring)\n\
    \    for i in 1:str_len-substr_len+1\n        if string[i:i+substr_len-1] == substring\n\
    \            counter += 1\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if i < length(substring)\n\
    \            continue\n        if string[i-length(substring)+1:i] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprc9inabd.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprc9inabd.jl:1\n\
    in expression starting at /tmp/tmprc9inabd.jl:1\n"
  stdout: ''
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    str = uppercase(string)\n    substr = uppercase(substring)\n    found\
    \ = []\n    start_pos = 0\n    while true\n        result = findnext(str, substr,\
    \ start_pos)\n        if isnothing(result)\n            break\n        else\n\
    \            found = [found; result]\n            start_pos = result + 1\n   \
    \     end\n    end\n    return length(found)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptleox7g0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmptleox7g0.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access 1-element\
    \ Vector{UInt8} at index [0]\n  Stacktrace:\n   [1] _searchindex(s::Vector{UInt8},\
    \ t::Vector{UInt8}, _i::Int64)\n     @ Base ./strings/search.jl:204\n   [2] _searchindex(s::String,\
    \ t::String, i::Int64)\n     @ Base ./strings/search.jl:194\n   [3] _search\n\
    \     @ ./strings/search.jl:267 [inlined]\n   [4] findnext\n     @ ./strings/search.jl:303\
    \ [inlined]\n   [5] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmptleox7g0.jl:15\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptleox7g0.jl:30 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptleox7g0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptleox7g0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access 1-element\
    \ Vector{UInt8} at index [0]\n  Stacktrace:\n   [1] _searchindex(s::Vector{UInt8},\
    \ t::Vector{UInt8}, _i::Int64)\n     @ Base ./strings/search.jl:204\n   [2] _searchindex(s::String,\
    \ t::String, i::Int64)\n     @ Base ./strings/search.jl:194\n   [3] _search\n\
    \     @ ./strings/search.jl:267 [inlined]\n   [4] findnext\n     @ ./strings/search.jl:303\
    \ [inlined]\n   [5] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmptleox7g0.jl:15\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptleox7g0.jl:31 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptleox7g0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptleox7g0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 3-element\
    \ Vector{UInt8} at"
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 0\n    j = 1\n    count = 0\n    while i < length(string)\n      \
    \  if j == length(substring) + 1\n            j = 1\n            count += 1\n\
    \        end\n        if substring[j] == string[i+1]\n            j += 1\n   \
    \     else\n            j = 1\n        end\n        i += 1\n    end\n    if j\
    \ == length(substring) + 1\n        count += 1\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp__irmexo.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp__irmexo.jl:37\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp__irmexo.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp__irmexo.jl:34\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 0:length(string)-length(substring)+1\n       \
    \ if string[i:i+length(substring)] == substring\n            count += 1\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0wyhl35b.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp0wyhl35b.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access empty\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp0wyhl35b.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0wyhl35b.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0wyhl35b.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0wyhl35b.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access 7-codeunit\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp0wyhl35b.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0wyhl35b.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0wyhl35b.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0wyhl35b.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp0wyhl35b.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0wyhl35b.jl:25"
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    return length(findall(substring,\
    \ string))\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpef8o9cp7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpef8o9cp7.jl:22\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpef8o9cp7.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpef8o9cp7.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  how_many_times_sub(string, substring, 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp0o55363_.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp0o55363_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: how_many_times_sub\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmp0o55363_.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0o55363_.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0o55363_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp0o55363_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: how_many_times_sub\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmp0o55363_.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0o55363_.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0o55363_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp0o55363_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: how_many_times_sub\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmp0o55363_.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0o55363_.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0o55363_.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    j = Int64(0)\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            j += 1\n        end\n    end\n    return j\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqy7bz_u6.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpqy7bz_u6.jl:25\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqy7bz_u6.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqy7bz_u6.jl:22\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979425
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\"\n        return 0\n    end\n    # two things to consider:\n\
    \    # 1) if the substring is longer than the original string - return 0\n   \
    \ # 2) if the substring is shorter than the original string - loop over the original\
    \ string and count how many times substring appears\n    l = length(string)\n\
    \    l_sub = length(substring)\n    if l_sub > l\n        return 0\n    end\n\
    \    count = 0\n    for i = 1:l - l_sub + 1\n        if string[i:i+l_sub-1] ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    lastindex = nothing\n    count = 0\n    while lastindex != string.length\n\
    \        lastindex = search(string, substring; lastindex = lastindex)\n      \
    \  if lastindex == nothing\n            break\n        end\n        count += 1\n\
    \        lastindex += substring.length\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmprikcjbev.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmprikcjbev.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  type String has no field length\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmprikcjbev.jl:12\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmprikcjbev.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprikcjbev.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprikcjbev.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmprikcjbev.jl:12\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmprikcjbev.jl:28 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprikcjbev.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprikcjbev.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  type String has no field length\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmprikcjbev.jl:12\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmprikcjbev.jl:29 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprikcjbev.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprikcjbev.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\""
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ s = zero(Int64)\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            if string[i:i+length(substring)-1] == substring\n               \
    \ s += 1\n            end\n        end\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp2njinry_.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp2njinry_.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [9:11]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp2njinry_.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2njinry_.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2njinry_.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if string[i:end] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz83_0sz1.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpz83_0sz1.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz83_0sz1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz83_0sz1.jl:22\ntest set: Test Failed at /tmp/tmpz83_0sz1.jl:25\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 1 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz83_0sz1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz83_0sz1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz83_0sz1.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz83_0sz1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz83_0sz1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n=0\n    i=1\n    while i<=length(string)-length(substring)+1\n      \
    \  if string[i:i+length(substring)-1]==substring\n            n+=1\n         \
    \   i+=length(substring)\n        else\n            i+=1\n        end\n    end\n\
    \    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpahl6qgt6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpahl6qgt6.jl:29\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpahl6qgt6.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpahl6qgt6.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979425
- exit_code: -1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    while true\n        index = findfirst(string, substring)\n\
    \        if index != nothing\n            count += 1\n            string = string[index+length(substring):end]\n\
    \        else\n            break\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn7enm190.jl:27\n  Test threw
    exception\n  Expression: candidate("", "x") == 0\n  MethodError: no method matching
    +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting
    with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,
    !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpn7enm190.jl:15\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn7enm190.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn7enm190.jl:26\ntest set: Test
    Failed at /tmp/tmpn7enm190.jl:28\n  Expression: candidate("xyxyxyx", "x") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7enm190.jl:28 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7enm190.jl:26\ntest set: Test Failed
    at /tmp/tmpn7enm190.jl:29\n  Expression: candidate("cacacacac", "cac") == 4\n   Evaluated:
    0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7enm190.jl:29 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4]'
  timestamp: 1659979428
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    if string == \"\" \n        return 0\n    end\n    \n    i = 1\n\
    \    j = 1\n    count = 0\n    while i <= length(string) - length(substring) +\
    \ 1\n        while j <= length(substring)\n            if string[i] == substring[j]\n\
    \                j += 1\n                i += 1\n            else\n          \
    \      i -= j - 2\n                j = 1\n                break\n            end\n\
    \        end\n        if j == length(substring) + 1\n            count += 1\n\
    \            i -= j - 2\n            j = 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979424
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    i = 0\n    count\
    \ = 0\n    while i <= length(string) - length(substring)\n        j = 1\n    \
    \    while j <= length(substring)\n            if substring[j] != string[i+j]\n\
    \                break\n            end\n            j += 1\n        end\n   \
    \     if j == length(substring) + 1\n            count += 1\n        end\n   \
    \     i += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979424
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    l = length(substring)\n    c = 0\n    for i in\
    \ 1:n-l+1\n        if(string[i:i+l-1] == substring)\n            c = c + 1\n \
    \       end\n    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfrj95rr0.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfrj95rr0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpfrj95rr0.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfrj95rr0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpfrj95rr0.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfrj95rr0.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfrj95rr0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpfrj95rr0.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfrj95rr0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpfrj95rr0.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" return 0\n    n = 0\n    for i in 1:length(string)\
    \ - length(substring) + 1\n        n += string[i:i+length(substring)] == substring\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp3708xxp.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp3708xxp.jl:1\n\
    in expression starting at /tmp/tmpp3708xxp.jl:1\n"
  stdout: ''
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return how_many_times_internal(string, substring, 0)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpiic58n14.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpiic58n14.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: how_many_times_internal\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpiic58n14.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiic58n14.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiic58n14.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpiic58n14.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: how_many_times_internal\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpiic58n14.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiic58n14.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiic58n14.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpiic58n14.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: how_many_times_internal\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpiic58n14.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiic58n14.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiic58n14.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpiic58n14.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: how_many_times_internal\
    \ not defined\n  Stacktrace:\n   [1] how_many_"
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpe6lubqus.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpe6lubqus.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpe6lubqus.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpe6lubqus.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpe6lubqus.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe6lubqus.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpe6lubqus.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpe6lubqus.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpe6lubqus.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return map(x -> contains(x, substring), split(string, \"\"))\n    |> sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"|>\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjn2tawln.jl:11\nin expression starting at\
    \ /tmp/tmpjn2tawln.jl:11\n"
  stdout: ''
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    for\
    \ i in 1:length(string)\n        if string[i:i+length(substring)-1] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpc_xth3z3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpc_xth3z3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpc_xth3z3.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc_xth3z3.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc_xth3z3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpc_xth3z3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpc_xth3z3.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc_xth3z3.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc_xth3z3.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979428
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    for i in 1:length(string)\n\
    \        if length(string) < i + length(substring) - 1\n            return 0\n\
    \        end\n        if string[i:i+length(substring)-1] == substring\n      \
    \      return 1 + how_many_times(string[i+1:end], substring)\n        end\n  \
    \  end\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # Initialize\n    occurances = 0\n    substring_length = length(substring)\n\
    \    # Loop over string\n    for i in 1:length(string)\n        # Check if substring\
    \ matches string\n        if string[i:i+substring_length-1] == substring\n   \
    \         occurances += 1\n        end\n    end\n    # Return\n    return occurances\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpc8ej5t4b.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpc8ej5t4b.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpc8ej5t4b.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc8ej5t4b.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc8ej5t4b.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpc8ej5t4b.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpc8ej5t4b.jl:16\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc8ej5t4b.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc8ej5t4b.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    for n = 1:length(string)\n        println(string[n:end])\n    end\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_cl9d51g.jl:17

    '
  stdout: "xyxyxyx\nyxyxyx\nxyxyx\nyxyx\nxyx\nyx\nx\ntest set: Test Failed at /tmp/tmp_cl9d51g.jl:21\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cl9d51g.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cl9d51g.jl:19\ncacacacac\nacacacac\n\
    cacacac\nacacac\ncacac\nacac\ncac\nac\nc\ntest set: Test Failed at /tmp/tmp_cl9d51g.jl:22\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cl9d51g.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cl9d51g.jl:19\njohn doe\nohn\
    \ doe\nhn doe\nn doe\n doe\ndoe\noe\ne\ntest set: Test Failed at /tmp/tmp_cl9d51g.jl:23\n\
    \  Expression: candidate(\"john doe\", \"john\") == 1\n   Evaluated: 0 == 1\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cl9d51g.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cl9d51g.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    len = length(substring)\n    count = 0\n    for i in 1:length(string)\n\
    \        if string[i:i+len-1] == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp7g_2po4e.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp7g_2po4e.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp7g_2po4e.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7g_2po4e.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7g_2po4e.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7g_2po4e.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp7g_2po4e.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7g_2po4e.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7g_2po4e.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    for\
    \ i in 1:length(string)\n        if isequal(string[i:i+length(substring)-1], substring)\n\
    \            count += 1\n        end\n    end\n    return count\nend\n \n \n \n\
    \ \n\"\"\" Use the how_many_times function to find the number of times a given\
    \ symbol is present in a string.\n    >>> frequency_of_each_symbol(\"aaaa\")\n\
    \    Dict('a'=>4)\n    >>> frequency_of_each_symbol(\"abcd\")\n    Dict('a'=>1,'b'=>1,'c'=>1,'d'=>1)\n\
    \    >>> frequency_of_each_symbol(\"abbcdddd\")\n    Dict('a'=>1,'b'=>2,'c'=>1,'d'=>4)\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpx0djiumt.jl:25\nin expression starting at /tmp/tmpx0djiumt.jl:25\n"
  stdout: ''
  timestamp: 1659979426
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # count them manually\n    count = 0\n    substring_length = length(substring)\n\
    \    string_length = length(string)\n    for i in 1:string_length-substring_length+1\n\
    \        count += isequal(string[i:i+substring_length-1], substring)\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979425
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcuts79wm.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpcuts79wm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpcuts79wm.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcuts79wm.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcuts79wm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpcuts79wm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpcuts79wm.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcuts79wm.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcuts79wm.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    j = 1\n    count\
    \ = 0\n    for i in 1:length(string)\n        if string[i] == substring[j]\n \
    \           j = j + 1\n            if j == length(substring) + 1\n           \
    \     count = count + 1\n                j = 1\n            end\n        else\n\
    \            j = 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9ftvamqb.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp9ftvamqb.jl:35\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9ftvamqb.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9ftvamqb.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ n = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            n += 1\n        end\n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphv6bis7_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmphv6bis7_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmphv6bis7_.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphv6bis7_.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphv6bis7_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphv6bis7_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmphv6bis7_.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphv6bis7_.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphv6bis7_.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979428
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ return reduce(+ , [1 for i in 1:length(string)-length(substring)+1 if substring\
    \ == string[i:i+length(substring)-1]])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    substr_len = length(substring)\n\
    \    end_index = length(string) - substr_len + 1\n    i = 1\n    count = 0\n \
    \   while i <= end_index\n        if string[i:i+substr_len-1] == substring\n \
    \           count += 1\n            i += substr_len\n        else\n          \
    \  i += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpde8bp5dc.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpde8bp5dc.jl:34\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpde8bp5dc.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpde8bp5dc.jl:31\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    contains(string, substring)\nend\n \nprintln(how_many_times(\"\", \"a\"\
    ))\nprintln(how_many_times(\"aaa\", \"a\"))\nprintln(how_many_times(\"aaaa\",\
    \ \"aa\"))\n \n \n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpluotkvax.jl:21

    '
  stdout: "0\n1\n1\ntest set: Test Failed at /tmp/tmpluotkvax.jl:25\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluotkvax.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluotkvax.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpluotkvax.jl:26\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluotkvax.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluotkvax.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    index = 1\n    count = 0\n    while true\n        index = search(string,\
    \ substring, index)\n        if index == nothing\n            break\n        end\n\
    \        count += 1\n        index += 1\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpeffmh89w.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpeffmh89w.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpeffmh89w.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeffmh89w.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeffmh89w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeffmh89w.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpeffmh89w.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeffmh89w.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeffmh89w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeffmh89w.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpeffmh89w.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeffmh89w.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeffmh89w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeffmh89w.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpeffmh89"
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    start_index = 1\n    while(start_index <= length(string))\n\
    \        sub_index = findfirst(string, substring, start_index)\n        if sub_index\
    \ != 0\n            times += 1\n            start_index = sub_index + 1\n    \
    \    else\n            return times\n        end\n    end\n    return times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmppusstuwy.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmppusstuwy.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching\
    \ findfirst(::String, ::String, ::Int64)\n  Closest candidates are:\n    findfirst(::AbstractString,\
    \ ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    ...\n \
    \ Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n    \
    \ @ Main /tmp/tmppusstuwy.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppusstuwy.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppusstuwy.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppusstuwy.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching findfirst(::String,\
    \ ::String, ::Int64)\n  Closest candidates are:\n    findfirst(::AbstractString,\
    \ ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    ...\n \
    \ Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n    \
    \ @ Main /tmp/tmppusstuwy.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppusstuwy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppusstuwy.jl:27\ntest set:\
    \ Error Duri"
  timestamp: 1659979429
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    if length(string)\
    \ == 0\n        return 0\n    end\n    if length(string) < length(substring)\n\
    \        return 0\n    end\n    count = 0\n    len_string = length(string)\n \
    \   len_substring = length(substring)\n    for i = 1:len_string-len_substring+1\n\
    \        if string[i:i+len_substring-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string) return 0\n    matched = true\n \
    \   count = 0\n    for i in 1:length(string)\n        j = 1\n        matched =\
    \ true\n        while j <= length(substring) && matched && i + j - 1 <= length(string)\n\
    \            if string[i + j - 1] != substring[j]\n                matched = false\n\
    \            end\n            j += 1\n        end\n        if matched\n      \
    \      count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp054tknef.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp054tknef.jl:1\n\
    in expression starting at /tmp/tmp054tknef.jl:1\n"
  stdout: ''
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  # let's find all the index of the substrings in the string\n    ind = []\n\
    \    for i in 1:length(string)\n        # check that we don't go out of the string\
    \ and that the substring match the pattern of the string\n        if i + length(substring)\
    \ - 1 <= length(string) && string[i:i+length(substring)-1] == substring[1:end-1]\n\
    \            push!(ind, i)\n        end\n    end\n    return length(ind)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj2iygr17.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpj2iygr17.jl:29\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj2iygr17.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj2iygr17.jl:27\ntest set: Test Failed at /tmp/tmpj2iygr17.jl:30\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj2iygr17.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj2iygr17.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpj2iygr17.jl:31\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj2iygr17.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj2iygr17.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    string_index = 1\n    string_length = length(string)\n    substring_length\
    \ = length(substring)\n    count = 0\n    while string_index < string_length\n\
    \        found = string[string_index:string_index+substring_length-1] == substring\n\
    \        if found\n            count += 1\n            string_index += substring_length\
    \ - 1\n        end\n        string_index += 1\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpc5z3jxz5.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpc5z3jxz5.jl:30\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc5z3jxz5.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc5z3jxz5.jl:28\ntest set: Error During Test\
    \ at /tmp/tmpc5z3jxz5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit String\
    \ at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpc5z3jxz5.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc5z3jxz5.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc5z3jxz5.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpc5z3jxz5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpc5z3jxz5.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc5z3jxz5.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc5z3jxz5.jl:28\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    1     1      2      4\n"
  timestamp: 1659979430
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    pass\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpp38542c2.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpp38542c2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: pass not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpp38542c2.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp38542c2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp38542c2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp38542c2.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpp38542c2.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp38542c2.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp38542c2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp38542c2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: pass not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpp38542c2.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp38542c2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp38542c2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp38542c2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: pass not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpp38542c2.jl:10\n"
  timestamp: 1659979429
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    k = length(substring)\n    if n < k\n        return\
    \ 0\n    end\n    occurrences = 0\n    for i in 1:n-k+1\n        if string[i:i+k-1]\
    \ == substring\n            occurrences += 1\n        end\n    end\n    return\
    \ occurrences\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if (substring == \"\") return 0\n    matches = matchall(r\"$substring\"\
    , string)\n    return length(matches)\nend\n \nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp35a65lln.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp35a65lln.jl:1\n\
    in expression starting at /tmp/tmp35a65lln.jl:1\n"
  stdout: ''
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    if substring == \"\"\n        return 0\n    end\n   \
    \ if length(substring) > length(string)\n        return 0\n    end\n    for i\
    \ in 1:length(string)\n        if string[i:i+length(substring)-1] == substring\n\
    \            counter += 1\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpiccy1247.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpiccy1247.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpiccy1247.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpiccy1247.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpiccy1247.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpiccy1247.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpiccy1247.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpiccy1247.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpiccy1247.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0 return 0 end\n    counter = 0\n    for i in\
    \ 1:length(string)\n        if i + length(substring) <= length(string)\n     \
    \       if string[i:i+length(substring)-1] == substring\n                counter\
    \ += 1\n            end\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanom6qwt.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpanom6qwt.jl:27\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpanom6qwt.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpanom6qwt.jl:25\ntest set: Test Failed at /tmp/tmpanom6qwt.jl:28\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 3 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanom6qwt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanom6qwt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    string = convert(String, string)\n    substring = convert(String, substring)\n\
    \    if substring == \"\"\n        return 0\n    end\n    if substring > string\n\
    \        return 0\n    end\n    count = 0\n    while true\n        index = search(string,\
    \ substring)\n        if index != nothing\n            count += 1\n          \
    \  string = string[index + length(substring):end]\n        else\n            break\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpn28xuuw6.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpn28xuuw6.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: search not\
    \ defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpn28xuuw6.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn28xuuw6.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn28xuuw6.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpn28xuuw6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpn28xuuw6.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn28xuuw6.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn28xuuw6.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpn28xuuw6.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpn28xuuw6.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn28xuuw6.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn28xuuw6.jl:34\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n  count = 0\n  while ismatch(r\"(?=(\"*substring*\"))\", string) #Search for\
    \ the substring with overlapping\n    count += 1\n    string = regexreplace(string,r\"\
    (?=(\"*substring*\"))\", \"\") #remove the first occurrence with overlapping\n\
    \  end\n  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: PCRE compilation error: missing closing parenthesis at\
    \ offset 4\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n  [2]\
    \ compile(pattern::String, options::UInt32)\n    @ Base.PCRE ./pcre.jl:155\n \
    \ [3] compile(regex::Regex)\n    @ Base ./regex.jl:82\n  [4] Regex(pattern::String,\
    \ compile_options::UInt32, match_options::UInt32)\n    @ Base ./regex.jl:47\n\
    \  [5] Regex(pattern::String)\n    @ Base ./regex.jl:70\n  [6] var\"@r_str\"(__source__::LineNumberNode,\
    \ __module__::Module, pattern::Any, flags::Vararg{Any})\n    @ Base ./regex.jl:119\n\
    \  [7] #macroexpand#51\n    @ ./expr.jl:115 [inlined]\n  [8] macroexpand\n   \
    \ @ ./expr.jl:114 [inlined]\n  [9] docm(source::LineNumberNode, mod::Module, meta::Any,\
    \ ex::Any, define::Bool) (repeats 2 times)\n    @ Base.Docs ./docs/Docs.jl:537\n\
    \ [10] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n    @\
    \ Core ./boot.jl:517\nin expression starting at /tmp/tmpba_n137x.jl:1\nin expression\
    \ starting at /tmp/tmpba_n137x.jl:1\n"
  stdout: ''
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:end] ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq5eh8fyy.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpq5eh8fyy.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\ntest set: Test Failed at /tmp/tmpq5eh8fyy.jl:25\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 1 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq5eh8fyy.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5eh8fyy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5eh8fyy.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    index = string.index(substring)\n    while index != nothing\n\
    \        count += 1\n        index = string.index(substring, index+1)\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgfiqfvg4.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpgfiqfvg4.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpgfiqfvg4.jl:11\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpgfiqfvg4.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgfiqfvg4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpgfiqfvg4.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpgfiqfvg4.jl:11\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpgfiqfvg4.jl:24 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgfiqfvg4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpgfiqfvg4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  type String has no field index\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpgfiqfvg4.jl:11\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpgfiqfvg4.jl:25 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgfiqfvg4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpgfiqfvg4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") ="
  timestamp: 1659979430
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substring_len = length(substring)\n    string_len = length(string)\n \
    \   counter = 0\n    if substring_len > string_len\n        return 0\n    end\n\
    \    for i in 1:string_len-substring_len+1\n        if string[i:i+substring_len-1]\
    \ == substring\n            counter = counter + 1\n        end\n    end\n    return\
    \ counter\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    i = 1\n    while\
    \ i <= length(string)\n        if string[i:end] == substring\n            return\
    \ 1 + how_many_times(string[i+1:end], substring)\n        end\n        i = i +\
    \ 1\n    end\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjk1_rksj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpjk1_rksj.jl:28\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjk1_rksj.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjk1_rksj.jl:26\ntest set: Test Failed at /tmp/tmpjk1_rksj.jl:29\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 1 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk1_rksj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk1_rksj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjk1_rksj.jl:30\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk1_rksj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk1_rksj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979429
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ n = length(string)\n    m = length(substring)\n    count = 0\n    for i in 1:n-m+1\n\
    \        if string[i:i+m-1] == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend\n    \n    \n    \n    \n    \n    \n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if string == \"\"\
    \n        return 0\n    end\n    count = 0\n    for i in 1:length(string)\n  \
    \      if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpc0gymqdg.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpc0gymqdg.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpc0gymqdg.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc0gymqdg.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc0gymqdg.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpc0gymqdg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpc0gymqdg.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpc0gymqdg.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpc0gymqdg.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979430
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(matchall(string, substring))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpturwicox.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpturwicox.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpturwicox.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpturwicox.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpturwicox.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpturwicox.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpturwicox.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpturwicox.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpturwicox.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpturwicox.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpturwicox.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpturwicox.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpturwicox.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpturwicox.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tm"
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\"\n        return 0\n    end\n    how_many_times(string[2:end],\
    \ substring) + (string[1:2] == substring[1:2] ? 1 : 0)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9lu6yv5h.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp9lu6yv5h.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 1-codeunit String at index [1:2]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String) (repeats\
    \ 7 times)\n     @ Main /tmp/tmp9lu6yv5h.jl:13\n   [4] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmp9lu6yv5h.jl:21 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9lu6yv5h.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp9lu6yv5h.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [1:2]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String) (repeats 9 times)\n     @\
    \ Main /tmp/tmp9lu6yv5h.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9lu6yv5h.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9lu6yv5h.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp9lu6yv5h.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [1:2]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String) (repeats 8 times)\n     @\
    \ Main /tmp/tmp9lu6yv5h.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test"
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count::Int64 = 0\n    for i in collect(1:length(string))\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp4tw8g1z4.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp4tw8g1z4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp4tw8g1z4.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4tw8g1z4.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4tw8g1z4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4tw8g1z4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp4tw8g1z4.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4tw8g1z4.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4tw8g1z4.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979431
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    k = 0\n    for i in\
    \ 1:n-m+1\n        is_sub = true\n        for j in 1:m\n            if string[i+j-1]\
    \ != substring[j]\n                is_sub = false\n                break\n   \
    \         end\n        end\n        if is_sub\n            k = k + 1\n       \
    \ end\n    end\n    return k\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring in string\n        return count(string, substring)\n    else\n\
    \        return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpngoxel65.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpngoxel65.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpngoxel65.jl:10\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpngoxel65.jl:21 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpngoxel65.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpngoxel65.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpngoxel65.jl:10\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpngoxel65.jl:22 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpngoxel65.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpngoxel65.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpngoxel65.jl:10\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpngoxel65.jl:23 [inlined]\n  "
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    if length(string)\
    \ == 0\n        return 0\n    end\n    if length(string) < length(substring)\n\
    \        return 0\n    end\n    count = 0\n    for i = 1:length(string)\n    \
    \    substr = string[i:i+length(substring)-1]\n        if substr == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp2pvvyikg.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp2pvvyikg.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp2pvvyikg.jl:21\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2pvvyikg.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2pvvyikg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp2pvvyikg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp2pvvyikg.jl:21\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2pvvyikg.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2pvvyikg.jl:32\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i, j, cnt = 1, 1, 0\n    for c in string\n        if c == substring[j]\n\
    \            j += 1\n            if j == length(substring) + 1\n             \
    \   cnt += 1\n                j = 1\n            end\n        else\n         \
    \   j = 1\n        end\n        i += 1\n    end\n    return cnt\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfw0vhn7s.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpfw0vhn7s.jl:32\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfw0vhn7s.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfw0vhn7s.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979430
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if (length(substring) > length(string))\n        return 0\n    end\n \
    \   matches = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            matches += 1\n        end\n    end\n    return matches\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpq76vtmyk.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpq76vtmyk.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpq76vtmyk.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpq76vtmyk.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpq76vtmyk.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpq76vtmyk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpq76vtmyk.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpq76vtmyk.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpq76vtmyk.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979431
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    i = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979429
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    length_string = length(string)\n    length_substring = length(substring)\n\
    \    counts = zeros(Int64,length_string-length_substring+1)\n    for i in 1:length_string-length_substring+1\n\
    \        for j in 1:length_substring\n            if string[i+j-1] != substring[j]\n\
    \                break\n            end\n            if j == length_substring\n\
    \                counts[i] = 1\n            end\n        end\n    end\n    return\
    \ sum(counts)\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            times += 1\n        end\n    end\n    return times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpnmt105i5.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpnmt105i5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpnmt105i5.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnmt105i5.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnmt105i5.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpnmt105i5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpnmt105i5.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnmt105i5.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnmt105i5.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \"\"\"\n    >>> how_many_times(\"aaaa\", \"\")\n    \"\"\"\n    length\
    \ = length(substring)\n    count = 0\n    for i in 1:length(string)\n        if\
    \ string[i:i+length-1] == substring\n            count += 1\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppjllorrd.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmppjllorrd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmppjllorrd.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjllorrd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjllorrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmppjllorrd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmppjllorrd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjllorrd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjllorrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmppjllorrd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmppjllorrd.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjllorrd.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjllorrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmppjllorrd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmppjllorr"
  timestamp: 1659979432
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    total = 0\n    for start in 1:length(string) - length(substring) + 1\n\
    \        if string[start:start+length(substring)-1] == substring\n           \
    \ total += 1\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979429
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    size_str = length(string)\n    size_substr = length(substring)\n    if\
    \ size_str < size_substr\n        return 0\n    end\n    num_times = 0\n    for\
    \ i in 1:size_str-size_substr+1\n        if substring == string[i:i+size_substr-1]\n\
    \            num_times += 1\n        end\n    end\n    return num_times\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if substring == string\n\
    \        return 1\n    end\n    amount = 0\n    for i in 1:length(string)\n  \
    \      if string[i:i+length(substring)-1] == substring\n            amount +=\
    \ 1\n        end\n    end\n    return amount\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpdsy0_nk2.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpdsy0_nk2.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpdsy0_nk2.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdsy0_nk2.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdsy0_nk2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpdsy0_nk2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpdsy0_nk2.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdsy0_nk2.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdsy0_nk2.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979432
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    n = length(string)\n\
    \    m = length(substring)\n    count = 0\n    for i in 1:n-m+1\n        if string[i:i+m-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979429
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    number_of_overlaps\
    \ = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            number_of_overlaps += 1\n        end\n    end\n  \
    \  return number_of_overlaps\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp2dkyhryy.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp2dkyhryy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp2dkyhryy.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2dkyhryy.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2dkyhryy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2dkyhryy.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp2dkyhryy.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2dkyhryy.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2dkyhryy.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    idx = 1\n    result = 0\n    if substring == \"\"\n        return 0\n\
    \    end\n    @while idx != lastindex(string)\n        if string[idx:idx+lastindex(substring)-1]\
    \ == substring\n            result += 1\n        end\n        idx += 1\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: @while not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n\
    \ [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode,\
    \ mod::Module, meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs\
    \ ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n\
    \   @ Core ./boot.jl:517\nin expression starting at /tmp/tmp006gdto3.jl:1\nin\
    \ expression starting at /tmp/tmp006gdto3.jl:1\n"
  stdout: ''
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    how_many_times = 0\n    if length(substring) <= length(string)\n     \
    \   for i in 1:length(string)\n            if substring == string[i:i+length(substring)-1]\n\
    \                how_many_times += 1\n            end\n        end\n    end\n\
    \    return how_many_times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphdxq23b3.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmphdxq23b3.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmphdxq23b3.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphdxq23b3.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphdxq23b3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmphdxq23b3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmphdxq23b3.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphdxq23b3.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphdxq23b3.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    c = 0\n    for i in\
    \ 1:n\n        if string[i:i+m-1] == substring\n            c += 1\n        end\n\
    \    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp9cmyqslf.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp9cmyqslf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp9cmyqslf.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9cmyqslf.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9cmyqslf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9cmyqslf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp9cmyqslf.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9cmyqslf.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9cmyqslf.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    index = search(string, substring)\n    if index == nothing\n        return\
    \ 0\n    else\n        return 1 + how_many_times(string[index+1:end], substring)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5ae6r71r.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp5ae6r71r.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp5ae6r71r.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ae6r71r.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ae6r71r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5ae6r71r.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp5ae6r71r.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ae6r71r.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ae6r71r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5ae6r71r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp5ae6r71r.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ae6r71r.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ae6r71r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp5ae6r71r.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp5ae6r71"
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i, count = 1, 0\n    while i<=length(string)-length(substring)+1\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \            i += length(substring)\n        else\n            i += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3b04ccl3.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3b04ccl3.jl:28\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3b04ccl3.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3b04ccl3.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    if substring in string\n        n=0\n        for i in 1:length(string)\n\
    \            if string[i] == substring[1]\n                if string[i:i+length(substring)-1]\
    \ == substring\n                    n+=1\n                end\n            end\n\
    \        end\n        return n\n    else\n        return 0\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0eit7t8k.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp0eit7t8k.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmp0eit7t8k.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmp0eit7t8k.jl:30 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0eit7t8k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0eit7t8k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmp0eit7t8k.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmp0eit7t8k.jl:31 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0eit7t8k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0eit7t8k.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmp0eit7t8k.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmp0eit7t8k.jl:32 [inlined]\n  "
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    match(r\"($substring)\", string)\nend\n</code>\nThis code gives the correct\
    \ answer on my computer, however the autograder says that it failed.\n<code>Test\
    \ Passed: Submission passed test how_many_times_test_0\nTest Passed: Submission\
    \ passed test how_many_times_test_1\nTest Passed: Submission passed test how_many_times_test_2\n\
    Test Passed: Submission passed test how_many_times_test_3\nTest Passed: Submission\
    \ passed test how_many_times_test_4\nTest Passed: Submission passed test how_many_times_test_5\n\
    Test Passed: Submission passed test how_many_times_test_6\nTest Passed: Submission\
    \ passed test how_many_times_test_7\nTest Passed: Submission passed test how_many_times_test_8\n\
    Test Passed: Submission passed test how_many_times_test_9\nTest Passed: Submission\
    \ passed test how_many_times_test_10\nTest Passed: Submission passed test how_many_times_test_11\n\
    Test Passed: Submission passed test how_many_times_test_12\nTest Passed: Submission\
    \ passed test how_many_times_test_13\nTest Passed: Submission passed test how_many_times_test_14\n\
    Test Passed: Submission passed test how_many_times_test_15\nTest Passed: Submission\
    \ passed test how_many_times_test_16\nTest Passed: Submission passed test how_many_times_test_17\n\
    Test Passed: Submission passed test how_many_times_test_18\nTest Passed: Submission\
    \ passed test how_many_times_test_19\nTest Passed: Submission passed test how_many_times_test_20\n\
    Test Passed: Submission passed test how_many_times_test_21\nTest Passed: Submission\
    \ passed test how_many_times_test_22\nTest Passed: Submission passed test how_many_times_test_23\n\
    Test Passed: Submission passed test how_many_times_test_24\nTest Passed: Submission\
    \ passed test how_many_times_test_25\nTest Passed: Submission passed test how_many_times_test_26\n\
    Test Passed: Submission passed test how_many_times_test_27\nTest Passed: Submission\
    \ passed test how_many_times_test_28\nTest Passed: Submission\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qn0ere4.jl:12\nin expression starting at\
    \ /tmp/tmp0qn0ere4.jl:12\n"
  stdout: ''
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    start = 1\n    index = search(string, substring, start)\n    n = 0\n \
    \   while index != nothing\n        n += 1\n        start = index + 1\n      \
    \  index = search(string, substring, start)\n    end\n    return n\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbfxix3pj.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpbfxix3pj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpbfxix3pj.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbfxix3pj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbfxix3pj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbfxix3pj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpbfxix3pj.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbfxix3pj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbfxix3pj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbfxix3pj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpbfxix3pj.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbfxix3pj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbfxix3pj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbfxix3pj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpbfxix3p"
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    n_times = 0\n   \
    \ iter = 1\n    for i in 1:length(string)\n        if substring == string[i:i+length(substring)-1]\n\
    \            n_times += 1\n        end\n    end\n    return n_times\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpftmq0iqk.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpftmq0iqk.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpftmq0iqk.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpftmq0iqk.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpftmq0iqk.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpftmq0iqk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpftmq0iqk.jl:16\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpftmq0iqk.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpftmq0iqk.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for index = 1:length(string)\n        if isequal(string[index:index+length(substring)-1],\
    \ substring)\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpo_02v0ln.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpo_02v0ln.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpo_02v0ln.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo_02v0ln.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo_02v0ln.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpo_02v0ln.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpo_02v0ln.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo_02v0ln.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo_02v0ln.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    found_times = 0\n    for i in 1:length(string)\n        if string[i] ==\
    \ substring[1] && (i+length(substring)-1) <= length(string) && string[i:i+length(substring)-1]\
    \ == substring[2:end]\n            found_times += 1\n        end\n    end\n  \
    \  return found_times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp63wfs4i9.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp63wfs4i9.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp63wfs4i9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp63wfs4i9.jl:22\ntest set: Test Failed at /tmp/tmp63wfs4i9.jl:25\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wfs4i9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wfs4i9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp63wfs4i9.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wfs4i9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wfs4i9.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979432
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    matches = 0\n   \
    \ for i in 1:length(string)\n        for j in 1:length(substring)\n          \
    \  if (i+j-1) > length(string)\n                return matches\n            end\n\
    \            if string[i+j-1] != substring[j]\n                break\n       \
    \     end\n            if j == length(substring)\n                matches += 1\n\
    \            end\n        end\n    end\n    return matches\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979431
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    str_len = length(string)\n    substr_len = length(substring)\n    count\
    \ = 0\n    for i in 0:str_len-substr_len+1\n        if string[i:i+substr_len]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppdclw6bg.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmppdclw6bg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access empty\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmppdclw6bg.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppdclw6bg.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppdclw6bg.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppdclw6bg.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access 7-codeunit\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmppdclw6bg.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppdclw6bg.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppdclw6bg.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppdclw6bg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmppdclw6bg.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppdclw6bg.jl:27"
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    how_many_times(string::Vector{Char}, substring::Vector{Char})::Int64 =\n\
    \    count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwtmmee5g.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwtmmee5g.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: Cannot `convert` an\
    \ object of type typeof(count) to an object of type Int64\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpwtmmee5g.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtmmee5g.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtmmee5g.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwtmmee5g.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: count not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpwtmmee5g.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtmmee5g.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtmmee5g.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwtmmee5g.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: count not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpwtmmee5g.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtmmee5g.jl:26 [inlined]\n\
    \   ["
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if string == \"\"\
    \n        return 0\n    end\n    times = 0\n    for i in 1:length(string)\n  \
    \      if string[i:i+length(substring)-1] == substring\n            times += 1\n\
    \        end\n    end\n    return times\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpruhq9tdr.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpruhq9tdr.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpruhq9tdr.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpruhq9tdr.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpruhq9tdr.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpruhq9tdr.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpruhq9tdr.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpruhq9tdr.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpruhq9tdr.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    while\
    \ true\n        index = findfirst(string, substring)\n        if index == nothing\n\
    \            break\n        end\n        count += 1\n        string = string[index+1:end]\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmprv7ck7v0.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmprv7ck7v0.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting\
    \ with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n\
    \    +(!Matched::LinearAlgebra.UniformScaling, ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmprv7ck7v0.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprv7ck7v0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprv7ck7v0.jl:28\ntest set:\
    \ Test Failed at /tmp/tmprv7ck7v0.jl:30\n  Expression: candidate(\"xyxyxyx\",\
    \ \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprv7ck7v0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprv7ck7v0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmprv7ck7v0.jl:31\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprv7ck7v0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprv7ck7v0.jl:28\n"
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    # Define empty vector to store the position at which the substring\
    \ is found in the original string\n    occurences = Vector{Int64}()\n    \n  \
    \  # Define temporary counters\n    i::Int64 = 1\n    j::Int64 = 1\n    \n   \
    \ # Check if substring is not empty\n    if substring != \"\"\n        \n    \
    \    # Loop through all the characters of the original string\n        while i\
    \ <= length(string)\n            # Check if the character of the original string\
    \ is the same as the first character of the substring\n            if string[i]\
    \ == substring[j]\n                # If true, add the position of the character\
    \ in the vector of occurences\n                push!(occurences, i)\n        \
    \        # Add 1 to the index of the substring and reset the index of the original\
    \ string\n                j = j + 1\n                i = 1\n                #\
    \ If the substring was fully found, reset the indexes and do not add 1 to the\
    \ index of the original string\n                if j > length(substring)\n   \
    \                 j = 1\n                    i = i - 1\n                end\n\
    \            # If the character of the original string is not the same as the\
    \ first character of the substring, add 1 to the index of the original string\n\
    \            else\n                i = i + 1\n            end\n        end\n \
    \   end\n    \n    # Return the number of occurences of the substring in the original\
    \ string\n    return length(occurences)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmprd0fss37.jl:47

    '
  stdout: "test set: Error During Test at /tmp/tmprd0fss37.jl:51\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmprd0fss37.jl:24\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmprd0fss37.jl:51 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprd0fss37.jl:49\ntest set:\
    \ Error During Test at /tmp/tmprd0fss37.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmprd0fss37.jl:24\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmprd0fss37.jl:52 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprd0fss37.jl:49\ntest set:\
    \ Error During Test at /tmp/tmprd0fss37.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /t"
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = 0\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            if length(substring)==1\n                n += 1\n            else\n\
    \                next_part = string[i+1:i+length(substring)]\n               \
    \ if next_part == substring[2:end]\n                    n += 1\n             \
    \   end\n            end\n        end\n    end\n    return n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpki4yotvq.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpki4yotvq.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpki4yotvq.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpki4yotvq.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpki4yotvq.jl:29\ntest set:\
    \ Test Failed at /tmp/tmpki4yotvq.jl:33\n  Expression: candidate(\"john doe\"\
    , \"john\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpki4yotvq.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpki4yotvq.jl:29\nTest Summary: | Pass  Fail\
    \  Error  Total\ntest set      |    2     1      1      4\n"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    found_idx = findfirst(string, substring)\n    if isnull(found_idx)\n \
    \       return 0\n    else\n        return 1 + how_many_times(string[found_idx+1:end],\
    \ substring)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwawj1gks.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpwawj1gks.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: isnull not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpwawj1gks.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwawj1gks.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwawj1gks.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwawj1gks.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: isnull not defined\n  Stacktrace:\n\
    \   [1] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpwawj1gks.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwawj1gks.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwawj1gks.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwawj1gks.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: isnull not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpwawj1gks.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwawj1gks.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwawj1gks.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwawj1gks.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: isnull not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpwawj1gk"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    last_match = string.find(substring)\n\
    \    count = 0\n    while !isnothing(last_match)\n        count += 1\n       \
    \ last_match = string.find(substring, last_match + 1)\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpdqjiutm9.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpdqjiutm9.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqjiutm9.jl:13\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdqjiutm9.jl:26 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdqjiutm9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdqjiutm9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqjiutm9.jl:13\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdqjiutm9.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdqjiutm9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdqjiutm9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqjiutm9.jl:13\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdqjiutm9.jl:28 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdqjiutm9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdqjiutm9.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            if string[i:i+length(substring)-1] == substring\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpnhu8apcd.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpnhu8apcd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [9:11]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpnhu8apcd.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnhu8apcd.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnhu8apcd.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n   \
    \     for j in 1:length(substring)\n            if substring[j] != string[i+j-1]\n\
    \                break\n            end\n            if j == length(substring)\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979432
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    count = 0\n    for\
    \ i in 1:n-m+1\n        j = 1\n        while j<=m && string[i+j-1] == substring[j]\n\
    \            j += 1\n        end\n        if j>m\n            count += 1\n   \
    \     end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    string_pos = 1\n\
    \    substring_pos = 1\n    substring_length = length(substring)\n    times =\
    \ 0\n    while (string_pos <= length(string))\n        if (string[string_pos]\
    \ == substring[substring_pos])\n            substring_pos += 1\n            if\
    \ (substring_pos > substring_length)\n                times += 1\n           \
    \     substring_pos = 1\n            end\n        else\n            substring_pos\
    \ = 1\n        end\n        string_pos += 1\n    end\n    return times\nend\n\
    how_many_times(\"\", \"a\")\nhow_many_times(\"aaa\", \"a\")\nhow_many_times(\"\
    aaaa\", \"aa\")\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1zi5so_9.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp1zi5so_9.jl:41\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1zi5so_9.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1zi5so_9.jl:38\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    string_length = length(string)\n    substring_length = length(substring)\n\
    \    if substring_length == 0 \n        return 0\n    end\n    count = 0\n   \
    \ for i in 1:string_length\n        if string[i:i+substring_length-1] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpmxksw0ii.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpmxksw0ii.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpmxksw0ii.jl:17\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmxksw0ii.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmxksw0ii.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmxksw0ii.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpmxksw0ii.jl:17\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmxksw0ii.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmxksw0ii.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    @assert(length(substring)\
    \ <= length(string))\n    String.overlaps(string, substring)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpatkwrisd.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpatkwrisd.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  AssertionError: length(substring)\
    \ <= length(string)\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpatkwrisd.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatkwrisd.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatkwrisd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpatkwrisd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  type DataType has no field overlaps\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpatkwrisd.jl:14\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpatkwrisd.jl:22 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpatkwrisd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpatkwrisd.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  type DataType has no field overlaps\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpatkwrisd.jl:14\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpatkwrisd.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpatkwrisd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpatkwrisd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  type DataTyp"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    start_index = 0\n    number_of_substrings = 0\n    substring_length =\
    \ length(substring)\n    for character in string\n        if character == substring[1]\n\
    \            if substring == string[start_index:start_index+substring_length]\n\
    \                number_of_substrings += 1\n            end\n        end\n   \
    \     start_index += 1\n    end\n    return number_of_substrings\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp_503szfx.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp_503szfx.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp_503szfx.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_503szfx.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_503szfx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_503szfx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp_503szfx.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_503szfx.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_503szfx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp_503szfx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp_503szfx.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/t"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    length(string) - length(replace(string, substring, \"\"))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpp3qalhxj.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpp3qalhxj.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpp3qalhxj.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp3qalhxj.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp3qalhxj.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp3qalhxj.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching replace(::String,\
    \ ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpp3qalhxj.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp3qalhxj.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp3qalhxj.jl:16\ntest set:\
    \ Error Dur"
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    while in(substring, string)\n        count += 1\n     \
    \   string = replace(string, substring, \"\")\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpdqdnxw0q.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpdqdnxw0q.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqdnxw0q.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpdqdnxw0q.jl:22 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdqdnxw0q.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdqdnxw0q.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqdnxw0q.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpdqdnxw0q.jl:23 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdqdnxw0q.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdqdnxw0q.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String,\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpdqdnxw0q.jl:11\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpdqdnxw0q.jl:24 [inlined]\n  "
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\" \n        return 0\n    end\n \
    \   matches = findall(substring, string)\n    if matches == Any[]\n        return\
    \ 0\n    end\n    return length(matches)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8_9g63j_.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp8_9g63j_.jl:26\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8_9g63j_.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8_9g63j_.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     1      4\n"
  timestamp: 1659979435
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    lsub = length(substring)\n    lstring = length(string)\n    n = 0\n  \
    \  for i in 1:lstring-lsub+1\n        if string[i:i+lsub-1] == substring\n   \
    \         n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    found = 0\n    for i = 1:length(string)\n        found += sum(string[i:i+length(substring)-1]\
    \ .== substring)\n    end\n    return found\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpf6jfofkn.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpf6jfofkn.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpf6jfofkn.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf6jfofkn.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf6jfofkn.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpf6jfofkn.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf6jfofkn.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf6jfofkn.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf6jfofkn.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfrj95rr0.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfrj95rr0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpfrj95rr0.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfrj95rr0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpfrj95rr0.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfrj95rr0.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfrj95rr0.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979420
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    l1 = length(string)\n    l2 = length(substring)\n    c = 0\n    i = 1\n\
    \    while i <= l1 - l2 + 1\n        if substring == string[i:i+l2-1]\n      \
    \      c += 1\n        end\n        i += 1\n    end\n    return c\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # TODO: how many times does substring appear in string?\n    # count overlapping\
    \ cases, so\n    # e.g. for \"aaa\" and \"aa\" the answer is 3\n    # empty string\
    \ is a substring of any string\n    # e.g. for \"aaa\" and \"\" the answer is\
    \ 4\n    # substring can be longer than string\n    # e.g. for \"aaa\" and \"\
    aaaa\" the answer is 0\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6i80khpa.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp6i80khpa.jl:25\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6i80khpa.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6i80khpa.jl:23\ntest set: Test Failed at /tmp/tmp6i80khpa.jl:26\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6i80khpa.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6i80khpa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6i80khpa.jl:27\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6i80khpa.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6i80khpa.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 1\n    count = 0\n    while i + length(substring) <= length(string)\n\
    \        if string[i:i+length(substring)] == substring\n            count += 1\n\
    \        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpixr60vt9.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpixr60vt9.jl:26\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpixr60vt9.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpixr60vt9.jl:24\ntest set: Test Failed at /tmp/tmpixr60vt9.jl:27\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 0 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixr60vt9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixr60vt9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpixr60vt9.jl:28\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixr60vt9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixr60vt9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \"\"\" calculate the number of time the substring is found in the string\
    \ \"\"\"\n    if substring == \"\" || string == \"\" || string == substring\n\
    \        return 0\n    end\n    answer = 0\n    i = 0\n    while i < length(string)\
    \ - length(substring) + 1\n        if string[i+1:end] == substring || string[i+1:end]\
    \ == \"\"\n            answer += 1\n        end\n        i += 1\n    end\n   \
    \ return answer\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe5yq9p42.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpe5yq9p42.jl:30\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe5yq9p42.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpe5yq9p42.jl:28\ntest set: Test Failed at /tmp/tmpe5yq9p42.jl:31\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 1 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5yq9p42.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5yq9p42.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe5yq9p42.jl:32\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5yq9p42.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5yq9p42.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    s = findnext(string, substring)\n    if s == -1\n        return 0\n  \
    \  else\n        return 1 + how_many_times(string[s+1:end], substring)\n    end\n\
    end\n@test how_many_times(\"\", \"a\") == 0\n@test how_many_times(\"aaa\", \"\
    a\") == 3\n@test how_many_times(\"aaaa\", \"aa\") == 3\n@test how_many_times(\"\
    aabaabaa\", \"ab\") == 3\n;\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpx50hopqx.jl:17

    in expression starting at /tmp/tmpx50hopqx.jl:17

    '
  stdout: ''
  timestamp: 1659979434
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979421
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    max_index = length(string) - length(substring) + 1\n    found = 0\n  \
    \  for index in 1:max_index\n        if string[index:index+length(substring)-1]\
    \ == substring\n            found += 1\n        end\n    end\n    return found\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979434
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n, m = length(string), length(substring)\n    if n < m\n        return\
    \ 0\n    end\n    count = 0\n    for i in 1:n-m+1\n        if string[i:i+m-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n  if isempty(substring) \n    return 0\n  end\n  c = contains(string, substring)\n\
    \  count = 0\n  i = 1\n  while c\n    count += 1\n    i += 1\n    c = contains(string[i:end],\
    \ substring)\n  end\n  return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkbq6wie_.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpkbq6wie_.jl:29\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkbq6wie_.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkbq6wie_.jl:27\ntest set: Test Failed at /tmp/tmpkbq6wie_.jl:30\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n   Evaluated: 7 == 4\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbq6wie_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbq6wie_.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659979436
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    count = 0\n    for\
    \ i in 1:n-m+1\n        if string[i:i+m-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979434
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    how_many_times = 0\n    for i = 1:length(string)\n        sub = string[i:i+length(substring)-1]\n\
    \        if sub == substring\n            how_many_times += 1\n        end\n \
    \   end\n    return how_many_times\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpa5v0vddw.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpa5v0vddw.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpa5v0vddw.jl:12\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa5v0vddw.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa5v0vddw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpa5v0vddw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpa5v0vddw.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa5v0vddw.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa5v0vddw.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979437
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            times += 1\n        end\n    end\n    return times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp3gdp1ypi.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp3gdp1ypi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp3gdp1ypi.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3gdp1ypi.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3gdp1ypi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp3gdp1ypi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp3gdp1ypi.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3gdp1ypi.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3gdp1ypi.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(string)\n    m = length(substring)\n    found = 0\n    for\
    \ start in 0:n-m+1\n        if string[start:start+m] == substring\n          \
    \  found += 1\n        end\n    end\n    return found\nend\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbd09ci50.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpbd09ci50.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  BoundsError: attempt to access empty\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpbd09ci50.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbd09ci50.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbd09ci50.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbd09ci50.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access 7-codeunit\
    \ String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpbd09ci50.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbd09ci50.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbd09ci50.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbd09ci50.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpbd09ci50.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbd09ci50.jl:28"
  timestamp: 1659979437
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substr_len = length(substring)\n    string_len = length(string)\n    indices\
    \ = [i for i in 1:string_len-substr_len+1 if string[i:i+substr_len-1] == substring]\n\
    \    return length(indices)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    (p::Integer) -> Int64 = index(string, substring, p)\n    c = 0\n    p\
    \ = 1\n    while (p > 0)\n        p = p()\n        c += 1\n    end\n    return\
    \ c\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpz5bavi6j.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpz5bavi6j.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpz5bavi6j.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz5bavi6j.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz5bavi6j.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpz5bavi6j.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: objects of type Int64 are\
    \ not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpz5bavi6j.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz5bavi6j.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz5bavi6j.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpz5bavi6j.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpz5bavi6j.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz5bavi6j.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz5bavi6j.jl:23\ntest set:\
    \ Erro"
  timestamp: 1659979438
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n  string_length = length(string)\n  substring_length = length(substring)\n\
    \  count = 0\n  for i in 1:string_length-substring_length+1\n    if(string[i:i+substring_length-1]\
    \ == substring)\n      count += 1\n    end\n  end\n  return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    ret = 0\n    len_substring = length(substring)\n    for i in 1:length(string)\n\
    \        curr_substring = string[i:i+len_substring-1]\n        if curr_substring\
    \ == substring\n            ret += 1\n        end\n    end\n    return ret\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphzdv0zr3.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmphzdv0zr3.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmphzdv0zr3.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphzdv0zr3.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphzdv0zr3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmphzdv0zr3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmphzdv0zr3.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphzdv0zr3.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphzdv0zr3.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  timestamp: 1659979437
- exit_code: 0
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0 \n    iter = 0\n    while iter <= length(string) - length(substring)\n\
    \        if string[iter+1:iter+length(substring)] == substring\n            count\
    \ += 1\n        end\n        iter += 1\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979435
- exit_code: 1
  program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times(\"\", \"a\")\n    0\n\
    \    >>> how_many_times(\"aaa\", \"a\")\n    3\n    >>> how_many_times(\"aaaa\"\
    , \"aa\")\n    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    s = string\n    count = 0\n    while true\n        # print(s)\n      \
    \  try\n            i = findfirst(s, substring)\n            count += 1\n    \
    \        s = s[i+1:end]\n        catch \n            break\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnnw48ipk.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpnnw48ipk.jl:29\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnnw48ipk.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnnw48ipk.jl:28\ntest set: Test Failed at /tmp/tmpnnw48ipk.jl:30\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnw48ipk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnw48ipk.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnnw48ipk.jl:31\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnw48ipk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnw48ipk.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979437

name: HumanEval_60_sum_to_n
language: jl
prompt: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
  \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
  \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
  \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
  \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
completions: ["  sum::Int64 = 0\n  for i in 1:n\n    sum += i\n  end\n  return sum\n\
    end", "    return sum(1:n)\nend", "    return n*(n+1)/2\nend", "    result = 0\n\
    \    for i in 1:n\n        result += i\n    end\n    return result\nend", "  \
    \  result = 0\n    for i in 1:n\n        result += i\n    end\n    return result\n\
    end", "    i = 0\n    total = 0\n    while i < n\n        total += i + 1\n   \
    \     i += 1\n    end\n    return total\nend", "    if n == 1\n        return\
    \ 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "    if n==1\n\
    \        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    # base case\n    if n == 1\n        1\n    else\n        n + sum_to_n(n-1)\n\
    \    end\nend", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n\
    \    return sum\nend", "    total = 0\n    for i = 1:n\n        total += i\n \
    \   end\n    return total\nend", "    if n < 1\n        return 0\n    else\n \
    \       return n + sum_to_n(n-1)\n    end\nend", "    if n > 0\n        s = 0\n\
    \        for i = 1:n\n            s += i\n        end\n        return s\n    else\n\
    \        return 0\n    end\nend", "    return 0.5*n*(n+1)\nend", "    s = 0\n\
    \    for i in 1:n\n        s += i\n    end\n    return s\nend", "    s=0\n   \
    \ for i=1:n\n        s=s+i\n    end\n    return s\nend", "    a = 0\n    for i\
    \ = 1:n\n        a += i\n    end\n    return a\nend", "    return sum(collect(1:n))\n\
    end", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end\n    ", "    sum_to_n=0\n    for i in 1:n\n        sum_to_n+=i\n    end\n\
    \    return sum_to_n\nend", "    return n * (n + 1) / 2\nend\n \nsum_to_n(1)",
  "    return n * (n + 1) / 2\nend", "    return ((n*(n+1))/2)\nend", "    if n ==\
    \ 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    number=0\n    for i in 1:n\n        number=number+i\n    end\n    return number\n\
    end", "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n    return sum\n\
    end", "    return Int64(n*(n+1)/2)\nend", "    total = 0\n    for i in 1:n\n \
    \       total += i\n    end\n    return total\nend", "    total = 0\n    for i\
    \ in 1:n\n        total += i\n    end\n    return total\nend", "    sum=0\n  \
    \  for i in 1:n\n        sum=sum+i\n    end\n    return sum\nend", "    total\
    \ = 0\n    for i in 1:n\n        total += i\n    end\n    return total\nend",
  "    \"\"\"\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n    5050\n  \
    \  >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n\
    \    1\n    \"\"\"\n    \n    sum::Int64 = 0\n    for i in 1:n\n        sum +=\
    \ i\n    end\n    return sum\nend\n ", "    if n == 1\n        return 1\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend", "   n * (n + 1) / 2\nend", " \
    \   if n==1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n  \
    \  end\nend", "    sum=0 \n    for i in 1:n\n        sum += i\n    end\n    return\
    \ sum\nend", "    \n    ans = 0\n    for i in 1:n\n        ans += i\n    end\n\
    \    return ans\nend", "    s = 0\n    for i = 1:n\n        s += i\n    end\n\
    \    return s\nend\n ", "    if n == 1 \n        return 1\n    else \n       \
    \ return n + sum_to_n(n-1)\n    end\nend", "    return (n * (n + 1)) \xF7 2\n\
    end", "    total = 0\n    for i in 1:n\n        total += i\n    end\n    return\
    \ total\nend", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n   \
    \ return sum\nend", "    return Int64(n * (n + 1) / 2)\nend", "    if n == 1\n\
    \        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n \
    \   end\nend\nsum_to_n(30)\n \n ", "    sum = 0\n    for i in 1:n\n        sum\
    \ += i\n    end\n    return sum\nend", "    soma = 0 \n    for i in 1:n\n    \
    \    soma += i\n    end\n    return soma\nend", "    y = 0\n    for i = 1:n\n\
    \        y = y + i\n    end\n    return y\nend", "    if n == 1\n        return\
    \ 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "    s = 0\n \
    \   for i = 1:n\n        s += i\n    end\n    return s\nend\nsum_to_n(30)", " \
    \   if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "    if n == 1 \n        return 1\n    else \n        return n\
    \ + sum_to_n(n-1)\n    end\nend", "    total = 0\n    for i in 1:n\n        total\
    \ += i\n    end\n    return total\nend", "    sum = 0\n    for i = 1:n\n     \
    \   sum += i\n    end\n    return sum\nend\n@assert sum_to_n(30) == 465\n@assert\
    \ sum_to_n(100) == 5050\n@assert sum_to_n(5) == 15\n@assert sum_to_n(10) == 55\n\
    @assert sum_to_n(1) == 1\n ", "    total = 0\n    for i = 1:n\n        total +=\
    \ i\n    end\n    return total\nend", "    if n == 1 \n        return 1\n    else\
    \ \n        return n + sum_to_n(n-1)\n    end\nend\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    ", "    if n == 1\n        return 1\n\
    \    else\n        return n + sum_to_n(n-1)\n    end\nend", "    total = 0\n \
    \   for i in 1:n\n        total += i\n    end\n    return total\nend", "    if\
    \ n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\n\
    end", "    total = 0\n    for i = 1:n\n        total += i\n    end\n    return\
    \ total\nend", "    n*(n+1)/2\nend", "    sum = 0\n    for i in 1:n\n        sum\
    \ += i\n    end\n    return sum\nend", "    s=0\n    if n<=0\n        return 0\n\
    \    else\n        for i in 1:n\n            s+=i\n        end\n        return\
    \ s\n    end\nend", "    \n    if n==1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    sum_to_n(n::Int64)::Int64 = n*(n+1)/2\n\
    end", "    if n == 1 \n        return 1\n    else\n        return sum_to_n(n-1)\
    \ + n\n    end\nend", "    return div(n*(n+1),2)\nend", "    sum = 0\n    for\
    \ i in 1:n\n        sum += i\n    end\n    return sum\nend", "    if n == 1\n\
    \        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    ans = n*(n+1)/2 \n    return ans \nend ", "    if n == 1\n        return 1\n\
    \    else\n        return n + sum_to_n(n-1)\n    end\nend", "    return n == 1\
    \ ? 1 : n + sum_to_n(n-1)\nend", "    if n==1 \n        return 1\n    else\n \
    \       return n + sum_to_n(n-1)\n    end\nend", "    return n == 1 ? 1 : n +\
    \ sum_to_n(n-1)\nend", "    \"Replace this docstring with your solution\"\nend",
  "    return (n+1)*n / 2\nend", "    ans::Int64 = 0\n    for i = 1:n\n        ans\
    \ += i\n    end\n    return ans\nend", "    return div(n*(n+1),2)\nend;", "  \
    \  tot = 0\n    for i in 1:n\n        tot += i\n    end\n    return tot\nend",
  "    if n == 1:\n        return 1\n    else:\n        return sum_to_n(n-1) + n\n\
    \    end\nend", "  if n == 1\n    return 1\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "    n*(n+1)/2\nend", "     if n == 1\n         return 1\n     else\n\
    \         return n + sum_to_n(n-1)\n     end\nend", "    if n == 1\n        return\
    \ 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "    return div(n*(n+1),2)\n\
    end", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end", "    tot = 0\n    for i = 1:n\n        tot += i\n    end\n    return tot\n\
    end", "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n    return sum\n\
    end", "    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend\n\"\"\"\n# BEGIN PROBLEM 1\n\"factorial\" is a function that computes\
    \ the factorial of\na given number.\n    >>> factorial(4)\n    24\n    >>> factorial(5)\n\
    \    120\n    >>> factorial(6)\n    720\n\"\"\"", "    s = 0\n    for i in 1:n\n\
    \        s += i\n    end\n    return s\nend", "    sum = 0\n    for i in 1:n\n\
    \        sum += i\n    end\n    return sum\nend", "    if n == 1\n        return\
    \ 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "    sum = 0\n\
    \    for i in 1:n\n        sum += i\n    end\n    return sum\nend", "    return\
    \ n*(n+1)/2\nend", "    return n*(n+1)/2\nend", "    sum = 0\n    for i = 1:n\n\
    \        sum += i\n    end\n    return sum\nend", "    total = 0\n    for i in\
    \ 1:n\n        total += i\n    end\n    return total\nend", " \n    sum = 0\n\
    \    for i = 1:n\n        sum += i\n    end\n    return sum\nend", "    if n ==\
    \ 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    n*(n+1)/2\nend", "    if n == 1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    sum = 0\n    for i in 1:n\n        sum\
    \ += i\n    end\n    return sum\nend", "    if n <= 1\n        return n\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend\n@testset \"sum_to_n\" begin\n\
    \    @test sum_to_n(30) == 465\n    @test sum_to_n(100) == 5050\n    @test sum_to_n(5)\
    \ == 15\n    @test sum_to_n(10) == 55\n    @test sum_to_n(1) == 1\nend", "   \
    \ if n == 1\n        1\n    else\n        n + sum_to_n(n-1)\n    end\nend", " \
    \   sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    return sum(1:n)\nend", "    if n == 1\n        return 1\n    else\n       \
    \ return n + sum_to_n(n-1)\n    end\nend", "    if n == 1\n        return 1\n\
    \    else\n        return n + sum_to_n(n-1)\n    end\nend", "    sum = 0\n   \
    \ for i in 1:n\n        sum += i\n    end\n    return sum\nend\n    \nsum_to_n(30)",
  "    res = 0\n    for i in 1:n\n        res += i\n    end\n    return res\nend",
  "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend",
  "    \"FUNCTION THAT SUMS NUMBERS FROM 1 TO N\"\n    if n == 1\n        return 1\n\
    \    else\n        return n + sum_to_n(n-1)\n    end\nend", "    sum::Int64 =\
    \ 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\nend", "    #return\
    \ n*(n+1)/2\n    sum=0\n    for i=1:n\n        sum=sum+i\n    end\n    return\
    \ sum\nend", "    a = 0\n    for i = 1:n\n        a += i\n    end\n    return\
    \ a\nend", "    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n\
    \    return sum\nend", "    x = 0\n    for i in 1:n\n        x += i\n    end\n\
    \    return x\nend", "    \"\"\"Function to return sum of numbers from 1 to n\"\
    \"\"\n    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "    \n    total=0\n    for i in 1:n\n        total+=i\n    end\n\
    \    return total\nend", "    x = 0\n    for i = 1:n\n        x += i\n    end\n\
    \    return x\nend", "    if n == 1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    t = 0 \n    for x in 1:n \n        t\
    \ += x \n    end \n    return t \nend\nsum_to_n(5)", "    sum = 0\n    for i in\
    \ 1:n\n        sum += i\n    end\n    return sum\nend", "    n_int = n\n    sum_of_int\
    \ = 0\n    while n_int > 0\n        sum_of_int += n_int\n        n_int -= 1\n\
    \    end\n    return sum_of_int\nend", "    return n*(n+1)/2\nend", "    if n\
    \ == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\n\
    end", "    \"*** YOUR CODE HERE ***\"\n    if n == 1 \n        return 1\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend", "    sum = 0 \n    for i = 1:n\
    \ \n        sum += i \n    end \n    return sum \nend ", "    a = 0\n    for i\
    \ = 1:n\n        a += i\n    end\n    return a\nend", "    sum = 0\n    for i\
    \ in 1:n\n        sum += i\n    end\n    return sum\nend", "    out = 0\n    for\
    \ i in 1:n\n        out += i\n    end\n    return out\nend", "    i::Int64 = 1\n\
    \    total::Int64 = 0\n    while i <= n\n        total += i\n        i += 1\n\
    \    end\n    return total\nend", "    if n == 1\n        1\n    else\n      \
    \  n + sum_to_n(n-1)\n    end\nend", "    sum::Int64 = 0\n    for x in 1:n\n \
    \       sum += x\n    end\n    return sum\nend", "    s = 0 \n    for i = 1:n\n\
    \        s += i\n    end\n    return s\nend", "  total = 0\n  for i in 1:n\n \
    \   total += i\n  end\n  return total\nend", "    sum = 0\n    for i in 1:n\n\
    \        sum += i\n    end\n    return sum\nend\nprintln(sum_to_n(30))\nprintln(sum_to_n(100))\n\
    println(sum_to_n(5))\nprintln(sum_to_n(10))\nprintln(sum_to_n(1))", "    if n\
    \ == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\n\
    end", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end", "    s = 0\n    for i = 1:n\n        s += i\n    end\n    return s\nend\n\
    \ ", "    return n*(n+1)/2\nend", "    if n == 1\n        return 1\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend", "    return sum(1:n)\nend",
  "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n    return sum\nend",
  "    total = 0\n    for i in 1:n\n        total += i\n    end\n    return total\n\
    end", "    total = 0\n    for i in 1:n\n        total += i\n    end\n    return\
    \ total\nend", "    return sum(1:n)\nend", "    return n*(n+1)/2\nend", "   \n\
    \    if n == 1\n        return 1\n    else \n        return n + sum_to_n(n-1)\n\
    \    end\nend ", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n \
    \   return sum\nend", "    if n == 1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    sum = 0\n    for i in 1:n\n        sum\
    \ += i\n    end\n    return sum\nend\nsum_to_n(5)", "    s = 0\n    for i in 1:n\n\
    \        s += i\n    end\n    return s\nend", "    return n*(n+1)/2\nend", " \
    \   s = 0\n    for i = 1:n\n        s += i\n    end\n    return s\nend", "   \
    \ count = 0\n    for i in 1:n\n        count += i\n    end\n    return count\n\
    end", "    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "    \"\"\"\n    sum_to_n(n) sums numbers from 1 to n\n    \"\"\
    \"\n    a=0\n    for i in 1:n\n        a=a+i\n    end\n    return a\nend\n   \
    \ \n    \n    \n    \n    \n    ", "    sum = 0\n    for i = 1:n\n        sum\
    \ += i\n    end\n    return sum\nend", "    sum::Int64 = 0\n    for i in 1:n\n\
    \        sum += i\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:n\n\
    \        sum += i\n    end\n    return sum\nend", "    return(n*(n+1)/2)\nend",
  "    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n \
    \   end\nend", "  # Base Case \n  if n == 1: \n    return 1\n  else:\n    # Recursive\
    \ Case\n    return n + sum_to_n(n-1)\nend", "    if n == 1\n        1\n    else\n\
    \        sum_to_n(n-1) + n\n    end\nend", "    total=0\n    for i in 1:n\n  \
    \      total=total+i\n    end\n    return total\nend", "    sum = 0\n    for i\
    \ in 1:n\n        sum += i\n    end\n    return sum\nend\nsum_to_n(30)", "   \
    \ return (n*(n+1))/2\nend", "    return div(n*(n+1),2)\nend", "    return (n *\
    \ (n + 1))/2\nend", "    if n == 1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    if n == 1\n        return 1\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend", "   k = 1\n   s = 0\n   while\
    \ k <= n\n       s = s + k\n       k = k + 1\n   end\n   return s\nend", "   \
    \ sum_total = 0\n    for i in 1:n\n        sum_total += i\n    end\n    return\
    \ sum_total\nend", "    if n == 1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend", "    total = 0\n    for i = 1:n\n        total\
    \ += i\n    end\n    return total\nend", "    sum = 0\n    for i in 1:n\n    \
    \    sum += i\n    end\n    return sum\nend\n    ", "    \n    # Stopping condition:\
    \ if n is 1, return 1 \n    if n == 1\n        return 1\n    else\n        # Recursive\
    \ condition: add the current number to the sum of the numbers between 1 and n\
    \ - 1\n        # Calling sum_to_n is like adding the current number to the previous\
    \ sum\n        return n + sum_to_n(n - 1)\n    end\nend", "  sum = 0\n  while\
    \ n > 0\n    sum += n\n    n -= 1\n  end\n  return sum\nend", "    total = 0\n\
    \    while n>0\n        total = total + n\n        n = n - 1\n    end\n    return\
    \ total\nend", "    s = 0\n    for i in 1:n\n        s += i\n    end\n    return\
    \ s\nend", "  return(sum(i for i in 1:n))\nend", "    total = 0\n    if n == 1\n\
    \        return 1\n    else\n        total = n + sum_to_n(n-1)\n    end\n    return\
    \ total\nend", '    """sum_to_n is a function that sums numbers from 1 to n.',
  "    total = 0\n    for i in 1:n\n        total += i\n    end\n    return total\n\
    end\n ", "    return n*(n+1)/2\nend", "    if n == 1 \n        return 1\n    else\
    \ \n        return n + sum_to_n(n-1)\n    end\nend", "    sum = 0\n    for i in\
    \ 1:n\n        sum += i\n    end\n    return sum\nend", "    i::Int64 = 0\n  \
    \  s::Int64 = 0\n    while i <= n\n        s = s + i\n        i = i + 1\n    end\n\
    \    return s\nend", "    if n==1\n        return 1\n    else\n        return\
    \ n + sum_to_n(n-1)\n    end\nend\nsum_to_n(5)", "    sum = 0\n    for i in 1:n\n\
    \        sum += i\n    end\n    return sum\nend", "    sum = 0 \n    for i in\
    \ 1:n\n        sum += i\n    end\n    return sum\nend\n#Problem 5, done", "  \
    \  sum_num = 0\n    for i in 1:n\n        sum_num += i\n    end\n    return sum_num\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_60_sum_to_n
language: jl
prompt: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
  \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
  \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
  \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
  \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
completions: ["  sum::Int64 = 0\n  for i in 1:n\n    sum += i\n  end\n  return sum\n\
    end", "    return sum(1:n)\nend", "    return n*(n+1)/2\nend", "    result = 0\n\
    \    for i in 1:n\n        result += i\n    end\n    return result\nend", "  \
    \  result = 0\n    for i in 1:n\n        result += i\n    end\n    return result\n\
    end", "    i = 0\n    total = 0\n    while i < n\n        total += i + 1\n   \
    \     i += 1\n    end\n    return total\nend", "    if n == 1\n        return\
    \ 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "    if n==1\n\
    \        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend",
  "    # base case\n    if n == 1\n        1\n    else\n        n + sum_to_n(n-1)\n\
    \    end\nend", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for i = 1:n\n        sum += i\n    end\n\
    \    return sum\nend", "    total = 0\n    for i = 1:n\n        total += i\n \
    \   end\n    return total\nend", "    if n < 1\n        return 0\n    else\n \
    \       return n + sum_to_n(n-1)\n    end\nend", "    if n > 0\n        s = 0\n\
    \        for i = 1:n\n            s += i\n        end\n        return s\n    else\n\
    \        return 0\n    end\nend", "    return 0.5*n*(n+1)\nend", "    s = 0\n\
    \    for i in 1:n\n        s += i\n    end\n    return s\nend", "    s=0\n   \
    \ for i=1:n\n        s=s+i\n    end\n    return s\nend", "    a = 0\n    for i\
    \ = 1:n\n        a += i\n    end\n    return a\nend", "    return sum(collect(1:n))\n\
    end", "    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end\n    "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

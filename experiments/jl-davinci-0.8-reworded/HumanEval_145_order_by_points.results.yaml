name: HumanEval_145_order_by_points
language: jl
results:
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    sums = map(a -> sum(digits(a)), nums)\n    argsort(sums)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_5r2g3dr.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  UndefVarError:\
    \ argsort not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp_5r2g3dr.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_5r2g3dr.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_5r2g3dr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_5r2g3dr.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  UndefVarError:\
    \ argsort not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp_5r2g3dr.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_5r2g3dr.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_5r2g3dr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_5r2g3dr.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: argsort\
    \ not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n  \
    \   @ Main /tmp/tmp_5r2g3dr.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_5r2g3dr.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_5r2g3dr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_5r2g3dr.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(["
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_5r2g3dr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(sum.(nums), 1:length(nums))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpokasj777.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\\n  MethodError: no method matching sortperm(::Vector{Int64}, ::UnitRange{Int64})\\\
    n  Closest candidates are:\\n    sortperm(::AbstractVector; alg, lt, by, rev,\
    \ order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\\n  Stacktrace:\\\
    n   [1] order_by_points(nums::Vector{Int64})\\n     @ Main /tmp/tmpokasj777.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpokasj777.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpokasj777.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpokasj777.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\\n  MethodError:\
    \ no method matching sortperm(::Vector{Int64}, ::UnitRange{Int64})\\n  Closest\
    \ candidates are:\\n    sortperm(::AbstractVector; alg, lt, by, rev, order) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\\n  Stacktrace:\\n\
    \   [1] order_by_points(nums::Vector{Int64})\\n     @ Main /tmp/tmpokasj777.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpokasj777.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpokasj777.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpokasj777.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching sortperm(::Vector{Int64}, ::UnitRange{Int64})\\n  Closest candidates\
    \ are:\\n    sortperm(::AbstractVector; alg, lt, by, rev, order) at"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    nums = sort(nums, lt = x->sum(digits(x)) < sum(digits(y)), rev = false)\n\
    \    return nums\nend\norder_by_points([1, 11, -1, -11, -12])\nusing Test\n\n\
    @testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n \n    # sum all the numbers in the vector\n    if length(nums) == 0\n   \
    \     return nums\n    end\n    n = length(nums)\n    sums = zeros(n)\n    for\
    \ i in 1:n\n        sums[i] = sum(digits(nums[i]))\n    end\n   \n    # find the\
    \ positions of the minimum value\n    # note there can be more than one positions\n\
    \    minsum = minimum(sums)\n    minpos = find(sums .== minsum)\n   \n    # find\
    \ all the values at the minimum positions\n    # in the original vector\n    mins\
    \ = nums[minpos]\n   \n    # find the positions of the minimum value in the original\
    \ vector\n    # using argmin() gives the first position if there are several\n\
    \    # thus cannot use this\n    minposs = zeros(length(mins))\n    for i in 1:length(mins)\n\
    \        minposs[i] = findfirst(nums .== mins[i])\n    end\n    \n    # sort the\
    \ positions in ascending order\n    sort!(minposs)\n    \n    # find the original\
    \ position in the original vector\n    # and replace the corresponding value in\
    \ the new vector\n    # with the minimum values from the original vector\n   \
    \ newvec = nums\n    for i in 1:length(minposs)\n        newvec[minposs[i]] =\
    \ mins[i]\n    end\n   \n    # remove the minimum values from the original vector\n\
    \    for i in 1:length(mins)\n        deleteat!(nums, findfirst(nums .== mins[i]))\n\
    \    end\n   \n    # recursively keep finding the new minimum values and\n   \
    \ # append it to the vector in the same order until the\n    # original vector\
    \ is empty\n    return vcat(newvec, order_by_points(nums))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppulibjab.jl:68\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  UndefVarError:\
    \ find not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmppulibjab.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppulibjab.jl:68 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppulibjab.jl:67\ntest set:\
    \ Error During Test at /tmp/tmppulibjab.jl:69\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  UndefVarError:\
    \ find not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmppulibjab.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppulibjab.jl:69 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppulibjab.jl:67\ntest set:\
    \ Error During Test at /tmp/tmppulibjab.jl:71\n  Test threw exception\n  Expression:\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmppulibjab.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppulibjab.jl:71 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppulibjab.jl:67\ntest set:\
    \ Error During Test at /tmp/tmppulibjab.jl:72\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppulibjab.jl:65\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    sums = Vector{Int64}(undef, length(nums))\n    for i = 1:length(nums)\n\
    \        sums[i] = sum(nums[i])\n    end\n    return nums[sortperm(sums)]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20875a1g.jl:25\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20875a1g.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20875a1g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp20875a1g.jl:26\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [0, 2, 3, 6, 37, 46, 53, 56,\
    \ 145, 423, 423, 423, 463, 1234, 3457] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20875a1g.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20875a1g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp20875a1g.jl:28\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -11, -3, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20875a1g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20875a1g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp20875a1g.jl:29\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20875a1g.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    lens = length(nums)\n    if lens == 0\n        return nums\n    end\n\
    \    sort(nums, by=x-> sum(digits(x)))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk7gg2v5n.jl:25\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk7gg2v5n.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk7gg2v5n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpk7gg2v5n.jl:28\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk7gg2v5n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk7gg2v5n.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7gg2v5n.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    isempty(nums) && return []\n    sorted_index = sortperm(sum.(digits.(nums)))\n\
    \    nums[sorted_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1veeb9hi.jl:23\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1veeb9hi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1veeb9hi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1veeb9hi.jl:26\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1veeb9hi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1veeb9hi.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1veeb9hi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    nums_with_points = [(n, sum(digits(n))) for n in nums]\n    nums_with_points\
    \ = sort(nums_with_points, by=x -> x[2])\n    return [p[1] for p in nums_with_points]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5thp6ry.jl:23\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5thp6ry.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5thp6ry.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo5thp6ry.jl:26\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5thp6ry.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5thp6ry.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5thp6ry.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    digit_sums = [sum(digits(n)) for n in nums]\n    return nums[sortperm(digit_sums)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppavhqshh.jl:22\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppavhqshh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppavhqshh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppavhqshh.jl:25\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppavhqshh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppavhqshh.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppavhqshh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    \n    pts = []\n    for i in nums\n        pts = [pts; sum(digits(i))]\n\
    \    end\n    \n    order = sortperm(pts)\n    return [nums[i] for i in order]\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg0fy1qig.jl:29\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg0fy1qig.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg0fy1qig.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpg0fy1qig.jl:32\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg0fy1qig.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg0fy1qig.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg0fy1qig.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    # Initialize a dictionary of sums\n    sums = Dict{Int64, Int64}()\n \
    \   # Get the sums of each number\n    # Store them in the dictionary\n    for\
    \ i in 1:length(nums)\n        key = sum(int2vec(nums[i]))\n        sums[key]\
    \ = nums[i]\n    end\n    # Sort the dictionary by keys\n    sorted_sums = sort(collect(sums))\n\
    \    # Get the sorted numbers\n    sorted_nums = [sorted_sums[i][2] for i in 1:length(sorted_sums)]\n\
    \    return sorted_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp38ylzwi4.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  UndefVarError:\
    \ int2vec not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp38ylzwi4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ylzwi4.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ylzwi4.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp38ylzwi4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  UndefVarError:\
    \ int2vec not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp38ylzwi4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ylzwi4.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ylzwi4.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp38ylzwi4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n  UndefVarError: int2vec not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp38ylzwi4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ylzwi4.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ylzwi4.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp38ylzwi4.jl:37\n  Test threw exc"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp38ylzwi4.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(sum(digits.(nums))[1], by=nums)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp61qgibns.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\\n  DimensionMismatch(\"dimensions must match: a has dims (Base.OneTo(1),),\
    \ b has dims (Base.OneTo(2),), mismatch at 1\")\\n  Stacktrace:\\n    [1] promote_shape\\\
    n      @ ./indices.jl:178 [inlined]\\n    [2] promote_shape\\n      @ ./indices.jl:169\
    \ [inlined]\\n    [3] +(A::Vector{Int64}, Bs::Vector{Int64})\\n      @ Base ./arraymath.jl:45\\\
    n    [4] add_sum\\n      @ ./reduce.jl:24 [inlined]\\n    [5] _mapreduce(f::typeof(identity),\
    \ op::typeof(Base.add_sum), #unused#::IndexLinear, A::Vector{Vector{Int64}})\\\
    n      @ Base ./reduce.jl:410\\n    [6] _mapreduce_dim\\n      @ ./reducedim.jl:330\
    \ [inlined]\\n    [7] #mapreduce#731\\n      @ ./reducedim.jl:322 [inlined]\\\
    n    [8] mapreduce\\n      @ ./reducedim.jl:322 [inlined]\\n    [9] #_sum#741\\\
    n      @ ./reducedim.jl:894 [inlined]\\n   [10] _sum\\n      @ ./reducedim.jl:894\
    \ [inlined]\\n   [11] #_sum#740\\n      @ ./reducedim.jl:893 [inlined]\\n   [12]\
    \ _sum\\n      @ ./reducedim.jl:893 [inlined]\\n   [13] #sum#738\\n      @ ./reducedim.jl:889\
    \ [inlined]\\n   [14] sum\\n      @ ./reducedim.jl:889 [inlined]\\n   [15] order_by_points(nums::Vector{Int64})\\\
    n      @ Main /tmp/tmp61qgibns.jl:14\\n   [16] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [17] macro expansion\\n      @ /tmp/tmp61qgibns.jl:21 [inlined]\\\
    n   [18] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [19] top-level scope\\n      @ /tmp/tmp61qgibns.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp61qgibns.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3,\
    \ 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\\\
    n  DimensionMismatch(\"dimensions must match: a has dims (Base.OneTo(4),), b has\
    \ dims (Base.OneTo(3),), mismatch at 1\")\\n  Stacktrace:\\n    [1] promote_shape\\\
    n      @ ./indices.jl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    \n    sum_of_digits = map(s -> sum(digits(s)), nums)\n    index = sortperm(sum_of_digits)\n\
    \    sort(nums, alg=MergeSort, by=x->x[index])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppo70kxa0.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\\n  MethodError: no method matching getindex(::Int64, ::Vector{Int64})\\\
    n  Closest candidates are:\\n    getindex(::Number) at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:95\\\
    n    getindex(::Union{AbstractChar, Number}, !Matched::CartesianIndex{0}) at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:831\\\
    n    getindex(::Number, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:96\\\
    n    ...\\n  Stacktrace:\\n    [1] (::var\"#2#4\"{Vector{Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmppo70kxa0.jl:17\\n    [2] lt(o::Base.Order.By{var\"#2#4\"\
    {Vector{Int64}}, Base.Order.ForwardOrdering}, a::Int64, b::Int64)\\n      @ Base.Order\
    \ ./ordering.jl:111\\n    [3] sort!\\n      @ ./sort.jl:507 [inlined]\\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{var\"\
    #2#4\"{Vector{Int64}}, Base.Order.ForwardOrdering}, t::Vector{Int64})\\n     \
    \ @ Base.Sort ./sort.jl:592\\n    [5] sort!\\n      @ ./sort.jl:591 [inlined]\\\
    n    [6] sort!\\n      @ ./sort.jl:664 [inlined]\\n    [7] #sort!#8\\n      @\
    \ ./sort.jl:725 [inlined]\\n    [8] #sort#9\\n      @ ./sort.jl:772 [inlined]\\\
    n    [9] order_by_points(nums::Vector{Int64})\\n      @ Main /tmp/tmppo70kxa0.jl:17\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmppo70kxa0.jl:24 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmppo70kxa0.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmppo70kxa0.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3,\
    \ 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\\\
    n  MethodError: no method matching getindex(::Int64, ::Vector{Int64})\\n  Closest"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(nums)\n    result = zeros(Int64, n)\n    arr_of_sum = zeros(Int64,\
    \ n)\n    # get array of sum of digits\n    for i in 1:n\n        num = nums[i]\n\
    \        abs_num = abs(num)\n        sum_of_digit = 0\n        while abs_num !=\
    \ 0\n            sum_of_digit += abs_num % 10\n            abs_num = abs_num //\
    \ 10\n        end\n        arr_of_sum[i] = sum_of_digit\n    end\n    # sort array\
    \ of sums\n    sort!(arr_of_sum)\n    for i in 1:n\n        for j in 1:n\n   \
    \         if arr_of_sum[i] == nums[j]\n                result[i] = nums[j]\n \
    \               nums[j] = 0\n                break\n            end\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbua21pmb.jl:46\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  OverflowError:\
    \ 1000000000000000000 * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] order_by_points(nums::Vector{Int64})\n     @ Main /tmp/tmpbua21pmb.jl:23\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbua21pmb.jl:46 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbua21pmb.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpbua21pmb.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  OverflowError:\
    \ 5000000000000000000 * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] order_by_points(nums::Vector{Int64})\n     @ Main /tmp/tmpbua21pmb.jl:23\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbua21pmb.jl:47 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbua21pmb.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpbua21pmb.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n  OverflowError: 1000000000000000000 * 10 overflowed for type Int64\n \
    \ Stacktr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbua21pmb.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    # sum the digits\n    digit_sum = [sum(digits(i)) for i in nums]\n   \
    \ # return the indices of smallest sum to biggest sum\n    sortperm(digit_sum)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp482w41gq.jl:24\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [5, 4, 3, 1, 2] ==\
    \ [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp482w41gq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp482w41gq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp482w41gq.jl:25\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [14, 5, 12, 9, 8, 2, 6, 7,\
    \ 1, 4, 10, 15, 13, 3, 11] == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp482w41gq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp482w41gq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp482w41gq.jl:27\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [6, 3,\
    \ 8, 2, 1, 7, 4, 5] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp482w41gq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp482w41gq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp482w41gq.jl:29\n  Expression: candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n   Evaluated: [4, 5, 1, 7, 6, 2, 3] ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp482w41gq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort(nums, by=x->sum(digits(x)))\n    return sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59hhmho0.jl:22\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59hhmho0.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59hhmho0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp59hhmho0.jl:25\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59hhmho0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59hhmho0.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59hhmho0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    keys = []\n    for i in 1:length(nums)\n        key = 0\n        for j\
    \ in digits(nums[i])\n            key += j\n        end\n        push!(keys, key)\n\
    \    end\n    sortperm(keys)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphn6mixco.jl:29\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [5, 4, 3, 1, 2] ==\
    \ [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn6mixco.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn6mixco.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphn6mixco.jl:30\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [14, 5, 12, 9, 8, 2, 6, 7,\
    \ 1, 4, 10, 15, 13, 3, 11] == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn6mixco.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn6mixco.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphn6mixco.jl:32\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [6, 3,\
    \ 8, 2, 1, 7, 4, 5] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn6mixco.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn6mixco.jl:28\ntest set: Test\
    \ Failed at /tmp/tmphn6mixco.jl:34\n  Expression: candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n   Evaluated: [4, 5, 1, 7, 6, 2, 3] ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphn6mixco.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    if nums == []\n        return []\n    end\n    indices_of_nums = Dict(key\
    \ => sum(digits(key)) for key in nums)\n    sorted_indices = sort(collect(keys(indices_of_nums)))\n\
    \    return sort(nums, by = i -> indices_of_nums[i])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_i4xvoah.jl:26\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i4xvoah.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i4xvoah.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_i4xvoah.jl:29\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i4xvoah.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i4xvoah.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_i4xvoah.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    nums = sort(nums, by=num -> sum(digits(num)))\n    return nums\nend\n\
    using Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkplzks_d.jl:22\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkplzks_d.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkplzks_d.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpkplzks_d.jl:25\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkplzks_d.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkplzks_d.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkplzks_d.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function which sorts the given vector of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original vector.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\nfunction order_by_points(nums::Vector{Int64})::Vector{Int64}\
    \ \n    if length(nums) == 0\n        return []\n    end\n    points = zeros(Int64,length(nums))\n\
    \    for i in range(1,length(nums))\n        points[i] = sumdigits(nums[i])\n\
    \    end\n    return sortperm(points)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1,\
    \ -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg8gw82ja.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  UndefVarError:\
    \ sumdigits not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpg8gw82ja.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg8gw82ja.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg8gw82ja.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg8gw82ja.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  UndefVarError:\
    \ sumdigits not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpg8gw82ja.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg8gw82ja.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg8gw82ja.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg8gw82ja.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n  UndefVarError: sumdigits not defined\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpg8gw82ja.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg8gw82ja.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg8gw82ja.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg8gw82ja.jl:32\n  Test thr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8gw82ja.jl:25\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_132_is_nested
language: jl
prompt: "\"\"\"\n    Create a function that takes a string as input which contains\
  \ only square brackets.\n    The function should return true if and only if there\
  \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
  \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
  )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\")\n\
  \    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
  )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
  [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
  [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
  ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\"\
  ) == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"[]]\") ==\
  \ false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"[[][]]\")\
  \ == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\") ==\
  \ false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

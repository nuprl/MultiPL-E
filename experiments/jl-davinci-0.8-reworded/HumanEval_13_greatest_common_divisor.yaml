name: HumanEval_13_greatest_common_divisor
language: jl
prompt: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
  \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
  \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
  \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
  @test(candidate(144, 60) == 12)\nend\n"
completions: ["    while b \u2260 0\n        temp = b\n        b = rem(a, b)\n   \
    \     a = temp\n    end\n    return a\nend", "    if a % b == 0\n        return\
    \ b\n    else\n        return greatest_common_divisor(b, a % b)\n    end\nend",
  "    # YOUR CODE HERE\n    if a > b\n        return greatest_common_divisor(b, a)\n\
    \    end\n    if a == 0\n        return b\n    end\n    return greatest_common_divisor(b\
    \ % a, a)\nend", "    if a > b\n        a, b = b, a\n    end\n    while b > 0\n\
    \        a, b = b, rem(a, b)\n    end\n    return a\nend", "    while b != 0\n\
    \        r = a % b\n        a = b\n        b = r\n    end\n    return a\nend",
  "    r = a % b\n    while r != 0\n        a = b\n        b = r\n        r = a %\
    \ b\n    end\n    return b\nend", "    \n    assert a >= 0 && b >= 0 \n    \n\
    \    if a == 0\n        return b\n    elseif b == 0\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend", "    if b ==\
    \ 0 \n        return a\n    else \n        return greatest_common_divisor(b, a\
    \ % b)\n    end\nend", "    # Handle the simple cases\n    if a == 0 || b == 0\n\
    \        return 0\n    elseif a == b\n        return a\n    elseif a == 1 || b\
    \ == 1\n        return 1\n    end\n    \n    # Check if the smaller number divides\
    \ the larger one\n    # evenly and return it if so\n    if a > b\n        if a\
    \ % b == 0\n            return b\n        end\n    else\n        if b % a == 0\n\
    \            return a\n        end\n    end\n    \n    # If we're here, there\
    \ is no easy solution and we need\n    # to do some work\n    if a > b\n     \
    \   # Get the remainder\n        a = a % b\n        # Recursively call the function\
    \ with the new inputs\n        # until we reach our goal\n        return greatest_common_divisor(a,\
    \ b)\n    else\n        # Get the remainder\n        b = b % a\n        # Recursively\
    \ call the function with the new inputs\n        # until we reach our goal\n \
    \       return greatest_common_divisor(a, b)\n    end\nend", "    if a == 0\n\
    \        return b\n    elseif b == 0\n        return a\n    elseif a == b\n  \
    \      return a\n    elseif a > b\n        return greatest_common_divisor(a -\
    \ b, b)\n    else\n        return greatest_common_divisor(a, b - a)\n    end\n\
    end", "    \"\"\" Find the GCD of two numbers. \"\"\"\n    while a != 0 and b\
    \ != 0:\n        if a > b\n            a = a % b\n        else\n            b\
    \ = b % a\n    return max(a, b)\nend", "    if a == 0\n        return b\n    elseif\
    \ b == 0\n        return a\n    else\n        if a > b\n            return greatest_common_divisor(a\
    \ % b, b)\n        else\n            return greatest_common_divisor(a, b % a)\n\
    \        end\n    end\nend", "    while a != b\n        if a > b\n           \
    \ a = a - b\n        else\n            b = b - a\n        end\n    end\n    return\
    \ a\nend", "    while b != 0\n        remainder = a % b\n        a = b\n     \
    \   b = remainder\n    end\n    return a\nend", "    while b != 0\n        temp\
    \ = a\n        a = b\n        b = temp % b\n    end\n    return a\nend", "   \
    \ if a < b\n        return greatest_common_divisor(b, a)\n    elseif b == 0\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "    while b != 0\n        temp = a % b\n        a = b\n     \
    \   b = temp\n    end\n    return a\nend", "    if b == 0\n        return a\n\
    \    else\n        return greatest_common_divisor(b, mod(a, b))\n    end\nend",
  "    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend", "    if a == 0 \n        return b\n    else\n   \
    \     return greatest_common_divisor(b % a, a)\n    end\nend\n\"\"\" Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3,\
    \ 5)\n    15\n    >>> least_common_multiple(25, 15)\n    75\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

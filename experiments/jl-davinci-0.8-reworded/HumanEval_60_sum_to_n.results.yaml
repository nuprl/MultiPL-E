name: HumanEval_60_sum_to_n
language: jl
results:
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n  sum::Int64 = 0\n  for i in 1:n\n    sum += i\n  end\n  return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    return sum(1:n)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    return n*(n+1)/2\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    result = 0\n    for i in 1:n\n        result += i\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    result = 0\n    for i in 1:n\n        result += i\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    i = 0\n    total = 0\n    while i < n\n        total += i + 1\n      \
    \  i += 1\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n == 1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n==1\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    # base case\n    if n == 1\n        1\n    else\n        n + sum_to_n(n-1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    sum = 0\n    for i = 1:n\n        sum += i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    total = 0\n    for i = 1:n\n        total += i\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n < 1\n        return 0\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    if n > 0\n        s = 0\n        for i = 1:n\n            s += i\n   \
    \     end\n        return s\n    else\n        return 0\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    return 0.5*n*(n+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    s = 0\n    for i in 1:n\n        s += i\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    s=0\n    for i=1:n\n        s=s+i\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    a = 0\n    for i = 1:n\n        a += i\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    return sum(collect(1:n))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n\
    \    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>>\
    \ sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\nfunction sum_to_n(n::Int64)::Int64\
    \ \n    sum = 0\n    for i in 1:n\n        sum += i\n    end\n    return sum\n\
    end\n    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK

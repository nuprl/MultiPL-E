name: HumanEval_91_is_bored
language: jl
prompt: "\"\"\"\n    You'll be given a string of words, and your task is to count\
  \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
  \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The\
  \ sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
  Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
  I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
  \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
  You and I are going for a walk\") == 0)\nend\n"
completions: ["   is_bored = 0\n   last_sep = ' '\n   for c in S\n      if (last_sep\
    \ in ['.', '?', '!']) & (c == 'I')\n         is_bored += 1\n      end\n      last_sep\
    \ = c\n   end\n   return is_bored\nend", "    boredoms = 0\n    i = 1\n    while\
    \ i <= length(S)\n        while i <= length(S) && S[i] != 'I' && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!'\n            i += 1\n        end\n        if i >\
    \ length(S)\n            break\n        end\n        if S[i] == 'I'\n        \
    \    if i == 1 || S[i-1] == '.' || S[i-1] == '?' || S[i-1] == '!'\n          \
    \      boredoms += 1\n            end\n        end\n        i += 1\n    end\n\
    \    return boredoms\nend", "    split = split(S, [\".\", \"?\", \"!\"])\n   \
    \ boredoms = 0\n    for sentence in split\n        if sentence[1] == \"I\"\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   count = 0\n    lines = split(S, ['.', '?', '!'])\n    for i in lines\n   \
    \     if starts_with(i, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for w in split(S, \".\")\n      \
    \  count += (w[1] == 'I')\n    end\n    return count\nend", "    return count(map(x->x[1]=='I',split(S,\"\
    .?!\")))\nend\n ", "    sentences = split(S, \"!\")\n    num_boredoms = 0\n  \
    \  for s in sentences\n        num_boredoms += sum(1 for word in split(s, \" \"\
    ) if word == \"I\")\n    end\n    return num_boredoms\nend", "    words = split(S,\
    \ r\" |\\.\" | '?' | '!') \n    cnt = 0 \n    for i in words \n        if \"I\"\
    \ == i[1] \n            cnt += 1 \n        end \n    end \n    return cnt \nend",
  "    sentences = split(S, r\"[!.?]\")\n    boredoms = 0\n    for sentence in sentences\n\
    \        if occursin(\"I\", sentence)\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return count(s -> occursin(\"I \", split(s,\
    \ \".!?\"))[1], split(S, \".!?\"))\nend", "    num_boredoms = 0\n    split_str\
    \ = split(S, [\".\", \"?\", \"!\"])\n    for s in split_str\n        if s[1] ==\
    \ \"I\"\n            num_boredoms += 1\n        end\n    end\n    return num_boredoms\n\
    end\nprintln(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))", "    num_boredoms = 0\n    for (index, word) in enumerate(S)\n        if\
    \ word == \"I\"\n            num_boredoms += 1\n        end\n    end\n    return\
    \ num_boredoms\nend", "    len_S = length(S)\n    count_bored = 0\n    for i in\
    \ 1:len_S-1\n        if S[i] == 'I' && (S[i+1] == ' ' || S[i+1] == '.' || S[i+1]\
    \ == '?' || S[i+1] == '!')\n            count_bored += 1\n        end\n    end\n\
    \    return count_bored\nend", "    bored_num = 0\n    for word in split(S)\n\
    \        if word == \"I\"\n            bored_num += 1\n        end\n    end\n\
    \    return bored_num\nend", "  b=0\n  for word in split(S, ['.', '?', '!'])\n\
    \    word=split(word)\n    if (word[1]==\"I\")\n      b+=1\n    end\n  end\n \
    \ return b\nend", "    return 0\nend", "    boredoms = 0\n    words = split(S,\
    \ r\"[.?!]\")\n    for w in words\n        w = split(w)\n        if length(w)\
    \ > 0 && w[1] == \"I\"\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    return sum(is_bored(s) for s in split(S, r\"\\.|\\!|\\\
    ?\"))\nend", "    arr = split(S, r\"[.!?]\")\n    i = 0\n    for a in arr\n  \
    \      if contains(a, \"I\") \n            i += 1\n        end\n    end\n    return\
    \ i\nend ", "    n = count(split(S, r\"[!.?]\"), s -> s[1] == 'I')\n    return\
    \ n\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n   is_bored = 0\n   last_sep = ' '\n   for c in S\n      if (last_sep in ['.',\
    \ '?', '!']) & (c == 'I')\n         is_bored += 1\n      end\n      last_sep =\
    \ c\n   end\n   return is_bored\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmposg93s86.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmposg93s86.jl:30\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposg93s86.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposg93s86.jl:27\ntest set: Test\
    \ Failed at /tmp/tmposg93s86.jl:32\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposg93s86.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposg93s86.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    i = 1\n    while i <= length(S)\n        while i <=\
    \ length(S) && S[i] != 'I' && S[i] != '.' && S[i] != '?' && S[i] != '!'\n    \
    \        i += 1\n        end\n        if i > length(S)\n            break\n  \
    \      end\n        if S[i] == 'I'\n            if i == 1 || S[i-1] == '.' ||\
    \ S[i-1] == '?' || S[i-1] == '!'\n                boredoms += 1\n            end\n\
    \        end\n        i += 1\n    end\n    return boredoms\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxg57rbay.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpxg57rbay.jl:37\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg57rbay.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg57rbay.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxg57rbay.jl:40\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg57rbay.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg57rbay.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split = split(S, [\".\", \"?\", \"!\"])\n    boredoms = 0\n    for sentence\
    \ in split\n        if sentence[1] == \"I\"\n            boredoms += 1\n     \
    \   end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvuqb1azq.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpvuqb1azq.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: split not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: split not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: split not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: split not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    lines = split(S, ['.', '?', '!'])\n    for i in lines\n\
    \        if starts_with(i, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpigqnvzn6.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpigqnvzn6.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: starts_with not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: starts_with not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for w in split(S, \".\")\n        count += (w[1] == 'I')\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptzp8r61e.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptzp8r61e.jl:25\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzp8r61e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzp8r61e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptzp8r61e.jl:28\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzp8r61e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzp8r61e.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(map(x->x[1]=='I',split(S,\".?!\")))\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp248aq7ja.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp248aq7ja.jl:22\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp248aq7ja.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp248aq7ja.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp248aq7ja.jl:25\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp248aq7ja.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp248aq7ja.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, \"!\")\n    num_boredoms = 0\n    for s in sentences\n\
    \        num_boredoms += sum(1 for word in split(s, \" \") if word == \"I\")\n\
    \    end\n    return num_boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpriira4s0.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpriira4s0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#3\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{SubString{String}})\n\
    \      @ Base ./reduce.jl:331\n    [4] reduce_empty(op::Base.FilteringRF{var\"\
    #2#4\", Base.MappingRF{var\"#1#3\", Base.BottomRF{typeof(Base.add_sum)}}}, #unused#::Type{SubString{String}})\n\
    \      @ Base ./reduce.jl:332\n    [5] reduce_empty_iter\n      @ ./reduce.jl:357\
    \ [inlined]\n    [6] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n  \
    \  [7] foldl_impl\n      @ ./reduce.jl:49 [inlined]\n    [8] mapfoldl_impl\n \
    \     @ ./reduce.jl:44 [inlined]\n    [9] #mapfoldl#244\n      @ ./reduce.jl:162\
    \ [inlined]\n   [10] mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [11] #mapreduce#248\n\
    \      @ ./reduce.jl:289 [inlined]\n   [12] mapreduce\n      @ ./reduce.jl:289\
    \ [inlined]\n   [13] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [14] sum\n\
    \      @ ./reduce.jl:503 [inlined]\n   [15] #sum#252\n      @ ./reduce.jl:532\
    \ [inlined]\n   [16] sum\n      @ ./reduce.jl:532 [inlined]\n   [17] is_bored(S::String)\n\
    \      @ Main /tmp/tmpriira4s0.jl:16\n   [18] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [19] macro expansion\n      @ /tmp/tmpriira4s0.jl:25 [inlined]\n\
    \   [20] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [21] top-level scope\n      @ /tmp/tmpriira4s0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpriira4s0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n  \
    \    @ Base ./reduce.jl:301\n    [2] mapreduce_em"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S, r\" |\\.\" | '?' | '!') \n    cnt = 0 \n    for i in\
    \ words \n        if \"I\" == i[1] \n            cnt += 1 \n        end \n   \
    \ end \n    return cnt \nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgdma82rc.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpgdma82rc.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ |(::Regex, ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgdma82rc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgdma82rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching |(::Regex,\
    \ ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgdma82rc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgdma82rc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: no method matching |(::Regex,\
    \ ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:29 [inlined]"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, r\"[!.?]\")\n    boredoms = 0\n    for sentence in\
    \ sentences\n        if occursin(\"I\", sentence)\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpopaixoji.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpopaixoji.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(s -> occursin(\"I \", split(s, \".!?\"))[1], split(S, \"\
    .!?\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpnarom8bc.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpnarom8bc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ occursin(::String, ::Vector{SubString{String}})\n  Closest candidates are:\n\
    \    occursin(::Union{AbstractChar, AbstractString}, !Matched::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n    occursin(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(s::SubString{String})\n      @ Main /tmp/tmpnarom8bc.jl:13\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] _count\n \
    \     @ ./reducedim.jl:407 [inlined]\n    [4] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [5] count\n      @ ./reducedim.jl:405 [inlined]\n    [6] is_bored(S::String)\n\
    \      @ Main /tmp/tmpnarom8bc.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpnarom8bc.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpnarom8bc.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpnarom8bc.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching occursin(::String,\
    \ ::Vector{SubString{String}})\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(s::SubString{String})\n      @ Main /tmp/tmpnarom8bc.jl:13\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] _count\n \
    \     @ ./reducedim.jl:407 [inlined]\n    [4] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [5] count\n      @ ./reducedim.jl:405 [inlined]\n    [6] is_bored(S::String)\n\
    \      @ Main /tmp/tmpnarom8bc.jl:13\n    [7] ma"
- exit_code: -1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0\n    split_str = split(S, [\".\", \"?\", \"!\"])\n  \
    \  for s in split_str\n        if s[1] == \"I\"\n            num_boredoms += 1\n\
    \        end\n    end\n    return num_boredoms\nend\nprintln(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching findfirst(::Vector{String},
    ::String)'''
  stdout: None
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0\n    for (index, word) in enumerate(S)\n        if word\
    \ == \"I\"\n            num_boredoms += 1\n        end\n    end\n    return num_boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp872oos8g.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp872oos8g.jl:28\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp872oos8g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp872oos8g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp872oos8g.jl:30\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp872oos8g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp872oos8g.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    len_S = length(S)\n    count_bored = 0\n    for i in 1:len_S-1\n     \
    \   if S[i] == 'I' && (S[i+1] == ' ' || S[i+1] == '.' || S[i+1] == '?' || S[i+1]\
    \ == '!')\n            count_bored += 1\n        end\n    end\n    return count_bored\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4y5uym26.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp4y5uym26.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y5uym26.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y5uym26.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    bored_num = 0\n    for word in split(S)\n        if word == \"I\"\n  \
    \          bored_num += 1\n        end\n    end\n    return bored_num\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7xpiz0v.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpw7xpiz0v.jl:31\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7xpiz0v.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7xpiz0v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  b=0\n  for word in split(S, ['.', '?', '!'])\n    word=split(word)\n   \
    \ if (word[1]==\"I\")\n      b+=1\n    end\n  end\n  return b\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpm6f7n0nc.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpm6f7n0nc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpm6f7n0nc.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm6f7n0nc.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm6f7n0nc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpm6f7n0nc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpm6f7n0nc.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm6f7n0nc.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm6f7n0nc.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn6t8vgbz.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpn6t8vgbz.jl:22\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6t8vgbz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6t8vgbz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpn6t8vgbz.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6t8vgbz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6t8vgbz.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
- exit_code: 0
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    words = split(S, r\"[.?!]\")\n    for w in words\n \
    \       w = split(w)\n        if length(w) > 0 && w[1] == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return sum(is_bored(s) for s in split(S, r\"\\.|\\!|\\?\"))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7h7m6e6g.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp7h7m6e6g.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ is_bored(::SubString{String})\n  Closest candidates are:\n    is_bored(!Matched::String)\
    \ at /tmp/tmp7h7m6e6g.jl:12\n  Stacktrace:\n    [1] (::var\"#1#2\")(s::SubString{String})\n\
    \      @ Main ./none:0\n    [2] MappingRF\n      @ ./reduce.jl:95 [inlined]\n\
    \    [3] _foldl_impl\n      @ ./reduce.jl:58 [inlined]\n    [4] foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, nt::Base._InitialValue, itr::Vector{SubString{String}})\n\
    \      @ Base ./reduce.jl:48\n    [5] mapfoldl_impl(f::typeof(identity), op::typeof(Base.add_sum),\
    \ nt::Base._InitialValue, itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#2\"})\n      @ Base ./reduce.jl:44\n    [6] mapfoldl(f::Function, op::Function,\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"}; init::Base._InitialValue)\n\
    \      @ Base ./reduce.jl:162\n    [7] mapfoldl(f::Function, op::Function, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:162\n    [8] mapreduce(f::Function,\
    \ op::Function, itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"}; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n      @ Base ./reduce.jl:289\n\
    \    [9] mapreduce(f::Function, op::Function, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:289\n   [10] sum(f::Function, a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n\
    \      @ Base ./reduce.jl:503\n   [11] sum(f::Function, a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:503\n   [12] sum(a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n\
    \      @ Base ./reduce.jl:532\n   [13] sum(a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:532\n   [14] is_bored(S::String)\n \
    \     @ Main /tmp/tmp7h7m6e6g.jl:13\n   [15"
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    arr = split(S, r\"[.!?]\")\n    i = 0\n    for a in arr\n        if contains(a,\
    \ \"I\") \n            i += 1\n        end\n    end\n    return i\nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp58pdic5a.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp58pdic5a.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
- exit_code: -1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = count(split(S, r\"[!.?]\"), s -> s[1] == 'I')\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp5sdxffkn.jl:21\n  Test threw
    exception\n  Expression: candidate("Hello world") == 0\n  MethodError: no method
    matching iterate(::var"#1#2")\n  Closest candidates are:\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\n    iterate(!Matched::T)
    where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n   [1]
    _simple_count(pred::Vector{SubString{String}}, itr::Function, init::Int64)\n     @
    Base ./reduce.jl:1205\n   [2] count(f::Vector{SubString{String}}, itr::Function;
    init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::Vector{SubString{String}},
    itr::Function)\n     @ Base ./reduce.jl:1201\n   [4] is_bored(S::String)\n     @
    Main /tmp/tmp5sdxffkn.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5sdxffkn.jl:21 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5sdxffkn.jl:20\ntest set: Error
    During Test at /tmp/tmp5sdxffkn.jl:22\n  Test threw exception\n  Expression: candidate("Is
    the sky blue?") == 0\n  MethodError: no method matching iterate(::var"#1#2")\n  Closest
    candidates are:\n    iterate(!Matched::Union{LinRange, StepRangeLen}) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\n    iterate(!Matched::Union{LinRange,
    StepRangeLen}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\n    iterate(!Matched::T)
    where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n   [1]
    _simple_count(pred::Vector{SubString{Stri'
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S, r\"[.!?]\")\n    boredoms = 0\n    for word in words\n\
    \        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpronx22jq.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpronx22jq.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpronx22jq.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpronx22jq.jl:26\ntest set: Test Failed at /tmp/tmpronx22jq.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpronx22jq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpronx22jq.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    # Split string by !,?,.\n    q = split(S, [\"!\",\"?\",\".\"])\n\
    \    \n    # Split by whitespace and get the first value, then count the matches\n\
    \    boredom = [split(i, \" \")[1] for i in q]\n    boredom_count = length(findall(r\"\
    ^I.*\", boredom))\n    \n    return boredom_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp66lxbry2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp66lxbry2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp66lxbry2.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp66lxbry2.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp66lxbry2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp66lxbry2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0 \n    flag = false\n    for word in split(S, [\".\",\
    \ \"!\", \"?\"])\n        if flag == true\n            num_boredoms += 1\n   \
    \         flag = false\n        end\n        if word[1] == 'I'\n            flag\
    \ = true\n        end\n    end\n    return num_boredoms\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpyfqz4_5g.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpyfqz4_5g.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpyfqz4_5g.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyfqz4_5g.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyfqz4_5g.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyfqz4_5g.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    # split the string by \".\"\n    c = split(S, \".\")\n    \n   \
    \ # initialize a counter\n    counter = 0\n    \n    # loop over each element\
    \ of c and look for \"I\"\n    for s in c\n        if occursin(\"I\", s)\n   \
    \         counter += 1\n        end\n    end\n    \n    # return the counter\n\
    \    return counter\nend\n \nis_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\")\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv3_3v5ws.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpv3_3v5ws.jl:38\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv3_3v5ws.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpv3_3v5ws.jl:36\ntest set: Test Failed at /tmp/tmpv3_3v5ws.jl:40\n\
    \  Expression: candidate(\"bIt\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv3_3v5ws.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv3_3v5ws.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpv3_3v5ws.jl:41\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv3_3v5ws.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv3_3v5ws.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpv3_3v5ws.jl:42\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv3_3v5ws.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpv3_3v5ws.jl:36\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, r\"[.!?]\") # Split sentences by punctuation mark\n\
    \    count = 0\n    for sentence in sentences\n        first_word = split(sentence)[1]\
    \ # Split first word from sentence\n        if first_word == \"I\"\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpxnqogicu.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpxnqogicu.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpxnqogicu.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxnqogicu.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxnqogicu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxnqogicu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpxnqogicu.jl:16\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxnqogicu.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxnqogicu.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978023
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Your code here\nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is\
    \ the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp_6__ng5m.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp_6__ng5m.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp_6__ng5m.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6__ng5m.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6__ng5m.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_6__ng5m.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp_6__ng5m.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6__ng5m.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6__ng5m.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_6__ng5m.jl:23\n  Test threw exception\n  Expr"
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    total_boredom = 0\n    sentences = split(S, ['.', '?', '!'])\n    for\
    \ s in sentences\n        words = split(s)\n        if words[1] == \"I\"\n   \
    \         total_boredom += 1\n        end\n    end\n    return total_boredom\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp6p6ogpxf.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6p6ogpxf.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmp6p6ogpxf.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6p6ogpxf.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6p6ogpxf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6p6ogpxf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmp6p6ogpxf.jl:17\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6p6ogpxf.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6p6ogpxf.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978023
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, r\"\\.|\\?|\\!\"))-1\nend\n \n@test is_bored(\"\
    Hello world\") == 0\n@test is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\") == 1\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpn7lkv8oh.jl:16

    in expression starting at /tmp/tmpn7lkv8oh.jl:16

    '
  stdout: ''
  timestamp: 1659978021
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = length(S)\n    k = 0\n    for i in S\n        if i == 'I'\n      \
    \      k += 1\n        end\n    end\n    return k\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqns9x11n.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpqns9x11n.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqns9x11n.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqns9x11n.jl:26\ntest set: Test Failed at /tmp/tmpqns9x11n.jl:29\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqns9x11n.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqns9x11n.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqns9x11n.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqns9x11n.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqns9x11n.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqns9x11n.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqns9x11n.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqns9x11n.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqns9x11n.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    if length(S) < 2 \n        return count\n    end\n    for\
    \ word in split(S)\n        if word == \"I\"\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9540scs4.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp9540scs4.jl:34\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9540scs4.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9540scs4.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978022
- exit_code: 0
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    sentence = split(S, ['.', '?', '!'])\n    for sentence\
    \ in sentence\n        words = split(sentence)\n        if length(words) > 0 &&\
    \ uppercase(words[1]) == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659978021
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    for x in split(S, r\"\\.|\\?|\\!\")\n        if startswith(strip(x),\
    \ \"I\")\n            n = n + 1\n        end\n    end\n    return n\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpui1fd_p_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpui1fd_p_.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpui1fd_p_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpui1fd_p_.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  sentences = split(S, \".!?\")\n  count = 0\n  for i in sentences\n    if\
    \ split(i)[1] == \"I\"\n      count += 1\n    end\n  end\n  return count\nend\n\
    is_bored(\"The sky is blue. The sun is shining. I love this weather\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphb5gx391.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmphb5gx391.jl:32\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphb5gx391.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphb5gx391.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, ['I', ' '], keep=false)) - 1 \nend\n    \n    \n\
    \    \n    \n    \n    \n    \"\"\"\n    You'll be given a string of words, and\
    \ your task is to calculate the boredom\n    score of the string. The boredom\
    \ score of a string is the sum of each\n    consecutive pair of words. Two words\
    \ are considered a pair if the last\n    character of one word matches the first\
    \ character of the other word.\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_edqpxj.jl:21\nin expression starting at\
    \ /tmp/tmp0_edqpxj.jl:21\n"
  stdout: ''
  timestamp: 1659978021
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentances = split(S, r\"[.?!]\")\n    count = 0\n    for i = 1:length(sentances)\n\
    \        words = split(sentances[i])\n        if words[1] == \"I\"\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpzpovh3sc.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpzpovh3sc.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpzpovh3sc.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzpovh3sc.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzpovh3sc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpzpovh3sc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpzpovh3sc.jl:17\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzpovh3sc.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzpovh3sc.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0\n    num_periods = 0\n    for i in S\n        if i ==\
    \ 'I' && num_periods < 1\n            num_boredoms += 1\n        end\n       \
    \ if i == '.' || i == '?' || i == '!'\n            num_periods += 1\n        else\n\
    \            num_periods = 0\n        end\n    end\n    return num_boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph095h4a1.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmph095h4a1.jl:33\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph095h4a1.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph095h4a1.jl:31\ntest set: Test Failed at /tmp/tmph095h4a1.jl:34\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph095h4a1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph095h4a1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph095h4a1.jl:35\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph095h4a1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph095h4a1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph095h4a1.jl:36\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph095h4a1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph095h4a1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph095h4a1.jl:37\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    s = split(S, \".!?\", keepempty=false)\n    count = 0\n    for i in s\n\
    \        if startswith(i, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa_gt74y5.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpa_gt74y5.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa_gt74y5.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa_gt74y5.jl:26\ntest set: Test Failed at /tmp/tmpa_gt74y5.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_gt74y5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_gt74y5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, r\"[\\.!\\?]+\")\n    boredoms = 0\n    for sentence\
    \ in sentences\n        if sentence[1] == 'I'\n            boredoms += 1\n   \
    \     end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpan8keh4g.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpan8keh4g.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpan8keh4g.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpan8keh4g.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpan8keh4g.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpan8keh4g.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpan8keh4g.jl:16\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpan8keh4g.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpan8keh4g.jl:26\ntest set:\
    \ Test Failed at /tmp/tmpan8keh4g.jl:31\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan8keh4g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan8keh4g.jl:26\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    b = 0\n    for w in eachmatch(r\"([^.!?]*?I[^.!?]*?[.!?])\", S)\n    \
    \    b += 1\n    end\n    return b\nend\nprintln(is_bored(\"Hello world\"))\n\
    println(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplyg_c4aq.jl:23

    '
  stdout: "0\n0\ntest set: Test Failed at /tmp/tmplyg_c4aq.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplyg_c4aq.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplyg_c4aq.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1]\
    \ == 'I' \n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp1t3z8f7f.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp1t3z8f7f.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmp1t3z8f7f.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1t3z8f7f.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1t3z8f7f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1t3z8f7f.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmp1t3z8f7f.jl:15\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1t3z8f7f.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1t3z8f7f.jl:25\ntest set:\
    \ Test Failed at /tmp/tmp1t3z8f7f.jl:30\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1t3z8f7f.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1t3z8f7f.jl:25\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  w = split(S, '.')\n  c = 0\n  for i in w\n    if first(i) == 'I'\n     \
    \ c += 1\n    end\n  end\n  return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_zq_a3f1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_zq_a3f1.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_zq_a3f1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_zq_a3f1.jl:26\ntest set: Test Failed at /tmp/tmp_zq_a3f1.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_zq_a3f1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_zq_a3f1.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S,r\"\\.|\\?|\\!\")\n    count = 0\n    for word in words\n\
    \        if word[1] == 'I'\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n\"\"\"\n    You'll be given a string containing only lowercase\
    \ letters.\n    You'll need to remove the least number of letters to make the\
    \ string a palindrome.\n    There are a few rules.\n   \n    - You can't rearrange\
    \ the letters.\n    - You can only remove one letter at a time.\n    - You are\
    \ only allowed to remove letters that are adjacent to one another.\n   \n    For\
    \ example:\n    >>> make_palindrome(\"a\")\n    0\n    >>> make_palindrome(\"\
    ab\")\n    1\n    >>> make_palindrome(\"abca\")\n    1\n    >>> make_palindrome(\"\
    abcba\")\n    0\n    >>> make_palindrome(\"abcda\")\n    2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpkxt0dif6.jl:22\nin expression starting at /tmp/tmpkxt0dif6.jl:22\n"
  stdout: ''
  timestamp: 1659978022
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Split S into sentences \n    sentences = split(S, ['.', '?', '!'])\n\
    \    # Split each sentence into words \n    words = [split(sentence) for sentence\
    \ in sentences]\n    # Count the sentences that start with \"I\"\n    return count(x\
    \ -> x[1] == \"I\", words)\nend\n \n# Example\nis_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather.\")\n \nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: BoundsError: attempt to access 0-element Vector{SubString{String}}\
    \ at index [1]\nStacktrace:\n [1] getindex\n   @ ./array.jl:861 [inlined]\n [2]\
    \ #2\n   @ /tmp/tmpt278mt0u.jl:18 [inlined]\n [3] _simple_count(pred::var\"#2#4\"\
    , itr::Vector{Vector{SubString{String}}}, init::Int64)\n   @ Base ./reduce.jl:1206\n\
    \ [4] _count\n   @ ./reducedim.jl:407 [inlined]\n [5] #count#735\n   @ ./reducedim.jl:405\
    \ [inlined]\n [6] count\n   @ ./reducedim.jl:405 [inlined]\n [7] is_bored(S::String)\n\
    \   @ Main /tmp/tmpt278mt0u.jl:18\n [8] top-level scope\n   @ /tmp/tmpt278mt0u.jl:22\n\
    in expression starting at /tmp/tmpt278mt0u.jl:22\n"
  stdout: ''
  timestamp: 1659978023
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, \"\\\\.\")\n    b = 0\n    for sentence in sentences\n\
    \        if sentence[1] == 'I'\n            b += 1\n        end\n    end\n   \
    \ return b\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaiocz4_1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpaiocz4_1.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpaiocz4_1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpaiocz4_1.jl:26\ntest set: Test Failed at /tmp/tmpaiocz4_1.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaiocz4_1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaiocz4_1.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978023
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    sentence = split(S, [\".\" \"?\" \"!\"])\n    for i in\
    \ sentence\n        word = split(i)\n        if length(word) > 0\n           \
    \ if word[1] == \"I\"\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmplakasyze.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmplakasyze.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Matrix{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Matrix{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Matrix{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmplakasyze.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplakasyze.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplakasyze.jl:29\ntest set:\
    \ Error During Test at /tmp/tmplakasyze.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Matrix{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Matrix{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(lowercase(S),r\"i\\b\")) - 1\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6w21red2.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp6w21red2.jl:25\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6w21red2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6w21red2.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978024
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    if S == \"\"\n        return 0\n    end\n    words = split(S, [',', '\
    \ ', '!', '.', '?', ';', ':'])\n    cnt = 0\n    for i in 1:length(words)\n  \
    \      if length(words[i]) > 0 && words[i][1] == 'I'\n            cnt += 1\n \
    \       end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0neqrp0a.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp0neqrp0a.jl:31\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0neqrp0a.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0neqrp0a.jl:29\ntest set: Test Failed at /tmp/tmp0neqrp0a.jl:32\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0neqrp0a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0neqrp0a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0neqrp0a.jl:34\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0neqrp0a.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0neqrp0a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0neqrp0a.jl:35\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0neqrp0a.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0neqrp0a.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    i = 1\n    while i < length(S)\n        if S[i] == 'I'\n\
    \            if S[i-1] == ' '\n                boredoms += 1\n            end\n\
    \        end\n        i += 1\n    end\n    return boredoms\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpe9zv91pu.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpe9zv91pu.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 16-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ is_bored(S::String)\n     @ Main /tmp/tmpe9zv91pu.jl:17\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpe9zv91pu.jl:31 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe9zv91pu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpe9zv91pu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpe9zv91pu.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe9zv91pu.jl:32 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe9zv91pu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpe9zv91pu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"I feel good today. I will be productive. will kill It\") == 2\n\
    \  BoundsError: attempt to access 53-codeunit String at index [0]\n  Stacktrace:\n\
    \   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n\
    \     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223\
    \ [inlined]\n   [4] is_bored(S::String)\n     @ Main /tmp/tmpe9zv91pu.jl:17\n\
    \   [5] macro expansion\n     @ "
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split_sentence = split(S,'.')\n    count_boredom = 0\n    for sent in\
    \ split_sentence\n        if is_bored_sentence(sent)\n            count_boredom\
    \ += 1\n        end\n    end\n    return count_boredom\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpr3wj8zrh.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpr3wj8zrh.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: is_bored_sentence\
    \ not defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpr3wj8zrh.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3wj8zrh.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3wj8zrh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpr3wj8zrh.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: is_bored_sentence not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpr3wj8zrh.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3wj8zrh.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3wj8zrh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpr3wj8zrh.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: is_bored_sentence not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpr3wj8zrh.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3wj8zrh.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3wj8zrh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpr3wj8zrh.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: is_bored_sentence not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpr3wj8zrh.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7"
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    cnt = 0\n    for t in split(S, \".\")\n        if startswith(t, \"I\"\
    )\n            cnt += 1\n        end\n    end\n    return cnt\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplhs83y9w.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmplhs83y9w.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplhs83y9w.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplhs83y9w.jl:25\ntest set: Test Failed at /tmp/tmplhs83y9w.jl:30\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhs83y9w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhs83y9w.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredom_count = 0\n    sent_end = [\".\", \"?\", \"!\"]\n    sentences\
    \ = split(S, sent_end)\n    for sent in sentences\n        if startswith(lowercase(sent),\
    \ \"i\")\n            boredom_count += 1\n        end\n    end\n    return boredom_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpmllirx89.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpmllirx89.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpmllirx89.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmllirx89.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmllirx89.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmllirx89.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n   count = 0\n   for token in split(S, r\"[!.?]\")\n       if starts_with(lowercase(token),\
    \ \"i\") == true\n           count += 1\n       end\n   end\n   return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp2f8zd55o.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp2f8zd55o.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: starts_with not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp2f8zd55o.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f8zd55o.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f8zd55o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2f8zd55o.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp2f8zd55o.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f8zd55o.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f8zd55o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2f8zd55o.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp2f8zd55o.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f8zd55o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f8zd55o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2f8zd55o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: starts_with not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmp2f8zd55o.jl:15\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(s -> (lowercase(s) == \"i\"), split(S, r\"\\!|\\.|\\?\"))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeok9jfdv.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpeok9jfdv.jl:22\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeok9jfdv.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeok9jfdv.jl:19\ntest set: Test Failed at /tmp/tmpeok9jfdv.jl:24\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeok9jfdv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeok9jfdv.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    # Match I + word/whitespace + .?!\n    m = match(r\"(I)(\\s)(\\\
    w+)(\\.)|(I)(\\s)(\\w+)(\\?)|(I)(\\s)(\\w+)(\\!)\", S)\n    \n    # Count number\
    \ of matches\n    n_matches = length(m)\n    \n    return n_matches\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmppb3zvxr7.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmppb3zvxr7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ length(::Nothing)\n  Closest candidates are:\n    length(!Matched::Union{Base.KeySet,\
    \ Base.ValueIterator}) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n\
    \    length(!Matched::Union{LinearAlgebra.Adjoint{T, S}, LinearAlgebra.Transpose{T,\
    \ S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.Iterators.Stateful) at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmppb3zvxr7.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppb3zvxr7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppb3zvxr7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmppb3zvxr7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching length(::Nothing)\n\
    \  Closest candidates are:\n    length(!Matched::Union{Base.KeySet, Base.ValueIterator})\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n    length(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ S}, LinearAlgebra.Transpose{T, S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.Iterators.Stateful) at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmppb3zvxr7.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppb3zvxr7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp"
  timestamp: 1659978027
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    str_array = split(S,\".\")\n    for s in str_array\n      \
    \  str_s = split(s, \" \")\n        if str_s[1] == \"I\"\n            n = n +\
    \ 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph9ru4wp5.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmph9ru4wp5.jl:32\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph9ru4wp5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph9ru4wp5.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(S)\n        if S[i] == 'I'\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptl8vzy_r.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmptl8vzy_r.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptl8vzy_r.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptl8vzy_r.jl:25\ntest set: Test Failed at /tmp/tmptl8vzy_r.jl:28\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptl8vzy_r.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptl8vzy_r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptl8vzy_r.jl:29\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptl8vzy_r.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptl8vzy_r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptl8vzy_r.jl:30\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptl8vzy_r.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptl8vzy_r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptl8vzy_r.jl:31\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(split(S, r\"(?<=[!?.])\"), \"I\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9lst_hcy.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp9lst_hcy.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: objects of type\
    \ Vector{SubString{String}} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206 [inlined]\n\
    \   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] count\n     @ ./reduce.jl:1201\
    \ [inlined]\n   [4] is_bored(S::String)\n     @ Main /tmp/tmp9lst_hcy.jl:13\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9lst_hcy.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9lst_hcy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp9lst_hcy.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] _simple_count\n     @ ./reduce.jl:1206 [inlined]\n   [2] #count#271\n\
    \     @ ./reduce.jl:1201 [inlined]\n   [3] count\n     @ ./reduce.jl:1201 [inlined]\n\
    \   [4] is_bored(S::String)\n     @ Main /tmp/tmp9lst_hcy.jl:13\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9lst_hcy.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9lst_hcy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp9lst_hcy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] _simple_count\n     @ ./reduce.jl:1206 [inlined]\n   [2] #count#271\n\
    \     @ ./reduce.jl:1201 [inlined]\n   [3] count\n     @ ./reduce.jl:1201 [inlined]\n\
    \   [4] is_bored(S::S"
  timestamp: 1659978027
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    flag = false\n    for i in S\n        if flag == true\n\
    \            if i == '.' || i == '?' || i == '!'\n                flag = false\n\
    \            end\n        else\n            if i == 'I'\n                flag\
    \ = true\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2rca9tg8.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp2rca9tg8.jl:35\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2rca9tg8.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2rca9tg8.jl:33\ntest set: Test Failed at /tmp/tmp2rca9tg8.jl:37\n\
    \  Expression: candidate(\"bIt\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2rca9tg8.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2rca9tg8.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2rca9tg8.jl:38\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2rca9tg8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2rca9tg8.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2rca9tg8.jl:39\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2rca9tg8.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2rca9tg8.jl:33\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    sentences = split(S, [\".\", \"!\", \"?\"])\n    for\
    \ s in sentences\n        if startswith(lowercase(s), \"i\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend\n\"\"\"\n    You'll be\
    \ given a string of words, and your task is to count the number\n    of boredoms.\
    \ A boredom is a sentence that starts with the word \"I\".\n    Sentences are\
    \ delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello\
    \ world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp4zdog8wc.jl:22\nin expression starting at /tmp/tmp4zdog8wc.jl:22\n"
  stdout: ''
  timestamp: 1659978025
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    x = split(S,r\"[!\\.\\?]\")\n    bored = 0\n    for i in x\n        if\
    \ (i[1] == 'I') \n            bored = bored + 1\n        end\n    end\n    return\
    \ bored\nend \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpbc7wbbam.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpbc7wbbam.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpbc7wbbam.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbc7wbbam.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbc7wbbam.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpbc7wbbam.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpbc7wbbam.jl:16\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbc7wbbam.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbc7wbbam.jl:26\ntest set:\
    \ Test Failed at /tmp/tmpbc7wbbam.jl:31\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc7wbbam.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc7wbbam.jl:26\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0 \n    i = 1\n    while i <= length(S)\n        while i <= length(S)\
    \ && !(S[i] == ' ')\n            i += 1\n        end\n        count += (S[i-2]\
    \ == 'I')\n        i += 1\n    end\n    return count\nend\nS = readline()\nprintln(is_bored(S))\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpuadaikzc.jl:29

    '
  stdout: "0\ntest set: Test Failed at /tmp/tmpuadaikzc.jl:33\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuadaikzc.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuadaikzc.jl:31\ntest set: Error During Test\
    \ at /tmp/tmpuadaikzc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit String at index\
    \ [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n\
    \   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n\
    \     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n     @\
    \ Main /tmp/tmpuadaikzc.jl:19\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuadaikzc.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuadaikzc.jl:31\ntest set:\
    \ Test Failed at /tmp/tmpuadaikzc.jl:35\n  Expression: candidate(\"bIt\") == 0\n\
    \   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuadaikzc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuadaikzc.jl:31\ntest set: Error\
    \ During Test at /tmp/tmpuadaikzc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"I feel good today. I will be productive. will kill It\") == 2\n\
    \  BoundsError: attempt to access 53-codeunit String at index [0]\n  Stacktrace:\n\
    \   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n\
    \     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  return count(s->s[1]=='I', split(S, [',' '.' '!' '?']))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp00ceub0v.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp00ceub0v.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Matrix{Char}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Matrix{Char}, limit::Int64,\
    \ keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base ./strings/util.jl:435\n\
    \   [2] split(str::String, splitter::Matrix{Char}; limit::Int64, keepempty::Bool)\n\
    \     @ Base ./strings/util.jl:419\n   [3] split(str::String, splitter::Matrix{Char})\n\
    \     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n     @ Main /tmp/tmp00ceub0v.jl:13\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp00ceub0v.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp00ceub0v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp00ceub0v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Matrix{Char},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Matrix{Char}, limit::Int64,\
    \ keepempty::Bool, strs::Vector{SubString{String}})\n   "
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = length(S)\n    count = 0\n    for i in 1:n\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp14rj4dfv.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp14rj4dfv.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp14rj4dfv.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp14rj4dfv.jl:26\ntest set: Test Failed at /tmp/tmp14rj4dfv.jl:29\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp14rj4dfv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp14rj4dfv.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp14rj4dfv.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp14rj4dfv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp14rj4dfv.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp14rj4dfv.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp14rj4dfv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp14rj4dfv.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp14rj4dfv.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    for s in split(S, [';', '!', '.', '?'])\n        if first(split(s))\
    \ == \"I\"\n            n += 1\n        end\n    end\n    return n\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp7tzq784s.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp7tzq784s.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] first\n     @ ./abstractarray.jl:398\
    \ [inlined]\n   [3] is_bored(S::String)\n     @ Main /tmp/tmp7tzq784s.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7tzq784s.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7tzq784s.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7tzq784s.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] first\n     @ ./abstractarray.jl:398 [inlined]\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmp7tzq784s.jl:15\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7tzq784s.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7tzq784s.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for (i,s) in enumerate(S)\n        if S[i] == 'I' &&\
    \ S[i-1] == ' '\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp59yeda80.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp59yeda80.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 16-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ is_bored(S::String)\n     @ Main /tmp/tmp59yeda80.jl:15\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmp59yeda80.jl:27 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp59yeda80.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp59yeda80.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp59yeda80.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp59yeda80.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp59yeda80.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp59yeda80.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I feel good today. I will be productive. will kill It\") == 2\n\
    \  BoundsError: attempt to access 53-codeunit String at index [0]\n  Stacktrace:\n\
    \   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n\
    \     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223\
    \ [inlined]\n   [4] is_bored(S::String)\n     @ Main /tmp/tmp59yeda80.jl:15\n\
    \   [5] macro expansion\n     @ "
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    counter = 0\n    for (index, value) in enumerate(S)\n        if index\
    \ != 1\n            if value == \"I\"\n                counter = counter + 1\n\
    \            end\n        end\n    end\n    return counter\nend\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp25fpi8xn.jl:23\nin expression starting at /tmp/tmp25fpi8xn.jl:23\n"
  stdout: ''
  timestamp: 1659978026
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    c = 0\n    ss = split(S, [\".\" , \"?\" , \"!\"])\n    for s in ss\n \
    \       if split(s)[1] == \"I\"\n            c += 1\n        end\n    end\n  \
    \  return c\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpbqte55fi.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpbqte55fi.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpbqte55fi.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbqte55fi.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbqte55fi.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpbqte55fi.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # your code here\n    boredoms = 0\n    i = 0\n    while i < length(S)\n\
    \        if S[i] == 'I'\n            for j in i+1:length(S)\n                if\
    \ S[j] == '.' || S[j] == '?' || S[j] == '!'\n                    i = j\n     \
    \               boredoms += 1\n                    break\n                end\n\
    \            end\n        end\n        i += 1\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgod1zl5r.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpgod1zl5r.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  BoundsError: attempt to access\
    \ 11-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpgod1zl5r.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgod1zl5r.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgod1zl5r.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpgod1zl5r.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to access 16-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpgod1zl5r.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgod1zl5r.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgod1zl5r.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpgod1zl5r.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpgod1zl5r.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    N = length(S)\n    count = 0\n    i = 1\n    while i <= N\n        if\
    \ i <= N-1 && S[i] == 'I' && S[i+1] == ' '\n            count += 1\n        end\n\
    \        if S[i] == '.' || S[i] == '?' || S[i] == '!'\n            i += 1\n  \
    \      end\n        i += 1\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp80rf0bji.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp80rf0bji.jl:37\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80rf0bji.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80rf0bji.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978027
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    j = 0\n    for i in 1:length(S)\n        if S[i] == '.'\n            if\
    \ S[i-4:i-1] == \"I am\"\n                j = j + 1\n            end\n       \
    \ end\n    end\n    return j\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is\
    \ the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq0xde4ou.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpq0xde4ou.jl:30\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq0xde4ou.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq0xde4ou.jl:27\ntest set: Test Failed at /tmp/tmpq0xde4ou.jl:32\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0xde4ou.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0xde4ou.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978027
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, [';','?','.'])\n    boredoms = 0\n    for sentence\
    \ in sentences\n        if startswith(sentence,\"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4fmzv8zp.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp4fmzv8zp.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4fmzv8zp.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4fmzv8zp.jl:26\ntest set: Test Failed at /tmp/tmp4fmzv8zp.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fmzv8zp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fmzv8zp.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978027
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(x->x[1]=='I', split(S, [';',',','.','!','?']))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp4y7vhx1b.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp4y7vhx1b.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n    [1] checkbounds\n\
    \      @ ./strings/basic.jl:216 [inlined]\n    [2] getindex(s::SubString{String},\
    \ i::Int64)\n      @ Base ./strings/substring.jl:83\n    [3] #1\n      @ /tmp/tmp4y7vhx1b.jl:13\
    \ [inlined]\n    [4] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [5]\
    \ _count\n      @ ./reducedim.jl:407 [inlined]\n    [6] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [7] count\n      @ ./reducedim.jl:405 [inlined]\n    [8] is_bored(S::String)\n\
    \      @ Main /tmp/tmp4y7vhx1b.jl:13\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp4y7vhx1b.jl:21 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp4y7vhx1b.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4y7vhx1b.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n    [1] checkbounds\n      @ ./strings/basic.jl:216\
    \ [inlined]\n    [2] getindex(s::SubString{String}, i::Int64)\n      @ Base ./strings/substring.jl:83\n\
    \    [3] #1\n      @ /tmp/tmp4y7vhx1b.jl:13 [inlined]\n    [4] _simple_count\n\
    \      @ ./reduce.jl:1206 [inlined]\n    [5] _count\n      @ ./reducedim.jl:407\
    \ [inlined]\n    [6] #count#735\n      @ ./reducedim.jl:405 [inlined]\n    [7]\
    \ count\n      @ ./reducedim.jl:405 [inlined]\n    [8] is_bored(S::String)\n \
    \     @ Main /tmp/tmp4y7vhx1b.jl:13\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp4y7vhx1b.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp4y7v"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(matchall(r\"(?<=\\.)\\s*I\", S))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpbvlzdzbd.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpbvlzdzbd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: matchall not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpbvlzdzbd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbvlzdzbd.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbvlzdzbd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpbvlzdzbd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpbvlzdzbd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbvlzdzbd.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbvlzdzbd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpbvlzdzbd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: matchall not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpbvlzdzbd.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbvlzdzbd.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbvlzdzbd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpbvlzdzbd.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: matchall not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpbvlzdzbd.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   ["
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for s in split(S, r\"[.?!]\")\n        if starts_with(s,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpfqs1v17p.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpfqs1v17p.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: starts_with not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpfqs1v17p.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfqs1v17p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfqs1v17p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfqs1v17p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpfqs1v17p.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfqs1v17p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfqs1v17p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfqs1v17p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpfqs1v17p.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfqs1v17p.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfqs1v17p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfqs1v17p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: starts_with not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpfqs1v17p.jl:15\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    if occursin(r\"(?i)^i\\s\", S)\n        return 1\n    else\n        return\
    \ 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc4i297p8.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpc4i297p8.jl:28\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4i297p8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4i297p8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_bored = 0 \n    num_end = 0\n    for i = 1:length(S)\n        if S[i]\
    \ == 'I'\n            for j = i+1:length(S)\n                if S[j] == '.' ||\
    \ S[j] == '?' || S[j] == '!'\n                    num_end += 1\n             \
    \       break\n                end\n            end\n            if num_end !=\
    \ 0\n                num_bored += 1\n                num_end = 0\n           \
    \ end\n        end\n    end\n    return num_bored\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl4_06oib.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpl4_06oib.jl:37\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl4_06oib.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl4_06oib.jl:35\ntest set: Test Failed at /tmp/tmpl4_06oib.jl:38\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl4_06oib.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl4_06oib.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for word in split(S)\n        if word == \"I\"\n      \
    \      count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3eaixsqp.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3eaixsqp.jl:31\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3eaixsqp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3eaixsqp.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentence = split(S,\".\")\n    boredoms = 0\n    for i in sentence\n \
    \       if startswith(i,\"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5qubmcx.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_5qubmcx.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_5qubmcx.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_5qubmcx.jl:26\ntest set: Test Failed at /tmp/tmp_5qubmcx.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5qubmcx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5qubmcx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    cnt = 0\n    if length(S) > 2\n        if S[1] == 'I'\n            cnt\
    \ += 1\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3q1vhw25.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3q1vhw25.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3q1vhw25.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3q1vhw25.jl:25\ntest set: Test Failed at /tmp/tmp3q1vhw25.jl:30\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3q1vhw25.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3q1vhw25.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978028
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  counter = 0 \n  for token in split(S, [\".\",\"!\",\"?\"])\n    if startswith(token,\
    \ \"I\")\n      counter += 1\n    end\n  end\n  return counter\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpjzwxt4m8.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjzwxt4m8.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpjzwxt4m8.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjzwxt4m8.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjzwxt4m8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjzwxt4m8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for sentence in split(S, [\".\", \"?\", \"!\"])\n  \
    \      for word in split(sentence)\n            if word == \"I\"\n           \
    \     boredoms += 1\n            end\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpk3ajryqg.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpk3ajryqg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpk3ajryqg.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpk3ajryqg.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpk3ajryqg.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpk3ajryqg.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    for sentence in split(S, [\".\", \"!\", \"?\"])\n        if\
    \ startswith(sentence, \"I\")\n            n = n + 1\n        end\n    end\n \
    \   return n\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp1awq_xuv.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp1awq_xuv.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp1awq_xuv.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1awq_xuv.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1awq_xuv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1awq_xuv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # S = tolowercase(S) # convert to lower case\n    N = length(S)\n    idx\
    \ = 0\n    for i in 1:N\n        if i < N-2 && S[i] == 'i' && S[i+1] == ' '\n\
    \            idx += 1\n        end\n    end\n    return idx\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbmjosgr8.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpbmjosgr8.jl:30\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbmjosgr8.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbmjosgr8.jl:27\ntest set: Test Failed at /tmp/tmpbmjosgr8.jl:32\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmjosgr8.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmjosgr8.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S,r\"(\\.|\\?|!)\\s\")\n    boredoms = 0\n    for i in words\n\
    \        if i != \"\"\n            if i[1] == \"I\"\n                boredoms\
    \ += 1\n            end\n        end\n    end\n    return boredoms\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzrdc_vz3.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzrdc_vz3.jl:31\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzrdc_vz3.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzrdc_vz3.jl:28\ntest set: Test Failed at /tmp/tmpzrdc_vz3.jl:33\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrdc_vz3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrdc_vz3.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    S1 = split(S, \".?!\")\n    count = 0\n    for s in S1\n        for t\
    \ in split(s)\n            if t == \"I\"\n                count += 1\n       \
    \     end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpln8gj37f.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpln8gj37f.jl:34\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpln8gj37f.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpln8gj37f.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, ['.', '?', '!'])\n    boredoms = 0\n    for s in\
    \ sentences\n        if startswith(s, \"I\")\n            boredoms += 1\n    \
    \    end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuw3ygtba.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpuw3ygtba.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuw3ygtba.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuw3ygtba.jl:26\ntest set: Test Failed at /tmp/tmpuw3ygtba.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuw3ygtba.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuw3ygtba.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    s = strip(S)\n    S1 = split(s, [';', '.', '?', '!'])\n    #S1 =\
    \ split(S, [';', '.', '?', '!'])\n    b = 0\n    #println(S1)\n    for i = 1:length(S1)\n\
    \        Si = split(S1[i])\n        #println(Si)\n        if (length(Si) > 0)\
    \ & (Si[1] == \"I\")\n            b += 1\n        end\n    end\n    \n    return\
    \ b\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpxff5ndz2.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpxff5ndz2.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpxff5ndz2.jl:22\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxff5ndz2.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxff5ndz2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxff5ndz2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpxff5ndz2.jl:22\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxff5ndz2.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxff5ndz2.jl:33\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    c = count(S,r\"I\")\n    for i in S\n        if i == \"!\" || i == \"\
    ?\" || i == \".\"\n            c += 1\n        end\n    end\n    return c\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpj122eh_n.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpj122eh_n.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ iterate(::Regex)\n  Closest candidates are:\n    iterate(!Matched::Union{LinRange,\
    \ StepRangeLen}) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n   \
    \ iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n\
    \    iterate(!Matched::T) where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}}\
    \ at ~/.conda/envs/polyglot/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n\
    \   [1] _simple_count(pred::String, itr::Regex, init::Int64)\n     @ Base ./reduce.jl:1205\n\
    \   [2] count(f::String, itr::Regex; init::Int64)\n     @ Base ./reduce.jl:1201\n\
    \   [3] count(f::String, itr::Regex)\n     @ Base ./reduce.jl:1201\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpj122eh_n.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj122eh_n.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj122eh_n.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpj122eh_n.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching iterate(::Regex)\n\
    \  Closest candidates are:\n    iterate(!Matched::Union{LinRange, StepRangeLen})\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n    iterate(!Matched::Union{LinRange,\
    \ StepRangeLen}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n\
    \    iterate(!Matched::T) where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}}\
    \ at ~/.conda/envs/polyglot/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n\
    \   [1] _simple_count(pred::String, itr::Regex, init::Int64)\n     @ Base ./reduce.jl:1205\n\
    \   [2] count(f::String, itr::Regex; init::Int64)\n     @ Base ./reduce.jl:1201\n\
    \   [3] count(f::String, itr::Rege"
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sum(split(S, r\"[.?!]\") .== \"I\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0sdyq8ju.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0sdyq8ju.jl:22\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0sdyq8ju.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0sdyq8ju.jl:19\ntest set: Test Failed at /tmp/tmp0sdyq8ju.jl:24\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0sdyq8ju.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0sdyq8ju.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(filter(x->x, split(S, '.', '?' or '!')))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv4_eaayw.jl:13\nin expression starting at\
    \ /tmp/tmpv4_eaayw.jl:13\n"
  stdout: ''
  timestamp: 1659978029
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count_bored = 0\n    if occursin(\"I\", S)\n        last_dot = findlast(x\
    \ -> x == '.', S)\n        last_q = findlast(x -> x == '?', S)\n        last_ex\
    \ = findlast(x -> x == '!', S)\n        if last_dot != 0\n            if occursin(\"\
    I\", S[last_dot+1:end])\n                count_bored += 1\n            end\n \
    \       end\n        if last_q != 0\n            if occursin(\"I\", S[last_q+1:end])\n\
    \                count_bored += 1\n            end\n        end\n        if last_ex\
    \ != 0\n            if occursin(\"I\", S[last_ex+1:end])\n                count_bored\
    \ += 1\n            end\n        end\n    end\n    count_bored\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpc3ockghu.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpc3ockghu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  MethodError: no method\
    \ matching +(::Nothing, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n\
    \    +(!Matched::LinearAlgebra.UniformScaling, ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpc3ockghu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc3ockghu.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc3ockghu.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpc3ockghu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: no method matching +(::Nothing,\
    \ ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,\
    \ ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpc3ockghu.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc3ockghu.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   ["
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sum(S.split(['.', '?', '!']))\n    .map(s -> s.trim())\n    .map(s ->\
    \ s[1:end])\n    .filter(s -> length(s) != 0)\n    .map(s -> s[1] == 'I')\n  \
    \  .map(b -> ifelse(b, 1, 0))\n    |> sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \".\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiie6xgix.jl:14\nin expression starting at\
    \ /tmp/tmpiie6xgix.jl:14\n"
  stdout: ''
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S,r\"[\\?\\!\\.]\")) - length(split(S,r\"[\\?\\!\\\
    .]I\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbehv69d3.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpbehv69d3.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbehv69d3.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbehv69d3.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    i = 1\n    count = 0\n    while i <= length(S)\n        while i <= length(S)\
    \ && !(S[i] in ['.', '?', '!'])\n            i += 1\n        end\n        if i\
    \ > length(S)\n            break\n        end\n        i += 1\n        if i <=\
    \ length(S) && S[i] == 'I'\n            count += 1\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphka1eh9l.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmphka1eh9l.jl:36\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphka1eh9l.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphka1eh9l.jl:33\ntest set: Test Failed at /tmp/tmphka1eh9l.jl:38\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphka1eh9l.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphka1eh9l.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    for i in 1:length(S)\n        if S[i] == 'I' && (i == 1 ||\
    \ S[i-1] == '.' || S[i-1] == '?' || S[i-1] == '!')\n            n += 1\n     \
    \   end\n    end\n    return n\nend\nprintln(is_bored(\"Hello world\"))\nprintln(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1asuasal.jl:25

    '
  stdout: "0\n0\ntest set: Test Failed at /tmp/tmp1asuasal.jl:29\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1asuasal.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1asuasal.jl:27\ntest set: Test Failed at /tmp/tmp1asuasal.jl:32\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1asuasal.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1asuasal.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S,r\"\\?|\\!|\\.\"))-1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu1f0sz11.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpu1f0sz11.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu1f0sz11.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu1f0sz11.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(findall(r\"^I \\w+\",split(S,\"[.!?]\")))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpcukmq4mx.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpcukmq4mx.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findall(::Regex, ::Vector{SubString{String}})\n  Closest candidates are:\n \
    \   findall(::Union{AbstractPattern, AbstractString}, !Matched::AbstractString;\
    \ overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:458\n    findall(!Matched::Base.Fix2{typeof(in)},\
    \ ::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2426\n\
    \    findall(!Matched::Function, ::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2257\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpcukmq4mx.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcukmq4mx.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcukmq4mx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcukmq4mx.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findall(::Regex,\
    \ ::Vector{SubString{String}})\n  Closest candidates are:\n    findall(::Union{AbstractPattern,\
    \ AbstractString}, !Matched::AbstractString; overlap) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:458\n\
    \    findall(!Matched::Base.Fix2{typeof(in)}, ::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2426\n\
    \    findall(!Matched::Function, ::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2257\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpcukmq4mx.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcukmq4mx.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcukmq4mx.jl:19\ntest set:\
    \ Error"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    result = []\n    words = split(S, '.')\n    for word in words\n      \
    \  temp = split(word, '?')\n        for item in temp\n            if beginswith(item,\
    \ \"I\")\n                push!(result, item)\n            end\n        end\n\
    \    end\n    return length(result)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpl6cuu0t4.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpl6cuu0t4.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: beginswith not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpl6cuu0t4.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6cuu0t4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6cuu0t4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6cuu0t4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: beginswith not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpl6cuu0t4.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6cuu0t4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6cuu0t4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6cuu0t4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: beginswith not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpl6cuu0t4.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6cuu0t4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6cuu0t4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6cuu0t4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: beginswith not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpl6cuu0t4.jl:18\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(collect(eachmatch(r\"(?m)(^I)\", S)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd_qyzy97.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpd_qyzy97.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpd_qyzy97.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpd_qyzy97.jl:19\ntest set: Test Failed at /tmp/tmpd_qyzy97.jl:24\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_qyzy97.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_qyzy97.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for s in split(S, ['.', '?', '!'])\n        if strip(s)[1]\
    \ == 'I'\n            count += 1\n        end\n    end\n    return count\nend\n\
    \ \n\"\"\"\n    You are given a list of friends and a dictionary.\n    The dictionary\
    \ tells you how much time each friend spends on different activities.\n    Your\
    \ task is to find the friend who has the most time available to spend on new activities.\n\
    \   \n    For example:\n    >>> most_time([('Bob', {\"sleeping\": 8, \"dancing\"\
    : 6, \"tv\": 7}),\n    ...            ('Alice', {\"studying\": 10, \"tv\": 8,\
    \ \"dancing\": 2}),\n    ...            ('Jess', {\"studying\": 3, \"tv\": 6,\
    \ \"sleeping\": 12})])\n    'Jess'\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpj5j0i4fa.jl:22\nin expression starting at /tmp/tmpj5j0i4fa.jl:22\n"
  stdout: ''
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split = split(S,'. ? !') \n    count = 0\n    for i in split \n      \
    \  if i[1] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo1ik7kt3.jl:13\nin expression\
    \ starting at /tmp/tmpo1ik7kt3.jl:13\n"
  stdout: ''
  timestamp: 1659978030
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    start = 1\n    for (i,char) in enumerate(S)\n      \
    \  if char == '.' || char == '?' || char == '!'\n            if i - start > 1\
    \ && S[start] == 'I'\n                boredoms += 1\n            end\n       \
    \     start = i + 2\n        end\n    end\n    return boredoms\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7k5o96fg.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp7k5o96fg.jl:31\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7k5o96fg.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7k5o96fg.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    s = split(S, [\".\",\"?\",\"!\"])\n    num = 0\n    for i = 1:length(s)\n\
    \        if split(s[i], \" \")[1] == \"I\"\n            num += 1\n        end\n\
    \    end\n    return num\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp_62f8f8h.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp_62f8f8h.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp_62f8f8h.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_62f8f8h.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_62f8f8h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp_62f8f8h.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(x->(x[1]=='I'), split(S,r\"[.?!]\"))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmprhgcn7x4.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmprhgcn7x4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n    [1] checkbounds\n\
    \      @ ./strings/basic.jl:216 [inlined]\n    [2] getindex(s::SubString{String},\
    \ i::Int64)\n      @ Base ./strings/substring.jl:83\n    [3] #1\n      @ /tmp/tmprhgcn7x4.jl:13\
    \ [inlined]\n    [4] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [5]\
    \ _count\n      @ ./reducedim.jl:407 [inlined]\n    [6] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [7] count\n      @ ./reducedim.jl:405 [inlined]\n    [8] is_bored(S::String)\n\
    \      @ Main /tmp/tmprhgcn7x4.jl:13\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprhgcn7x4.jl:21 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprhgcn7x4.jl:19\ntest set:\
    \ Error During Test at /tmp/tmprhgcn7x4.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n    [1] checkbounds\n      @ ./strings/basic.jl:216\
    \ [inlined]\n    [2] getindex(s::SubString{String}, i::Int64)\n      @ Base ./strings/substring.jl:83\n\
    \    [3] #1\n      @ /tmp/tmprhgcn7x4.jl:13 [inlined]\n    [4] _simple_count\n\
    \      @ ./reduce.jl:1206 [inlined]\n    [5] _count\n      @ ./reducedim.jl:407\
    \ [inlined]\n    [6] #count#735\n      @ ./reducedim.jl:405 [inlined]\n    [7]\
    \ count\n      @ ./reducedim.jl:405 [inlined]\n    [8] is_bored(S::String)\n \
    \     @ Main /tmp/tmprhgcn7x4.jl:13\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprhgcn7x4.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprhgc"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # the string is made up of sentences and\n    # each sentence begins with\
    \ a character in\n    # either '.', '?', or '!'\n    # so: split on '.', '?' or\
    \ '!'\n    # then determine which sentences begin with 'I'\n    # then count the\
    \ number of sentences that begin with 'I'\n    # this should be the output\n \
    \   split_on_dot = split(S, '.')\n    split_on_question = split(S, '?')\n    split_on_exclamation\
    \ = split(S, '!')\n    split_string = vcat(split_on_dot, split_on_question, split_on_exclamation)\n\
    \    split_string = deleteat!(split_string, findall(x -> x == \"\", split_string))\n\
    \    x = length(findall(x -> first(x) == 'I', split_string))\n    x\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbe0ajckw.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpbe0ajckw.jl:34\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbe0ajckw.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbe0ajckw.jl:32\ntest set: Test Failed at /tmp/tmpbe0ajckw.jl:35\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 3 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbe0ajckw.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbe0ajckw.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpbe0ajckw.jl:37\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbe0ajckw.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbe0ajckw.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     3      6\n"
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    bored = 0\n    start = 1\n    end = 0\n    S = replace(S, \".\"\
    , \"\")\n    S = replace(S, \"?\", \"\")\n    S = replace(S, \"!\", \"\")\n  \
    \  S = lowercase(S)\n    words = split(S, \" \")\n    while end <= length(words)\n\
    \        # iterate through the words, adding to the boredom \n        # counter\
    \ each time we come across a sentence that starts with I.\n        if words[start]\
    \ == \"i\"\n            bored += 1\n        end += 1\n        start += 1\n   \
    \ end\n    return bored\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"function is_bored(S::String)::Int64\n\
    \    # /tmp/tmpy548vmfh.jl, line 12\n    # /tmp/tmpy548vmfh.jl, line 14\n    bored\
    \ = 0\n    # /tmp/tmpy548vmfh.jl, line 15\n    start = 1\nend\" around /tmp/tmpy548vmfh.jl:1\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpy548vmfh.jl:1\nin expression starting\
    \ at /tmp/tmpy548vmfh.jl:1\n"
  stdout: ''
  timestamp: 1659978031
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, re\"\\?|!|\\.\")\n    boredoms = 0\n    for sentence\
    \ in sentences\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: @re_str not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n\
    \ [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode,\
    \ mod::Module, meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs\
    \ ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n\
    \   @ Core ./boot.jl:517\nin expression starting at /tmp/tmpmhmlqzye.jl:1\nin\
    \ expression starting at /tmp/tmpmhmlqzye.jl:1\n"
  stdout: ''
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for word in split(S, r\"\\?|\\!|\\.\")\n        word =\
    \ word[1:end]\n        if (word == \"I\") \n            count = count + 1\n  \
    \      end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt7_r3c1_.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpt7_r3c1_.jl:29\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt7_r3c1_.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt7_r3c1_.jl:26\ntest set: Test Failed at /tmp/tmpt7_r3c1_.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_r3c1_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7_r3c1_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978032
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    is_bored=0\n    i=1\n    while i<=length(S)\n        if (S[i]=='I')&(S[i-1]=='\
    \ ')\n            is_bored=is_bored+1\n        end\n        i=i+1\n    end\n \
    \   return is_bored\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpr_n585bj.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpr_n585bj.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  BoundsError: attempt to access\
    \ 11-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpr_n585bj.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr_n585bj.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr_n585bj.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpr_n585bj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to access 16-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpr_n585bj.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr_n585bj.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr_n585bj.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpr_n585bj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpr_n585bj.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentence = split(S, '.')\n    boredoms = 0\n    for i in sentence\n  \
    \      if i[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_rqewaun.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_rqewaun.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_rqewaun.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_rqewaun.jl:26\ntest set: Test Failed at /tmp/tmp_rqewaun.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rqewaun.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rqewaun.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n \n    # Split the string on '.', '?' or '!' delimiters\n    sentences = split(S,\
    \ \".[?!]\")\n    boredoms = 0\n    for sentence in sentences\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpspjpvu9k.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpspjpvu9k.jl:30\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpspjpvu9k.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpspjpvu9k.jl:28\ntest set: Test Failed at /tmp/tmpspjpvu9k.jl:33\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpspjpvu9k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpspjpvu9k.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, r\"\\bI\")) - 1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8lyj_705.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp8lyj_705.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8lyj_705.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8lyj_705.jl:19\ntest set: Test Failed at /tmp/tmp8lyj_705.jl:22\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lyj_705.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lyj_705.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8lyj_705.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lyj_705.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lyj_705.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8lyj_705.jl:25\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8lyj_705.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8lyj_705.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    if (S[1] == 'I')\n        return 1\n    else\n        return 0\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpey9gjpdp.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpey9gjpdp.jl:25\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpey9gjpdp.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpey9gjpdp.jl:23\ntest set: Test Failed at /tmp/tmpey9gjpdp.jl:28\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpey9gjpdp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpey9gjpdp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  spl = split(S, r\"[\\.!?]\")\n  for x in spl\n    if (startswith(x, \"I\"\
    ))\n      return 1\n    end\n  end\n  return 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsv1aah04.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpsv1aah04.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsv1aah04.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsv1aah04.jl:25\ntest set: Test Failed at /tmp/tmpsv1aah04.jl:30\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv1aah04.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv1aah04.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    counter::Int64 = 0\n    words::Vector{SubString{String}} = split(S, r\"\
    \\.|\\?|\\!\")\n    for word in words\n        if word[1] == 'I'\n           \
    \ counter += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpkqaveyrm.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpkqaveyrm.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpkqaveyrm.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkqaveyrm.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkqaveyrm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpkqaveyrm.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpkqaveyrm.jl:16\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkqaveyrm.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkqaveyrm.jl:26\ntest set:\
    \ Test Failed at /tmp/tmpkqaveyrm.jl:31\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqaveyrm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkqaveyrm.jl:26\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Your code goes here\n    i = 0\n    count = 0\n    while i < length(S)\
    \ \n        if S[i] == 'I'\n            count += 1\n        end\n        i +=\
    \ 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmplc33l44v.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmplc33l44v.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  BoundsError: attempt to access\
    \ 11-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmplc33l44v.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplc33l44v.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplc33l44v.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplc33l44v.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to access 16-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmplc33l44v.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplc33l44v.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplc33l44v.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplc33l44v.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmplc33l44v.jl:17\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    S = lc(S) #converts string to lowercase\n    S = split(S) #splits the\
    \ string into a word array\n    counter = 0\n    for word in S\n        if word\
    \ == \"i\"\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpt22_feby.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpt22_feby.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: lc not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpt22_feby.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt22_feby.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt22_feby.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpt22_feby.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: lc not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpt22_feby.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt22_feby.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt22_feby.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpt22_feby.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: lc not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpt22_feby.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt22_feby.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt22_feby.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpt22_feby.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: lc not defined\n  Stacktrace:\n  \
    \ [1] is_bored(S::String)\n     @ Main /tmp/tmpt22_feby.jl:13\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     "
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    total_boredoms = 0\n    #add code here    \n    return total_boredoms\n\
    end\nprintln(is_bored(\"Hello world\"))\nprintln(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy6gjjpl0.jl:21

    '
  stdout: "0\n0\ntest set: Test Failed at /tmp/tmpy6gjjpl0.jl:26\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy6gjjpl0.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy6gjjpl0.jl:23\ntest set: Test Failed at /tmp/tmpy6gjjpl0.jl:28\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6gjjpl0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6gjjpl0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    counter = 0\n    for i in split(S, ['.', '?', '!'])\n        if startsWith(i,\
    \ \"I\") counter += 1 end\n    end\n    return counter\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptvsh1jty.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmptvsh1jty.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: startsWith not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmptvsh1jty.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptvsh1jty.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptvsh1jty.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptvsh1jty.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: startsWith not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmptvsh1jty.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptvsh1jty.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptvsh1jty.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptvsh1jty.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: startsWith not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmptvsh1jty.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptvsh1jty.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptvsh1jty.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptvsh1jty.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: startsWith not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmptvsh1jty.jl:15\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return split(S, r\"(?=[.!?])\").filter(x->trim(x)[1] == 'I').length\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpcx3msdy7.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpcx3msdy7.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  type Array has no field filter\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_bored(S::String)\n\
    \     @ Main /tmp/tmpcx3msdy7.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcx3msdy7.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcx3msdy7.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcx3msdy7.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  type Array has no field filter\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_bored(S::String)\n\
    \     @ Main /tmp/tmpcx3msdy7.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcx3msdy7.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcx3msdy7.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcx3msdy7.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  type Array has no field filter\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_bored(S::String)\n\
    \     @ Main /tmp/tmpcx3msdy7.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcx3msdy7.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcx3msdy7.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcx3msdy7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  type Array has no field filter\n  Stacktrace:\n \
    \  [1] getproperty\n     @ ./Base.jl:42 [inlined"
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for sentence in split(S, '!')\n        s = split(sentence,\
    \ '.')\n        s = [s[i] for i in 1:length(s)]\n        for sub_sentence in s\n\
    \            if strip(split(sub_sentence, '?')[1])[1] == 'I'\n               \
    \ boredoms += 1\n            end\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpye8j1357.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpye8j1357.jl:31\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpye8j1357.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpye8j1357.jl:29\ntest set: Error During Test\
    \ at /tmp/tmpye8j1357.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpye8j1357.jl:18\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpye8j1357.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpye8j1357.jl:29\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    4     1      1      6\n"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    P = split(S, \".\" | \"?\" | \"!\")\n    counter = 0\n    for i in P\n\
    \        a = split(i)\n        if a[1] == \"I\"\n            counter += 1\n  \
    \      end\n    end\n    return counter\nend\n    \n    \n    # YOUR CODE HERE\n\
    \    #raise NotImplementedError()\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvhv0kl7g.jl:27\nin expression starting at /tmp/tmpvhv0kl7g.jl:27\n"
  stdout: ''
  timestamp: 1659978033
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(split(S,\". \")[2],\". \"))\nend\n#print(is_bored(\"\
    I am bored.\"))\nprint(is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\"))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpz0ma3vcf.jl:19

    '
  stdout: "1test set: Error During Test at /tmp/tmpz0ma3vcf.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  BoundsError: attempt to access\
    \ 1-element Vector{SubString{String}} at index [2]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpz0ma3vcf.jl:13\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpz0ma3vcf.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpz0ma3vcf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpz0ma3vcf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to access 1-element\
    \ Vector{SubString{String}} at index [2]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpz0ma3vcf.jl:13\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpz0ma3vcf.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpz0ma3vcf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpz0ma3vcf.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 1-element\
    \ Vector{SubString{String}} at index [2]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpz0ma3vcf.jl:13\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpz0ma3vcf.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpz0ma3vcf.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpz0ma3vcf.jl:25\n  Test t"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    is_I(S) ? return 1 : return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1m20rdcc.jl:14\nin expression starting at\
    \ /tmp/tmp1m20rdcc.jl:14\n"
  stdout: ''
  timestamp: 1659978034
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    splitted = split(S, \".?!\")\n    return sum(s[1] == 'I' for s in splitted)\n\
    end\nprintln(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1b91m6ye.jl:19

    '
  stdout: "0\ntest set: Test Failed at /tmp/tmp1b91m6ye.jl:23\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1b91m6ye.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1b91m6ye.jl:21\ntest set: Test Failed at /tmp/tmp1b91m6ye.jl:26\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1b91m6ye.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1b91m6ye.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    j = 0\n    for s in split(S, \".\")\n        s = s.strip(\" \")\n    \
    \    if(s[1] == 'I')\n            j += 1\n        end\n    end\n    return j\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpeq_bji3b.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpeq_bji3b.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  type SubString has no field\
    \ strip\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n  \
    \ [2] is_bored(S::String)\n     @ Main /tmp/tmpeq_bji3b.jl:15\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpeq_bji3b.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeq_bji3b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeq_bji3b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  type SubString has no field strip\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_bored(S::String)\n\
    \     @ Main /tmp/tmpeq_bji3b.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpeq_bji3b.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeq_bji3b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeq_bji3b.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  type SubString has no field strip\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_bored(S::String)\n\
    \     @ Main /tmp/tmpeq_bji3b.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpeq_bji3b.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeq_bji3b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpeq_bji3b.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  type SubString has no field strip\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # START SOLUTION\n    boredoms = 0\n    for line in split(S, r\"[.!?]\"\
    )\n        if startswith(line, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\n    # END SOLUTION\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbpdi0upg.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpbpdi0upg.jl:29\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbpdi0upg.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbpdi0upg.jl:27\ntest set: Test Failed at /tmp/tmpbpdi0upg.jl:32\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpdi0upg.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpdi0upg.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Put your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp40sui04j.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp40sui04j.jl:23\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp40sui04j.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp40sui04j.jl:20\ntest set: Test Failed at /tmp/tmp40sui04j.jl:25\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40sui04j.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40sui04j.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    (result, _) =  is_bored_with_state(S)\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpqdo8h_oq.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpqdo8h_oq.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: is_bored_with_state\
    \ not defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqdo8h_oq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdo8h_oq.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdo8h_oq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqdo8h_oq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: is_bored_with_state not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqdo8h_oq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdo8h_oq.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdo8h_oq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqdo8h_oq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: is_bored_with_state not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqdo8h_oq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqdo8h_oq.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqdo8h_oq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqdo8h_oq.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: is_bored_with_state not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqdo8h_oq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    s = S + ' '\n    num_boredoms = 0\n    i = 1\n    while i <= length(s)\n\
    \        if s[i] == 'I' && (s[i-1] == '.' || s[i-1] == '?' || s[i-1] == '!')\n\
    \            num_boredoms += 1\n        end\n        i += 1\n    end\n    return\
    \ num_boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmplaz_6guz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmplaz_6guz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ +(::String, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n\
    \    +(!Matched::Integer, ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmplaz_6guz.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaz_6guz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaz_6guz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplaz_6guz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching +(::String,\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl:247\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmplaz_6guz.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaz_6guz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaz_6guz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplaz_6guz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: no method matching +(::String,\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl"
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for sen in split(S, ['.', '?', '!'])\n        if occursin(\"\
    I\",sen)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc04f5_b_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpc04f5_b_.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc04f5_b_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc04f5_b_.jl:25\ntest set: Test Failed at /tmp/tmpc04f5_b_.jl:29\n\
    \  Expression: candidate(\"bIt\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc04f5_b_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc04f5_b_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc04f5_b_.jl:30\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc04f5_b_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc04f5_b_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc04f5_b_.jl:31\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc04f5_b_.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc04f5_b_.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # TODO\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp3r3jqn6q.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp3r3jqn6q.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp3r3jqn6q.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3r3jqn6q.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3r3jqn6q.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3r3jqn6q.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp3r3jqn6q.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3r3jqn6q.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3r3jqn6q.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3r3jqn6q.jl:22\n  Test threw exception\n  Expr"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    L = split(S, \".\")\n    for L_i in L\n        L_i = split(L_i,\
    \ \"?\")\n        for L_i_j in L_i\n            L_i_j = split(L_i_j, \"!\")\n\
    \            for L_i_j_k in L_i_j\n                if L_i_j_k[1] == 'I'\n    \
    \                n += 1\n                end\n            end\n        end\n \
    \   end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpppjpbvdn.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpppjpbvdn.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpppjpbvdn.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpppjpbvdn.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpppjpbvdn.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpppjpbvdn.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpppjpbvdn.jl:20\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpppjpbvdn.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpppjpbvdn.jl:32\ntest set:\
    \ Test Failed at /tmp/tmpppjpbvdn.jl:37\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppjpbvdn.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppjpbvdn.jl:32\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    S = split(S, \".!?\")\n    boredoms = 0\n    for sentence in S\n     \
    \   if beginswith(sentence, \"I\")\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is\
    \ the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmplaso_x2z.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmplaso_x2z.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: beginswith not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmplaso_x2z.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaso_x2z.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaso_x2z.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplaso_x2z.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: beginswith not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmplaso_x2z.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaso_x2z.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaso_x2z.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplaso_x2z.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: beginswith not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmplaso_x2z.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaso_x2z.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaso_x2z.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplaso_x2z.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: beginswith not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmplaso_x2z.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  sentences = split(S, \"!.?\")\n  boredoms = filter(t -> t[1] == 'I', sentences)\n\
    \  return length(boredoms)\nend\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ygwdain.jl:17\nin expression starting at /tmp/tmp4ygwdain.jl:17\n"
  stdout: ''
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    c::Int64 = 0\n    s::Array{Any,1} = split(S, [';', '!', '?', '.'])\n \
    \   for i=1:length(s)\n        if split(s[i], ' ')[1] == \"I\"\n            c\
    \ += 1\n        end\n    end\n    return c\nend\n \n \n\"\"\"\n    You'll be given\
    \ a string of words, and your task is to count the number\n    of curses. A curse\
    \ is a sentence that contains a word from the list\n    (\"shit\", \"fuck\", \"\
    damn\").\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_curse(\"Hello world\")\n    0\n    >>> is_curse(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    0\n    >>> is_curse(\"The sky\
    \ is blue. The sun is shining. What the fuck!\")\n    1\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp68js7gir.jl:24\nin expression starting at /tmp/tmp68js7gir.jl:24\n"
  stdout: ''
  timestamp: 1659978035
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    list=split(S,\".\")\n    count=0\n    for k in list\n        list1=split(k,\"\
    !\")\n        for j in list1\n            list2=split(j,\"?\")\n            for\
    \ i in list2\n                if i[1]=='I'\n                    count=count+1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpxsl2a6ru.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpxsl2a6ru.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpxsl2a6ru.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxsl2a6ru.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxsl2a6ru.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxsl2a6ru.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpxsl2a6ru.jl:20\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxsl2a6ru.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxsl2a6ru.jl:32\ntest set:\
    \ Test Failed at /tmp/tmpxsl2a6ru.jl:37\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsl2a6ru.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsl2a6ru.jl:32\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms::Int64 = 0\n    for sentence in split(S, r\"\\.|\\?|\\!\")\n\
    \        if findfirst(r\"^\\s*I\", sentence) != nothing\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zb3zwas.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp0zb3zwas.jl:27\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0zb3zwas.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0zb3zwas.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    i = 0\n    for sentence in split(S, [';', '.', '!', '?'])\n        for\
    \ word in split(sentence)\n            if word == \"I\"\n                i +=\
    \ 1\n            end\n        end\n    end\n    return i\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppketdjc_.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmppketdjc_.jl:33\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppketdjc_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppketdjc_.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    numBoredoms = 0\n    sentences = split(S, r\"[.?!]\")\n    for s in sentences\n\
    \        if startswith(strip(s), \"I\")\n            numBoredoms += 1\n      \
    \  end\n    end\n    return numBoredoms\nend\nis_bored(\"Hello world\")\nis_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgxg4qc1k.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpgxg4qc1k.jl:30\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgxg4qc1k.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgxg4qc1k.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    \n    len = length(S)\n    sentence = 1\n    boredom = 0\n    \n    if\
    \ S[1] == 'I'\n        boredom += 1\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb7djntn1.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb7djntn1.jl:1\n\
    in expression starting at /tmp/tmpb7djntn1.jl:1\n"
  stdout: ''
  timestamp: 1659978036
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for s in split(S, \"!\")\n        for ss in split(s,\
    \ \"?\")\n            for sss in split(ss, \".\")\n                boredoms +=\
    \ (is_bored(sss) + startswith(strip(sss), \"I\"))\n            end\n        end\n\
    \    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpeak31yt4.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpeak31yt4.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ is_bored(::SubString{String})\n  Closest candidates are:\n    is_bored(!Matched::String)\
    \ at /tmp/tmpeak31yt4.jl:12\n  Stacktrace:\n   [1] is_bored(S::String)\n     @\
    \ Main /tmp/tmpeak31yt4.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeak31yt4.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeak31yt4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpeak31yt4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching is_bored(::SubString{String})\n\
    \  Closest candidates are:\n    is_bored(!Matched::String) at /tmp/tmpeak31yt4.jl:12\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpeak31yt4.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeak31yt4.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeak31yt4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpeak31yt4.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: no method matching is_bored(::SubString{String})\n\
    \  Closest candidates are:\n    is_bored(!Matched::String) at /tmp/tmpeak31yt4.jl:12\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpeak31yt4.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeak31yt4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeak31yt4.jl:27\ntest set:\
    \ Er"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    splitS = split(S, ' ')\n    boredoms = 0\n    for i in 1:length(splitS)\n\
    \        if splitS[i] == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz1v1mp02.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpz1v1mp02.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1v1mp02.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1v1mp02.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, \".\")) - length(filter(x -> x[1] != 'I', split(S,\
    \ \".\")))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsfusk8yu.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpsfusk8yu.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsfusk8yu.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsfusk8yu.jl:19\ntest set: Test Failed at /tmp/tmpsfusk8yu.jl:24\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfusk8yu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfusk8yu.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Only consider lines that have 'I'\n    I_lines = split(S, [\".\", \"\
    !\", \"?\"])\n    I_lines = filter(I_lines) do line \n        startswith(line,\
    \ \"I\")\n    end\n    # Return the count\n    return length(I_lines)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp1ltwsz_3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp1ltwsz_3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp1ltwsz_3.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1ltwsz_3.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1ltwsz_3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1ltwsz_3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978039
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S)\n    num = 0\n    for word in words\n        if word\
    \ == \"I\"\n            num += 1\n        end\n    end\n    return num\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9z2qcntu.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp9z2qcntu.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9z2qcntu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9z2qcntu.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # Split the string into sentences, and check each sentence,\n    # and\
    \ see if it starts with \"I\"\n    # S::String = \"The sky is blue. The sun is\
    \ shining. I love this weather\"\n    # S = \"Hello world\"\n    # sentences =\
    \ split(S, \".?!\")\n    # for sentence in sentences\n    #     if startswith(sentence,\
    \ \"I\")\n    #         return 1\n    #     end\n    # end\n    # return 0\n \
    \   count = 0\n    for (index, character) in enumerate(S)\n        if character\
    \ == 'I'\n            if index == 1\n                count += 1\n            elseif\
    \ S[index-1] == ' '\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnq9jdxxn.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpnq9jdxxn.jl:42\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnq9jdxxn.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnq9jdxxn.jl:40\ntest set: Test Failed at /tmp/tmpnq9jdxxn.jl:43\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnq9jdxxn.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnq9jdxxn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpnq9jdxxn.jl:45\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnq9jdxxn.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnq9jdxxn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpnq9jdxxn.jl:46\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnq9jdxxn.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnq9jdxxn.jl:40\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentence = split(S, r\"(?<=[.?!])\\s+(?=[A-Z])\")\n    bored = 0\n   \
    \ for i in sentence\n        if i[1] == 'I'\n            bored = bored + 1\n \
    \       end\n    end\n    return bored\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_d86p5i.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpk_d86p5i.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_d86p5i.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_d86p5i.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978037
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for i in split(S, \".\")\n        if findfirst(r\"I\",\
    \ i) == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt0b3m0xk.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpt0b3m0xk.jl:28\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt0b3m0xk.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt0b3m0xk.jl:25\ntest set: Test Failed at /tmp/tmpt0b3m0xk.jl:30\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0b3m0xk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0b3m0xk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentend = [\".\",\".\",\"!\",\"?\"]\n    ctr = 0\n    for word in split(lowercase(S),'\
    \ ')\n        if word == \"i\"\n            ctr += 1\n        end\n    end\n \
    \   return ctr\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcb5e_482.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpcb5e_482.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb5e_482.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb5e_482.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # S is the input string\n    # Your code here\n    end\n    \n    \n \
    \   \"\"\"\n    You'll be given a string of words, and your task is to count the\
    \ number\n    of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpghzcqynb.jl:18\nin expression starting at /tmp/tmpghzcqynb.jl:18\n"
  stdout: ''
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    start = findfirst(S, \"I\")\n    if(start == nothing)\n        return\
    \ 0\n    else\n        return 1 + is_bored(S[start+2:end])\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzdcx0yuk.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpzdcx0yuk.jl:27\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzdcx0yuk.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzdcx0yuk.jl:24\ntest set: Test Failed at /tmp/tmpzdcx0yuk.jl:29\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdcx0yuk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdcx0yuk.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    bored = 0 \n    words = split(S, r\"[\\.?!\\s]\")\n    for word in words\n\
    \        if word[1] == 'I'\n            bored += 1\n        end\n    end\n   \
    \ return bored\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmps_uaxiiz.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmps_uaxiiz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmps_uaxiiz.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmps_uaxiiz.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmps_uaxiiz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmps_uaxiiz.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmps_uaxiiz.jl:16\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmps_uaxiiz.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmps_uaxiiz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmps_uaxiiz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"I feel good today. I will be productive. will kill It\") == 2\n\
    \  BoundsError: attempt to access empty SubString{String} at index [1]\n  Stacktrace:\n\
    \   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmps_uaxiiz.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ ["
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_of_boredoms = 0\n    for i in 1:count(S, '!')\n        if i == 1\n\
    \            num_of_boredoms += count(S[1:findnext(S, '!')-1], 'I')\n        else\n\
    \            num_of_boredoms += count(S[findnext(S, '!', start=i-1)+1:findnext(S,\
    \ '!', start=i)-1], 'I')\n        end\n    end\n    for i in 1:count(S, '?')\n\
    \        if i == 1\n            num_of_boredoms += count(S[1:findnext(S, '?',\
    \ start=i)-1], 'I')\n        else\n            num_of_boredoms += count(S[findnext(S,\
    \ '?', start=i-1)+1:findnext(S, '?', start=i)-1], 'I')\n        end\n    end\n\
    \    for i in 1:count(S, '.')\n        if i == 1\n            num_of_boredoms\
    \ += count(S[1:findnext(S, '.', start=i)-1], 'I')\n        else\n            num_of_boredoms\
    \ += count(S[findnext(S, '.', start=i-1)+1:findnext(S, '.', start=i)-1], 'I')\n\
    \        end\n    end\n    return num_of_boredoms\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpei0a90ks.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmpei0a90ks.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n\
    \     @ Base ./reduce.jl:1201\n   [4] is_bored(S::String)\n     @ Main /tmp/tmpei0a90ks.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpei0a90ks.jl:42 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpei0a90ks.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei0a90ks.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n\
    \     @ Base ./reduce.jl:1201\n   [4] is_bored(S::String)\n     @ Main /tmp/tmpei0a90ks.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpei0a90ks.jl:43 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpei0a90ks.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei0a90ks.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char, init::Int64)\n\
    \     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char; init::Int64)\n\
    \     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n     @ Base\
    \ ./reduce.jl:1"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(findall(r\"I\", S))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnehlpi2v.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpnehlpi2v.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnehlpi2v.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnehlpi2v.jl:19\ntest set: Test Failed at /tmp/tmpnehlpi2v.jl:22\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnehlpi2v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnehlpi2v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnehlpi2v.jl:23\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnehlpi2v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnehlpi2v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnehlpi2v.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnehlpi2v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnehlpi2v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnehlpi2v.jl:25\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978039
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, r\"\\.|\\?|\\!\"))-1\nend\n \n\"\"\"\n    You'll\
    \ be given a list of integers, and your task is to return their sum.\n    However,\
    \ if you start adding numbers at the beginning of the list, you'll\n    get a\
    \ value bigger than 100. So, you should add the numbers from the end\n    of the\
    \ list, and only proceed towards the beginning if the sum is less\n    than or\
    \ equal to 100. If the sum is greater than 100 at any point, stop\n    adding\
    \ numbers from the list.\n   \n    For example:\n    >>> stop_at_100([99, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10])\n    100\n    >>> stop_at_100([99, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15])\n    99\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmptw0937s8.jl:16\nin expression starting at /tmp/tmptw0937s8.jl:16\n"
  stdout: ''
  timestamp: 1659978038
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # your solution here\n    count = 0\n    s = split(S,r\"[!\\.]\")\n  \
    \  for str in s\n        if str != \"\" && str[1] == 'I'\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpndg72r45.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpndg72r45.jl:29\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpndg72r45.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpndg72r45.jl:27\ntest set: Test Failed at /tmp/tmpndg72r45.jl:32\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpndg72r45.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpndg72r45.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978039
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split_sentence = split(S, ['.', '?', '!'])\n    count = 0\n    for sentence\
    \ in split_sentence\n        sentence = sentence\n        if sentence[1] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpz3xsatdh.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpz3xsatdh.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpz3xsatdh.jl:17\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpz3xsatdh.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpz3xsatdh.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpz3xsatdh.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpz3xsatdh.jl:17\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpz3xsatdh.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpz3xsatdh.jl:27\ntest set:\
    \ Test Failed at /tmp/tmpz3xsatdh.jl:32\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz3xsatdh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz3xsatdh.jl:27\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    S = lcase(S)\n    boredoms = 0\n    sentence = isdefined(findnext(r\"\
    ^\\s*I\", S))\n    if sentence != false\n        boredoms += 1\n    end\n    return\
    \ boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp8kmbklxw.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp8kmbklxw.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: lcase not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp8kmbklxw.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8kmbklxw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8kmbklxw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8kmbklxw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: lcase not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp8kmbklxw.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8kmbklxw.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8kmbklxw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8kmbklxw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: lcase not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmp8kmbklxw.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8kmbklxw.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8kmbklxw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8kmbklxw.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: lcase not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmp8kmbklxw.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro exp"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    (count(x->x=='I', split(S, '.')) + count(x->x=='I', split(S, '?')) + count(x->x=='I',\
    \ split(S, '!'))) -1\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2_fmf29v.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp2_fmf29v.jl:20\n  Expression: candidate(\"\
    Hello world\") == 0\n   Evaluated: -1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2_fmf29v.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2_fmf29v.jl:19\ntest set: Test Failed at /tmp/tmp2_fmf29v.jl:21\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n   Evaluated: -1 == 0\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_fmf29v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_fmf29v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp2_fmf29v.jl:22\n  Expression: candidate(\"I love It !\") ==\
    \ 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_fmf29v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_fmf29v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp2_fmf29v.jl:23\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: -1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_fmf29v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_fmf29v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp2_fmf29v.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: -1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  timestamp: 1659978039
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n_boredoms = 0\n    tokenized = split(S)\n    for (i,w) in enumerate(tokenized)\n\
    \        if w[1] == 'I'\n            n_boredoms += 1\n        end\n    end\n \
    \   return n_boredoms\nend\n \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo4yg5wp9.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpo4yg5wp9.jl:29\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo4yg5wp9.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo4yg5wp9.jl:27\ntest set: Test Failed at /tmp/tmpo4yg5wp9.jl:30\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4yg5wp9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4yg5wp9.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpo4yg5wp9.jl:32\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4yg5wp9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4yg5wp9.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpo4yg5wp9.jl:33\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo4yg5wp9.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo4yg5wp9.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split_S = split(S, \".\")\n    count = 0\n    for s in split_S\n     \
    \   if s[1] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwy6o5z7n.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpwy6o5z7n.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwy6o5z7n.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwy6o5z7n.jl:26\ntest set: Test Failed at /tmp/tmpwy6o5z7n.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwy6o5z7n.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwy6o5z7n.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    i = 0 \n    count = 0 \n    while i < length(S)\n        if (S[i] == 'I')\
    \ && !(i > 1 && S[i-1] == ' ' && S[i-2] == '.')\n            count += 1 \n   \
    \     end \n        i += 1 \n    end \n    return count \nend \nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpe9riewuk.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpe9riewuk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  BoundsError: attempt to access\
    \ 11-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpe9riewuk.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe9riewuk.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe9riewuk.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpe9riewuk.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to access 16-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpe9riewuk.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe9riewuk.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe9riewuk.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpe9riewuk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 11-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpe9riewuk.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # split sentences\n    a = split(S, '.')\n    a = filter(x -> !isempty(x),\
    \ a)\n    # find first word\n    b = [x[1] for x in a]\n    # count\n    return\
    \ sum(y -> y == \"I\", b)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp95mzqcz1.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp95mzqcz1.jl:28\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp95mzqcz1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp95mzqcz1.jl:25\ntest set: Test Failed at /tmp/tmp95mzqcz1.jl:30\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95mzqcz1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95mzqcz1.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    first_words = split(S, \".!?\")\n    filter(s -> startswith(s, \"I\"),\
    \ first_words) |> length\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4eja1mye.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp4eja1mye.jl:22\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4eja1mye.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4eja1mye.jl:20\ntest set: Test Failed at /tmp/tmp4eja1mye.jl:25\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eja1mye.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eja1mye.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, [\".\", \"?\", \"!\"])\n    boredoms = 0\n    for\
    \ sentence in sentences\n        words = split(sentence)\n        if words[1]\
    \ == \"I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp2cawjd2t.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp2cawjd2t.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp2cawjd2t.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2cawjd2t.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2cawjd2t.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp2cawjd2t.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978042
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms::Int64 = 0\n    start_pos::Int64 = 0\n    while start_pos !=\
    \ length(S)\n        end_pos = search(r\"\\.|\\?|\\!\", S, start_pos)\n      \
    \  sentence = S[start_pos:end_pos - 1]\n        boredoms += isbored(sentence)\n\
    \        start_pos = end_pos + 1\n    end\n    return boredoms\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7f2ci8m8.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp7f2ci8m8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp7f2ci8m8.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7f2ci8m8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7f2ci8m8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp7f2ci8m8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmp7f2ci8m8.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7f2ci8m8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7f2ci8m8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp7f2ci8m8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmp7f2ci8m8.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7f2ci8m8.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7f2ci8m8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp7f2ci8m8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmp7f2ci8m8.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, \".!?\")\n    boredoms = count(s -> first(s) == 'I',\
    \ sentences)\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyug3pe0h.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyug3pe0h.jl:23\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyug3pe0h.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyug3pe0h.jl:21\ntest set: Test Failed at /tmp/tmpyug3pe0h.jl:26\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyug3pe0h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyug3pe0h.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    if S[1] == 'I'\n        return 1\n    else\n        return 0\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmyrk8lp2.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpmyrk8lp2.jl:25\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmyrk8lp2.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmyrk8lp2.jl:23\ntest set: Test Failed at /tmp/tmpmyrk8lp2.jl:28\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmyrk8lp2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmyrk8lp2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    counter = 0\n    for s in split(S, r\"[.?!]\")\n        if strip(s)[1]\
    \ == 'I'\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp0gki9o2a.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp0gki9o2a.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmp0gki9o2a.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0gki9o2a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0gki9o2a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0gki9o2a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmp0gki9o2a.jl:15\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0gki9o2a.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0gki9o2a.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, r\"I [A-Za-z]+ [.!?]\"))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprimio3gg.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmprimio3gg.jl:20\n  Expression: candidate(\"\
    Hello world\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprimio3gg.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprimio3gg.jl:19\ntest set: Test Failed at /tmp/tmprimio3gg.jl:21\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprimio3gg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprimio3gg.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprimio3gg.jl:23\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprimio3gg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprimio3gg.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprimio3gg.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprimio3gg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprimio3gg.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprimio3gg.jl:25\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978040
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  tokens = split(S)\n  bored = 0 \n  for i in tokens \n      if i == \"I\"\
    \n        bored = bored + 1\n      end\n  end\n  return bored\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpucyj9u5j.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpucyj9u5j.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucyj9u5j.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucyj9u5j.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = length(S)\n    count = 0\n    for i in 1:n\n        if S[i] == 'I'\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiapb9u2y.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpiapb9u2y.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiapb9u2y.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpiapb9u2y.jl:26\ntest set: Test Failed at /tmp/tmpiapb9u2y.jl:29\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiapb9u2y.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiapb9u2y.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpiapb9u2y.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiapb9u2y.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiapb9u2y.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpiapb9u2y.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiapb9u2y.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiapb9u2y.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpiapb9u2y.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    bored_count = 0\n    n = length(S)\n    i = 1\n    while i <= n\n    \
    \    if S[i] == 'I' && (i == 1 || S[i-1] == ' ')\n            bored_count += 1\n\
    \        end\n        i += 1\n    end\n    return bored_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpilvfszmj.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpilvfszmj.jl:30\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpilvfszmj.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpilvfszmj.jl:28\ntest set: Test Failed at /tmp/tmpilvfszmj.jl:31\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilvfszmj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilvfszmj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpilvfszmj.jl:33\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpilvfszmj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpilvfszmj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpilvfszmj.jl:34\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpilvfszmj.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpilvfszmj.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S,'!')[2:end]) + length(split(S,'.')[2:end]) + length(split(S,'?')[2:end])\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf43p5bi9.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpf43p5bi9.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf43p5bi9.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf43p5bi9.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredom = split(S, [\"!\", \".\", \"?\"])\n    boredoms = 0\n    for statement\
    \ in boredom\n        words = split(statement)\n        if words[1] == \"I\"\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp3y_a1fa6.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp3y_a1fa6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp3y_a1fa6.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3y_a1fa6.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3y_a1fa6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3y_a1fa6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    sentence = split(S, r\"[.!?]\")\n    for i in sentence\n\
    \        if startswith(i, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqgu5qtgq.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpqgu5qtgq.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqgu5qtgq.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqgu5qtgq.jl:26\ntest set: Test Failed at /tmp/tmpqgu5qtgq.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgu5qtgq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgu5qtgq.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # \nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp70i_m_m8.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp70i_m_m8.jl:1\n\
    in expression starting at /tmp/tmp70i_m_m8.jl:1\n"
  stdout: ''
  timestamp: 1659978041
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  sentence_list = split(S, [\".\", \"?\", \"!\"])\n  bored_counter = 0\n \
    \ for sentence in sentence_list\n    if startswith(sentence, \"I\")\n      bored_counter\
    \ += 1\n    end\n  end\n  return bored_counter\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp1wf2z688.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp1wf2z688.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmp1wf2z688.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1wf2z688.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1wf2z688.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1wf2z688.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(matchall(r\"I.*(?=[\\.\\?\\!])\", S))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpqxxs8ygu.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpqxxs8ygu.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: matchall not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqxxs8ygu.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqxxs8ygu.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqxxs8ygu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqxxs8ygu.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: matchall not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqxxs8ygu.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqxxs8ygu.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqxxs8ygu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqxxs8ygu.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: matchall not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpqxxs8ygu.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqxxs8ygu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqxxs8ygu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqxxs8ygu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: matchall not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpqxxs8ygu.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   ["
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    dum=split(S, \".\")\n    c=0\n    for j in dum\n        dum2=split(j,\
    \ \"?\")\n        for i in dum2\n            dum3=split(i, \"!\")\n          \
    \  for i in dum3\n                if i[1]=='I'\n                    c+=1\n   \
    \             end\n            end\n        end\n    end\n    return c\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp62ncj118.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp62ncj118.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmp62ncj118.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp62ncj118.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp62ncj118.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp62ncj118.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmp62ncj118.jl:20\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp62ncj118.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp62ncj118.jl:32\ntest set:\
    \ Test Failed at /tmp/tmp62ncj118.jl:37\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp62ncj118.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp62ncj118.jl:32\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    s = split(S, r\"[!\\?\\.]\")\n    bored = 0\n    for x in s\n        if\
    \ first(x) == 'I'\n            bored += 1\n        end\n    end\n    return bored\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmptdvbi_08.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmptdvbi_08.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  ArgumentError: collection\
    \ must be non-empty\n  Stacktrace:\n   [1] first(itr::SubString{String})\n   \
    \  @ Base ./abstractarray.jl:419\n   [2] is_bored(S::String)\n     @ Main /tmp/tmptdvbi_08.jl:16\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptdvbi_08.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptdvbi_08.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptdvbi_08.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  ArgumentError: collection must be non-empty\n\
    \  Stacktrace:\n   [1] first(itr::SubString{String})\n     @ Base ./abstractarray.jl:419\n\
    \   [2] is_bored(S::String)\n     @ Main /tmp/tmptdvbi_08.jl:16\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptdvbi_08.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptdvbi_08.jl:26\ntest set:\
    \ Test Failed at /tmp/tmptdvbi_08.jl:31\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdvbi_08.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdvbi_08.jl:26\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1      2      6\n"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    char = Char[]\n    push!(char,split(S))\n    for i = 1:length(char)\n\
    \        if char[i] == \"I\"\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpip_v8chn.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpip_v8chn.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: Cannot `convert`\
    \ an object of type Vector{SubString{String}} to an object of type Char\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Number) where T<:AbstractChar\
    \ at ~/.conda/envs/polyglot/share/julia/base/char.jl:184\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:187\n\
    \    convert(::Type{T}, !Matched::AbstractChar) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:186\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Char}, item::Vector{SubString{String}})\n\
    \     @ Base ./array.jl:994\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpip_v8chn.jl:15\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpip_v8chn.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpip_v8chn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpip_v8chn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Vector{SubString{String}} to an object of type Char\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::Number) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:184\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:187\n\
    \    convert(::Type{T}, !Matched::AbstractChar) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:186\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Char}, item::Vector{SubString{String}})\n\
    \     @ Base ./array.jl:994\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpip_v8chn.jl:15\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpip_v8chn"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = 0\n    idxs = findfirst(t -> t == '.' || t == '?' || t == '!', S)\n\
    \    while length(idxs) != 0\n        if S[1:idxs[1]-1] == \"I\"\n           \
    \ n += 1\n        end\n        idxs = findfirst(t -> t == '.' || t == '?' || t\
    \ == '!', S[idxs[1]+1:end])\n    end\n    if S[end-1:end] != \".\" && S[end-1:end]\
    \ != \"?\" && S[end-1:end] != \"!\"\n        if S[1:end] == \"I\"\n          \
    \  n += 1\n        end\n    end\n    return n\nend\n    \n\"\"\"\n    You'll be\
    \ given a string, and you need to return a list of strings, each\n    containing\
    \ the same character. Each character from the string should be\n    repeated as\
    \ many times as its index, where 0 is the index of the first\n    character. You\
    \ can assume that the string contains lowercase letters only.\n   \n    For example:\n\
    \    >>> repeat_char(\"abc\")\n    [\"a\", \"bb\", \"ccc\"]\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp_28_co8s.jl:29\nin expression starting at /tmp/tmp_28_co8s.jl:29\n"
  stdout: ''
  timestamp: 1659978042
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    # split the string at \".\" \"?\" \"!\"\n    sentences = split(S, [\"\
    .\", \"?\", \"!\"])\n    boredoms = 0\n    for sentence in sentences\n       \
    \ # ignore case\n        if lowercase(split(sentence)[1]) == \"i\"\n         \
    \   boredoms += 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpxsth_t3x.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpxsth_t3x.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpxsth_t3x.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxsth_t3x.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxsth_t3x.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxsth_t3x.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for word in split(S,'.')\n        words = split(word,\
    \ ' ')\n        if words[1] == \"I\"\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvohrjjxv.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpvohrjjxv.jl:31\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvohrjjxv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvohrjjxv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    string = split(S, ['.', '?', '!'])\n    counter = 0\n    for i in 1:length(string)\n\
    \        if(issubstring(\"I\", string[i]))\n            counter += 1\n       \
    \ end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpflc9fzdv.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpflc9fzdv.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: issubstring not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpflc9fzdv.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflc9fzdv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflc9fzdv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpflc9fzdv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: issubstring not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpflc9fzdv.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflc9fzdv.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflc9fzdv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpflc9fzdv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: issubstring not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpflc9fzdv.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpflc9fzdv.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpflc9fzdv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpflc9fzdv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: issubstring not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpflc9fzdv.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for word in split(S, r\"[!?.]\")\n        if word[1] ==\
    \ 'I'\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpl05zg_d_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpl05zg_d_.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmpl05zg_d_.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpl05zg_d_.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpl05zg_d_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl05zg_d_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmpl05zg_d_.jl:15\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpl05zg_d_.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpl05zg_d_.jl:25\ntest set:\
    \ Test Failed at /tmp/tmpl05zg_d_.jl:30\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl05zg_d_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl05zg_d_.jl:25\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    for sentence in split(S, \".!?\")\n        for word\
    \ in split(sentence)\n            if word == \"I\"\n                boredoms +=\
    \ 1\n            end\n        end\n    end\n    return boredoms\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppzxds6ir.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmppzxds6ir.jl:33\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppzxds6ir.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppzxds6ir.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sent = split(S, \".!?\")\n    boredoms = 0\n    for s in sent\n      \
    \  if s[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfx1k_1eh.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpfx1k_1eh.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfx1k_1eh.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfx1k_1eh.jl:26\ntest set: Test Failed at /tmp/tmpfx1k_1eh.jl:31\n\
    \  Expression: candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfx1k_1eh.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfx1k_1eh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, [',', '.', '?', '!'])\n    boredoms = 0\n    for\
    \ sentence in sentences\n        words = split(sentence)\n        if words[1]\
    \ == \"I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpbol92jv6.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpbol92jv6.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpbol92jv6.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbol92jv6.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbol92jv6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbol92jv6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpbol92jv6.jl:17\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbol92jv6.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbol92jv6.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, [\".\", \"?\", \"!\"]) \n    n_boredoms = count(sentences,\
    \ sentence -> sentence[1] == 'I')\n    return n_boredoms\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpytukidm6.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpytukidm6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] is_bored(S::String)\n\
    \     @ Main /tmp/tmpytukidm6.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpytukidm6.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpytukidm6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpytukidm6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{S"
  timestamp: 1659978045
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    S = split(S, ['.', '?', '!'])\n    count = 0\n    for i in S\n       \
    \ if startsWith(i, \"I\")\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpqd6xkjjd.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpqd6xkjjd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: startsWith not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqd6xkjjd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqd6xkjjd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqd6xkjjd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqd6xkjjd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: startsWith not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqd6xkjjd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqd6xkjjd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqd6xkjjd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqd6xkjjd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: startsWith not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpqd6xkjjd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqd6xkjjd.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqd6xkjjd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqd6xkjjd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: startsWith not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpqd6xkjjd.jl:16\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    if occursin(\"I\", S)\n        return 1\n    else \n        return 0\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpit70rgip.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpit70rgip.jl:25\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpit70rgip.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpit70rgip.jl:23\ntest set: Test Failed at /tmp/tmpit70rgip.jl:27\n\
    \  Expression: candidate(\"bIt\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpit70rgip.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpit70rgip.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpit70rgip.jl:28\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpit70rgip.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpit70rgip.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpit70rgip.jl:29\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpit70rgip.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpit70rgip.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    2     4      6\n"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    S = split(S,'.!?')\n    for i in S\n        j = split(i)\n\
    \        count += j[1] == \"I\"\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpdjewl3ib.jl:14\nin expression\
    \ starting at /tmp/tmpdjewl3ib.jl:14\n"
  stdout: ''
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    counter = 0\n    for word in split(S, r\"[.?!]\") \n        if word[1]\
    \ == 'I' \n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp1_zdnmyf.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp1_zdnmyf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access empty SubString{String} at index [1]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::SubString{String},\
    \ i::Int64)\n     @ Base ./strings/substring.jl:83\n   [3] is_bored(S::String)\n\
    \     @ Main /tmp/tmp1_zdnmyf.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1_zdnmyf.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1_zdnmyf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1_zdnmyf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access empty SubString{String}\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::SubString{String}, i::Int64)\n     @ Base ./strings/substring.jl:83\n\
    \   [3] is_bored(S::String)\n     @ Main /tmp/tmp1_zdnmyf.jl:15\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1_zdnmyf.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1_zdnmyf.jl:25\ntest set:\
    \ Test Failed at /tmp/tmp1_zdnmyf.jl:30\n  Expression: candidate(\"I feel good\
    \ today. I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1_zdnmyf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1_zdnmyf.jl:25\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    3     1  "
  timestamp: 1659978045
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    answer = 0\n    sentences = split(S, \".\")\n    for s in sentences\n\
    \        if split(s, \" \")[1] == \"I\"\n            answer += 1\n        end\n\
    \    end\n    return answer\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is\
    \ the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpio3d33gm.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpio3d33gm.jl:31\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpio3d33gm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpio3d33gm.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978043
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    for s in split(S, ['.', '?', '!'])\n        if split(s, [' '])[1] == \"\
    I\"\n            return 1\n        end\n    end\n    return 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy7pnwo4l.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpy7pnwo4l.jl:29\n  Expression: candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2\n   Evaluated: 1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7pnwo4l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7pnwo4l.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(split(S, \"I\")) - 1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptiur657.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpptiur657.jl:21\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpptiur657.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpptiur657.jl:19\ntest set: Test Failed at /tmp/tmpptiur657.jl:22\n\
    \  Expression: candidate(\"I love It !\") == 1\n   Evaluated: 2 == 1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptiur657.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptiur657.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpptiur657.jl:23\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptiur657.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptiur657.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpptiur657.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptiur657.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptiur657.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpptiur657.jl:25\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [in"
  timestamp: 1659978044
- exit_code: 1
  program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return length(filter(s -> first(s) == 'I', split(S, r\"[\\.\\?\\!]\",\
    \ keep=false)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t\
    @test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp0evcivv6.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp0evcivv6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ split(::String, ::Regex; keep=false)\n  Closest candidates are:\n    split(::T,\
    \ ::Any; limit, keepempty) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\
    \ got unsupported keyword argument \"keep\"\n    split(::AbstractString; limit,\
    \ keepempty) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:459 got\
    \ unsupported keyword argument \"keep\"\n    split(::T, !Matched::Union{Tuple{Vararg{AbstractChar}},\
    \ Set{<:AbstractChar}, AbstractVector{<:AbstractChar}}; limit, keepempty) where\
    \ T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:421\
    \ got unsupported keyword argument \"keep\"\n    ...\n  Stacktrace:\n   [1] kwerr(::NamedTuple{(:keep,),\
    \ Tuple{Bool}}, ::Function, ::String, ::Regex)\n     @ Base ./error.jl:163\n \
    \  [2] is_bored(S::String)\n     @ Main /tmp/tmp0evcivv6.jl:13\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp0evcivv6.jl:20 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0evcivv6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp0evcivv6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching split(::String,\
    \ ::Regex; keep=false)\n  Closest candidates are:\n    split(::T, ::Any; limit,\
    \ keepempty) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\
    \ got unsupported keyword argument \"keep\"\n    split(::AbstractString; limit,\
    \ keepempty) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:459 got\
    \ unsupported keyword argument \"keep\"\n    split(::T, !Matched::Union{Tuple{Vararg{AbstractChar}},\
    \ Set{<:AbstractChar}, AbstractVector{<:AbstractChar}}; limit, keepempty) where\
    \ T<:AbstractString at ~/.conda/envs/polyglot/share/jul"
  timestamp: 1659978046

name: HumanEval_91_is_bored
language: jl
results:
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n   is_bored = 0\n   last_sep = ' '\n   for c in S\n      if (last_sep in ['.',\
    \ '?', '!']) & (c == 'I')\n         is_bored += 1\n      end\n      last_sep =\
    \ c\n   end\n   return is_bored\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmposg93s86.jl:30\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposg93s86.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposg93s86.jl:27\ntest set: Test\
    \ Failed at /tmp/tmposg93s86.jl:32\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposg93s86.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposg93s86.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmposg93s86.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    i = 1\n    while i <= length(S)\n        while i <=\
    \ length(S) && S[i] != 'I' && S[i] != '.' && S[i] != '?' && S[i] != '!'\n    \
    \        i += 1\n        end\n        if i > length(S)\n            break\n  \
    \      end\n        if S[i] == 'I'\n            if i == 1 || S[i-1] == '.' ||\
    \ S[i-1] == '?' || S[i-1] == '!'\n                boredoms += 1\n            end\n\
    \        end\n        i += 1\n    end\n    return boredoms\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") ==\
    \ 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love\
    \ It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
    \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxg57rbay.jl:37\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg57rbay.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg57rbay.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxg57rbay.jl:40\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg57rbay.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg57rbay.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxg57rbay.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    split = split(S, [\".\", \"?\", \"!\"])\n    boredoms = 0\n    for sentence\
    \ in split\n        if sentence[1] == \"I\"\n            boredoms += 1\n     \
    \   end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvuqb1azq.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: split not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: split not defined\n \
    \ Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: split not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuqb1azq.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuqb1azq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvuqb1azq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: split not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpvuqb1azq.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvuqb1azq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    lines = split(S, ['.', '?', '!'])\n    for i in lines\n\
    \        if starts_with(i, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpigqnvzn6.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  UndefVarError: starts_with not\
    \ defined\n  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  UndefVarError: starts_with not defined\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpigqnvzn6.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpigqnvzn6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpigqnvzn6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"bIt\") == 0\n  UndefVarError: starts_with not defined\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpigqnvzn6.jl:16\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpigqnvzn6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    count = 0\n    for w in split(S, \".\")\n        count += (w[1] == 'I')\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptzp8r61e.jl:25\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzp8r61e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzp8r61e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptzp8r61e.jl:28\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzp8r61e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzp8r61e.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzp8r61e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(map(x->x[1]=='I',split(S,\".?!\")))\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp248aq7ja.jl:22\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp248aq7ja.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp248aq7ja.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp248aq7ja.jl:25\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp248aq7ja.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp248aq7ja.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp248aq7ja.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, \"!\")\n    num_boredoms = 0\n    for s in sentences\n\
    \        num_boredoms += sum(1 for word in split(s, \" \") if word == \"I\")\n\
    \    end\n    return num_boredoms\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpriira4s0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#3\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{SubString{String}})\n\
    \      @ Base ./reduce.jl:331\n    [4] reduce_empty(op::Base.FilteringRF{var\"\
    #2#4\", Base.MappingRF{var\"#1#3\", Base.BottomRF{typeof(Base.add_sum)}}}, #unused#::Type{SubString{String}})\n\
    \      @ Base ./reduce.jl:332\n    [5] reduce_empty_iter\n      @ ./reduce.jl:357\
    \ [inlined]\n    [6] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n  \
    \  [7] foldl_impl\n      @ ./reduce.jl:49 [inlined]\n    [8] mapfoldl_impl\n \
    \     @ ./reduce.jl:44 [inlined]\n    [9] #mapfoldl#244\n      @ ./reduce.jl:162\
    \ [inlined]\n   [10] mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [11] #mapreduce#248\n\
    \      @ ./reduce.jl:289 [inlined]\n   [12] mapreduce\n      @ ./reduce.jl:289\
    \ [inlined]\n   [13] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [14] sum\n\
    \      @ ./reduce.jl:503 [inlined]\n   [15] #sum#252\n      @ ./reduce.jl:532\
    \ [inlined]\n   [16] sum\n      @ ./reduce.jl:532 [inlined]\n   [17] is_bored(S::String)\n\
    \      @ Main /tmp/tmpriira4s0.jl:16\n   [18] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [19] macro expansion\n      @ /tmp/tmpriira4s0.jl:25 [inlined]\n\
    \   [20] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [21] top-level scope\n      @ /tmp/tmpriira4s0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpriira4s0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n  \
    \    @ Base ./reduce.jl:301\n    [2] mapreduce_em"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpriira4s0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    words = split(S, r\" |\\.\" | '?' | '!') \n    cnt = 0 \n    for i in\
    \ words \n        if \"I\" == i[1] \n            cnt += 1 \n        end \n   \
    \ end \n    return cnt \nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgdma82rc.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ |(::Regex, ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgdma82rc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgdma82rc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching |(::Regex,\
    \ ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgdma82rc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgdma82rc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  MethodError: no method matching |(::Regex,\
    \ ::Char)\n  Closest candidates are:\n    |(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] is_bored(S::String)\n     @ Main /tmp/tmpgdma82rc.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgdma82rc.jl:29 [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdma82rc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    sentences = split(S, r\"[!.?]\")\n    boredoms = 0\n    for sentence in\
    \ sentences\n        if occursin(\"I\", sentence)\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"\
    Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"\
    bIt\") == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will\
    \ kill It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpopaixoji.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpopaixoji.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopaixoji.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopaixoji.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpopaixoji.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return count(s -> occursin(\"I \", split(s, \".!?\"))[1], split(S, \"\
    .!?\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnarom8bc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ occursin(::String, ::Vector{SubString{String}})\n  Closest candidates are:\n\
    \    occursin(::Union{AbstractChar, AbstractString}, !Matched::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n    occursin(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(s::SubString{String})\n      @ Main /tmp/tmpnarom8bc.jl:13\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] _count\n \
    \     @ ./reducedim.jl:407 [inlined]\n    [4] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [5] count\n      @ ./reducedim.jl:405 [inlined]\n    [6] is_bored(S::String)\n\
    \      @ Main /tmp/tmpnarom8bc.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpnarom8bc.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpnarom8bc.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpnarom8bc.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\n  MethodError: no method matching occursin(::String,\
    \ ::Vector{SubString{String}})\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(s::SubString{String})\n      @ Main /tmp/tmpnarom8bc.jl:13\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] _count\n \
    \     @ ./reducedim.jl:407 [inlined]\n    [4] #count#735\n      @ ./reducedim.jl:405\
    \ [inlined]\n    [5] count\n      @ ./reducedim.jl:405 [inlined]\n    [6] is_bored(S::String)\n\
    \      @ Main /tmp/tmpnarom8bc.jl:13\n    [7] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnarom8bc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0\n    split_str = split(S, [\".\", \"?\", \"!\"])\n  \
    \  for s in split_str\n        if s[1] == \"I\"\n            num_boredoms += 1\n\
    \        end\n    end\n    return num_boredoms\nend\nprintln(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    num_boredoms = 0\n    for (index, word) in enumerate(S)\n        if word\
    \ == \"I\"\n            num_boredoms += 1\n        end\n    end\n    return num_boredoms\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp872oos8g.jl:28\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp872oos8g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp872oos8g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp872oos8g.jl:30\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp872oos8g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp872oos8g.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp872oos8g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    len_S = length(S)\n    count_bored = 0\n    for i in 1:len_S-1\n     \
    \   if S[i] == 'I' && (S[i+1] == ' ' || S[i+1] == '.' || S[i+1] == '?' || S[i+1]\
    \ == '!')\n            count_bored += 1\n        end\n    end\n    return count_bored\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
    Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4y5uym26.jl:32\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y5uym26.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y5uym26.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4y5uym26.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    bored_num = 0\n    for word in split(S)\n        if word == \"I\"\n  \
    \          bored_num += 1\n        end\n    end\n    return bored_num\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw7xpiz0v.jl:31\n  Expression: candidate(\"\
    You and I are going for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7xpiz0v.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7xpiz0v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7xpiz0v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n  b=0\n  for word in split(S, ['.', '?', '!'])\n    word=split(word)\n   \
    \ if (word[1]==\"I\")\n      b+=1\n    end\n  end\n  return b\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\")\
    \ == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm6f7n0nc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Is the sky blue?\") == 0\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n    \
    \ @ Main /tmp/tmpm6f7n0nc.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm6f7n0nc.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm6f7n0nc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpm6f7n0nc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"I love It !\") == 1\n  BoundsError: attempt to access 0-element\
    \ Vector{SubString{String}} at index [1]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] is_bored(S::String)\n     @ Main /tmp/tmpm6f7n0nc.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm6f7n0nc.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm6f7n0nc.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6f7n0nc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_bored;\n\
    \t@test(candidate(\"Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\"\
    ) == 0)\n\t@test(candidate(\"I love It !\") == 1)\n\t@test(candidate(\"bIt\")\
    \ == 0)\n\t@test(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2)\n\t@test(candidate(\"You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6t8vgbz.jl:22\n  Expression: candidate(\"\
    I love It !\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6t8vgbz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6t8vgbz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpn6t8vgbz.jl:24\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 0 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6t8vgbz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6t8vgbz.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6t8vgbz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    boredoms = 0\n    words = split(S, r\"[.?!]\")\n    for w in words\n \
    \       w = split(w)\n        if length(w) > 0 && w[1] == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\") == 0)\n\t\
    @test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I love It !\"\
    ) == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2)\n\t@test(candidate(\"You and I are\
    \ going for a walk\") == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    return sum(is_bored(s) for s in split(S, r\"\\.|\\!|\\?\"))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7h7m6e6g.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == 0\n  MethodError: no method matching\
    \ is_bored(::SubString{String})\n  Closest candidates are:\n    is_bored(!Matched::String)\
    \ at /tmp/tmp7h7m6e6g.jl:12\n  Stacktrace:\n    [1] (::var\"#1#2\")(s::SubString{String})\n\
    \      @ Main ./none:0\n    [2] MappingRF\n      @ ./reduce.jl:95 [inlined]\n\
    \    [3] _foldl_impl\n      @ ./reduce.jl:58 [inlined]\n    [4] foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, nt::Base._InitialValue, itr::Vector{SubString{String}})\n\
    \      @ Base ./reduce.jl:48\n    [5] mapfoldl_impl(f::typeof(identity), op::typeof(Base.add_sum),\
    \ nt::Base._InitialValue, itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#2\"})\n      @ Base ./reduce.jl:44\n    [6] mapfoldl(f::Function, op::Function,\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"}; init::Base._InitialValue)\n\
    \      @ Base ./reduce.jl:162\n    [7] mapfoldl(f::Function, op::Function, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:162\n    [8] mapreduce(f::Function,\
    \ op::Function, itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"}; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n      @ Base ./reduce.jl:289\n\
    \    [9] mapreduce(f::Function, op::Function, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:289\n   [10] sum(f::Function, a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n\
    \      @ Base ./reduce.jl:503\n   [11] sum(f::Function, a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:503\n   [12] sum(a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n\
    \      @ Base ./reduce.jl:532\n   [13] sum(a::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./reduce.jl:532\n   [14] is_bored(S::String)\n \
    \     @ Main /tmp/tmp7h7m6e6g.jl:13\n   [15"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7h7m6e6g.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    arr = split(S, r\"[.!?]\")\n    i = 0\n    for a in arr\n        if contains(a,\
    \ \"I\") \n            i += 1\n        end\n    end\n    return i\nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello world\"\
    ) == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"I\
    \ love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp58pdic5a.jl:28\n  Expression: candidate(\"\
    Is the sky blue?\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:30\n  Expression: candidate(\"bIt\") == 0\n  \
    \ Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:31\n  Expression: candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2\n   Evaluated: 3 == 2\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp58pdic5a.jl:32\n  Expression: candidate(\"You and I are going\
    \ for a walk\") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58pdic5a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58pdic5a.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     4      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp58pdic5a.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You'll be given a string of words, and your task is to count\
    \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
    \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
    \ \n    n = count(split(S, r\"[!.?]\"), s -> s[1] == 'I')\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"Hello\
    \ world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
    I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I\
    \ feel good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
    You and I are going for a walk\") == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5sdxffkn.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello world\") == 0\\n  MethodError: no\
    \ method matching iterate(::var\"#1#2\")\\n  Closest candidates are:\\n    iterate(!Matched::Union{LinRange,\
    \ StepRangeLen}) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\\\
    n    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\\\
    n    iterate(!Matched::T) where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:695\\n    ...\\n  Stacktrace:\\\
    n   [1] _simple_count(pred::Vector{SubString{String}}, itr::Function, init::Int64)\\\
    n     @ Base ./reduce.jl:1205\\n   [2] count(f::Vector{SubString{String}}, itr::Function;\
    \ init::Int64)\\n     @ Base ./reduce.jl:1201\\n   [3] count(f::Vector{SubString{String}},\
    \ itr::Function)\\n     @ Base ./reduce.jl:1201\\n   [4] is_bored(S::String)\\\
    n     @ Main /tmp/tmp5sdxffkn.jl:13\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp5sdxffkn.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp5sdxffkn.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp5sdxffkn.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Is the sky blue?\") == 0\\n  MethodError: no method matching iterate(::var\"\
    #1#2\")\\n  Closest candidates are:\\n    iterate(!Matched::Union{LinRange, StepRangeLen})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\\n    iterate(!Matched::Union{LinRange,\
    \ StepRangeLen}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:826\\\
    n    iterate(!Matched::T) where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:695\\n    ...\\n  Stacktrace:\\\
    n   [1] _simple_count(pred::Vector{SubString{Stri"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout

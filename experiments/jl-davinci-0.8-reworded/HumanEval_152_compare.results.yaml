language: jl
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if size(game)[1] != size(guess)[1]\n        error(\"Length of Vectors\
    \ must be equal\")\n    end\n    return abs.(guess .- game)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    len = length(game)\n    ans = zeros(len)\n    for i in 1:len\n       \
    \ ans[i] = abs(game[i] - guess[i])\n    end\n    return ans\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n  diff = 0\n  j = 0\n  res = Vector{Int64}(length(game))\n  while j < length(game)\n\
    \        if game[j] == guess[j]\n            diff = 0\n        else\n        \
    \    diff = abs(game[j] - guess[j])\n        end\n        res[j] = diff\n    \
    \    j += 1\n  end\n  return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpc104dpa6.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmpc104dpa6.jl:37\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest\
    \ candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmpc104dpa6.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc104dpa6.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc104dpa6.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpc104dpa6.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError:\
    \ no method matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmpc104dpa6.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc104dpa6.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /t"
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    @assert length(game) == length(guess)\n    return abs.(guess - game)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    m = length(game)\n    d = zeros(m)\n    for i = 1:m\n        d[i] = abs(game[i]\
    \ - guess[i])\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game .- guess)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    matches = game - guess\n    matches = abs.(matches)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        println(\"vector length mismatch\"\
    )\n        return -1\n    end\n    vec_diff::Vector{Int64} = Vector(undef, length(game))\n\
    \    for i in 1:length(game)\n        if game[i] == guess[i]\n            vec_diff[i]\
    \ = 0\n        else\n            vec_diff[i] = abs(game[i] - guess[i])\n     \
    \   end\n    end\n    return vec_diff\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    r = zeros(Int64, length(game))\n    \n    for i in 1:length(game)\n\
    \        if game[i] == guess[i]\n            r[i] = 0\n        else\n        \
    \    r[i] = abs(game[i] - guess[i])\n        end\n    end\n    return r\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    results = copy(game)\n    for index in 1:length(game)\n        results[index]\
    \ = abs(game[index] - guess[index])\n    end\n    return results\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    diff_vector = []\n    \n    for i in 1:length(game)\n        if\
    \ guess[i] == game[i]\n            push!(diff_vector, 0)\n        else\n     \
    \       push!(diff_vector, abs(guess[i] - game[i]))\n        end\n    end\n  \
    \  \n    return diff_vector\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5fj4n5c6.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5fj4n5c6.jl:1\n\
    in expression starting at /tmp/tmp5fj4n5c6.jl:1\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game - guess)\nend\ncompare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    result = Int64[]\n    \n    for i in 1:length(game)\n        if\
    \ game[i] == guess[i]\n            push!(result, 0)\n        else\n          \
    \  push!(result, abs(game[i] - guess[i]))\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    difs = []\n    for i in 1:length(game)\n        push!(difs,abs(game[i]-guess[i]))\n\
    \    end\n    return difs\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    points = zeros(length(game))\n    for i in 1:length(game)\n        points[i]\
    \ = abs(game[i] - guess[i])\n    end\n    return points\nend\ncompare([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2])\ncompare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0,\
    \ -2])\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = zeros(Int64,length(game))\n    for i in 1:length(game)\n      \
    \  diff[i] = abs(game[i] - guess[i])\n    end\n    return diff\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess) .== 0 .* abs.(game .- guess) .+ \n        abs.(game\
    \ .- guess) .* abs.(game .- guess) .!= 0 .* abs.(game .- guess)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6b24egq.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpq6b24egq.jl:26\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, 0, 0] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq6b24egq.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq6b24egq.jl:25\ntest set: Test Failed at /tmp/tmpq6b24egq.jl:28\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [0, 0, 0] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6b24egq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6b24egq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpq6b24egq.jl:29\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [0, 0, 0, 1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6b24egq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6b24egq.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = Vector{Int64}(undef,length(game))\n    for i = 1:length(game)\n\
    \        if guess[i] > game[i]\n            res[i] = guess[i] - game[i]\n    \
    \    elseif guess[i] < game[i]\n            res[i] = game[i] - guess[i]\n    \
    \    else\n            res[i] = 0\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return map(abs, game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    d = zeros(length(game))\n    for i = 1:length(game)\n        d[i] = abs(game[i]\
    \ - guess[i])\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return game.==guess.|>x->ifelse.(x,0,abs.(game.-guess))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp424lbf8k.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp424lbf8k.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  TypeError: non-boolean (Int64) used in boolean context\n  Stacktrace:\n\
    \    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n   \
    \ [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n      @ ./broadcast.jl:899\
    \ [inlined]\n    [5] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [6]\
    \ #1\n      @ /tmp/tmp424lbf8k.jl:18 [inlined]\n    [7] |>\n      @ ./operators.jl:966\
    \ [inlined]\n    [8] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [9] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n   [10] _getindex\n\
    \      @ ./broadcast.jl:667 [inlined]\n   [11] _getindex\n      @ ./broadcast.jl:666\
    \ [inlined]\n   [12] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n\
    \   [13] getindex\n      @ ./broadcast.jl:597 [inlined]\n   [14] macro expansion\n\
    \      @ ./broadcast.jl:961 [inlined]\n   [15] macro expansion\n      @ ./simdloop.jl:77\
    \ [inlined]\n   [16] copyto!(dest::BitVector, bc::Base.Broadcast.Broadcasted{Nothing,\
    \ Tuple{Base.OneTo{Int64}}, typeof(==), Tuple{Vector{Int64}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Nothing, typeof(|>), Tuple{Vector{Int64}, Base.RefValue{var\"#1#2\"{Vector{Int64},\
    \ Vector{Int64}}}}}}})\n      @ Base.Broadcast ./broadcast.jl:960\n   [17] copyto!(dest::BitVector,\
    \ bc::Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(==),\
    \ Tuple{Vector{Int64}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Nothing, typeof(|>), Tuple{Vector{Int64}, Base.RefValue{var\"#1#2\"{Vector{Int64},\
    \ Vector{Int64}}}}}}})\n      @ Base.Broadcast ./broadcast.jl:971\n   [18] copyto!\n\
    \      @ ./broadcast.jl:913 [inlined]\n   [19] copy(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Tuple{Base.OneTo{Int64}}, typeof(==), Tuple{Vector{Int64}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyl"
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(i-j) for (i,j) in zip(game,guess)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(guess .- game) .* (abs.(guess .- game) .!= 0) .+ (abs.(guess\
    \ .- game) .== 0) .* 0\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff_vec = [abs(x-y) for (x,y) in zip(game, guess)]\n    return diff_vec\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    dist = zeros(length(game))\n    for i = 1:length(game)\n        dist[i]\
    \ = abs(game[i] - guess[i])\n    end\n    return dist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    N = length(game)\n    score = zeros(Int64, N)\n    for i in 1:N\n    \
    \    score[i] = abs(game[i] - guess[i])\n    end\n    return score\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return map(x -> abs(x), game-guess)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    r = zeros(length(game))\n    for i in 1:length(game)\n        if game[i]\
    \ == guess[i]\n            r[i] = 0\n        else\n            r[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return r\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diffs = Vector{Int64}(undef, length(game))\n    for i in 1:length(game)\n\
    \        diffs[i] = abs(game[i] - guess[i])\n    end\n    return diffs\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # Error: Arguments do not match\n    \n    # Compute the distance between\
    \ every element of the two vectors\n    # and return it\n    \n    out = zeros(Int64,\
    \ size(game))\n    for i in eachindex(game)\n        out[i] = abs(game[i] - guess[i])\n\
    \    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = abs.(game .- guess)\n    diff .== abs.(diff) .* diff\nend\n \n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdmntonab.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpdmntonab.jl:27\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [1,\
    \ 1, 1, 1, 0, 0] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdmntonab.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdmntonab.jl:26\ntest set: Test Failed at /tmp/tmpdmntonab.jl:28\n\
    \  Expression: candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0]\n   Evaluated: [1, 1, 1, 1, 1, 1] == [0, 0, 0, 0, 0, 0]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmntonab.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmntonab.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdmntonab.jl:29\n  Expression: candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n   Evaluated: [0, 0, 0] == [2, 4, 6]\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmntonab.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmntonab.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdmntonab.jl:30\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [0, 1, 1, 1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmntonab.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmntonab.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |   "
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    out = [ abs(game[i] - guess[i]) for i in 1:length(game) ]\n    return\
    \ out\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    d = []\n    for i = 1:length(game)\n       if game[i] == guess[i]\n  \
    \          push!(d, 0)\n       else\n            push!(d, abs(game[i] - guess[i]))\n\
    \       end\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = Vector{Int64}(undef, 0)\n    for i in 1:length(game)\n        if\
    \ game[i] == guess[i]\n            push!(res, 0)\n        else\n            push!(res,\
    \ abs(game[i] - guess[i]))\n        end\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = game - guess\n    diff[diff .< 0] = -diff[diff .< 0]\n    return\
    \ diff\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    d = game .- guess\n    d = abs.(d)\n    return d\nend\ncompare([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\ncompare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0,\
    \ 0, -2])\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        return abs.(game - guess)\n\
    \    else error(\"Both parameters should be of the same length.\")\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    vectorResult = zeros(length(game))\n    for i in 1:length(game)\n    \
    \    if guess[i] == game[i]\n            vectorResult[i] = 0\n        else\n \
    \           vectorResult[i] = abs(guess[i] - game[i])\n        end\n    end\n\
    \    return vectorResult\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if size(game)[1] != size(guess)[1]\n        error(\"The lengths of the\
    \ vectors of scores and guesses do not match.\")\n    end\n    newvec = zeros(size(game)[1])\n\
    \    for i in range(1, size(game)[1]+1)\n        if game[i] != guess[i]\n    \
    \        newvec[i] = abs(game[i] - guess[i])\n        end\n    end\n    return\
    \ newvec\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjwdwtvzy.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpjwdwtvzy.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  BoundsError: attempt to access 6-element Vector{Int64} at index\
    \ [7]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]\
    \ compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmpjwdwtvzy.jl:23\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjwdwtvzy.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjwdwtvzy.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjwdwtvzy.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  BoundsError:\
    \ attempt to access 6-element Vector{Int64} at index [7]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] compare(game::Vector{Int64},\
    \ guess::Vector{Int64})\n     @ Main /tmp/tmpjwdwtvzy.jl:23\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpjwdwtvzy.jl:35 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjwdwtvzy.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjwdwtvzy.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [4]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmpjwdwtvzy.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjwdwtvzy.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdli"
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    result = Int64[]\n    \n    for i = 1:length(game)\n        if game[i]\
    \ == guess[i]\n            push!(result, 0)\n        else\n            push!(result,\
    \ abs(game[i] - guess[i]))\n        end\n    end\n    \n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(game)\n    res = zeros(Int64, n)\n    for i in 1:n\n      \
    \  if abs(game[i] - guess[i]) == 0\n            res[i] = 0\n        else\n   \
    \         res[i] = abs(game[i] - guess[i])\n        end\n    end\n    return res\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    size = length(game)\n    output = zeros(size)\n    for i = 1:size\n  \
    \      output[i] = abs(game[i] - guess[i])\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return ifelse.(game .== guess, 0, abs.(game - guess))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: -1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    m::Int64 = size(game, 1)\n    vector = Array{Int64}(m)\n    for i in 1:m\n\
    \        vector[i] = abs(game[i] - guess[i])\n    end\n    return vector\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpski7dcoy.jl:30\n  Test threw
    exception\n  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) ==
    [0, 0, 0, 0, 3, 3]\n  MethodError: no method matching (Array{Int64})(::Int64)\n  Closest
    candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,
    Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmpski7dcoy.jl:19\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpski7dcoy.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpski7dcoy.jl:29\ntest set: Error
    During Test at /tmp/tmpski7dcoy.jl:31\n  Test threw exception\n  Expression: candidate([0,
    0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError: no method
    matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/sr'
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    max_idx = length(game)\n    result = fill(0, max_idx)\n    for idx in\
    \ 1:max_idx\n        diff = abs(game[idx] - guess[idx])\n        result[idx] =\
    \ (game[idx] == guess[idx]) ? 0 : diff\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = abs.(game .- guess)\n    return diff\nend;\ncompare([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2])\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    correct_guesses = findall(abs.(game-guess) .== 0)\n    incorrect_guesses\
    \ = findall(abs.(game-guess) .!= 0)\n    res = zeros(Int64, length(game))\n  \
    \  res[correct_guesses] = 0\n    res[incorrect_guesses] = abs.(game[incorrect_guesses]\
    \ - guess[incorrect_guesses])\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpkpkzdodq.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpkpkzdodq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  ArgumentError: indexed assignment with a single value to possibly\
    \ many locations is not supported; perhaps use broadcasting `.=` instead?\n  Stacktrace:\n\
    \   [1] setindex_shape_check(::Int64, ::Int64)\n     @ Base ./indices.jl:261\n\
    \   [2] _unsafe_setindex!(#unused#::IndexLinear, A::Vector{Int64}, x::Int64, I::Vector{Int64})\n\
    \     @ Base ./multidimensional.jl:903\n   [3] _setindex!\n     @ ./multidimensional.jl:894\
    \ [inlined]\n   [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5]\
    \ compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmpkpkzdodq.jl:21\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpkpkzdodq.jl:30 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpkpkzdodq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkpkzdodq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  ArgumentError:\
    \ indexed assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::Vector{Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] compare(game::Vector{Int64},\
    \ guess::Vector{Int64})\n     @ Main /tmp/tmpkpkzdodq.jl:21\n   [6] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [7] macro expansion\n     @ /tmp/tmpkpkzdodq.jl:31 [inlined]\n   [8] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib"
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = Vector{Int64}(undef, length(game))\n    for i in 1:length(game)\n\
    \        if game[i] == guess[i]\n            res[i] = 0\n        else\n      \
    \      res[i] = abs(game[i] - guess[i])\n        end\n    end\n    return res\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        results = zeros(Int64, length(game))\n\
    \        for i in 1:length(game)\n            results[i] = abs(game[i] - guess[i])\n\
    \        end\n        return results\n    else\n        print(\"Invalid input!\"\
    )\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: -1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    r = Vector{Int64}(length(game)) \n    for i in 1:length(game)\n      \
    \  if game[i]==guess[i]\n            r[i]=0\n        else\n            r[i]=abs(game[i]-guess[i])\n\
    \        end\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpecl7v107.jl:33\n  Test threw
    exception\n  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) ==
    [0, 0, 0, 0, 3, 3]\n  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest
    candidates are:\n    Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n    Array{T,
    N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n    Vector{T}(!Matched::Core.Compiler.AbstractRange{T})
    where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n    ...\n  Stacktrace:\n   [1]
    compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmpecl7v107.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpecl7v107.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpecl7v107.jl:32\ntest set: Error
    During Test at /tmp/tmpecl7v107.jl:34\n  Test threw exception\n  Expression: candidate([0,
    0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError: no method
    matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}() where
    T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n    Array{T, N}(!Matched::Core.Compiler.BitArray{N})
    where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n    Vector{T}(!Matched::Core.Compiler.AbstractRange{T})
    where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n    ...\n  Stacktrace:\n   [1]
    compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmpecl7v107.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpecl7v107.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope'
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        output = Int64[]\n        for\
    \ i in 1:length(game)\n            if game[i] == guess[i]\n                push!(output,\
    \ 0)\n            else\n                push!(output, abs(game[i] - guess[i]))\n\
    \            end\n        end\n        return output\n    else\n        return\
    \ nothing\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = []\n    for i in 1:length(game)\n        if game[i] == guess[i]\n\
    \            push!(diff, 0)\n        else\n            push!(diff, abs(game[i]\
    \ - guess[i]))\n        end\n    end\n    return diff\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    v = Vector{Int64}(undef, length(game))\n    for i in eachindex(game)\n\
    \        if game[i] == guess[i]\n            v[i] = 0\n        else\n        \
    \    v[i] = abs(game[i] - guess[i])\n        end\n    end\n    return v\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    sz = length(game)\n    result = zeros(Int64, sz)\n    for i in 1:sz\n\
    \        if game[i] == guess[i]\n            result[i] = 0\n        else\n   \
    \         result[i] = abs(game[i] - guess[i])\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    (game-guess).^2\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsgo2widp.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpsgo2widp.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, 9, 9] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsgo2widp.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsgo2widp.jl:24\ntest set: Test Failed at /tmp/tmpsgo2widp.jl:27\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [4, 16, 36] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsgo2widp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsgo2widp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsgo2widp.jl:28\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [4, 0, 0, 1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsgo2widp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsgo2widp.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979240
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    guess - game\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp58lw_ot2.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp58lw_ot2.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, -3, -3] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\ntest set: Test Failed at /tmp/tmp58lw_ot2.jl:27\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [-2, -4, -6] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp58lw_ot2.jl:28\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [-2, 0, 0, -1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    game_length = length(game)\n    arr = zeros(Int64, game_length)\n    for\
    \ i in 1:game_length\n        if game[i] != guess[i]\n            arr[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    score = []\n    for i in eachindex(game)\n        if game[i] == guess[i]\n\
    \            push!(score, 0)\n        else\n            push!(score, abs(game[i]\
    \ - guess[i]))\n        end\n    end\n    return score\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(game)\n    diff = zeros(n)\n    for i = 1:n\n        diff[i]\
    \ = abs(game[i] - guess[i])\n    end\n    return diff\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        println(\"ERROR: vectors must\
    \ be equal length\")\n        return\n    end\n    out = Vector{Int64}(undef,\
    \ length(game))\n    for i = 1:length(game)\n        if game[i] == guess[i]\n\
    \            out[i] = 0\n        else\n            out[i] = abs(game[i] - guess[i])\n\
    \        end\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    out = zeros(length(game))\n    for i in eachindex(game)\n        out[i]\
    \ = abs(game[i] - guess[i])\n    end\n    return out\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # compare match result with guess\n    result = zeros(Int64, length(game))\n\
    \    for i in 1:length(game)\n        result[i] = abs(game[i] - guess[i])\n  \
    \  end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    difference = abs.(game .- guess)\n    return difference\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    ans = []\n    for i in 1:length(game)\n        x = game[i] - guess[i]\n\
    \        if x < 0\n            x = -x\n        end\n        push!(ans, x)\n  \
    \  end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    for i in eachindex(game)\n        if game[i] == guess[i]\n           \
    \ guess[i] = 0\n        else\n            guess[i] = abs(game[i] - guess[i])\n\
    \        end\n    end\n    return guess\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(guess - game)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = zeros(Int64, length(game))\n    for i = 1:length(game)\n       \
    \ if game[i] == guess[i]\n            res[i] = 0\n        else\n            res[i]\
    \ = abs(game[i] - guess[i])\n        end\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    N = length(game)\n    res = zeros(Int64, N)\n    for i in 1:N\n      \
    \  res[i] = abs(game[i] - guess[i])\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # check all elements of the game vector and compare them with the corresponding\n\
    \    # element of the guess vector using indexing\n    #\n    #   For example,\n\
    \    #       game[1] == guess[1]\n    #\n    #   will check if the first element\
    \ of game is equal to the first element of guess.\n    #\n    #   If the values\
    \ are equal, add 0 to the result vector\n    #\n    #   If the values are not\
    \ equal, add the absolute difference between game[i] and guess[i]\n    #   to\
    \ the result vector\n    #\n    #   e.g.:\n    #\n    #   Let game[1] = 10 and\
    \ guess[1] = 5\n    #   then |game[1] - guess[1]| = |10 - 5| = 5\n    #\n    #\
    \   e.g.:\n    #\n    #   Let game[1] = 10 and guess[1] = 10\n    #   then |game[1]\
    \ - guess[1]| = |10 - 10| = 0\n    #\n    #\n    #   Hint:\n    #   use \"return\"\
    \ to return the result vector\n    #   use push! to add elements to the result\
    \ vector\n    result = []\n    # START YOUR CODE HERE\n    return result\n   \
    \ # END YOUR CODE HERE\nend\n \ntest_compare_results = [(test_compare(compare,\
    \ game, guess), test_compare(compare, game, guess, true))\n                  \
    \     for game, guess in compare_tests]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp79hl44ff.jl:52\nin expression starting at\
    \ /tmp/tmp79hl44ff.jl:52\n"
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    for i in 1:length(game)\n        if game[i] == guess[i]\n            guess[i]\
    \ = 0\n        else\n            guess[i] = abs(game[i] - guess[i])\n        end\n\
    \    end\n    return guess\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return (map(x -> abs(x[1] - x[2]), zip(game, guess)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # vcat(game, guess)\n    for i in 1:length(game)\n        if game[i] >\
    \ guess[i]\n            guess[i] = game[i] - guess[i]\n        elseif game[i]\
    \ < guess[i]\n            guess[i] = guess[i] - game[i]\n        else\n      \
    \      guess[i] = 0\n        end\n    end\n    return guess\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    correct = [abs(game[i] - guess[i]) for i in 1:length(game)]\n    return\
    \ correct\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n   \
    \ [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return abs.(game - guess)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        error(\"Comparing failed, the\
    \ two vectors should be of the same length\")\n    end\n    return abs.(game .-\
    \ guess)\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = zeros(Int64, length(game))\n    for i in 1:length(game)\n      \
    \  res[i] = abs(game[i] - guess[i])\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    @assert length(game) == length(guess) \"given vectors must be of equal\
    \ length\"\n    z = zeros(length(game))\n    for i in 1:length(game)\n       \
    \ if game[i] == guess[i]\n            z[i] = 0\n        else \n            z[i]\
    \ = abs(game[i] - guess[i])\n        end\n    end\n    return z\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(i - j) for (i, j) in zip(game, guess)]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return (abs.(game - guess))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n   \
    \ [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return abs.(game .- guess)\nend\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph70as1va.jl:26\nin expression starting at /tmp/tmph70as1va.jl:26\n"
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    dif = zeros(length(game))\n    for i in 1:length(game)\n        if game[i]\
    \ != guess[i]\n            dif[i] = abs(game[i] - guess[i])\n        end\n   \
    \ end\n    return dif\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    counter = 0\n    vector = zeros(Int64, length(game))\n    for i = 1:length(game)\n\
    \        if game[i] == guess[i]\n            vector[i] = 0\n        else\n   \
    \         vector[i] = abs(game[i] - guess[i])\n        end\n    end\n    return\
    \ vector\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        println(\"game and guess must\
    \ be the same length\")\n        return\n    end\n    comparison = zeros(length(game))\n\
    \    for i = 1:length(game)\n        comparison[i] = abs(game[i] - guess[i])\n\
    \    end\n    return comparison\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        error(\"size must be equal\"\
    )\n    end\n    results = zeros(Int64, length(game))\n    for i in 1:length(game)\n\
    \        results[i] = abs(game[i] - guess[i])\n    end\n    return results\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    game_size = length(game)\n    idx = 0\n    res = zeros(Int64, game_size)\n\
    \    for g in guess\n        if g == game[idx+1]\n            res[idx+1] = 0\n\
    \        else\n            res[idx+1] = abs(g - game[idx+1])\n        end\n  \
    \      idx += 1\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # diff = game - guess\n    # map(abs, diff)\n    abs.(game - guess)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    score = abs.(game - guess)\n    return score\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        println(\"the lengths of game\
    \ and guess need to be the same\")\n        return(0)\n    end\n    output = Vector{Int64}(undef,\
    \ length(game))\n    for i in 1:length(game)\n        if game[i] == guess[i]\n\
    \            output[i] = 0\n        else\n            output[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return(output)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in eachindex(game)]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979239
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    compare = Vector(undef, game)\n    game_len = length(game)\n    for i\
    \ in 1:game_len\n        if game[i] == guess[i]\n            compare[i] = 0\n\
    \        else\n            compare[i] = abs(game[i] - guess[i])\n        end\n\
    \    end\n    return compare\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmplqykg562.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmplqykg562.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  MethodError: no method matching (Vector)(::UndefInitializer, ::Vector{Int64})\n\
    \  Closest candidates are:\n    (Vector)(::UndefInitializer, !Matched::Integer)\
    \ at ~/.conda/envs/polyglot/share/julia/base/baseext.jl:32\n  Stacktrace:\n  \
    \ [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n     @ Main /tmp/tmplqykg562.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplqykg562.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplqykg562.jl:33\ntest set:\
    \ Error During Test at /tmp/tmplqykg562.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError:\
    \ no method matching (Vector)(::UndefInitializer, ::Vector{Int64})\n  Closest\
    \ candidates are:\n    (Vector)(::UndefInitializer, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/baseext.jl:32\n\
    \  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n  \
    \   @ Main /tmp/tmplqykg562.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplqykg562.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplqykg562.jl:33\ntest set:\
    \ Error During Test at /tmp/tmplqykg562.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  MethodError: no method matching\
    \ (Vector)(::UndefInitializer, ::Vector{Int64})\n  Closest candidates are:\n \
    \   (Vector)(::UndefInitializer, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/baseext.jl:32\n\
    \  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::"
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    c = Vector{Int64}(undef, length(game))\n    for i = 1:length(game)\n \
    \       c[i] = abs(game[i] - guess[i])\n    end\n    return c\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    error = map(abs, game .- guess)\n    error .= 0 .+ (error .== 0) .* error\n\
    \    return error\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_i7f7qb9.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_i7f7qb9.jl:27\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, 0, 0] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_i7f7qb9.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_i7f7qb9.jl:26\ntest set: Test Failed at /tmp/tmp_i7f7qb9.jl:29\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [0, 0, 0] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i7f7qb9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i7f7qb9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_i7f7qb9.jl:30\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [0, 0, 0, 0] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i7f7qb9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i7f7qb9.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    scores = []\n    for (t1, t2) in zip(game, guess)\n        append!(scores,\
    \ abs(t1 - t2))\n    end\n    return scores\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    # create an empty vector\n    diff::Vector{Int64} = zeros(length(game))\n\
    \    \n    # compute the absolute difference\n    diff = abs.(game - guess)\n\
    \    \n    # return the absolute difference\n    return diff\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    game = [abs(score - guess[i]) for (i, score) in enumerate(game)]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    # \n    dif = abs.(guess - game)\n    return dif\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        error(\"Vectors length differs\"\
    )\n    end\n    for i in 1:length(game)\n        if game[i] != guess[i]\n    \
    \        guess[i] = abs(game[i] - guess[i])\n        end\n    end\n    return\
    \ guess\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprvhu0xr7.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmprvhu0xr7.jl:33\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [1,\
    \ 2, 3, 4, 3, 3] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprvhu0xr7.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprvhu0xr7.jl:32\ntest set: Test Failed at /tmp/tmprvhu0xr7.jl:36\n\
    \  Expression: candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated:\
    \ [2, 2, 3, 1] == [2, 0, 0, 1]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvhu0xr7.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvhu0xr7.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(guess[i] - game[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    calculates difference between game and guess\n    \"\"\"\n\
    \    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    dist = zeros(length(game))\n    for i in 1:length(game)\n        if game[i]\
    \ == guess[i]\n            dist[i] = 0\n        else\n            dist[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return dist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    absolute(game - guess)\nend\n \n \n \n \n@testset \"compare test\" begin\n\
    \    @test compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3]\n    @test compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]) == [4, 4, 1,\
    \ 0, 0, 6]\nend\n \n \n@testset \"compare type test\" begin\n    @testset \"compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\" begin\n        @test typeof(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])) == Vector{Int64}\n        @test length(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])) == 6\n    end\n    @testset \"compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\" begin\n        @test typeof(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])) == Vector{Int64}\n        @test length(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])) == 6\n    end\nend\n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmpopvd9x0v.jl:24

    in expression starting at /tmp/tmpopvd9x0v.jl:24

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = game .- guess\n    for i in 1:length(diff)\n        if diff[i]\
    \ == 0\n            diff[i] = 0\n        else\n            diff[i] = abs(diff[i])\n\
    \        end\n    end\n    return diff\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    ans = Vector{Int64}(length(game))\n    for i in range(1, length(game))\n\
    \        if game[i] - guess[i] >= 0\n            ans[i] = game[i] - guess[i]\n\
    \        else\n            ans[i] = guess[i] - game[i]\n        end\n    end\n\
    \    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t\
    @test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\
    \t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\
    \t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpx9ejy498.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpx9ejy498.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest\
    \ candidates are:\n    Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmpx9ejy498.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx9ejy498.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx9ejy498.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpx9ejy498.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError:\
    \ no method matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmpx9ejy498.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx9ejy498.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx9ejy498.jl:32\ntest set:"
  timestamp: 1659979244
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        throw(ArgumentError(\"length\
    \ of game and guess must be equal\"))\n    end\n    res = zeros(Int64, length(game))\n\
    \    for i in eachindex(game)\n        if game[i] != guess[i]\n            res[i]\
    \ = abs(game[i] - guess[i])\n        end\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return map(abs, game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return map(x -> abs(x[1] - x[2]), zip(game, guess))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = []\n    for i in 1:length(game)\n        push!(diff, abs(game[i]\
    \ - guess[i]))\n    end\n    return diff\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    for i in 1:length(game)\n        if game[i] == guess[i]\n            guess[i]\
    \ = 0\n        else\n            guess[i] = abs(game[i] - guess[i])\n        end\n\
    \    end\n    return guess\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    comparison = [ifelse(guess[x] == game[x], 0, abs(guess[x] - game[x]))\
    \ for x in 1:length(game)]\n    return comparison\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = game .- guess\n    diff .= (abs.(diff))\n    return diff\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    score = []\n    for (a, b) in zip(game, guess)\n        if a == b\n  \
    \          push!(score, 0)\n        else\n            push!(score, abs(a - b))\n\
    \        end\n    end\n    return score\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    Args:\n        game: A vector of scores\n        guess: A\
    \ vector of guesses\n    Returns:\n        A vector containing the absolute differences\
    \ between scores and guesses\n    \"\"\"\n    return abs.(game - guess)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return (abs.(guess) .- game) .* (abs.(guess) .- game .!= 0)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi4rm2qec.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpi4rm2qec.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, -3, 1] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi4rm2qec.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpi4rm2qec.jl:24\ntest set: Test Failed at /tmp/tmpi4rm2qec.jl:27\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [0, 0, 0] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4rm2qec.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4rm2qec.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpi4rm2qec.jl:28\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [0, 0, 0, -1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4rm2qec.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4rm2qec.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diffs = [abs(g - s) for (g, s) in zip(game, guess)]\n    return diffs\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    if length(game) != length(guess)\n        println(\"The length of\
    \ each array must be equal\")\n        return([0])\n    end\n    \n    res = [0]\n\
    \    for i = 1:length(game)\n        if game[i] == guess[i]\n            res =\
    \ [res; 0]\n        else\n            res = [res; abs(game[i] - guess[i])]\n \
    \       end\n    end\n    return(res[2:end])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n  (game .- guess) .* (game .- guess .> 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    for i in eachindex(game)\n        if game[i] == guess[i]\n           \
    \ guess[i] = 0\n        else\n            guess[i] = abs(game[i] - guess[i])\n\
    \        end\n    end\n    return guess\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [ abs(x-y) for (x,y) in zip(game,guess) ]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(game[i] - guess[i]) for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(guess.-game)\nend\nprintln(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]))\nprintln(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(guess - game)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979238
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n   \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diffs = Vector{Int64}(undef,length(game)) \n    for i in 1:length(game)\n\
    \        diffs[i] = abs(game[i] - guess[i])\n    end\n    return diffs\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = guess .- game\n    for i in 1:length(diff)\n        if diff[i]\
    \ != 0\n            diff[i] = abs(diff[i])\n        end\n    end\n    return diff\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) != length(guess)\n        return error(\"`compare`: Lengths\
    \ of `game` and `guess` must be equal!\")\n    end\n    return abs.(game - guess)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    x = abs.(game-guess)\n    return x\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    res = []\n    for i in 1:length(game)\n        push!(res, abs(game[i]\
    \ - guess[i]))\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    comparison = game .- guess\n    for i in eachindex(comparison)\n     \
    \   if comparison[i] != 0\n            comparison[i] = abs(comparison[i])\n  \
    \      end\n    end\n    return comparison\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0,\
    \ 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3])\
    \ == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = zeros(Int64, length(game))\n    for i in 1:length(game)\n     \
    \   if game[i] > guess[i]\n            diff[i] = game[i] - guess[i]\n        elseif\
    \ game[i] < guess[i]\n            diff[i] = guess[i] - game[i]\n        else\n\
    \            diff[i] = 0\n        end\n    end\n    return diff\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    D = [abs(x-y) for (x,y) in zip(game, guess)]\n    return D\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    output = zeros(Int64,length(game))\n    \n    for i in 1:length(game)\n\
    \        if abs(game[i] - guess[i]) != 0\n            output[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    \n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    @assert length(game) == length(guess) \"Vectors must be of equal length\"\
    \n    difference = abs.(game .- guess)\n    return difference\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        return abs.(guess - game)\n\
    \    else\n        throw(DimensionMismatch(\"vectors must be of equal length\"\
    ))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        r = []\n        for i in 1:length(game)\n\
    \            push!(r, abs(game[i] - guess[i]))\n        end\n        return r\n\
    \    else\n        throw(ArgumentError(\"Lengths don't match\"))\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [game[i] - guess[i] for i in 1:length(game)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(game)\n    result = zeros(Int64, n)\n    for i in 1:n\n   \
    \     if game[i] == guess[i]\n            result[i] = 0\n        else\n      \
    \      result[i] = abs(game[i] - guess[i])\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    len = length(game)\n    res = Vector{Int64}(len)\n    for i in 1:len\n\
    \        dif = game[i] - guess[i]\n        res[i] = abs(dif)\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6d6yorv8.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp6d6yorv8.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0,\
    \ 0, 3, 3]\n  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest\
    \ candidates are:\n    Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmp6d6yorv8.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6d6yorv8.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6d6yorv8.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp6d6yorv8.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n  MethodError:\
    \ no method matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \     @ Main /tmp/tmp6d6yorv8.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6d6yorv8.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6d6yorv8.jl:30\ntest set:"
  timestamp: 1659979245
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(game)\n    result = []\n    for i in 1:n\n        result_number\
    \ = game[i] - guess[i]\n        if result_number < 0\n            result_number\
    \ = -result_number\n        end\n        push!(result, result_number)\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    dif = abs.(game - guess)\n    return dif\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    o = []\n    for i in range(1, length(game))\n        game_score = game[i]\n\
    \        guess_score = guess[i]\n        if game_score == guess_score\n      \
    \      push!(o, 0)\n        else\n            push!(o, abs(game_score - guess_score))\n\
    \        end\n    end\n    return o\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game-guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979237
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [0 if game[i] == guess[i] else abs(game[i] - guess[i]) for i in\
    \ 1:length(game)]\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpoyq8r6_4.jl:18 expected \"\
    end\", got \"for\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoyq8r6_4.jl:18\n\
    in expression starting at /tmp/tmpoyq8r6_4.jl:18\n"
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    compare_results = Vector{Int64}(undef, length(game))\n    for i in eachindex(game)\n\
    \        if game[i] == guess[i]\n            compare_results[i] = 0\n        else\n\
    \            compare_results[i] = abs(game[i] - guess[i])\n        end\n    end\n\
    \    return compare_results\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    if length(game) == length(guess)\n        for i in eachindex(game)\n \
    \           @show i\n            if game[i] == guess[i]\n                guess[i]\
    \ = 0\n            else\n                guess[i] = abs(game[i] - guess[i])\n\
    \            end\n        end\n    else\n        println(\"Vectors must be equal\
    \ length\")\n    end\n    return guess\nend\nusing Test\n\n@testset begin\n\n\
    candidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\
    \ == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0,\
    \ 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2,\
    \ 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'i = 1

    i = 2

    i = 3

    i = 4

    i = 5

    i = 6

    i = 1

    i = 2

    i = 3

    i = 4

    i = 5

    i = 6

    i = 1

    i = 2

    i = 3

    i = 1

    i = 2

    i = 3

    i = 4

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return [abs(x-y) for (x,y) in zip(game,guess)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return abs.(game .- guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    min_vec = Vector{Int64}()\n    guess_len = length(guess)\n    game_len\
    \ = length(game)\n    if guess_len == game_len\n        for i in 1:game_len\n\
    \            if game[i] == guess[i]\n                push!(min_vec, 0)\n     \
    \       else\n                push!(min_vec, abs(game[i] - guess[i]))\n      \
    \      end\n        end\n    end\n    return min_vec\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    result = zeros(length(game))\n    \n    for i in 1:length(game)\n\
    \        result[i] = abs(game[i] - guess[i])\n    end\n    \n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    \n    res = Vector{Int64}(undef, length(game))\n    \n    for (i, j) in\
    \ enumerate(zip(game, guess))\n        if j[1] == j[2]\n            res[i] = 0\n\
    \        else\n            res[i] = abs(j[1] - j[2])\n        end\n    end\n \
    \   \n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    return map(abs, game - guess)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(game)\n    result = zeros(Int64, n)\n    for i in 1:n\n   \
    \     result[i] = abs(game[i] - guess[i])\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    guess - game\nend\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\
    \t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3,\
    \ 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0,\
    \ 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp58lw_ot2.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp58lw_ot2.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n   Evaluated: [0,\
    \ 0, 0, 0, -3, -3] == [0, 0, 0, 0, 3, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\ntest set: Test Failed at /tmp/tmp58lw_ot2.jl:27\n\
    \  Expression: candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n   Evaluated:\
    \ [-2, -4, -6] == [2, 4, 6]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp58lw_ot2.jl:28\n  Expression: candidate([1, 2, 3, 5], [-1,\
    \ 2, 3, 4]) == [2, 0, 0, 1]\n   Evaluated: [-2, 0, 0, -1] == [2, 0, 0, 1]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58lw_ot2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58lw_ot2.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659979240
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    ans = zeros(Int64, length(game))\n    for i in 1:length(game)\n      \
    \  if (game[i] - guess[i]) == 0\n            ans[i] = 0\n        else\n      \
    \      ans[i] = abs(game[i] - guess[i])\n        end\n    end\n    return ans\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = compare;\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    answer = zeros(length(game))\n    for i in 1:length(game)\n        answer[i]\
    \ = abs(game[i] - guess[i])\n    end\n    return answer\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0],\
    \ [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6])\n\t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659979243
- exit_code: 1
  program: "\"\"\"I think we all remember that feeling when the result of some long-awaited\n\
    \    event is finally known. The feelings and thoughts you have at that moment\
    \ are\n    definitely worth noting down and comparing.\n    Your task is to determine\
    \ if a person correctly guessed the results of a number of matches.\n    You are\
    \ given two vectors of scores and guesses of equal length, where each index shows\
    \ a match. \n    Return a vector of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n    the value is 0, and if not,\
    \ the value is the absolute difference between the guess and the score.\n    \n\
    \    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n\
    \    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\
    \    [4, 4, 1, 0, 0, 6]\n    \"\"\"\nfunction compare(game::Vector{Int64}, guess::Vector{Int64})::Vector{Int64}\
    \ \n    diff = Vector{Int64}(length(game))\n    for i in 1:length(game)\n    \
    \    diff[i] = abs(game[i] - guess[i])\n    end\n    return diff\nend\n    \n\
    \    \nprintln(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\nprintln(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = compare;\n\t@test(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3])\n\t@test(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) ==\
    \ [0, 0, 0, 0, 0, 0])\n\t@test(candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6])\n\
    \t@test(candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching Vector{Int64}(::Int64)\n\
    Closest candidates are:\n  Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n\
    \  Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \  Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \  ...\nStacktrace:\n [1] compare(game::Vector{Int64}, guess::Vector{Int64})\n\
    \   @ Main /tmp/tmp43egnfue.jl:18\n [2] top-level scope\n   @ /tmp/tmp43egnfue.jl:26\n\
    in expression starting at /tmp/tmp43egnfue.jl:26\n"
  stdout: ''
  timestamp: 1659979246

language: jl
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  return (n % 10) % 2 != 0 ? (n % 10) * digits(floor(Int64, n / 10)) : digits(floor(Int64,\
    \ n / 10))\n    end\nend\n        \ndigits(4)\ndigits(235)\ndigits(0)\ndigits(456548)\n\
    digits(1)\ndigits(123456789)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpenzojkey.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpenzojkey.jl:30\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenzojkey.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenzojkey.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpenzojkey.jl:31\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenzojkey.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenzojkey.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpenzojkey.jl:32\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenzojkey.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenzojkey.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpenzojkey.jl:33\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenzojkey.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenzojkey.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpenzojkey.jl:34\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenzojkey.jl:34 [in"
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return (n%2 == 1) ? n : 0\n\
    \    else\n        return (n%2 == 1) ? (n%10) * digits(n \xF7 10) : digits(n \xF7\
    \ 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return 0\n    else\n      \
    \  return n % 10 * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgbwzul5d.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpgbwzul5d.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbwzul5d.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbwzul5d.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgbwzul5d.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbwzul5d.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbwzul5d.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgbwzul5d.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbwzul5d.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbwzul5d.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgbwzul5d.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbwzul5d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbwzul5d.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgbwzul5d.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbwzul5d.jl:27 [in"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    t = 0\n    while n > 0\n        r = n % 10\n \
    \       if r % 2 != 0\n            t *= 10\n            t += r\n        end\n\
    \        n = div(n, 10)\n    end\n    return t\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuvw0tfkw.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpuvw0tfkw.jl:31\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 15 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvw0tfkw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvw0tfkw.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpuvw0tfkw.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 579 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvw0tfkw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvw0tfkw.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpuvw0tfkw.jl:33\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 35755 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvw0tfkw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvw0tfkw.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    for i = 0:10\n        last_digit\
    \ = rem(n,10)\n        if last_digit % 2 == 1\n            prod *= last_digit\n\
    \        end\n        n = floor(n/10)\n    end\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr19wttao.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpr19wttao.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr19wttao.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr19wttao.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    for digit in digits(n)\n      \
    \  if !isodd(digit)\n            return 0\n        end\n        total *= digit\n\
    \    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    product = 1\n    while n > 0\n        if mod(n,2)\
    \ == 1\n            product *= div(n,10)\n        end\n        n = div(n,10)\n\
    \    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsxzm8o9l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpsxzm8o9l.jl:26\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzm8o9l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzm8o9l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsxzm8o9l.jl:27\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzm8o9l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzm8o9l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsxzm8o9l.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzm8o9l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzm8o9l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsxzm8o9l.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzm8o9l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzm8o9l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsxzm8o9l.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzm8o9l.jl:30 [in"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    product = 1 \n    for x in split(string(n), \"\
    \")\n        y = parse(Int64, x)\n        if y % 2 != 0\n            product *=\
    \ y\n        end\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuxcmag8v.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpuxcmag8v.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxcmag8v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxcmag8v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    s = 0\n    if n < 10\n        return s = 1\n \
    \   end\n    i = 1\n    while n > 0\n        if n % 2 == 1\n            s *= i\n\
    \        end\n        n = floor(n/10)\n        i *= 10\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpabpamv5e.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpabpamv5e.jl:31\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabpamv5e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabpamv5e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpabpamv5e.jl:32\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabpamv5e.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabpamv5e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpabpamv5e.jl:33\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabpamv5e.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabpamv5e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpabpamv5e.jl:34\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabpamv5e.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabpamv5e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpabpamv5e.jl:35\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabpamv5e.jl:35 [in"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    while n != 0\n        sum *= n %\
    \ 10\n        n   = trunc(Int64, n / 10)\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd59w5090.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpd59w5090.jl:25\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd59w5090.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd59w5090.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd59w5090.jl:26\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd59w5090.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd59w5090.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd59w5090.jl:27\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd59w5090.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd59w5090.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd59w5090.jl:28\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd59w5090.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd59w5090.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd59w5090.jl:29\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digits = []\n    while n > 0\n        temp = n\
    \ % 10\n        push!(digits, temp)\n        n = div(n, 10)\n    end\n    product\
    \ = 1\n    for digit in digits\n        if digit % 2 != 0\n            product\
    \ *= digit\n        end\n    end\n    return product\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptjo62x9m.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmptjo62x9m.jl:37\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptjo62x9m.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptjo62x9m.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    while n > 0\n        digit = n %\
    \ 10\n        if digit % 2 != 0\n            sum *= digit\n        end\n     \
    \   n = div(n, 10)\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0og0848c.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp0og0848c.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0og0848c.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0og0848c.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    while n > 0\n        m = mod(n, 10)\n        if\
    \ m % 2 != 0\n            k *= m\n        end\n        n = div(n, 10)\n    end\n\
    \    return k\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6a_s3ai_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp6a_s3ai_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: k not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp6a_s3ai_.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6a_s3ai_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6a_s3ai_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6a_s3ai_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: k not defined\n  Stacktrace:\n   [1] digits(n::Int64)\n\
    \     @ Main /tmp/tmp6a_s3ai_.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6a_s3ai_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6a_s3ai_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6a_s3ai_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: k not defined\n  Stacktrace:\n   [1] digits(n::Int64)\n\
    \     @ Main /tmp/tmp6a_s3ai_.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6a_s3ai_.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6a_s3ai_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6a_s3ai_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: k not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp6a_s3ai_.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6a_s3ai_.j"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total=1\n    for d in string(n)\n        if parse(Int64,d)%2==1\n\
    \            total*=parse(Int64,d)\n        end\n    end\n    return total\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpesqbhf5q.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpesqbhf5q.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpesqbhf5q.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpesqbhf5q.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    ans = 1\n    for i in 1:12\n        if mod(n,\
    \ 10) != 0 && mod(n, 10) != 2 && mod(n, 10) != 4 && mod(n, 10) != 6 && mod(n,\
    \ 10) != 8\n            ans *= mod(n, 10)\n        end\n        n = floor(n/10)\n\
    \    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_0dxehc4.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_0dxehc4.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_0dxehc4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_0dxehc4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digit = 0\n    product = 1\n    while n > 0\n\
    \        digit = n % 10\n        if digit % 2 != 0\n            product *= digit\n\
    \        end\n        n = div(n, 10)\n    end\n    return product\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvz3xgiat.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpvz3xgiat.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvz3xgiat.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvz3xgiat.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n > 0 || throw(DomainError())\n    prod = 1\n\
    \    n < 10 || begin\n        prod *= n % 10\n        prod *= digits(n \xF7 10)\n\
    \    end\n    prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7l_6kcys.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp7l_6kcys.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7l_6kcys.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7l_6kcys.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7l_6kcys.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7l_6kcys.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7l_6kcys.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7l_6kcys.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7l_6kcys.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7l_6kcys.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7l_6kcys.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7l_6kcys.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7l_6kcys.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7l_6kcys.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 1680 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7l_6kcys.jl:29 "
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    while n != 0\n        if (n % 10)\
    \ % 2 != 0\n            sum *= (n % 10)\n        end\n        n = div(n, 10)\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa60rpru6.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpa60rpru6.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa60rpru6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa60rpru6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0 \n        return 0\n    elseif rem(n,\
    \ 2) == 0\n        return digits(div(n, 10))\n    else\n        return rem(n,\
    \ 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8jvqqxtb.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp8jvqqxtb.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jvqqxtb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jvqqxtb.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8jvqqxtb.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jvqqxtb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jvqqxtb.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8jvqqxtb.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jvqqxtb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jvqqxtb.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8jvqqxtb.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jvqqxtb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jvqqxtb.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8jvqqxtb.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jvqqxtb.jl:29 [in"
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif n%2 ==\
    \ 0\n        return digits(n \xF7 10)\n    else\n        return n%10 * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcr09b_x9.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpcr09b_x9.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcr09b_x9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcr09b_x9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcr09b_x9.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcr09b_x9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcr09b_x9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcr09b_x9.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcr09b_x9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcr09b_x9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcr09b_x9.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcr09b_x9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcr09b_x9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcr09b_x9.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcr09b_x9.jl:29 [in"
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n % 10\n    if n % 2 == 0\n        return\
    \ 0\n    else\n        return n * digits(Int64(n))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    a = 1\n    while (n != 0)\n        if (n % 2 !=\
    \ 0)\n            a *= n % 10\n        end\n        n = floor(Int64, n / 10)\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp249f858f.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp249f858f.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp249f858f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp249f858f.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # your code here\n    r = 1 \n    while n > 0\
    \ \n        v = n % 10 \n        if (v % 2) != 0 \n            r = r * v \n  \
    \      end \n        n = div(n, 10) \n    end \n    return r \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoc8ssktg.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpoc8ssktg.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoc8ssktg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoc8ssktg.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008670
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = [collect(i) for i in digits(n) if\
    \ rem(i,2) == 1]\n    if length(odd_digits) == 0\n        return 0\n    else\n\
    \        return prod(odd_digits)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    a = 1\n    while n != 0\n        m = n % 10\n\
    \        if m % 2 != 0\n            a *= m\n        end\n        n = div(n, 10)\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfv7qrhp0.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpfv7qrhp0.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfv7qrhp0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfv7qrhp0.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008670
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n==0\n        return 0\n    elseif rem(n,2)==0\n\
    \        return digits(n \xF7 10)\n    else\n        return rem(n,10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp34lf_3uq.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp34lf_3uq.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34lf_3uq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34lf_3uq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp34lf_3uq.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34lf_3uq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34lf_3uq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp34lf_3uq.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34lf_3uq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34lf_3uq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp34lf_3uq.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34lf_3uq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34lf_3uq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp34lf_3uq.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34lf_3uq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    while n > 0\n        if n % 2 == 1\n         \
    \   return n % 10\n        end\n        n = n / 10\n    end\n    return 0\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt2m21nqu.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpt2m21nqu.jl:26\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2m21nqu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2m21nqu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt2m21nqu.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2m21nqu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2m21nqu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt2m21nqu.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2m21nqu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2m21nqu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt2m21nqu.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2m21nqu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2m21nqu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt2m21nqu.jl:30\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2m21nqu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    while n != 0\n        if n % 2\
    \ != 0\n            result *= n % 10\n        end\n        n = div(n, 10)\n  \
    \  end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvb0_ag85.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpvb0_ag85.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvb0_ag85.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvb0_ag85.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_str = string(n)\n    product = 1\n    for i\
    \ = 1:length(n_str)\n        num = parse(Int64, n_str[i])\n        if (num % 2\
    \ != 0)\n            product *= num\n        end\n    end\n    if (product ==\
    \ 1)\n        return 0\n    else\n        return product\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw_6gixnf.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpw_6gixnf.jl:33\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_6gixnf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_6gixnf.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = 1\n    for digit in string(n)\n \
    \       digit = parse(Int64, digit)\n        if mod(digit, 2) == 1\n         \
    \   odd_digits *= digit\n        end\n    end\n    odd_digits\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp416h7a7w.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp416h7a7w.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp416h7a7w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp416h7a7w.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        last_digit\
    \ = n % 10\n        if last_digit % 2 != 0\n            total *= last_digit\n\
    \        end\n        n = n/10\n    end\n    return total\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2cnoo_a6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp2cnoo_a6.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cnoo_a6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cnoo_a6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp2cnoo_a6.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cnoo_a6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cnoo_a6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp2cnoo_a6.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cnoo_a6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cnoo_a6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp2cnoo_a6.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cnoo_a6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cnoo_a6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp2cnoo_a6.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cnoo_a6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = []\n    for digit in n\n        if\
    \ digit % 2 != 0\n            push!(odd_digits, digit)\n        end\n    end\n\
    \    product(odd_digits)\nend\n \n@assert digits(1) == 1\n@assert digits(4) ==\
    \ 0\n@assert digits(235) == 15\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: product not defined\nStacktrace:\n [1]\
    \ digits(n::Int64)\n   @ Main /tmp/tmpvuanas46.jl:18\n [2] top-level scope\n \
    \  @ /tmp/tmpvuanas46.jl:21\nin expression starting at /tmp/tmpvuanas46.jl:21\n"
  stdout: ''
  timestamp: 1660008670
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0 \n        return 0\n    elseif n % 2\
    \ == 0\n        return digits(n / 10)\n    else\n        return (n % 10) * digits(n\
    \ / 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpjxheqenx.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpjxheqenx.jl:25\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjxheqenx.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjxheqenx.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjxheqenx.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjxheqenx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpjxheqenx.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjxheqenx.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpjxheqenx.jl:0\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpjxheqenx.jl:26 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjxheqenx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpjxheqenx.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjxheqenx.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjxheqenx.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjxheqenx.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjxheqenx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpjxheqenx.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5014) "
  timestamp: 1660008672
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  m = n % 10\n        if m % 2 == 0\n            return digits(n//10)\n     \
    \   else\n            return m * digits(n//10)\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpn9ybq7nz.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpn9ybq7nz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpn9ybq7nz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpn9ybq7nz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9ybq7nz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9ybq7nz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn9ybq7nz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpn9ybq7nz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpn9ybq7nz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9ybq7nz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9ybq7nz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn9ybq7nz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpn9ybq7nz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpn9ybq7nz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn9ybq7nz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn9ybq7nz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpn9ybq7nz.jl:32\n  Test threw exception\n"
  timestamp: 1660008672
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return ((n % 10) % 2 == 1 ? (n % 10) : 1) * digits(n \xF7 10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8zqtfjk7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8zqtfjk7.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zqtfjk7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zqtfjk7.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        error(\"n should be positive\"\
    )\n    end\n    result = 1\n    while n > 0\n        digit = n % 10\n        if\
    \ digit % 2 == 1\n            result *= digit\n        end\n        n = div(n,\
    \ 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsifw3ga4.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpsifw3ga4.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsifw3ga4.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsifw3ga4.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    r = n % 10\n    r % 2\
    \ == 0 && (r = 0)\n    return r * digits(n \xF7 10)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj5ydzc9l.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpj5ydzc9l.jl:22\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5ydzc9l.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5ydzc9l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj5ydzc9l.jl:23\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5ydzc9l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5ydzc9l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj5ydzc9l.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5ydzc9l.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5ydzc9l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj5ydzc9l.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5ydzc9l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5ydzc9l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj5ydzc9l.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5ydzc9l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n::Int64 < 0 && return 0\n    n::Int64 == 0 &&\
    \ return 0\n    digits(n::Int64) = (n::Int64 % 10)::Int64 % 2 != 0 ? digits(n::Int64\
    \ // 10)::Int64 * (n::Int64 % 10)::Int64 : digits(n::Int64 // 10)::Int64 \nend\n\
    digits(1234)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type var\"\
    #digits#1\" to an object of type Int64\nClosest candidates are:\n  convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \  convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \  ...\nStacktrace:\n [1] digits(n::Int64)\n   @ Main /tmp/tmptzoplf06.jl:14\n\
    \ [2] top-level scope\n   @ /tmp/tmptzoplf06.jl:16\nin expression starting at\
    \ /tmp/tmptzoplf06.jl:16\n"
  stdout: ''
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total=1\n    for i=1:length(string(n))\n     \
    \   s=string(n)[i]\n        if (s==\"0\"||s==\"2\"||s==\"4\"||s==\"6\"||s==\"\
    8\")\n            continue\n        else\n            total*=parse(Int64,s)\n\
    \        end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_lce9prn.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp_lce9prn.jl:29\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_lce9prn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_lce9prn.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_lce9prn.jl:30\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_lce9prn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_lce9prn.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_lce9prn.jl:31\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_lce9prn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_lce9prn.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_lce9prn.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_lce9prn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_lce9prn.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_lce9prn.jl:33\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_lce9prn.jl:33 [inlined]\n [3]\
    \ macro expans"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n==0\n        return 0\n    elseif (n%2!=0)\n\
    \        return n%10*digits(floor(Int64,n/10))\n    else\n        return digits(floor(Int64,n/10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk4isi0if.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpk4isi0if.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4isi0if.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4isi0if.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpk4isi0if.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4isi0if.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4isi0if.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpk4isi0if.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4isi0if.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4isi0if.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpk4isi0if.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4isi0if.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4isi0if.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpk4isi0if.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4isi0if.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n / 10\n    is_all_even = true\n    for digit\
    \ in digits(n)\n        if digit % 2 != 0\n            is_all_even = false\n \
    \       end\n    end\n    if is_all_even\n        return 0\n    else\n       \
    \ return n\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyskafvpc.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpyskafvpc.jl:30\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyskafvpc.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpyskafvpc.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyskafvpc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyskafvpc.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyskafvpc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyskafvpc.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpyskafvpc.jl:14\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpyskafvpc.jl:31 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyskafvpc.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyskafvpc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyskafvpc.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpyskafvpc.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyskafvpc.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyskafvpc.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyskafvpc.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(501"
  timestamp: 1660008673
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    out = 1\n    for i in collect(digits(n))\n   \
    \     if i % 2 != 0\n            out *= i\n        end\n    end\n    return out\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  d = n % 10\n        n = n // 10\n        if d % 2 == 0\n            return\
    \ digits(n)\n        else\n            return d * digits(n)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_piztnet.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp_piztnet.jl:29\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_piztnet.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_piztnet.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_piztnet.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_piztnet.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_piztnet.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_piztnet.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_piztnet.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_piztnet.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_piztnet.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_piztnet.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_piztnet.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_piztnet.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_piztnet.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_piztnet.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_piztnet.jl:32\n  Test threw exception\n  Expr"
  timestamp: 1660008672
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    r = 0\n    s = 1\n    while n > 0\n        n,\
    \ d = divrem(n, 10)\n        s *= d * isodd(d)\n        s *= 1 - iseven(d)\n \
    \   end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp96h4yvab.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp96h4yvab.jl:27\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96h4yvab.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96h4yvab.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp96h4yvab.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96h4yvab.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96h4yvab.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp96h4yvab.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96h4yvab.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96h4yvab.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp96h4yvab.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96h4yvab.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96h4yvab.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp96h4yvab.jl:31\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96h4yvab.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660008673
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # base case\n    if n<10\n        if n%2 == 1\n\
    \            return n\n        else\n            return 0\n        end\n    else\n\
    \        n, d = divrem(n, 10)\n        if d%2 == 1\n            return d*digits(n)\n\
    \        else\n            return digits(n)\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd = 1\n    while n>0\n        if mod(n,2) !=\
    \ 0\n            odd *= div(n,10)\n        end\n        n = div(n,10)\n    end\n\
    \    return odd\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr5h4w4k0.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpr5h4w4k0.jl:26\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5h4w4k0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5h4w4k0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr5h4w4k0.jl:27\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5h4w4k0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5h4w4k0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr5h4w4k0.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5h4w4k0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5h4w4k0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr5h4w4k0.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5h4w4k0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5h4w4k0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr5h4w4k0.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5h4w4k0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0gy104w1.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp0gy104w1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp0gy104w1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0gy104w1.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0gy104w1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp0gy104w1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp0gy104w1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0gy104w1.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0gy104w1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp0gy104w1.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  Meth"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  digit = n % 10\n        rest = n \xF7 10\n        return digits(rest) + ifelse(digit\
    \ % 2 == 0, 0, digit)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp88z91z8g.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp88z91z8g.jl:28\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88z91z8g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88z91z8g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp88z91z8g.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 21 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88z91z8g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88z91z8g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp88z91z8g.jl:30\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 25 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88z91z8g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88z91z8g.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = abs(n)\n    p = 1\n    while n > 0\n     \
    \   r = mod(n, 10)\n        if r % 2 != 0\n            p *= r\n        end\n \
    \       n = div(n, 10)\n    end\n    return p\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7a2hqyxk.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp7a2hqyxk.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7a2hqyxk.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7a2hqyxk.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008673
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    a = collect(digits(n))\n    r = 1\n    for i in\
    \ a\n        if mod(i,2) == 1\n            r = r*i\n        end\n    end\n   \
    \ r\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    ds = fill(0, 16)\n    nnz = 0\n    z = n\n   \
    \ while z > 0\n        ds[nnz+1] = mod(z, 10)\n        z = div(z, 10)\n      \
    \  nnz += 1\n    end\n    p = 1\n    for i in 1:nnz\n        if mod(ds[i], 2)\
    \ != 0\n            p *= ds[i]\n        end\n    end\n    return p\nend\ndigits(235)\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa2zmj_kk.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpa2zmj_kk.jl:40\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2zmj_kk.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2zmj_kk.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # Initialize var to keep track of product of odd\
    \ digits\n    product = 1\n    # If n is zero, return the product\n    if n ==\
    \ 0\n        return product\n    end\n    # While n is greater than zero\n   \
    \ while n > 0\n        # If the remainder of n when divided by 10 is even\n  \
    \      if mod(n, 10) % 2 == 0\n            # Divide n by 10 and move on to the\
    \ next digit\n            n = div(n, 10)\n        else\n            # Else multiply\
    \ the product by the remainder\n            product *= mod(n, 10)\n          \
    \  # Divide n by 10 and move on to the next digit\n            n = div(n, 10)\n\
    \        end\n    end\n    # Return the product\n    return product\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpogeg8zi4.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpogeg8zi4.jl:45\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogeg8zi4.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogeg8zi4.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    # If n = 0 or n = 1 or n = 2, return 0.\n\
    \    if n == 0\n        return 0\n    end\n    if n == 1\n        return 1\n \
    \   end\n    if n == 2\n        return 0\n    end\n    \n    # If n is even, break\
    \ down n into n/2.\n    if n % 2 == 0\n        n = n/2\n    end\n    \n    # If\
    \ n is odd, break down n into (n - 1)/2\n    if n % 2 == 1\n        n = (n - 1)/2\n\
    \    end\n    \n    # Return n\n    return n\n    \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgldq6rn6.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmpgldq6rn6.jl:43\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgldq6rn6.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgldq6rn6.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpgldq6rn6.jl:44\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 13 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgldq6rn6.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgldq6rn6.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpgldq6rn6.jl:45\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 60 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgldq6rn6.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgldq6rn6.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpgldq6rn6.jl:46\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1253 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgldq6rn6.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgldq6rn6.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpgldq6rn6.jl:47\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 49382 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgldq6rn6.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/."
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 \n        if n % 2 == 0 \n         \
    \   return 0\n        else \n            return n\n        end\n    else \n  \
    \      num = n % 10\n        if num % 2 == 0 \n            return digits(n//10)\n\
    \        else \n            return digits(n//10) * num\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpfimjn49n.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpfimjn49n.jl:33\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpfimjn49n.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpfimjn49n.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfimjn49n.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfimjn49n.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfimjn49n.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpfimjn49n.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpfimjn49n.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfimjn49n.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfimjn49n.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfimjn49n.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpfimjn49n.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpfimjn49n.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfimjn49n.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfimjn49n.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfimjn49n.jl:36\n  Test threw exception\n"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  x = n % 10\n        if x % 2 == 0\n            return digits(div(n, 10))\n\
    \        else\n            return x * digits(div(n, 10))\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9suskach.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp9suskach.jl:28\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9suskach.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9suskach.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9suskach.jl:29\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9suskach.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9suskach.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9suskach.jl:30\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9suskach.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9suskach.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9suskach.jl:31\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9suskach.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9suskach.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9suskach.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9suskach.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return 0\n    end\n    total\
    \ = 1\n    while n > 0\n        d = mod(n, 10)\n        if isodd(d)\n        \
    \    total *= d\n        end\n        n = div(n, 10)\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgi60mrzg.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpgi60mrzg.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi60mrzg.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi60mrzg.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    zeros(n::Int64)::Int64 =  ifelse(n == 0,\
    \ 1, 10)\n    num_digits(n::Int64)::Int64 = int(log10(n)) + 1\n    get_digit(n::Int64,\
    \ i::Int64)::Int64 = (n / zeros(i - 1)) % 10\n    if num_digits(n) == 1\n    \
    \    return get_digit(n, 1)\n    else\n        return ifelse(isodd(get_digit(n,\
    \ num_digits(n))),\n            get_digit(n, num_digits(n)) * digits(div(n, zeros(num_digits(n)))),\n\
    \            digits(div(n, zeros(num_digits(n)))))\n    end\nend\ndigits(235)\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: int not defined\nStacktrace:\n [1] (::var\"\
    #num_digits#2\")(n::Int64)\n   @ Main /tmp/tmpwgn1qffe.jl:14\n [2] digits(n::Int64)\n\
    \   @ Main /tmp/tmpwgn1qffe.jl:16\n [3] top-level scope\n   @ /tmp/tmpwgn1qffe.jl:24\n\
    in expression starting at /tmp/tmpwgn1qffe.jl:24\n"
  stdout: ''
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    for i in 1:length(string(n))\n  \
    \      if parse(Int64, string(n)[i]) % 2 != 0\n            sum *= parse(Int64,\
    \ string(n)[i])\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfagdejjo.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpfagdejjo.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfagdejjo.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfagdejjo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    @assert(n > 0)\n    product = 1\n    while n >\
    \ 0\n        digit = n % 10\n        if digit % 2 != 0\n            product *=\
    \ digit\n        end\n        n = div(n, 10)\n    end\n    return product\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprm_s3mvx.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmprm_s3mvx.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprm_s3mvx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprm_s3mvx.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif n%2 ==\
    \ 0\n        return digits(div(n,10))\n    else\n        return mod(n,10)*digits(div(n,10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkczcy67b.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpkczcy67b.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkczcy67b.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkczcy67b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkczcy67b.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkczcy67b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkczcy67b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkczcy67b.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkczcy67b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkczcy67b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkczcy67b.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkczcy67b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkczcy67b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkczcy67b.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkczcy67b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        error(\"Number must be positive!\"\
    )\n    end\n    mysum = 1\n    while n > 0\n        rem = mod(n, 10)\n       \
    \ if rem%2 != 0\n            mysum *= rem\n        end\n        n = div(n, 10)\n\
    \    end\n    return mysum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfv1k1ym1.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpfv1k1ym1.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfv1k1ym1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfv1k1ym1.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    for c in string(n)\n        c\
    \ = parse(Int64, c)\n        if c % 2 != 0\n            result *= c\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmh19ztbn.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpmh19ztbn.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmh19ztbn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmh19ztbn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        digit = n\
    \ % 10\n        if digit % 2 != 0\n            total *= digit\n        end\n \
    \       n = div(n, 10)\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8jwrncql.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp8jwrncql.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jwrncql.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jwrncql.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    i = 0\n    val = 1\n    while n >= 1 \n      \
    \  t = n % 10\n        if t % 2 != 0\n            val = val * t\n        end\n\
    \        n = div(n, 10)\n    end\n    return val\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplu25t95i.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmplu25t95i.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplu25t95i.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplu25t95i.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # If n is negative, multiply the output by -1\n\
    \    if n < 0\n        return digits(-n) * -1\n    end\n    # Convert n to a string\
    \ and iterate through each digit\n    while n != 0\n        digit = n % 10\n \
    \       if digit % 2 != 0\n            return digit * digits(n // 10)\n      \
    \  end\n        n = n // 10\n    end\n    return 1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpb1kgn3c3.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpb1kgn3c3.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpb1kgn3c3.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpb1kgn3c3.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1kgn3c3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1kgn3c3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpb1kgn3c3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpb1kgn3c3.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpb1kgn3c3.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1kgn3c3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1kgn3c3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpb1kgn3c3.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpb1kgn3c3.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpb1kgn3c3.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1kgn3c3.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1kgn3c3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpb1kgn3c3.jl:34\n  Test threw exception\n  E"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_product = 1\n    while n > 0\n        if n\
    \ % 2 != 0\n            odd_product *= n % 10\n        end\n        n = div(n,\
    \ 10)\n    end\n    return odd_product\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbt8wvtse.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpbt8wvtse.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbt8wvtse.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbt8wvtse.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_digits = floor(log10(n))+1\n    product = 1\n\
    \    for i = 1:n_digits\n        digit = n % 10^i\n        divisor = 10^(i-1)\n\
    \        digit_div = div(digit, divisor)\n        if digit_div % 2 != 0\n    \
    \        product *= digit_div\n        end\n    end\n    product\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqmaad_t7.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpqmaad_t7.jl:35\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqmaad_t7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqmaad_t7.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        d = n % 10\n\
    \        if d % 2 != 0\n            total *= d\n        end\n        n = div(n,\
    \ 10)\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9d6vnz6x.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp9d6vnz6x.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d6vnz6x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d6vnz6x.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # is 0 \n    if n == 0 \n        return 0\n  \
    \  end\n    # is odd\n    if (n % 2) != 0 \n        return n % 10 * digits(n /\
    \ 10)\n    else \n        return digits(n / 10)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgjp09ef1.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpgjp09ef1.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpgjp09ef1.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpgjp09ef1.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjp09ef1.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjp09ef1.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgjp09ef1.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpgjp09ef1.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpgjp09ef1.jl:0\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpgjp09ef1.jl:29 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjp09ef1.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgjp09ef1.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpgjp09ef1.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpgjp09ef1.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjp09ef1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjp09ef1.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgjp09ef1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5014) "
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10)*digits(n // 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpjtlh7zi4.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpjtlh7zi4.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjtlh7zi4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjtlh7zi4.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjtlh7zi4.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjtlh7zi4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjtlh7zi4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjtlh7zi4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjtlh7zi4.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjtlh7zi4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjtlh7zi4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjtlh7zi4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjtlh7zi4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjtlh7zi4.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjtlh7zi4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjtlh7zi4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjtlh7zi4.jl:27\n  Test threw exception\n"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    while n > 0\n        r = rem(n, 10)\n\
    \        if r % 2 != 0\n            sum *= r\n        end\n        n = div(n,\
    \ 10)\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt1lpvd0i.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpt1lpvd0i.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt1lpvd0i.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt1lpvd0i.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n <= 0 return 0 end\n    if n < 10 return n\
    \ % 2 == 1 ? n : 0 end\n    return digits(div(n, 10)) * (n % 10 % 2 == 1 ? n %\
    \ 10 : 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_string = string(n)\n    product = 1\n    for\
    \ d in n_string\n        if isodd(Int64(d))\n            product *= Int64(d)\n\
    \        end\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphwxavz8d.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmphwxavz8d.jl:26\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 53 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwxavz8d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwxavz8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphwxavz8d.jl:27\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 53 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwxavz8d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwxavz8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphwxavz8d.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 49 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwxavz8d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwxavz8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphwxavz8d.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 2597 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwxavz8d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwxavz8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphwxavz8d.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 166155 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwxavz8d.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n::Int64=n\n    n::String=string(n)\n    list::Int64[]=map(parse,split(n,\"\
    \"))\n    res::Int64=0\n    for i in list\n        if i%2==1\n            res=res*i\n\
    \        end\n    end\n    return res\nend\ndigits(235)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"n\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8753k4pv.jl:1\nin expression starting at /tmp/tmp8753k4pv.jl:1\n"
  stdout: ''
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0 return 0 end\n    if n == 0 return 0\
    \ end\n    rem = n % 10\n    if rem % 2 == 0\n        return digits(div(n, 10))\n\
    \    else\n        return rem * digits(div(n, 10))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbxnetuuz.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpbxnetuuz.jl:26\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxnetuuz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxnetuuz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxnetuuz.jl:27\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxnetuuz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxnetuuz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxnetuuz.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxnetuuz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxnetuuz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxnetuuz.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxnetuuz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxnetuuz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxnetuuz.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxnetuuz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_digits = count_digits(n)\n    r = 0\n    for\
    \ i = 1:n_digits\n        d = digit(n,i)\n        if isodd(d)\n            r =\
    \ r * 10 + d\n        end\n    end\n    return r\nend\ndigits(5)\ndigits(5) ==\
    \ 5\ndigits(9)\ndigits(9) == 9\ndigits(10)\ndigits(10) == 0\ndigits(234)\ndigits(234)\
    \ == 4\ndigits(235)\ndigits(235) == 15\ndigits(1234)\ndigits(1234) == 0\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: count_digits not defined\nStacktrace:\n\
    \ [1] digits(n::Int64)\n   @ Main /tmp/tmpvhkw8cg_.jl:12\n [2] top-level scope\n\
    \   @ /tmp/tmpvhkw8cg_.jl:22\nin expression starting at /tmp/tmpvhkw8cg_.jl:22\n"
  stdout: ''
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    rem = n % 10\n    div\
    \ = div(n, 10)\n    rem % 2 == 0 && return digits(div)\n    return rem * digits(div)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp82dt8l4z.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp82dt8l4z.jl:23\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: div not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp82dt8l4z.jl:14\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp82dt8l4z.jl:23 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82dt8l4z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp82dt8l4z.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: div not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp82dt8l4z.jl:14\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp82dt8l4z.jl:24 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82dt8l4z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp82dt8l4z.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: div not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp82dt8l4z.jl:14\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp82dt8l4z.jl:25 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82dt8l4z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp82dt8l4z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: div not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp82dt8l4z.jl:14\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp82dt8l4z.jl:26 [inlined]\n   [4] macro"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n > 0\n        digit = n %\
    \ 10\n        if digit % 2 != 0\n            prod *= digit\n        end\n    \
    \    n = div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnvg96iqo.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpnvg96iqo.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvg96iqo.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvg96iqo.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # x = string(n)\n    prod = 1\n    for i = 1:length(string(n))\n\
    \        if parse(Int64,string(n)[i]) % 2 != 0\n            prod *= parse(Int64,string(n)[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbfffr2si.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpbfffr2si.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfffr2si.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfffr2si.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # convert number to string\n    num_str = string(n)\n\
    \    # convert string to an array of characters\n    num_arr = collect(num_str)\n\
    \    total = 1\n    # loop over array and multiply together the odd numbers\n\
    \    for (idx, val) in enumerate(num_arr)\n        # convert character to int\n\
    \        num = parse(Int64, val)\n        # if it's odd, multiply it to total\n\
    \        if num % 2 != 0\n            total *= num\n        end\n    end\n   \
    \ return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpynvu2mip.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpynvu2mip.jl:39\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpynvu2mip.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpynvu2mip.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    m = 1\n    while n != 0\n        r = rem(n, 10)\n\
    \        if r % 2 != 0\n            m *= r\n        end\n        n = div(n, 10)\n\
    \    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpec2_r7j9.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpec2_r7j9.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpec2_r7j9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpec2_r7j9.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    while n > 0\n        digit = n\
    \ % 10\n        if digit % 2 != 0\n            result *= digit\n        end\n\
    \        n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvyk0xyrg.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpvyk0xyrg.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyk0xyrg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyk0xyrg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_string = string(n) #convert to string\n    product\
    \ = 1\n    for i in 1:length(n_string)\n        if !(parse(Int64, string(n_string[i]))\
    \ % 2 == 0) #check if even\n            product *= parse(Int64, string(n_string[i]))\n\
    \        end\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpak9gtapx.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpak9gtapx.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpak9gtapx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpak9gtapx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    product = 1\n    while n > 0\n        if n % 2\
    \ != 0\n            product *= n % 10\n        end\n        n = div(n, 10)\n \
    \   end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpil3zypv1.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpil3zypv1.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil3zypv1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil3zypv1.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if isodd(mod(n,10))\n            return mod(n,10)*digits(div(n,10))\n     \
    \   else\n            return digits(div(n,10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplfdp87s1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmplfdp87s1.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfdp87s1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfdp87s1.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    n == 1 && return 1\n \
    \   n % 2 == 0 && return digits(n/10)\n    return (n % 10) * digits(n/10)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpwy81wjaa.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpwy81wjaa.jl:22\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpwy81wjaa.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpwy81wjaa.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwy81wjaa.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwy81wjaa.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwy81wjaa.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpwy81wjaa.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpwy81wjaa.jl:0\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpwy81wjaa.jl:23 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwy81wjaa.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwy81wjaa.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpwy81wjaa.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpwy81wjaa.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwy81wjaa.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwy81wjaa.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwy81wjaa.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(5014) "
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # Write your code here\n    x = 1\n    while n\
    \ > 0\n        if n % 2 != 0\n            x *= n % 10\n        end\n        n\
    \ = div(n, 10)\n    end\n    return x\nend\n@testset \"Digits\" begin\n    @test\
    \ digits(235) == 15\n    @test digits(1) == 1\n    @test digits(4) == 0\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmpohs12j4u.jl:22

    in expression starting at /tmp/tmpohs12j4u.jl:22

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 return n<2 ? 0 : n\n    else return\
    \ digits(n \xF7 10) * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz7ajh7t0.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz7ajh7t0.jl:1\n\
    in expression starting at /tmp/tmpz7ajh7t0.jl:1\n"
  stdout: ''
  timestamp: 1660008677
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_string = n |> string\n    n_digits = filter(x\
    \ -> x % 2 != 0, [parse(Int64, d) for d in n_string])\n    if length(n_digits)\
    \ == 0\n        0\n    else\n        reduce(*, n_digits)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    mult::Int64 = 1\n    while n != 0\n        digit\
    \ = n % 10\n        if digit % 2 != 0\n            mult *= digit\n        end\n\
    \        n = div(n, 10)\n    end\n    return mult\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpww4v2vqz.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpww4v2vqz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpww4v2vqz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpww4v2vqz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    p = 1\n    while n != 0\n        if n % 2 != 0\n\
    \            p *= n % 10\n        end\n        n = n \xF7 10\n    end\n    return\
    \ p\nend\ndigits(1)\ndigits(4)\ndigits(235)\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphv2e3sp8.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmphv2e3sp8.jl:35\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphv2e3sp8.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphv2e3sp8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digit_sum = 0\n    while n > 0\n        digit\
    \ = n % 10\n        if digit % 2 != 0\n            digit_sum += digit\n      \
    \  end\n        n = floor(Int64, n / 10)\n    end\n    return digit_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw4benfsl.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpw4benfsl.jl:30\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4benfsl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4benfsl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpw4benfsl.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 21 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4benfsl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4benfsl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpw4benfsl.jl:32\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 25 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4benfsl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4benfsl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  last_digit = n % 10\n        rest_of_number = n / 10\n        if last_digit\
    \ % 2 == 1\n            return last_digit * digits(rest_of_number)\n        else\n\
    \            return digits(rest_of_number)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyvat_y8n.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpyvat_y8n.jl:29\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyvat_y8n.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpyvat_y8n.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyvat_y8n.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyvat_y8n.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpyvat_y8n.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyvat_y8n.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpyvat_y8n.jl:0\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpyvat_y8n.jl:30 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyvat_y8n.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpyvat_y8n.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpyvat_y8n.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpyvat_y8n.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyvat_y8n.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyvat_y8n.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpyvat_y8n.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5014) "
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 \n        if isodd(n) \n           \
    \ return n \n        else \n            return 0 \n        end \n    else \n \
    \       if isodd(n % 10) \n            return (n % 10) * digits(div(n, 10)) \n\
    \        else \n            return digits(div(n, 10)) \n        end \n    end\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # if n < 0\n    #     return\n    # end\n    prod\
    \ = 1\n    while n > 0\n        if n % 2 == 1\n            prod *= n % 10\n  \
    \      end\n        n = n \xF7 10\n    end\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqyd03s7j.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpqyd03s7j.jl:35\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyd03s7j.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyd03s7j.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    # Local Variables\n    result::Int64 = 1\n\
    \    # result = 1\n    \n    # Base Case\n    if n < 10 \n        if n%2 == 1\n\
    \            return n\n        else\n            return 0\n        end\n    end\n\
    \    \n    # Recursive Case\n    if n%2 == 1\n        result = n%10\n        return\
    \ result * digits(div(n,10))\n    else\n        return digits(div(n,10))\n   \
    \ end\n    \nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        n, r = divrem(n,\
    \ 10)\n        if r % 2 != 0\n            total *= r\n        end\n    end\n \
    \   return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3niygpm1.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3niygpm1.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3niygpm1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3niygpm1.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    while n>0\n        digit = n%10\n\
    \        if digit%2 != 0\n            result *= digit\n        end\n        n\
    \ = div(n,10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpft8v21k2.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpft8v21k2.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft8v21k2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft8v21k2.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  d = n % 10\n        if d % 2 == 0\n            return digits(div(n, 10))\n\
    \        else\n            return d * digits(div(n, 10))\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprny7tdyb.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmprny7tdyb.jl:28\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprny7tdyb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprny7tdyb.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprny7tdyb.jl:29\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprny7tdyb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprny7tdyb.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprny7tdyb.jl:30\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprny7tdyb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprny7tdyb.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprny7tdyb.jl:31\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprny7tdyb.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprny7tdyb.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprny7tdyb.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprny7tdyb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    k = 1\n    out = 0\n    for i in 1:n\n       \
    \ k *= i\n    end\n    for j in 1:n\n        if j % 2 != 0\n            out +=\
    \ j\n        end\n    end\n    out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7e8flv9u.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp7e8flv9u.jl:29\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e8flv9u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e8flv9u.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e8flv9u.jl:30\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 729 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e8flv9u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e8flv9u.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e8flv9u.jl:31\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 3600 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e8flv9u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e8flv9u.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e8flv9u.jl:32\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 6285049 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e8flv9u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e8flv9u.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e8flv9u.jl:33\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 2438680689 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e8flv9u.jl:33 [inlined]\n [3]\
    \ macro expansi"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0 \n        println(\"negative integers\
    \ are not supported\")\n        return 0\n    end\n    result = 1\n    while n\
    \ > 0\n        digit = n % 10\n        if digit % 2 == 1 \n            result\
    \ *= digit\n        end\n        n = div(n, 10)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnu0__x0w.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpnu0__x0w.jl:37\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnu0__x0w.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnu0__x0w.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return n % 10 * digits(div(n, 10))\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdeh5ddkl.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpdeh5ddkl.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdeh5ddkl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdeh5ddkl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdeh5ddkl.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdeh5ddkl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdeh5ddkl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdeh5ddkl.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdeh5ddkl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdeh5ddkl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdeh5ddkl.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdeh5ddkl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdeh5ddkl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdeh5ddkl.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdeh5ddkl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n\
    \ // 10)\n    return n % 10 * digits(n // 10)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnytt6mbb.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpnytt6mbb.jl:21\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpnytt6mbb.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpnytt6mbb.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnytt6mbb.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnytt6mbb.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnytt6mbb.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpnytt6mbb.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpnytt6mbb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnytt6mbb.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnytt6mbb.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnytt6mbb.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpnytt6mbb.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpnytt6mbb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnytt6mbb.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnytt6mbb.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnytt6mbb.jl:24\n  Test threw exception\n  E"
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  d = n % 10\n        if d % 2 == 1\n            return d * digits(n \xF7 10)\n\
    \        else\n            return digits(n \xF7 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplubct5go.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmplubct5go.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplubct5go.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplubct5go.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    nums = [i for i in string(n)]\n    nums = [parse(Int64,\
    \ i) for i in nums]\n    even = [i for i in nums if (i % 2) == 0]\n    if length(even)\
    \ == length(nums)\n        return 0\n    else\n        return prod(nums)\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaqzxnd7f.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpaqzxnd7f.jl:27\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqzxnd7f.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqzxnd7f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaqzxnd7f.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqzxnd7f.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqzxnd7f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaqzxnd7f.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqzxnd7f.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqzxnd7f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaqzxnd7f.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqzxnd7f.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqzxnd7f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaqzxnd7f.jl:31\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqzxnd7f.jl:31 [inlined]\n [3]\
    \ macro expans"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # convert n to string of digits\n    digits_str\
    \ = string(n)\n    # initialize product of odd digits\n    prod = 1\n    # iterate\
    \ over string of digits, and update product\n    for i in digits_str\n       \
    \ digit = parse(Int64, i)\n        if digit % 2 == 1\n            prod *= digit\n\
    \        end\n    end\n    # return product\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrg8gjkq.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpnrg8gjkq.jl:37\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrg8gjkq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrg8gjkq.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    # initialize the product\n    product::Int64 =\
    \ 1\n    # initialize a counter\n    i::Int64 = 1\n    # initialize a copy of\
    \ n\n    m::Int64 = n\n    # calculate the number of digits\n    length::Int64\
    \ = floor(log10(abs(n))) + 1\n    # iterate over the digits\n    while i <= length\n\
    \        # isolate the i-th digit, zero indexed\n        digit::Int64 = m % 10\n\
    \        # check if odd\n        if digit % 2 != 0\n            # if odd, multiply\
    \ by the product\n            product *= digit\n        end\n        # divide\
    \ by 10 to get the next digit\n        m = floor(m / 10)\n        # update counter\n\
    \        i += 1\n    end\n    # return the product\n    return product\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpozros4pj.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpozros4pj.jl:48\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpozros4pj.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpozros4pj.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif rem(n,\
    \ 2) == 0\n        return digits(div(n, 10))\n    else \n        return rem(n,\
    \ 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpps8njj8t.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpps8njj8t.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps8njj8t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps8njj8t.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpps8njj8t.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps8njj8t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps8njj8t.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpps8njj8t.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps8njj8t.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps8njj8t.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpps8njj8t.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps8njj8t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps8njj8t.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpps8njj8t.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps8njj8t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 return n < 1 ? 0 : n end\n    if n %\
    \ 2 == 0\n        return digits(n \xF7 10)\n    else\n        return (n % 10)\
    \ * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr8yj1mx4.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpr8yj1mx4.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8yj1mx4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8yj1mx4.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    x = 0\n    for i = n:n < 0\n        if n % 2 ==\
    \ 1\n            x = x * n\n        end\n    end\n    return x\nend\ndigits(1)\n\
    digits(4)\ndigits(235)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnji47tfc.jl:13\nin expression starting at\
    \ /tmp/tmpnji47tfc.jl:13\n"
  stdout: ''
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    product = 1\n    while n > 0\n        n, d = divrem(n,\
    \ 10)\n        if d % 2 != 0\n            product *= d\n        end\n    end\n\
    \    return product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp89d5yucx.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp89d5yucx.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89d5yucx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89d5yucx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_as_string = string(n)\n    product = 1\n   \
    \ for i in 1:length(n_as_string)\n        val = parse(Int64, n_as_string[i])\n\
    \        if mod(val, 2) == 1\n            product *= val\n        end\n    end\n\
    \    return product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaznc4pf_.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpaznc4pf_.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaznc4pf_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaznc4pf_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n % 10) * digits(n // 10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4cp654ds.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp4cp654ds.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4cp654ds.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4cp654ds.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4cp654ds.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4cp654ds.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4cp654ds.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4cp654ds.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4cp654ds.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4cp654ds.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4cp654ds.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4cp654ds.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4cp654ds.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4cp654ds.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4cp654ds.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4cp654ds.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4cp654ds.jl:27\n  Test threw exception\n"
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n\
    \ \xF7 10)\n    return (n % 10) * digits(n \xF7 10)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp127e8h7o.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp127e8h7o.jl:21\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp127e8h7o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp127e8h7o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp127e8h7o.jl:22\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp127e8h7o.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp127e8h7o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp127e8h7o.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp127e8h7o.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp127e8h7o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp127e8h7o.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp127e8h7o.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp127e8h7o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp127e8h7o.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp127e8h7o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total=1\n    for d in string(n)\n        if parse(Int64,d)%2==1\
    \ \n            total*=parse(Int64,d)\n        end\n    end\n    return total\n\
    end\ndigits(235)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwcsjujz5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpwcsjujz5.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwcsjujz5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwcsjujz5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n > 0\n        m = n % 10\n\
    \        if m % 2 != 0\n            prod *= m\n        end\n        n = div(n,\
    \ 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwry8a_to.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpwry8a_to.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwry8a_to.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwry8a_to.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n >= 1 || error(\"n must be positive\")\n    out\
    \ = 1\n    while n > 0\n        d = n % 10\n        if d % 2 == 1\n          \
    \  out *= d\n        end\n        n = div(n, 10)\n    end\n    return out\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc46ntmg1.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpc46ntmg1.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc46ntmg1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc46ntmg1.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0 \n        return 0\n    elseif n%2 ==\
    \ 0\n        return digits(div(n,10))\n    else\n        return rem(n,10)*digits(div(n,10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2cy_knhw.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp2cy_knhw.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cy_knhw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cy_knhw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2cy_knhw.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cy_knhw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cy_knhw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2cy_knhw.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cy_knhw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cy_knhw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2cy_knhw.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cy_knhw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cy_knhw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2cy_knhw.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cy_knhw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    p = 1\n    while n != 0\n        r = n % 10\n\
    \        if r % 2 != 0\n            p *= r\n        end\n        n = n / 10\n\
    \    end\n    return p\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt7_hj822.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpt7_hj822.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_hj822.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7_hj822.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpt7_hj822.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_hj822.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7_hj822.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpt7_hj822.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_hj822.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7_hj822.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpt7_hj822.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_hj822.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7_hj822.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpt7_hj822.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7_hj822.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n < 0 ? n * -1 : n\n    prod = 1\n    for\
    \ i in [i for i in digits(n)]\n        if i % 2 != 0\n            prod *= i\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008685
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = 1\n    for digit in digits(n)\n \
    \       if digit % 2 != 0\n            odd_digits *= digit\n        end\n    end\n\
    \    return odd_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n::Integer \n    n = digits(n::Integer)\n\
    end\n# if all(isodd,digits(n)) # did not work!\n# Julia\u2019s comparison operators\
    \ (==, <=, >=, and !=) and logical operators (&&, ||, !) can\u2019t be directly\
    \ applied to integers, so if you want to use them for integers, you need to convert\
    \ the integers to booleans first with the following rules: \n    0 = false, 1\
    \ = true\n    # Convert digits to boolean\n    isodd(n) = n % 2 == 1\n    # Convert\
    \ digits to boolean array\n    isodd(n) = [ n % 2 == 1 for n in digits(n) ]\n\
    \    # Apply boolean array on n\n    [ n % 2 == 1 for n in digits(n) ] # <- this\
    \ code can be replaced with `isodd(n)`\n    # Convert boolean array to boolean\n\
    \    all(isodd(n))\n    # \n    all(n % 2 == 1 for n in digits(n)) # better\n\
    \    all(isodd,digits(n)) # best\n# end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"false\" around\
    \ /tmp/tmpnplpb_pq.jl:17\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnplpb_pq.jl:17\n\
    in expression starting at /tmp/tmpnplpb_pq.jl:17\n"
  stdout: ''
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        digit = n\
    \ % 10\n        if digit % 2 != 0\n            total *= digit\n        end\n \
    \       n = n / 10\n    end\n    return total\nend\ndigits(234)\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgh5vj_1n.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpgh5vj_1n.jl:28\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh5vj_1n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh5vj_1n.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgh5vj_1n.jl:29\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh5vj_1n.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh5vj_1n.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgh5vj_1n.jl:30\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh5vj_1n.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh5vj_1n.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgh5vj_1n.jl:31\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh5vj_1n.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh5vj_1n.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgh5vj_1n.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh5vj_1n.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd = 1\n    while n != 0\n        r = rem(n,\
    \ 10)\n        if r % 2 != 0\n            odd *= r\n        end\n        n = div(n,\
    \ 10)\n    end\n    return odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb2j9c23w.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpb2j9c23w.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2j9c23w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2j9c23w.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n, product = abs(n), 1\n    for c in collect(digits(n))\n\
    \        if c % 2 != 0\n            product *= c\n        end\n    end\n    return\
    \ product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0 return 0 end\n    d = 0\n    while n\
    \ > 0\n        r = n % 10\n        if r % 2 == 1\n            d = d * 10 + r\n\
    \        end\n        n = n / 10\n    end\n    return d\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn4pnx858.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpn4pnx858.jl:29\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pnx858.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pnx858.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpn4pnx858.jl:30\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pnx858.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pnx858.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpn4pnx858.jl:31\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pnx858.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pnx858.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpn4pnx858.jl:32\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pnx858.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pnx858.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpn4pnx858.jl:33\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pnx858.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = 1\n    for digit in digits(n)\n \
    \       if digit % 2 != 0\n            odd_digits *= digit\n        end\n    end\n\
    \    return odd_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    ret = 1\n    for i in string(n)\n        if parse(Int64,\
    \ i) % 2 != 0\n            ret *= parse(Int64, i)\n        end\n    end\n    ret\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8ckeuzfz.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp8ckeuzfz.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ckeuzfz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ckeuzfz.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = 1\n    for d in digits(n)\n     \
    \   if (d % 2) != 0\n            odd_digits *= d\n        end\n    end\n    return\
    \ odd_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = abs(n)\n    product = 1\n    while n > 0\n\
    \        if n % 2 == 1\n            product *= n % 10\n        end\n        n\
    \ = div(n, 10)\n    end\n    if product == 1\n        return 0\n    else\n   \
    \     return product\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanc5f32r.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpanc5f32r.jl:33\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanc5f32r.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanc5f32r.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n % 100 # n is now either n or n mod 100\n\
    \    a = n % 10 # a is now the last digit\n    b = (n % 100) - a # b is now everything\
    \ but the last digit\n    b = b / 10\n    return a * b\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxwa4skxa.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpxwa4skxa.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwa4skxa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwa4skxa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxwa4skxa.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 20 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwa4skxa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwa4skxa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxwa4skxa.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwa4skxa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwa4skxa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxwa4skxa.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 4 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwa4skxa.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwa4skxa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxwa4skxa.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 30 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwa4skxa.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/e"
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return n % 10 * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_1habu.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp22_1habu.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_1habu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_1habu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp22_1habu.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_1habu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_1habu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp22_1habu.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_1habu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_1habu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp22_1habu.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_1habu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_1habu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp22_1habu.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_1habu.jl:28 [inlined]\n [3]\
    \ macro expans"
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    oddproduct = 1\n    while n > 0\n        d = div(n,\
    \ 10)\n        if d % 2 != 0\n            oddproduct *= d\n        end\n     \
    \   n = d\n    end\n    return oddproduct\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo7ynljz2.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpo7ynljz2.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7ynljz2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7ynljz2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo7ynljz2.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 2505 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7ynljz2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7ynljz2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo7ynljz2.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 8883 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7ynljz2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7ynljz2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo7ynljz2.jl:32\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 8541803875 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7ynljz2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7ynljz2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo7ynljz2.jl:33\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7ynljz2.jl:33 [inlined]\n [3]\
    \ macro "
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    x = Int64(0)\n    for i = 0:Int64(log10(n))\n\
    \        m = 10^i\n        a = Int64(floor(n/m))\n        r = n%m\n        n =\
    \ r\n        if a%2 != 0\n            x = x*a\n        end\n    end\n    return\
    \ x\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9eqkyzhl.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp9eqkyzhl.jl:29\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  InexactError: Int64(0.6989700043360189)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] digits(n::Int64)\n\
    \     @ Main /tmp/tmp9eqkyzhl.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9eqkyzhl.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9eqkyzhl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9eqkyzhl.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  InexactError: Int64(1.7323937598229686)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] digits(n::Int64)\n    \
    \ @ Main /tmp/tmp9eqkyzhl.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9eqkyzhl.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9eqkyzhl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9eqkyzhl.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  InexactError: Int64(2.0791812460476247)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] digits(n::Int64)\n    \
    \ @ Main /tmp/tmp9eqkyzhl.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9eqkyzhl.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9eqkyzhl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9eqkyzhl.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  InexactError: Int64(3.7001843296221977)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] digits(n::Int64)\n  "
  timestamp: 1660008684
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        if n%2 == 1\n            return\
    \ n\n        else\n            return 0\n        end\n    else\n        r = n%10\n\
    \        if r%2 == 1\n            return r*digits(n//10)\n        else\n     \
    \       return digits(n//10)\n        end\n    end\nend\n@assert digits(4) ==\
    \ 0\n@assert digits(10) == 0\n@assert digits(123) == 3\n@assert digits(567) ==\
    \ 35\n@assert digits(5768) == 0\n@assert digits(5769) == 105\n@assert digits(5862)\
    \ == 0\n \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: no method matching digits(::Rational{Int64})\n\
    Closest candidates are:\n  digits(!Matched::Int64) at /tmp/tmpo41nzqoz.jl:11\n\
    Stacktrace:\n [1] digits(n"
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digit, product = 0, 1\n    while n > 0\n     \
    \   digit = n % 10\n        if digit % 2 != 0\n            product *= digit\n\
    \        end\n        n = n / 10\n    end\n    return product\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpylo668s4.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpylo668s4.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylo668s4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylo668s4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpylo668s4.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylo668s4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylo668s4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpylo668s4.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylo668s4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylo668s4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpylo668s4.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylo668s4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylo668s4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpylo668s4.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylo668s4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    product = 1\n    for i in string(n)\n        if\
    \ parse(Int64, i) % 2 != 0\n            product *= parse(Int64, i)\n        end\n\
    \    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpokeucv5h.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpokeucv5h.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokeucv5h.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokeucv5h.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        d = n % 10\n\
    \        if d % 2 != 0\n            total *= d\n        end\n        n = n \xF7\
    \ 10\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpacrrbp9k.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpacrrbp9k.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpacrrbp9k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpacrrbp9k.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return -digits(-n)\n    end\n\
    \    prod = 1\n    while n > 0\n        digit = n % 10\n        if isodd(digit)\n\
    \            prod *= digit\n        end\n        n = div(n, 10)\n    end\n   \
    \ return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppby3s2hx.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmppby3s2hx.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppby3s2hx.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppby3s2hx.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return 0\n    end\n    p = 1\n\
    \    while n > 0\n        d = mod(n, 10)\n        if d % 2 == 1\n            p\
    \ *= d\n        end\n        n = div(n, 10)\n    end\n    return p\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc3qnml6x.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpc3qnml6x.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3qnml6x.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3qnml6x.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n     n=abs(n)\n     temp=1\n     while n>0\n     \
    \    if n%2==1\n             temp=temp*(n%10)\n         end\n         n=n/10\n\
    \     end\n     return temp\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5qoe1gt7.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp5qoe1gt7.jl:28\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qoe1gt7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qoe1gt7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5qoe1gt7.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qoe1gt7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qoe1gt7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5qoe1gt7.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qoe1gt7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qoe1gt7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5qoe1gt7.jl:32\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qoe1gt7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qoe1gt7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5qoe1gt7.jl:33\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qoe1gt7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    x = 0\n    while n > 0\n        y = n % 10\n \
    \       if y % 2 != 0\n            x *= y\n        end\n        n = n \xF7 10\n\
    \    end\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7__wj5bc.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp7__wj5bc.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7__wj5bc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7__wj5bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7__wj5bc.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7__wj5bc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7__wj5bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7__wj5bc.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7__wj5bc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7__wj5bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7__wj5bc.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7__wj5bc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7__wj5bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7__wj5bc.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7__wj5bc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 return n%2 != 0 ? n : 0 end\n    return\
    \ digits(n%10) * digits(n\xF710)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprfy_tsuw.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmprfy_tsuw.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfy_tsuw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfy_tsuw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprfy_tsuw.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfy_tsuw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfy_tsuw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprfy_tsuw.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfy_tsuw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfy_tsuw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprfy_tsuw.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfy_tsuw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfy_tsuw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprfy_tsuw.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfy_tsuw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  r = n % 10\n        return r * digits(div(n, 10))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkjesz107.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpkjesz107.jl:25\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjesz107.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjesz107.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkjesz107.jl:26\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjesz107.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjesz107.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkjesz107.jl:27\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjesz107.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjesz107.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkjesz107.jl:28\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjesz107.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjesz107.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkjesz107.jl:29\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjesz107.jl:29 [inlined]\n [3]\
    \ macro expans"
  timestamp: 1660008685
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n % 10 == 0 && return 0\n    n < 10 && return\
    \ n\n    n % 2 == 0 && return digits(n // 10)\n    return n % 10 * digits(n //\
    \ 10)\nend\n \ndigits(1)\ndigits(4)\ndigits(235)\n \n# What happens if the function\
    \ is given a float or negative integer?\n# What should the function do in that\
    \ case?\n \n \n### Problem 3.4.4\n \n\"\"\"Hobbits love to play together.\n  \
    \  Write a function that, given a list of names, returns a string that\n    lists\
    \ the names in a random order. For example:\n    >>> order([\"Merry\", \"Pippin\"\
    , \"Sam\", \"Frodo\"])\n    \"Merry, Frodo, Pippin, Sam\"\n    >>> order([\"Merry\"\
    , \"Pippin\", \"Sam\", \"Frodo\"])\n    \"Pippin, Sam, Merry, Frodo\"\n    >>>\
    \ order([\"Merry\", \"Pippin\", \"Sam\", \"Frodo\"])\n    \"Frodo, Merry, Sam,\
    \ Pippin\"\n    \"\"\"\n \nnames = [\"Merry\", \"Pippin\", \"Sam\", \"Frodo\"\
    ]\n \n# Set the seed so that the results are reproducible.\nsrand(1234)\n \n#\
    \ What happens if the seed is not set?\n \n \n### Problem 3.4.5\n \n\"\"\"Write\
    \ a function that accepts a list of strings and returns a random\n    name from\
    \ the list. The probability that each name is returned should\n    be proportional\
    \ to the length of the name. For example:\n    >>> names = [\"Aragorn\", \"Boromir\"\
    , \"Gimli\", \"Legolas\", \"Frodo\", \"Sam\"]\n    >>> choose(names)\n    \"Aragorn\"\
    \n    >>> choose(names)\n    \"Legolas\"\n    >>> choose(names)\n    \"Legolas\"\
    \n    >>> choose(names)\n    \"Gimli\"\n    >>> choose(names)\n    \"Sam\"\n \
    \   \"\"\"\n \n \n \n \n \n \n \n \n \n \n### Problem 3.4.6\n\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: no method matching digits(::Rational{Int64})\n\
    Closest candidates are:\n  digits(!Matched::Int64) at /tmp/tmpde3wzzgy.jl:11\n\
    Stacktrace:\n [1] digits("
  stdout: ''
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  k = n % 10\n        m = n // 10\n        if k % 2 == 0\n            return\
    \ digits(m)\n        else\n            return k * digits(m)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp_n4oeblv.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp_n4oeblv.jl:30\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_n4oeblv.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_n4oeblv.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_n4oeblv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_n4oeblv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_n4oeblv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_n4oeblv.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_n4oeblv.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_n4oeblv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_n4oeblv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_n4oeblv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp_n4oeblv.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp_n4oeblv.jl:0\n \
    \  [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_n4oeblv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_n4oeblv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_n4oeblv.jl:33\n  Test threw exception\n  E"
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    # convert to string\n    num = string(n)\n\
    \    \n    # convert to array of chars\n    num = collect(num)\n    \n    # will\
    \ hold product of odd chars\n    prod = 1\n    \n    # loop through each char\n\
    \    for i in num\n        # if char is a number (and not a space)\n        if\
    \ !(isspace(i))\n            # if odd\n            if (parse(Int64, i) % 2) !=\
    \ 0\n                # add to product\n                prod *= parse(Int64, i)\n\
    \            end\n        end\n    end\n    \n    # return product\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpatrfese1.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpatrfese1.jl:48\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpatrfese1.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpatrfese1.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    for i in 0:9\n        k = n % 10^(i+1)\n\
    \        k = k / 10^i\n        if k == 0\n            break\n        end\n   \
    \     if mod(k,2) == 1\n            total = total * k\n        end\n    end\n\
    \    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpro6b06ec.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpro6b06ec.jl:31\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro6b06ec.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro6b06ec.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpro6b06ec.jl:33\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro6b06ec.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro6b06ec.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpro6b06ec.jl:34\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro6b06ec.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro6b06ec.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpro6b06ec.jl:35\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro6b06ec.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro6b06ec.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpro6b06ec.jl:36\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro6b06ec.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    sum = 1\n    while n > 0\n        digit = n %\
    \ 10\n        if digit % 2 != 0\n            sum *= digit\n        end\n     \
    \   n = n / 10\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprlkevjwa.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmprlkevjwa.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlkevjwa.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlkevjwa.jl:26\ntest set: Test\
    \ Failed at /tmp/tmprlkevjwa.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlkevjwa.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlkevjwa.jl:26\ntest set: Test\
    \ Failed at /tmp/tmprlkevjwa.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlkevjwa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlkevjwa.jl:26\ntest set: Test\
    \ Failed at /tmp/tmprlkevjwa.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlkevjwa.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlkevjwa.jl:26\ntest set: Test\
    \ Failed at /tmp/tmprlkevjwa.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlkevjwa.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n <= 0\n        0\n    else\n        if n%2\
    \ == 0\n            return digits(n//10)\n        else\n            return n%10\
    \ * digits(n//10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpd27nl95y.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd27nl95y.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd27nl95y.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd27nl95y.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd27nl95y.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd27nl95y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd27nl95y.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd27nl95y.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd27nl95y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd27nl95y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd27nl95y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd27nl95y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd27nl95y.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd27nl95y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd27nl95y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd27nl95y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd27nl95y.jl:30\n  Test threw exception\n  E"
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        n = -n\n    end\n    if n ==\
    \ 0\n        return 0\n    end\n    prod = 1\n    for c in string(n)\n       \
    \ n = Int64(c)\n        if n % 2 == 1\n            prod *= n\n        end\n  \
    \  end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu9thsaza.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpu9thsaza.jl:32\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 53 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9thsaza.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9thsaza.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpu9thsaza.jl:33\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 53 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9thsaza.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9thsaza.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpu9thsaza.jl:34\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 49 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9thsaza.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9thsaza.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpu9thsaza.jl:35\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 2597 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9thsaza.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9thsaza.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpu9thsaza.jl:36\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 166155 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9thsaza.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n % 2 == 1 ? n : 0\n\
    \    else\n        return digits(n // 10) * (n % 10 % 2 == 1 ? n % 10 : 1)\n \
    \   end\nend\n\"\"\"Given a positive integer n, return the number of zeros in\
    \ the factorial\n    of n.\n    For example:\n    >>> zeros(1)\n    0\n    >>>\
    \ zeros(4)\n    0\n    >>> zeros(5)\n    1\n    >>> zeros(10)\n    2\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp53hokmm_.jl:18\nin expression starting at /tmp/tmp53hokmm_.jl:18\n"
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    while n > 0\n        digit = mod(n,\
    \ 10)\n        if digit % 2 != 0\n            result *= digit\n        end\n \
    \       n = floor(Int64, n / 10)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwgq_ki91.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpwgq_ki91.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwgq_ki91.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwgq_ki91.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n > 0\n        if rem(n,2)\
    \ == 1\n            prod *= div(n,10)\n        end\n        n = div(n,10)\n  \
    \  end\n    return prod\nend\ndigits(23)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpphj4lpch.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpphj4lpch.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpphj4lpch.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpphj4lpch.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpphj4lpch.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpphj4lpch.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpphj4lpch.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpphj4lpch.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpphj4lpch.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpphj4lpch.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpphj4lpch.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpphj4lpch.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpphj4lpch.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpphj4lpch.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpphj4lpch.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    if n < 0\n        throw(ArgumentError(\"\
    The input value should be positive\"))\n    end\n    \n    product = 1\n    while\
    \ n > 0\n        last_digit = n % 10\n        if last_digit % 2 != 0\n       \
    \     product *= last_digit\n        end\n        n = n \xF7 10\n    end\n   \
    \ return product\nend\ndigits(4)\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpabi90bpp.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpabi90bpp.jl:39\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabi90bpp.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabi90bpp.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digits = Array{Int64}(undef, ndigits(n))\n   \
    \ for i in 1:ndigits(n)\n        digits[i] = n % 10\n        n = div(n, 10)\n\
    \    end\n    sum = 1\n    for d in digits\n        if isodd(d)\n            sum\
    \ *= d\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1n6ywo95.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp1n6ywo95.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1n6ywo95.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1n6ywo95.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod=1\n    if n<10\n        if n%2!=0\n     \
    \       return n\n        else\n            return 0\n        end\n    else\n\
    \        while n>0\n            dig=n%10\n            if dig%2!=0\n          \
    \      prod*=dig\n            end\n            n=trunc(Int64,n/10)\n        end\n\
    \        return prod\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2unr36r5.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp2unr36r5.jl:41\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2unr36r5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2unr36r5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return \"n must be a positive\
    \ integer\"\n    end\n    total = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            total *= digit\n        end\n        n\
    \ = floor(Int64, n/10)\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_wq36gbm.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp_wq36gbm.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_wq36gbm.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_wq36gbm.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n = n*sign(n)\n    res = 1\n    while n > 0\n\
    \        d = mod(n,10)\n        if isodd(d)\n            res *= d\n        end\n\
    \        n = div(n,10)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf2iapl68.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpf2iapl68.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2iapl68.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2iapl68.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  digit = mod(n, 10)\n        if digit % 2 == 0\n            return digits(div(n,\
    \ 10))\n        else\n            return digits(div(n, 10)) * digit\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb85j3rq9.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpb85j3rq9.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb85j3rq9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb85j3rq9.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif (n%2 ==\
    \ 0)\n        return digits(div(n,10))\n    else\n        return (mod(n,10)*digits(div(n,10)))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8gcrogqy.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp8gcrogqy.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gcrogqy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gcrogqy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8gcrogqy.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gcrogqy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gcrogqy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8gcrogqy.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gcrogqy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gcrogqy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8gcrogqy.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gcrogqy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gcrogqy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8gcrogqy.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gcrogqy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008687
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    #define local function to extract digit\n    function\
    \ digitExtract(x::Int64)::Int64\n        a = x % 10\n        return a\n    end\n\
    \    #define local function to filter odd numbers\n    function isOdd(x::Int64)::Bool\n\
    \        return x % 2 != 0\n    end\n    #define local function to filter even\
    \ numbers\n    function isEven(x::Int64)::Bool\n        return x % 2 == 0\n  \
    \  end\n    # create an empty vector to store odd numbers\n    odd_vector = Int64[]\n\
    \    # iterate over number and extract digits\n    for i in 0:floor(log10(n))\n\
    \        digit = digitExtract(n)\n        # after each iteration, divide n by\
    \ 10\n        n = div(n,10)\n        # push odd number to vector\n        if isOdd(digit)\n\
    \            push!(odd_vector, digit)\n        end\n    end\n    if length(odd_vector)\
    \ == 0\n        return 0\n    else\n        prod(odd_vector)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    number = 0\n    if n == 0\n        return 0\n\
    \    end\n    while n > 0\n        last = n % 10\n        if last % 2 != 0\n \
    \           number = number * 10 + last\n        end\n        n = div(n, 10)\n\
    \    end\n    res = 0\n    while number > 0\n        last = number % 10\n    \
    \    res = res * 10 + last\n        number = div(number, 10)\n    end\n    return\
    \ res\nend\ndigits(235)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4iookj65.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp4iookj65.jl:40\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 51 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4iookj65.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4iookj65.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp4iookj65.jl:41\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 975 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4iookj65.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4iookj65.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp4iookj65.jl:42\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 55753 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4iookj65.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4iookj65.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660008687
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    nums = digits(n)\n    product = 1\n    for num\
    \ in nums\n        if num % 2 != 0\n            product *= num\n        end\n\
    \    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \"\"\"Return the product of the odd digits.\"\"\
    \"\n    if n < 10\n        return n\n    else\n        # even digits are zero\n\
    \        digit = (n % 10) % 2 == 1 ? n % 10 : 0\n        return digit * digits(div(n,\
    \ 10))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkcxz93hc.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpkcxz93hc.jl:27\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcxz93hc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcxz93hc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkcxz93hc.jl:28\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcxz93hc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcxz93hc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkcxz93hc.jl:29\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcxz93hc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcxz93hc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkcxz93hc.jl:30\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcxz93hc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcxz93hc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkcxz93hc.jl:31\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcxz93hc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660008688
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 return n % 2 == 1 ? n : 0 end\n    d\
    \ = n % 10\n    if d % 2 == 1\n        return d * digits(n \xF7 10)\n    else\n\
    \        return digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if (n % 10) % 2 == 1\n            return (n % 10) * digits(n//10)\n       \
    \ else\n            return digits(n//10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp7go1ov63.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp7go1ov63.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp7go1ov63.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp7go1ov63.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7go1ov63.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7go1ov63.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp7go1ov63.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp7go1ov63.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp7go1ov63.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7go1ov63.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7go1ov63.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp7go1ov63.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp7go1ov63.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp7go1ov63.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7go1ov63.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7go1ov63.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp7go1ov63.jl:30\n  Test threw exception\n  E"
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    d = 0 \n    while n > 0 \n        d_ = n % 10\
    \ \n        n = div(n, 10) \n        if d_ % 2 == 1 \n            d = d * 10 +\
    \ d_ \n        end \n    end \n    return d \nend \n \ndigits(235) \n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplq6ijs6d.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmplq6ijs6d.jl:33\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 15 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplq6ijs6d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplq6ijs6d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplq6ijs6d.jl:34\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 579 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplq6ijs6d.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplq6ijs6d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplq6ijs6d.jl:35\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 35755 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplq6ijs6d.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplq6ijs6d.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        digit = n\
    \ % 10\n        if digit % 2 != 0\n            total *= digit\n        end\n \
    \       n = (n - digit) / 10\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgz8g81fg.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpgz8g81fg.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgz8g81fg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgz8g81fg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif rem(n,\
    \ 2) == 0\n        return digits(div(n, 10))\n    else\n        return rem(n,\
    \ 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxed4gg7i.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpxed4gg7i.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxed4gg7i.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxed4gg7i.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxed4gg7i.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxed4gg7i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxed4gg7i.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxed4gg7i.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxed4gg7i.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxed4gg7i.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxed4gg7i.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxed4gg7i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxed4gg7i.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxed4gg7i.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxed4gg7i.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    digits = [x for x in string(n)]\n    if all(float(digit)\
    \ % 2 == 0 for digit in digits)\n        return 0\n    else\n        return prod([parse(Int64,\
    \ x) for x in digits if float(x) % 2 != 0])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpraq0b8ax.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpraq0b8ax.jl:1\n\
    in expression starting at /tmp/tmpraq0b8ax.jl:1\n"
  stdout: ''
  timestamp: 1660008687
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    return prod(filter(x -> x % 2 != 0, digits(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008691
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    odd_digits = 1\n    while n > 0\n        d = n\
    \ % 10\n        if d % 2 != 0\n            odd_digits *= d\n        end\n    \
    \    n = (n - d) / 10\n    end\n    return odd_digits\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn5g6e3b6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpn5g6e3b6.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5g6e3b6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5g6e3b6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    if n == 0 \n        return 0\n \
    \   end\n    while n != 0\n        last = n % 10\n        if last % 2 != 0\n \
    \           prod *= last\n        end\n        n = n / 10\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp93_d2r3k.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp93_d2r3k.jl:30\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93_d2r3k.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93_d2r3k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp93_d2r3k.jl:31\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93_d2r3k.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93_d2r3k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp93_d2r3k.jl:32\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93_d2r3k.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93_d2r3k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp93_d2r3k.jl:33\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93_d2r3k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93_d2r3k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp93_d2r3k.jl:34\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93_d2r3k.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    for c in string(n)\n        if parse(Int64,\
    \ c) % 2 != 0\n            prod *= parse(Int64, c)\n        end\n    end\n   \
    \ return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkejt2i6l.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpkejt2i6l.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkejt2i6l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkejt2i6l.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n <= 0\n        return 0\n    end\n    odd\
    \ = 0\n    while n > 0\n        q,r = divrem(n,10)\n        if isodd(r)\n    \
    \        odd = odd*10 + r\n        end\n        n = q\n    end\n    return odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5jty_ci3.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp5jty_ci3.jl:33\n  Expression: candidate(5014)\
    \ == 5\n   Evaluated: 15 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jty_ci3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jty_ci3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5jty_ci3.jl:34\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 579 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jty_ci3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jty_ci3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5jty_ci3.jl:35\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 35755 == 2625\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jty_ci3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jty_ci3.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n != 0\n        if n % 2 !=\
    \ 0\n            prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n\
    \    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcgnibrhb.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpcgnibrhb.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcgnibrhb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcgnibrhb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    for d in string(n)\n        if\
    \ parse(Int64, d) % 2 != 0\n            result *= parse(Int64, d)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3k0stu_r.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp3k0stu_r.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3k0stu_r.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3k0stu_r.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    total = 1\n    while n > 0\n        num = n %\
    \ 10\n        if num % 2 != 0\n            total *= num\n        end\n       \
    \ n = div(n, 10)\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuvh5z289.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpuvh5z289.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvh5z289.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvh5z289.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return digits(-n)\n    end\n\
    \    if n == 0\n        return 0\n    end\n    if n % 2 == 1\n        return (n\
    \ % 10) * digits(n \xF7 10)\n    else\n        return digits(n \xF7 10)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp25i6izgv.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp25i6izgv.jl:29\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25i6izgv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25i6izgv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp25i6izgv.jl:30\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25i6izgv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25i6izgv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp25i6izgv.jl:31\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25i6izgv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25i6izgv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp25i6izgv.jl:32\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25i6izgv.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25i6izgv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp25i6izgv.jl:33\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25i6izgv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008689
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n%2 != 0 ? n : 0\n \
    \   else\n        return digits(div(n,10))*(n%10%2 != 0 ? n%10 : 1)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    return 0 \nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpghyq4dho.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpghyq4dho.jl:20\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghyq4dho.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghyq4dho.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghyq4dho.jl:21\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghyq4dho.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghyq4dho.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghyq4dho.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghyq4dho.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghyq4dho.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghyq4dho.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghyq4dho.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghyq4dho.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghyq4dho.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghyq4dho.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    res = 1\n    for k in 1:digits_len(n)\n      \
    \  digit = (n % 10^k) // 10^(k-1)\n        if (digit % 2) != 0\n            res\
    \ *= digit\n        end\n    end\n    return res\nend\n@show digits(1)\n@show\
    \ digits(4)\n@show digits(235)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: digits_len not defined\nStacktrace:\n\
    \ [1] digits(n::Int64)\n   @ Main /tmp/tmp8juy0lyl.jl:13\n [2] top-level scope\n\
    \   @ show.jl:1047\nin expression starting at /tmp/tmp8juy0lyl.jl:21\n"
  stdout: ''
  timestamp: 1660008689
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10 \n        return n % 2 == 1 ? n : 0\n\
    \    else\n        return digits(n \xF7 10) * (n % 10 % 2 == 1 ? n % 10 : 1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    num = n\n    product = 1\n    while num > 0\n\
    \        digit = mod(num, 10)\n        if digit % 2 != 0\n            product\
    \ *= digit\n        end\n        num = div(num, 10)\n    end\n    return product\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu6otai78.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpu6otai78.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu6otai78.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu6otai78.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    i = 0\n    prod = 1\n    while n > 0\n       \
    \ r = rem(n, 10)\n        if r % 2 != 0\n            prod *= r\n        end\n\
    \        n = div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp56ln6ezx.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp56ln6ezx.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp56ln6ezx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp56ln6ezx.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n > 0\n        d = n % 10\n\
    \        if d % 2 == 1\n            prod *= d\n        end\n        n = div(n,\
    \ 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeq9q6ckj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpeq9q6ckj.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeq9q6ckj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeq9q6ckj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return 0 * digits(n div 10)\n        else\n    \
    \        return (n mod 10) * digits(n div 10)\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp213yrnk.jl:16\nin expression starting at\
    \ /tmp/tmpp213yrnk.jl:16\n"
  stdout: ''
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    elseif n < 100\n\
    \        m = n % 10 # n's last digit\n        n = n // 10 # n without last digit\n\
    \        return m * digits(n)\n    elseif n < 1000\n        m = n % 10 # n's last\
    \ digit\n        n = n // 10 # n without last digit\n        return m * digits(n)\n\
    \    elseif n < 10000\n        m = n % 10 # n's last digit\n        n = n // 10\
    \ # n without last digit\n        return m * digits(n)\n    elseif n < 100000\n\
    \        m = n % 10 # n's last digit\n        n = n // 10 # n without last digit\n\
    \        return m * digits(n)\n    elseif n < 1000000\n        m = n % 10 # n's\
    \ last digit\n        n = n // 10 # n without last digit\n        return m * digits(n)\n\
    \    elseif n < 10000000\n        m = n % 10 # n's last digit\n        n = n //\
    \ 10 # n without last digit\n        return m * digits(n)\n    elseif n < 100000000\n\
    \        m = n % 10 # n's last digit\n        n = n // 10 # n without last digit\n\
    \        return m * digits(n)\n    elseif n < 1000000000\n        m = n % 10 #\
    \ n's last digit\n        n = n // 10 # n without last digit\n        return m\
    \ * digits(n)\n    else\n        return \"too big\"\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph4xq5pgz.jl:52

    '
  stdout: "test set: Error During Test at /tmp/tmph4xq5pgz.jl:56\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmph4xq5pgz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmph4xq5pgz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4xq5pgz.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4xq5pgz.jl:54\ntest set:\
    \ Error During Test at /tmp/tmph4xq5pgz.jl:57\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmph4xq5pgz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmph4xq5pgz.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4xq5pgz.jl:57 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4xq5pgz.jl:54\ntest set:\
    \ Error During Test at /tmp/tmph4xq5pgz.jl:58\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmph4xq5pgz.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmph4xq5pgz.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4xq5pgz.jl:58 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4xq5pgz.jl:54\ntest set:\
    \ Error During Test at /tmp/tmph4xq5pgz.jl:59\n  Test threw exception\n"
  timestamp: 1660008691
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    prod = 1\n    while n > 0\n        last_digit\
    \ = rem(n, 10)\n        if last_digit % 2 != 0\n            prod *= last_digit\n\
    \        end\n        n = div(n, 10)\n    end\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiqlhe1sz.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpiqlhe1sz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiqlhe1sz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiqlhe1sz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n == 0 && return 0\n    n % 2 == 0 && return digits(div(n,\
    \ 10))\n    return rem(n, 10) * digits(div(n, 10))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1ssswz6z.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp1ssswz6z.jl:21\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ssswz6z.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ssswz6z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ssswz6z.jl:22\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ssswz6z.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ssswz6z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ssswz6z.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ssswz6z.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ssswz6z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ssswz6z.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ssswz6z.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ssswz6z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ssswz6z.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ssswz6z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660008690
- exit_code: -1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \"\"\"\n    This function returns the product\
    \ of the odd digits of a given integer.\n    \"\"\"\n    product = 1\n    while\
    \ n>0\n        remainder = mod(n,10)\n        if remainder%2 != 0\n          \
    \  product *= remainder\n        end\n        n = n%10\n    end\n    return product\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008693
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    s = string(n)\n    odd_product = 1\n    for d\
    \ in s\n        if !iseven(parse(Int64, d))\n            odd_product *= parse(Int64,\
    \ d)\n        end\n    end\n    if odd_product == 1\n        return 0\n    else\n\
    \        return odd_product\n    end\nend\n        \n\"\"\"Given a string and\
    \ an index i, return a new string with the ith character\n    removed.\n    For\
    \ example:\n    >>> remove_ith_char(\"apple\", 2)\n    \"aple\"\n    >>> remove_ith_char(\"\
    apple\", 5)\n    \"apple\"\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpb5kig9t3.jl:26\nin expression starting at /tmp/tmpb5kig9t3.jl:26\n"
  stdout: ''
  timestamp: 1660008690
- exit_code: 0
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        if isodd(n)\n            return\
    \ n\n        else\n            return 0\n        end\n    elseif isodd(n%10)\n\
    \        return (n%10)*digits(div(n,10))\n    else\n        return digits(div(n,10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660008689
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    \n    if n < 0\n        return \"The number must\
    \ be positive.\"\n    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpje2t_58c.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpje2t_58c.jl:1\n\
    in expression starting at /tmp/tmpje2t_58c.jl:1\n"
  stdout: ''
  timestamp: 1660008690
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    result = 1\n    while n > 0\n        digit = n\
    \ % 10\n        if digit % 2 != 0\n            result *= digit\n        end\n\
    \        n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvyk0xyrg.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpvyk0xyrg.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyk0xyrg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyk0xyrg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  digit = n % 10\n        return (digit % 2 == 1) ? digit * digits(n \xF7 10)\
    \ : digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpebn8cyvr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpebn8cyvr.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpebn8cyvr.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpebn8cyvr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008691
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    res = 1\n    while n != 0\n        if n % 2 !=\
    \ 0\n            res *= n % 10\n        end\n        n = div(n, 10)\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuwhy0c1x.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpuwhy0c1x.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwhy0c1x.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwhy0c1x.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008691
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    res = 1\n    while n > 0\n        d = n % 10\n\
    \        if d % 2 == 1\n            res *= d\n        end\n        n = (n - d)\
    \ / 10\n    end\n    return res\nend\ndigits(235)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_qz11hx1.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp_qz11hx1.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_qz11hx1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_qz11hx1.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  timestamp: 1660008691
- exit_code: 1
  program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    elseif n%2 !=\
    \ 0\n        return n%10 * digits(n//10)\n    else\n        return digits(n//10)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp2yuldv21.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp2yuldv21.jl:25\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp2yuldv21.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp2yuldv21.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2yuldv21.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2yuldv21.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2yuldv21.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp2yuldv21.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp2yuldv21.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2yuldv21.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2yuldv21.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2yuldv21.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp2yuldv21.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp2yuldv21.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2yuldv21.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2yuldv21.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2yuldv21.jl:28\n  Test threw exception\n  E"
  timestamp: 1660008693

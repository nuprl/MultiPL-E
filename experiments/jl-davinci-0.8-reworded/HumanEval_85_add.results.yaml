language: jl
name: HumanEval_85_add
results:
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in eachindex(lst)\n        if (i % 2 == 1) & (lst[i] % 2 == 0)\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwt30vup6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpwt30vup6.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt30vup6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt30vup6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwt30vup6.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt30vup6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt30vup6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwt30vup6.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt30vup6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt30vup6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwt30vup6.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt30vup6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt30vup6.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if (i % 2 == 1) & (lst[i] % 2 == 0)\n           \
    \ sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwlx9pvh.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpzwlx9pvh.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwlx9pvh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwlx9pvh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwlx9pvh.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwlx9pvh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwlx9pvh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwlx9pvh.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwlx9pvh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwlx9pvh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwlx9pvh.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwlx9pvh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwlx9pvh.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    odd_indices =\
    \ findall(x -> x % 2 != 0, 1:length(lst))\n    odd_indices = odd_indices[1:end-1]\n\
    \    odd_elements = lst[odd_indices]\n    return sum(odd_elements[odd_elements\
    \ .% 2 .== 0])\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpksq1485m.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpksq1485m.jl:19\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksq1485m.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksq1485m.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpksq1485m.jl:20\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 10 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksq1485m.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksq1485m.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpksq1485m.jl:21\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksq1485m.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksq1485m.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpksq1485m.jl:22\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 4 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksq1485m.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksq1485m.jl:18\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if mod(i,2) == 1\n            if mod(lst[i],2) ==\
    \ 0\n                sum = sum + lst[i]\n            end\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_wtpqyxe.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp_wtpqyxe.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_wtpqyxe.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_wtpqyxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_wtpqyxe.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_wtpqyxe.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_wtpqyxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_wtpqyxe.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_wtpqyxe.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_wtpqyxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_wtpqyxe.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_wtpqyxe.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_wtpqyxe.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n        \
    \    total += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj0te_fqf.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpj0te_fqf.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  sum = 0\n  for i\
    \ in eachindex(lst)\n    if i % 2 == 1 && lst[i] % 2 == 0\n      sum += lst[i]\n\
    \    end\n  end\n  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjvdo7wfe.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpjvdo7wfe.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvdo7wfe.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvdo7wfe.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjvdo7wfe.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvdo7wfe.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvdo7wfe.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjvdo7wfe.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvdo7wfe.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvdo7wfe.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjvdo7wfe.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvdo7wfe.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvdo7wfe.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiq0dvpmv.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpiq0dvpmv.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiq0dvpmv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiq0dvpmv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpiq0dvpmv.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiq0dvpmv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiq0dvpmv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpiq0dvpmv.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiq0dvpmv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiq0dvpmv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpiq0dvpmv.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiq0dvpmv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiq0dvpmv.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  tot = 0 \n  for\
    \ i = 1:2:length(lst)\n    tot += lst[i]\n  end\n  return tot\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_txyakky.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp_txyakky.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_txyakky.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_txyakky.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp_txyakky.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_txyakky.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_txyakky.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp_txyakky.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_txyakky.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_txyakky.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp_txyakky.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_txyakky.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_txyakky.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in 1:length(lst)\n        if (i % 2 != 0) && (lst[i] % 2 == 0)\n         \
    \   res += lst[i]\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps5wdxspx.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmps5wdxspx.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5wdxspx.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5wdxspx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmps5wdxspx.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5wdxspx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5wdxspx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmps5wdxspx.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5wdxspx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5wdxspx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmps5wdxspx.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5wdxspx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5wdxspx.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4xvt39rq.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp4xvt39rq.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xvt39rq.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xvt39rq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4xvt39rq.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xvt39rq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xvt39rq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4xvt39rq.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xvt39rq.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xvt39rq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4xvt39rq.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xvt39rq.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xvt39rq.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # add code here\n\
    \    sum = 0\n    for i in 1:length(lst)\n        if(lst[i] % 2 == 0 && i % 2\
    \ != 0)\n            sum += lst[i]\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkq4wklvn.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpkq4wklvn.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkq4wklvn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkq4wklvn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkq4wklvn.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkq4wklvn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkq4wklvn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkq4wklvn.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkq4wklvn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkq4wklvn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkq4wklvn.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkq4wklvn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkq4wklvn.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[odd.(1:length(lst))])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpp0bdrjps.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpp0bdrjps.jl:16\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpp0bdrjps.jl:9\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp0bdrjps.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp0bdrjps.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpp0bdrjps.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  UndefVarError: odd not defined\n \
    \ Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpp0bdrjps.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp0bdrjps.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp0bdrjps.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpp0bdrjps.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpp0bdrjps.jl:9\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp0bdrjps.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp0bdrjps.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpp0bdrjps.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpp0bdrjps.jl:9\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Te"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpna2cldhw.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpna2cldhw.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpna2cldhw.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptqn2kyn.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpptqn2kyn.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = lst[2:2:end]\n\
    \    return sum(evens)\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvuxtjwtk.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpvuxtjwtk.jl:18\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuxtjwtk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuxtjwtk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvuxtjwtk.jl:19\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuxtjwtk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuxtjwtk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:length(lst)\n        if (lst[i] % 2 == 0) && (i % 2 != 0)\n    \
    \        total += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2ao593ay.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp2ao593ay.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ao593ay.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ao593ay.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2ao593ay.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ao593ay.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ao593ay.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2ao593ay.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ao593ay.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ao593ay.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2ao593ay.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ao593ay.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ao593ay.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    j = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            j\
    \ += lst[i]\n        end\n    end\n    return j\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyrqpzhq1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyrqpzhq1.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyrqpzhq1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyrqpzhq1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyrqpzhq1.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyrqpzhq1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyrqpzhq1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyrqpzhq1.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyrqpzhq1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyrqpzhq1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyrqpzhq1.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyrqpzhq1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyrqpzhq1.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    \    pass\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3ty6abr7.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp3ty6abr7.jl:17\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  UndefVarError: pass not defined\n \
    \ Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp3ty6abr7.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ty6abr7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ty6abr7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3ty6abr7.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  UndefVarError: pass not defined\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp3ty6abr7.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ty6abr7.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ty6abr7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3ty6abr7.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp3ty6abr7.jl:10\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ty6abr7.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ty6abr7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3ty6abr7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp3ty6abr7.jl:10\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[i]\
    \ for i in 1:length(lst) if i % 2 == 1 && lst[i] % 2 == 0)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpem6f9kr9.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpem6f9kr9.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem6f9kr9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem6f9kr9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpem6f9kr9.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem6f9kr9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem6f9kr9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpem6f9kr9.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem6f9kr9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem6f9kr9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpem6f9kr9.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem6f9kr9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem6f9kr9.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evenoddsum=0\n\
    \    for i in 1:2:length(lst)\n        if lst[i]%2==0\n            evenoddsum+=lst[i]\n\
    \        end\n    end\n    return evenoddsum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpii3lmv8t.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpii3lmv8t.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpii3lmv8t.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpii3lmv8t.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpii3lmv8t.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpii3lmv8t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpii3lmv8t.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpii3lmv8t.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpii3lmv8t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpii3lmv8t.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpii3lmv8t.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpii3lmv8t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpii3lmv8t.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return lst[1]\
    \ + lst[3]\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp5lf941v2.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp5lf941v2.jl:16\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  BoundsError: attempt to access 2-element\
    \ Vector{Int64} at index [3]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmp5lf941v2.jl:9\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5lf941v2.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5lf941v2.jl:15\ntest set:\
    \ Test Failed at /tmp/tmp5lf941v2.jl:17\n  Expression: candidate([4, 5, 6, 7,\
    \ 2, 122]) == 122\n   Evaluated: 10 == 122\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5lf941v2.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5lf941v2.jl:15\ntest set: Test Failed at /tmp/tmp5lf941v2.jl:18\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lf941v2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lf941v2.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp5lf941v2.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lf941v2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lf941v2.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    3      1"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            total +=\
    \ lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpskmgw9bj.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpskmgw9bj.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskmgw9bj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskmgw9bj.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpskmgw9bj.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskmgw9bj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskmgw9bj.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpskmgw9bj.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskmgw9bj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskmgw9bj.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpskmgw9bj.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskmgw9bj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskmgw9bj.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum::Int64 = 0\n\
    \    for i::Int64 in eachindex(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nprintln(add([4,\
    \ 2, 6, 7]))\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv1xmqyqa.jl:20

    '
  stdout: "10\ntest set: Test Failed at /tmp/tmpv1xmqyqa.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xmqyqa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xmqyqa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv1xmqyqa.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xmqyqa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xmqyqa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv1xmqyqa.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xmqyqa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xmqyqa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv1xmqyqa.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xmqyqa.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xmqyqa.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # Sum of even\
    \ values at odd indices\n    # Your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpcutf35vr.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpcutf35vr.jl:17\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpcutf35vr.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcutf35vr.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcutf35vr.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcutf35vr.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpcutf35vr.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcutf35vr.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcutf35vr.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcutf35vr.jl:19\n  Test threw exception"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # TODO\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5_7q_qei.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp5_7q_qei.jl:16\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp5_7q_qei.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_7q_qei.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_7q_qei.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp5_7q_qei.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp5_7q_qei.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5_7q_qei.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5_7q_qei.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp5_7q_qei.jl:18\n  Test threw exception"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzau9ydbc.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzau9ydbc.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzau9ydbc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzau9ydbc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzau9ydbc.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzau9ydbc.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzau9ydbc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzau9ydbc.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzau9ydbc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzau9ydbc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzau9ydbc.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzau9ydbc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzau9ydbc.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    lst = [lst[i]\
    \ for i in 1:length(lst) if lst[i] % 2 == 0 && i % 2 != 0]\n    return sum(lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmp4x2dd1.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpmp4x2dd1.jl:17\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp4x2dd1.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp4x2dd1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmp4x2dd1.jl:18\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp4x2dd1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp4x2dd1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmp4x2dd1.jl:19\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp4x2dd1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp4x2dd1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmp4x2dd1.jl:20\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp4x2dd1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp4x2dd1.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i = 1:2:length(lst)\n        if iseven(lst[i])\n            total += lst[i]\n\
    \        end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\n\
    candidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5or3lyls.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5or3lyls.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for (i, v) in enumerate(lst)\n        if iseven(i) & iseven(v)\n    \
    \        count += v\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008977
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ (i,e) in enumerate(lst)\n        if (i % 2 != 0) && (e % 2 == 0)\n         \
    \   res += e\n        end\n    end\n    return res\nend\n        \nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqi7z2h0f.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpqi7z2h0f.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi7z2h0f.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi7z2h0f.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqi7z2h0f.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi7z2h0f.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi7z2h0f.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqi7z2h0f.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi7z2h0f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi7z2h0f.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqi7z2h0f.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi7z2h0f.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi7z2h0f.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum=0\n    for\
    \ (i, num) in enumerate(lst)\n        if (i%2!=0) & (num%2==0)\n            sum=sum+num\n\
    \        end\n    end\n    return sum\nend\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcv2m18w3.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpcv2m18w3.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv2m18w3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv2m18w3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcv2m18w3.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv2m18w3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv2m18w3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcv2m18w3.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv2m18w3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv2m18w3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcv2m18w3.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv2m18w3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv2m18w3.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 == 1\n            res += lst[i]\n     \
    \   end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmmltscrs.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpmmltscrs.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmltscrs.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmltscrs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmmltscrs.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmltscrs.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmltscrs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmmltscrs.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmltscrs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmltscrs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmmltscrs.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmltscrs.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmltscrs.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 2:2:endof(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxons96al.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpxons96al.jl:20\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  UndefVarError: endof not defined\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpxons96al.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxons96al.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxons96al.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxons96al.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  UndefVarError: endof not defined\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpxons96al.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxons96al.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxons96al.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxons96al.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  UndefVarError: endof not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpxons96al.jl:10\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxons96al.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxons96al.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxons96al.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  UndefVarError: endof not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpxons96al.jl:10\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inl"
  timestamp: 1660008980
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo48qb016.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpo48qb016.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ (i,v) in enumerate(lst)\n        if v % 2 == 0 && i % 2 != 0\n            s\
    \ += v\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2xj2w9pw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp2xj2w9pw.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xj2w9pw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xj2w9pw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2xj2w9pw.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xj2w9pw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xj2w9pw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2xj2w9pw.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xj2w9pw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xj2w9pw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2xj2w9pw.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xj2w9pw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xj2w9pw.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            n += lst[i]\n\
    \        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpguwvkmv5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpguwvkmv5.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguwvkmv5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguwvkmv5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpguwvkmv5.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguwvkmv5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguwvkmv5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpguwvkmv5.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguwvkmv5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguwvkmv5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpguwvkmv5.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguwvkmv5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguwvkmv5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    if lst[2] == 0\
    \ \n        return lst[2]\n    else \n        return lst[2] + add(lst[3:end])\n\
    \    end\nend \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpws6lqadw.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpws6lqadw.jl:20\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpws6lqadw.jl:9\n\
    \   [3] add(lst::Vector{Int64})\n     @ Main /tmp/tmpws6lqadw.jl:12\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpws6lqadw.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpws6lqadw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpws6lqadw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpws6lqadw.jl:9\n\
    \   [3] add(lst::Vector{Int64}) (repeats 3 times)\n     @ Main /tmp/tmpws6lqadw.jl:12\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpws6lqadw.jl:21 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpws6lqadw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpws6lqadw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  BoundsError: attempt to access 0-element Vector{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpws6lqadw.jl:9\n   [3] add(lst::Vector{Int64})\
    \ (repeats 2 times)\n     @ Main /tmp/tmpws6lqadw.jl:12\n   [4] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpws6lqadw.jl:23 [inlined]\n   [6] macro\
    \ expans"
  timestamp: 1660008980
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    num_even_odds\
    \ = 0 \n    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n           \
    \ num_even_odds += lst[i]\n        end\n    end\n    return num_even_odds\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpct55w0dx.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpct55w0dx.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpct55w0dx.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpct55w0dx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpct55w0dx.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpct55w0dx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpct55w0dx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpct55w0dx.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpct55w0dx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpct55w0dx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpct55w0dx.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpct55w0dx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpct55w0dx.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wd6qt9p.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8wd6qt9p.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpna2cldhw.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpna2cldhw.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpna2cldhw.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n   sum_even(filter(i->(i%2==0)\
    \ &&(lst[i]%2==0),1:length(lst)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjpry1bfz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpjpry1bfz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  UndefVarError: sum_even not defined\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpjpry1bfz.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpry1bfz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpry1bfz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpjpry1bfz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  UndefVarError: sum_even not defined\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpjpry1bfz.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpry1bfz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpry1bfz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpjpry1bfz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  UndefVarError: sum_even not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpjpry1bfz.jl:9\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpry1bfz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpry1bfz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpjpry1bfz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  UndefVarError: sum_even not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpjpry1bfz.jl:9\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:"
  timestamp: 1660008980
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \n    # Int64\
    \ is the output type.\n    # The input, lst, is a non-empty vector of integers.\n\
    \    \n    # Evens are divisible by 2.\n    # Odd indices are 1, 3, 5, etc.\n\
    \    \n    # This problem is particularly difficult.\n    # We need to filter\
    \ out the odd indices first, and then \n    # filter out the even elements, and\
    \ then add them.\n    \n    # In Python, we could do it with list comprehensions.\n\
    \    # In Julia, they don't exist. We have to use filter instead.\n    \n    #\
    \ I know that the output has to be an Int64, so I can immediately write a return\
    \ statement.\n    # I've got to filter out the even elements that are at odd indices.\n\
    \    # That's the difficult part. I can do it using modulos.\n    # Modulos is\
    \ the remainder of a division, in this case, the remainder of two.\n    # If the\
    \ remainder is zero, then the element is divisible by two.\n    # I know that\
    \ I want to add the even elements that are at odd indices.\n    # Since each number\
    \ is a pair, I'll use an index to determine the pairs.\n    # And I want to add\
    \ the even elements of these pairs.\n    # So I use a modulo of two on the index.\n\
    \    # If the index has a remainder of zero, then it's an even index.\n    # I\
    \ only want to add the even elements of the odd pairs.\n    # Which means I want\
    \ to filter out the elements with modulo zero.\n    # I'm basically trying to\
    \ do a filter on a filter here.\n    # I also want to add them, so I'll need a\
    \ sum function.\n    # The sum function takes an iterable and adds the elements\
    \ of that iterable.\n    # I know that I want to start from the second element\
    \ of the vector,\n    # so I use 2:end.\n    # So I know that I want to do sum(filter(x\
    \ -> x % 2 == 0, lst[2:end]))\n    # So the output type will be an Int64.\n  \
    \  # The function itself will add the even elements of the odd pairs.\n    # I've\
    \ got to filter out the even elements of the odd\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfbz8goct.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfbz8goct.jl:1\n\
    in expression starting at /tmp/tmpfbz8goct.jl:1\n"
  stdout: ''
  timestamp: 1660008978
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum=0\n    for\
    \ i in 1:2:length(lst)\n        sum+=lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4y00iqqu.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp4y00iqqu.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y00iqqu.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y00iqqu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y00iqqu.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y00iqqu.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y00iqqu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y00iqqu.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y00iqqu.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y00iqqu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y00iqqu.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y00iqqu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y00iqqu.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_sum = 0\n\
    \    for i = 1:2:length(lst)\n        if lst[i] % 2 == 0\n            even_sum\
    \ += lst[i]\n        end\n    end\n    return even_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppypty2n_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmppypty2n_.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppypty2n_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppypty2n_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppypty2n_.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppypty2n_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppypty2n_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppypty2n_.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppypty2n_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppypty2n_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppypty2n_.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppypty2n_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppypty2n_.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        sum += lst[i] if i % 2 == 1 && lst[i] % 2 == 0\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpf8e7maj2.jl:10 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf8e7maj2.jl:11\n\
    in expression starting at /tmp/tmpf8e7maj2.jl:11\n"
  stdout: ''
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(!isodd,\
    \ lst)\n    odds = filter(isodd, evens)\n    return sum(odds)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp7i8zp00.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpp7i8zp00.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7i8zp00.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7i8zp00.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpp7i8zp00.jl:19\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 0 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7i8zp00.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7i8zp00.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpp7i8zp00.jl:21\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7i8zp00.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7i8zp00.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum = sum + lst[i]\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpum7e_zvb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpum7e_zvb.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    z::Int64 = 0\n\
    \    for i::Int64 in eachindex(lst)\n        if (i % 2 == 1) & (lst[i] % 2 ==\
    \ 0)\n            z += lst[i]\n        end\n    end\n    return z\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn2awachp.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpn2awachp.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2awachp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2awachp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpn2awachp.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2awachp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2awachp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpn2awachp.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2awachp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2awachp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpn2awachp.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2awachp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2awachp.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(x for\
    \ (i, x) in enumerate(lst) if i % 2 == 1 && x % 2 == 0)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbldxgt_p.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpbldxgt_p.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw5z3khtf.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpw5z3khtf.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5z3khtf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5z3khtf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw5z3khtf.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5z3khtf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5z3khtf.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(x\
    \ -> x % 2 == 0, lst)\n    res = sum(evens)\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7pr4nybi.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp7pr4nybi.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 92 == 88\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7pr4nybi.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7pr4nybi.jl:17\ntest set: Test Failed at /tmp/tmp7pr4nybi.jl:19\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pr4nybi.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pr4nybi.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7pr4nybi.jl:20\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pr4nybi.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pr4nybi.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7pr4nybi.jl:21\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 22 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pr4nybi.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pr4nybi.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0 \n \
    \   for i = 1:length(lst)\n        element = lst[i]\n        if i % 2 != 0 \n\
    \            if element % 2 == 0 \n                total += element\n        \
    \    end\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2dp3obcm.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp2dp3obcm.jl:25\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dp3obcm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dp3obcm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2dp3obcm.jl:26\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dp3obcm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dp3obcm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2dp3obcm.jl:27\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dp3obcm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dp3obcm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2dp3obcm.jl:28\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dp3obcm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dp3obcm.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # Get the indices\
    \ at which lst is odd\n    odd_index_lst = findall(!isodd.(eachindex(lst)))\n\
    \    # Get even elements at odd indices\n    even_at_odd = lst[odd_index_lst]\n\
    \    # Get only the even elements\n    even_lst = filter(isodd, even_at_odd)\n\
    \    # Add the even elements at odd indices\n    sum_even_at_odd = sum(even_lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_cp8v6x8.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp_cp8v6x8.jl:23\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  MethodError: no method matching !(::BitVector)\n\
    \  Closest candidates are:\n    !(!Matched::Function) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:1117\n\
    \    !(!Matched::Bool) at ~/.conda/envs/polyglot/share/julia/base/bool.jl:35\n\
    \    !(!Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:101\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp_cp8v6x8.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_cp8v6x8.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_cp8v6x8.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_cp8v6x8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  MethodError: no method matching !(::BitVector)\n\
    \  Closest candidates are:\n    !(!Matched::Function) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:1117\n\
    \    !(!Matched::Bool) at ~/.conda/envs/polyglot/share/julia/base/bool.jl:35\n\
    \    !(!Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:101\n\
    \  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp_cp8v6x8.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_cp8v6x8.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_cp8v6x8.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_cp8v6x8.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  MethodError: no method matching !(::BitVector)\n\
    \  Closest candidates are:\n    !(!Matched::Function) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:1117\n\
    \    !(!Matched::Bool) at ~/.conda/envs/polyglot/shar"
  timestamp: 1660008983
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    x = Int64[]\n\
    \    for i in eachindex(lst)\n        if rem(i,2) == 1 && rem(lst[i],2) == 0\n\
    \            push!(x,lst[i])\n        end\n    end\n    return sum(x)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp7qk4v0y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpp7qk4v0y.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7qk4v0y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7qk4v0y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpp7qk4v0y.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7qk4v0y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7qk4v0y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpp7qk4v0y.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7qk4v0y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7qk4v0y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpp7qk4v0y.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7qk4v0y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7qk4v0y.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo48qb016.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpo48qb016.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(filter(x\
    \ -> x % 2 == 0, lst[1:2:end]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplvapuamx.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplvapuamx.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    output = 0\n \
    \   for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n       \
    \     output += lst[i]\n        end\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc2kfxzf5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpc2kfxzf5.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2kfxzf5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2kfxzf5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpc2kfxzf5.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2kfxzf5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2kfxzf5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpc2kfxzf5.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2kfxzf5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2kfxzf5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpc2kfxzf5.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2kfxzf5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2kfxzf5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    acc::Int64 = 0\n\
    \    for i in 1:length(lst)\n        if i % 2 == 1 && lst[i] % 2 == 0\n      \
    \      acc += lst[i]\n        end\n    end\n    return acc\nend\n#1 add([4, 2,\
    \ 6, 7])\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp332uh4ug.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp332uh4ug.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp332uh4ug.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp332uh4ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp332uh4ug.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp332uh4ug.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp332uh4ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp332uh4ug.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp332uh4ug.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp332uh4ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp332uh4ug.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp332uh4ug.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp332uh4ug.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    x = 0\n    for\
    \ i in 1:length(lst)\n        if lst[i] % 2 == 0 && i % 2 != 0\n            x\
    \ += lst[i]\n        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplb2j0twz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmplb2j0twz.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplb2j0twz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplb2j0twz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplb2j0twz.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplb2j0twz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplb2j0twz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplb2j0twz.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplb2j0twz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplb2j0twz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplb2j0twz.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplb2j0twz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplb2j0twz.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    #collect odd indices\n\
    \    oddindices = 1:2:length(lst)\n    # check if the element of each of the odd\
    \ indices is even\n    even_odd_indices = lst[oddindices] .% 2 == 0\n    sum(even_odd_indices\
    \ .* lst[oddindices])\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvjk2p8we.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpvjk2p8we.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjk2p8we.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjk2p8we.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvjk2p8we.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 0 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjk2p8we.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjk2p8we.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvjk2p8we.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjk2p8we.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjk2p8we.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    z = 0\n    for\
    \ i in 1:length(lst)\n        if (i % 2 == 1) & (lst[i] % 2 == 0)\n          \
    \  z += lst[i]\n        end\n    end\n    return z\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi_1dxps3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpi_1dxps3.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_1dxps3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_1dxps3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi_1dxps3.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_1dxps3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_1dxps3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi_1dxps3.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_1dxps3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_1dxps3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi_1dxps3.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_1dxps3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_1dxps3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # Add 2 to the\
    \ sum of even numbers that are\n    # at odd indices (1st, 3rd, etc.).\n    return\
    \ 2 + sum(x for (i, x) in enumerate(lst) if x % 2 == 0 && i % 2 == 1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6mopisue.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp6mopisue.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 6 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6mopisue.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6mopisue.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6mopisue.jl:19\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 14 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6mopisue.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6mopisue.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6mopisue.jl:20\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 12 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6mopisue.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6mopisue.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:length(lst)\n        if lst[i] % 2 == 0\n            total += lst[i]\n\
    \        end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\n\
    candidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp605wp_q_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp605wp_q_.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 92 == 88\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp605wp_q_.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp605wp_q_.jl:21\ntest set: Test Failed at /tmp/tmp605wp_q_.jl:23\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp605wp_q_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp605wp_q_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp605wp_q_.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp605wp_q_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp605wp_q_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp605wp_q_.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 22 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp605wp_q_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp605wp_q_.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_at_odd =\
    \ 0 \n    for i in eachindex(lst)\n        if (lst[i] % 2 == 0) && (i % 2 != 0)\n\
    \            even_at_odd += lst[i]\n        end\n    end\n    return even_at_odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuewaxboa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpuewaxboa.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuewaxboa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuewaxboa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuewaxboa.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuewaxboa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuewaxboa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuewaxboa.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuewaxboa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuewaxboa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuewaxboa.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuewaxboa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuewaxboa.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    thesum = 0\n \
    \   for i = 1:2:length(lst)\n        thesum += lst[i]\n    end\n    return thesum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm6t823in.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpm6t823in.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6t823in.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6t823in.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpm6t823in.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6t823in.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6t823in.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpm6t823in.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6t823in.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6t823in.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpm6t823in.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6t823in.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6t823in.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008983
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \"\"\"Given a\
    \ non-empty vector of integers lst. add the even elements that are at odd indices..\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqv3huar1.jl:1\nin expression starting at /tmp/tmpqv3huar1.jl:1\n"
  stdout: ''
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    x = 0\n    for\
    \ i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            x += lst[i]\n\
    \        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjkg1hktz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpjkg1hktz.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkg1hktz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkg1hktz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjkg1hktz.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkg1hktz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkg1hktz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjkg1hktz.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkg1hktz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkg1hktz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjkg1hktz.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkg1hktz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkg1hktz.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008983
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = lst[1:2:end]\n\
    \    total = 0\n    for x in evens\n        total += x\n    end\n    return total\n\
    end\nadd([4, 2, 6, 7])\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7ywdwu1q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp7ywdwu1q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ywdwu1q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ywdwu1q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7ywdwu1q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ywdwu1q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ywdwu1q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7ywdwu1q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ywdwu1q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ywdwu1q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7ywdwu1q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ywdwu1q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ywdwu1q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:2:length(lst)\n        total += lst[i]\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpczcqwwbu.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpczcqwwbu.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczcqwwbu.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczcqwwbu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpczcqwwbu.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczcqwwbu.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczcqwwbu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpczcqwwbu.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczcqwwbu.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczcqwwbu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpczcqwwbu.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczcqwwbu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczcqwwbu.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    n = length(lst)\n\
    \    # Initialize sum \n    s = 0\n    \n    # Iterate over the vector\n    for\
    \ i in 1:n\n        # Add even elements in odd positions\n        if lst[i] %\
    \ 2 == 0 && i % 2 != 0\n            s += lst[i]\n        end\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp77d12evj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp77d12evj.jl:27\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77d12evj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77d12evj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp77d12evj.jl:28\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77d12evj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77d12evj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp77d12evj.jl:29\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77d12evj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77d12evj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp77d12evj.jl:30\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77d12evj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77d12evj.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in eachindex(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\n@show add([4, 2, 6, 7])\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg9w2gym3.jl:20

    '
  stdout: "add([4, 2, 6, 7]) = 10\ntest set: Test Failed at /tmp/tmpg9w2gym3.jl:23\n\
    \  Expression: candidate([4, 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9w2gym3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9w2gym3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpg9w2gym3.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9w2gym3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9w2gym3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpg9w2gym3.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9w2gym3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9w2gym3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpg9w2gym3.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9w2gym3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9w2gym3.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if mod(i,2) == 1 && mod(lst[i],2) == 0\n        \
    \    sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiaoriuat.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpiaoriuat.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaoriuat.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaoriuat.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpiaoriuat.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaoriuat.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaoriuat.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpiaoriuat.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaoriuat.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaoriuat.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpiaoriuat.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaoriuat.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaoriuat.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum_even_odd_index_int\
    \ = 0\n    for i in 1:length(lst)\n        if mod(i,2) != 0 && mod(lst[i],2) ==\
    \ 0\n            sum_even_odd_index_int += lst[i]\n        end\n    end\n    return\
    \ sum_even_odd_index_int\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpav386d36.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpav386d36.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav386d36.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav386d36.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpav386d36.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav386d36.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav386d36.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpav386d36.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav386d36.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav386d36.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpav386d36.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav386d36.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav386d36.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i = 1:2:length(lst)\n        if lst[i] % 2 == 0\n            s += lst[i]\n \
    \       end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_hwc8xy7.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp_hwc8xy7.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hwc8xy7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hwc8xy7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp_hwc8xy7.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hwc8xy7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hwc8xy7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp_hwc8xy7.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hwc8xy7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hwc8xy7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp_hwc8xy7.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hwc8xy7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hwc8xy7.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i in 1:2:length(lst)\n        s = s + lst[i]\n    end\n    return s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9jb2578v.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp9jb2578v.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jb2578v.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jb2578v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp9jb2578v.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jb2578v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jb2578v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp9jb2578v.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jb2578v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jb2578v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp9jb2578v.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jb2578v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jb2578v.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    r = 0\n    for\
    \ i in 1:2:length(lst)\n        r = r + lst[i]\n    end\n    return r\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqul0orgw.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpqul0orgw.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqul0orgw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqul0orgw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqul0orgw.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqul0orgw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqul0orgw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqul0orgw.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqul0orgw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqul0orgw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqul0orgw.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqul0orgw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqul0orgw.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(x for\
    \ (i, x) in enumerate(lst) if i % 2 == 1 && x % 2 == 0)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbldxgt_p.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpbldxgt_p.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpbldxgt_p.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbldxgt_p.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbldxgt_p.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpenrj6ut9.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpenrj6ut9.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenrj6ut9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenrj6ut9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenrj6ut9.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenrj6ut9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenrj6ut9.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008984
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    i::Int64 = 0\n\
    \    even_el::Int64 = 0\n    for el in lst\n        if mod(i, 2) == 1 \n     \
    \       if mod(el, 2) == 0\n                even_el += el\n            end\n \
    \       end\n        i += 1\n    end\n    return even_el\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008983
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wd6qt9p.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8wd6qt9p.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    n::Int64 = 0\n\
    \    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            n += lst[i]\n\
    \        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6jrfy3i1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp6jrfy3i1.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jrfy3i1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jrfy3i1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6jrfy3i1.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jrfy3i1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jrfy3i1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6jrfy3i1.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jrfy3i1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jrfy3i1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6jrfy3i1.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jrfy3i1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jrfy3i1.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_odd_indices\
    \ = filter(i -> i%2==0, lst[1:2:end])\n    return sum(even_odd_indices)\nend\n\
    println(add([4, 2, 6, 7]))\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp05beacn0.jl:15

    '
  stdout: "10\ntest set: Test Failed at /tmp/tmp05beacn0.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05beacn0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05beacn0.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp05beacn0.jl:19\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05beacn0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05beacn0.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp05beacn0.jl:20\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05beacn0.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05beacn0.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp05beacn0.jl:21\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05beacn0.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05beacn0.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_lst = [lst[i]\
    \ for i in 1:length(lst) if iseven(i) && !iseven(lst[i])]\n    sum(even_lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjh7vphus.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpjh7vphus.jl:17\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjh7vphus.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjh7vphus.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjh7vphus.jl:18\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjh7vphus.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjh7vphus.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjh7vphus.jl:19\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjh7vphus.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjh7vphus.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjh7vphus.jl:20\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjh7vphus.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjh7vphus.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    result = 0\n \
    \   for i in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 ==\
    \ 0\n                result += lst[i]\n            end\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\
    \t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1o5sjxs8.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp1o5sjxs8.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o5sjxs8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o5sjxs8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1o5sjxs8.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o5sjxs8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o5sjxs8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1o5sjxs8.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o5sjxs8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o5sjxs8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1o5sjxs8.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o5sjxs8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o5sjxs8.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ (index, val) in enumerate(lst)\n        if (index % 2 != 0) && (val % 2 == 0)\n\
    \            sum += val\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp39swu2lk.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp39swu2lk.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39swu2lk.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39swu2lk.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp39swu2lk.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39swu2lk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39swu2lk.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp39swu2lk.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39swu2lk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39swu2lk.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp39swu2lk.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39swu2lk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39swu2lk.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    out = 0\n    for\
    \ i in 2:2:length(lst)\n        out += lst[i]\n    end\n    return out\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7fa9zq32.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp7fa9zq32.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fa9zq32.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fa9zq32.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp7fa9zq32.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fa9zq32.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fa9zq32.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    i::Int64 = 0\n\
    \    s::Int64 = 0\n    while i<length(lst)\n        if i%2==1 && lst[i]%2==0\n\
    \            s = s + lst[i]\n        end\n        i = i + 1\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc4x4d63o.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpc4x4d63o.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4x4d63o.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4x4d63o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc4x4d63o.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4x4d63o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4x4d63o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc4x4d63o.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4x4d63o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4x4d63o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc4x4d63o.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4x4d63o.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4x4d63o.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo48qb016.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpo48qb016.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \n    sum = 0\n\
    \    for i in 1:2:length(lst)\n        if(lst[i] % 2 == 0)\n            sum +=\
    \ lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_gmogrw_.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp_gmogrw_.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_gmogrw_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_gmogrw_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_gmogrw_.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_gmogrw_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_gmogrw_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_gmogrw_.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_gmogrw_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_gmogrw_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_gmogrw_.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_gmogrw_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_gmogrw_.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even(x) = x %\
    \ 2 == 0\n    total = 0\n    for i in 2:2:length(lst)\n        if even(lst[i])\
    \ \n            total += lst[i]\n        end\n    end\n    return total\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008983
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # start your code\
    \ here\n    sum=0\n    for i in lst\n        if i%2==0 && i%4==0\n           \
    \ sum=sum+i\n        end\n    end\n    return sum\n    # end your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfr6845d9.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpfr6845d9.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 92 == 88\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfr6845d9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfr6845d9.jl:23\ntest set: Test Failed at /tmp/tmpfr6845d9.jl:25\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 4 == 122\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfr6845d9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfr6845d9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfr6845d9.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfr6845d9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfr6845d9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfr6845d9.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 16 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfr6845d9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfr6845d9.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i = 1:2:length(lst)\n        res += lst[i]\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpucd3xl4e.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpucd3xl4e.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucd3xl4e.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucd3xl4e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpucd3xl4e.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucd3xl4e.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucd3xl4e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpucd3xl4e.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucd3xl4e.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucd3xl4e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpucd3xl4e.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucd3xl4e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucd3xl4e.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008985
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    suma=0\n    for\
    \ i in 1:length(lst)\n        if i%2==1 && lst[i]%2==0\n            suma+=lst[i]\n\
    \        end\n    end\n    return suma\nend\nusing Test\n\n@testset begin\n\n\
    candidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprkonopk9.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprkonopk9.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkonopk9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkonopk9.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprkonopk9.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkonopk9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkonopk9.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprkonopk9.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkonopk9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkonopk9.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprkonopk9.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkonopk9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkonopk9.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ (i, x) in enumerate(lst)\n        if i % 2 == 1 && x % 2 == 0\n            s\
    \ += x\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5y7wrabi.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5y7wrabi.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y7wrabi.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y7wrabi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5y7wrabi.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y7wrabi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y7wrabi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5y7wrabi.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y7wrabi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y7wrabi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5y7wrabi.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y7wrabi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y7wrabi.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for i in 1:length(lst)\n        if (lst[i] % 2 == 0) & (i % 2 != 0)\n   \
    \         counter += lst[i]\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi12en_vm.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpi12en_vm.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi12en_vm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi12en_vm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi12en_vm.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi12en_vm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi12en_vm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi12en_vm.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi12en_vm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi12en_vm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpi12en_vm.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi12en_vm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi12en_vm.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum = sum + lst[i]\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpum7e_zvb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpum7e_zvb.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n   return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdl1rkrqs.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpdl1rkrqs.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdl1rkrqs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdl1rkrqs.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpdl1rkrqs.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdl1rkrqs.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdl1rkrqs.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for (i, x) in enumerate(lst)\n        if i % 2 == 1 && x % 2 == 0\n       \
    \     total += x\n        end\n    end\n    return total\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnvjui4no.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpnvjui4no.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvjui4no.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvjui4no.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnvjui4no.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvjui4no.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvjui4no.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnvjui4no.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvjui4no.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvjui4no.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnvjui4no.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvjui4no.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvjui4no.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    if length(lst)\
    \ == 1\n        return lst[1]\n    elseif lst[2] % 2 == 0\n        return lst[2]\
    \ + add(lst[3:end])\n    else\n        return add(lst[3:end])\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpq8vvzd6k.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpq8vvzd6k.jl:22\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpq8vvzd6k.jl:11\n\
    \   [3] add(lst::Vector{Int64})\n     @ Main /tmp/tmpq8vvzd6k.jl:12\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpq8vvzd6k.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpq8vvzd6k.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpq8vvzd6k.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpq8vvzd6k.jl:11\n\
    \   [3] add(lst::Vector{Int64})\n     @ Main /tmp/tmpq8vvzd6k.jl:12\n   [4] add(lst::Vector{Int64})\
    \ (repeats 2 times)\n     @ Main /tmp/tmpq8vvzd6k.jl:14\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpq8vvzd6k.jl:23 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpq8vvzd6k.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpq8vvzd6k.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  BoundsError: attempt to access 0-element Vector{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpq8vvzd6k.jl:11\n   [3] add(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmpq8vvzd6k.jl:14\n   [4] add(lst::Vector{Int64})\n     @ Main\
    \ /tmp/tmpq8vvzd6k.jl:12\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s=0\n    for i\
    \ in 1:length(lst)\n        if (lst[i]%2==0)&&(i%2!=0)\n            s=s+lst[i]\n\
    \        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvtldpxl2.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpvtldpxl2.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtldpxl2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtldpxl2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtldpxl2.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtldpxl2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtldpxl2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtldpxl2.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtldpxl2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtldpxl2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvtldpxl2.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtldpxl2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtldpxl2.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in eachindex(lst)\n        if i % 2 == 1 && lst[i] % 2 == 0\n       \
    \     total += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvehoqpmg.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpvehoqpmg.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvehoqpmg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvehoqpmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvehoqpmg.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvehoqpmg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvehoqpmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvehoqpmg.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvehoqpmg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvehoqpmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvehoqpmg.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvehoqpmg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvehoqpmg.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in eachindex(lst)\n        if (i % 2 != 0) && (lst[i] % 2 == 0)\n        \
    \    sum += lst[i]\n        end\n    end\n    return sum\nend\nprintln(add([4,\
    \ 2, 6, 7]))\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq0n6h7jx.jl:20

    '
  stdout: "10\ntest set: Test Failed at /tmp/tmpq0n6h7jx.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0n6h7jx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0n6h7jx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq0n6h7jx.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0n6h7jx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0n6h7jx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq0n6h7jx.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0n6h7jx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0n6h7jx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq0n6h7jx.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0n6h7jx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0n6h7jx.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in eachindex(lst)\n        if i % 2 != 0\n            sum += lst[i]\n    \
    \    end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq5nmc28z.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpq5nmc28z.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5nmc28z.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5nmc28z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpq5nmc28z.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5nmc28z.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5nmc28z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpq5nmc28z.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5nmc28z.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5nmc28z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpq5nmc28z.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5nmc28z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5nmc28z.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wd6qt9p.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8wd6qt9p.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(filter(x\
    \ -> x % 2 == 0, lst[1:2:end]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplvapuamx.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplvapuamx.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplvapuamx.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvapuamx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvapuamx.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008982
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i = 1:2:length(lst)\n        total += lst[i]\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4_wxd8t3.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp4_wxd8t3.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_wxd8t3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_wxd8t3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4_wxd8t3.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_wxd8t3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_wxd8t3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4_wxd8t3.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_wxd8t3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_wxd8t3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4_wxd8t3.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_wxd8t3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_wxd8t3.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return reduce(+,\
    \ filter(x -> x%2==0 && isodd(indexof(lst, x)), lst))\nend\n@test add([4, 2, 6,\
    \ 7]) == 2\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpxg8fx7en.jl:11

    in expression starting at /tmp/tmpxg8fx7en.jl:11

    '
  stdout: ''
  timestamp: 1660008986
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            res += lst[i]\n\
    \        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbranqxsd.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpbranqxsd.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbranqxsd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbranqxsd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbranqxsd.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbranqxsd.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbranqxsd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbranqxsd.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbranqxsd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbranqxsd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbranqxsd.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbranqxsd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbranqxsd.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum::Int64 = 0\n\
    \    for i in eachindex(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphfyy8xjo.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmphfyy8xjo.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfyy8xjo.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfyy8xjo.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphfyy8xjo.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfyy8xjo.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfyy8xjo.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphfyy8xjo.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfyy8xjo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfyy8xjo.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphfyy8xjo.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfyy8xjo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfyy8xjo.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens_at_odds\
    \ = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            evens_at_odds\
    \ += lst[i]\n        end\n    end\n    return evens_at_odds\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphiev4eji.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmphiev4eji.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphiev4eji.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphiev4eji.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphiev4eji.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphiev4eji.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphiev4eji.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphiev4eji.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphiev4eji.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphiev4eji.jl:21\ntest set: Test\
    \ Failed at /tmp/tmphiev4eji.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphiev4eji.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphiev4eji.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    x = 0\n    for\
    \ i in range(1,length(lst),2)\n        if (lst[i] % 2 == 0)\n            x +=\
    \ lst[i]\n        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsqo9iwjp.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpsqo9iwjp.jl:22\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  ArgumentError: invalid index: 1.0 of\
    \ type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] add(lst::Vector{Int64})\n      @ Main /tmp/tmpsqo9iwjp.jl:11\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpsqo9iwjp.jl:22 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpsqo9iwjp.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsqo9iwjp.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  ArgumentError: invalid index: 1.0\
    \ of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] add(lst::Vector{Int64})\n      @ Main /tmp/tmpsqo9iwjp.jl:11\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpsqo9iwjp.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpsqo9iwjp.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsqo9iwjp.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  ArgumentError: invalid index: 1.0 of type Float64\n\
    \  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n "
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if (i % 2 != 0) & (lst[i] % 2 == 0)\n          \
    \  sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbjsjq37z.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpbjsjq37z.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjsjq37z.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjsjq37z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbjsjq37z.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjsjq37z.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjsjq37z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbjsjq37z.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjsjq37z.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjsjq37z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbjsjq37z.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjsjq37z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjsjq37z.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for(i,\
    \ e) in enumerate(lst)\n        if (e % 2 == 0) & (i % 2 != 0)\n            sum\
    \ += e\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpah74_kzy.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpah74_kzy.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah74_kzy.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah74_kzy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpah74_kzy.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah74_kzy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah74_kzy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpah74_kzy.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah74_kzy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah74_kzy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpah74_kzy.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah74_kzy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah74_kzy.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprlk4nobd.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprlk4nobd.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlk4nobd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlk4nobd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprlk4nobd.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlk4nobd.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlk4nobd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprlk4nobd.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlk4nobd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlk4nobd.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprlk4nobd.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlk4nobd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlk4nobd.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i = 1:2:length(lst)\n        if iseven(lst[i])\n            total += lst[i]\n\
    \        end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\n\
    candidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5or3lyls.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp5or3lyls.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5or3lyls.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5or3lyls.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5or3lyls.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wd6qt9p.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8wd6qt9p.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 2:2:length(lst)\n        total += lst[i]\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu1w2815k.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpu1w2815k.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1w2815k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1w2815k.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpu1w2815k.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1w2815k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1w2815k.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if lst[i] % 2 == 0 && i % 2 != 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nadd([4, 2, 6, 7])\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpapso0x_u.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpapso0x_u.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapso0x_u.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapso0x_u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpapso0x_u.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapso0x_u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapso0x_u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpapso0x_u.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapso0x_u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapso0x_u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpapso0x_u.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapso0x_u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapso0x_u.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    my_sum = 0\n \
    \   for i in 1:length(lst)\n        if (lst[i] % 2 == 0) && (i % 2 != 0)\n   \
    \         my_sum += lst[i]\n        end\n    end\n    return my_sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp16q4zhub.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp16q4zhub.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16q4zhub.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16q4zhub.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp16q4zhub.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16q4zhub.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16q4zhub.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp16q4zhub.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16q4zhub.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16q4zhub.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp16q4zhub.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16q4zhub.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16q4zhub.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    p::Int64 = 0 \n\
    \    for i in 1:2:length(lst)\n        p = p + lst[i]\n    end\n    return p\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4y4ylpda.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp4y4ylpda.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y4ylpda.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y4ylpda.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y4ylpda.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y4ylpda.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y4ylpda.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y4ylpda.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y4ylpda.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y4ylpda.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4y4ylpda.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4y4ylpda.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4y4ylpda.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for (index, element) in enumerate(lst)\n        if index % 2 != 0 && element\
    \ % 2 == 0\n            counter += element\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp90ktfnrg.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp90ktfnrg.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ktfnrg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ktfnrg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp90ktfnrg.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ktfnrg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ktfnrg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp90ktfnrg.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ktfnrg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ktfnrg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp90ktfnrg.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ktfnrg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ktfnrg.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008989
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in eachindex(lst)\n        res += (lst[i] % 2 == 0) && (i % 2 == 1) ? lst[i]\
    \ : 0\n    end\n    return res\nend\n```\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphni8wtup.jl:15\nin expression starting at\
    \ /tmp/tmphni8wtup.jl:15\n"
  stdout: ''
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \n    # initialize\
    \ your answer\n    sum = 0\n    \n    # add all even numbers at odd indices\n\
    \    # use 0-based indexing\n    # if the number is at an even index, don't add\
    \ it \n    # if the number is at an odd index, add it if it is an even number\n\
    \    # hint: use the keyword \"continue\" to exit the current iteration and continue\
    \ to the next iteration of the loop\n    # hint: you can use \"if\" or \"if/else\"\
    \ statements in a \"for\" loop\n    # hint: you can use the \"mod\" operator to\
    \ check if a number is even \n    # hint: you can use the \"in\" keyword to check\
    \ if a number is in a list\n    for number in lst\n        if (mod(number, 2)\
    \ == 0)\n            sum += number\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcflzfuol.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpcflzfuol.jl:33\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 92 == 88\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcflzfuol.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcflzfuol.jl:32\ntest set: Test Failed at /tmp/tmpcflzfuol.jl:34\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcflzfuol.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcflzfuol.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpcflzfuol.jl:35\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcflzfuol.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcflzfuol.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpcflzfuol.jl:36\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 22 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcflzfuol.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcflzfuol.jl:32\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008989
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptqn2kyn.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpptqn2kyn.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(x\
    \ -> x % 2 == 0, lst)\n    odds =  filter(x -> x % 2 != 0, lst)\n    return sum(evens[odds])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpiuuso5pz.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpiuuso5pz.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuuso5pz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuuso5pz.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpiuuso5pz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [[5, 7]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ add(lst::Vector{Int64})\n     @ Main /tmp/tmpiuuso5pz.jl:11\n   [6] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [7] macro expansion\n     @ /tmp/tmpiuuso5pz.jl:19 [inlined]\n   [8] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpiuuso5pz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpiuuso5pz.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [[7]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64}, I::Tuple{Vector{Int64}})\n\
    \     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n     @ ./abstractarray.jl:656\
    \ [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838 [inlined]\n  \
    \ [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5] add(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmpiuuso5pz.jl:11\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpiuuso5pz.jl:20 ["
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \n    res = 0\n\
    \    for i in 1:2:length(lst)\n        res += lst[i]\n    end\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptz9yjn9y.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptz9yjn9y.jl:1\n\
    in expression starting at /tmp/tmptz9yjn9y.jl:1\n"
  stdout: ''
  timestamp: 1660008988
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    lst_odd = lst[2:2:end]\n\
    \    lst_even = lst_odd[lst_odd .% 2 .== 0]\n    return sum(lst_even)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008987
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  ans = 0\n  for i\
    \ in 1:length(lst)\n    if lst[i] % 2 == 0 && i % 2 != 0\n      ans += lst[i]\n\
    \    end\n  end\n  return ans\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8vt8pup3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8vt8pup3.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vt8pup3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vt8pup3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8vt8pup3.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vt8pup3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vt8pup3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8vt8pup3.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vt8pup3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vt8pup3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8vt8pup3.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vt8pup3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vt8pup3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008989
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(i ->\
    \ (i%2==0) ? i : 0, lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo48qb016.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpo48qb016.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptqn2kyn.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpptqn2kyn.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    i = 1\n    res\
    \ = 0\n    while i <= length(lst)\n        if mod(i, 2) == 1 && mod(lst[i], 2)\
    \ == 0\n            res += lst[i]\n        end\n        i += 1\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphojr0qj_.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmphojr0qj_.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphojr0qj_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphojr0qj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphojr0qj_.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphojr0qj_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphojr0qj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphojr0qj_.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphojr0qj_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphojr0qj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphojr0qj_.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphojr0qj_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphojr0qj_.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in eachindex(lst)\n        if (i % 2 == 1) && (lst[i] % 2 == 0)\n        \
    \    res += lst[i]\n        end\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmqjq6ebw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpmqjq6ebw.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjq6ebw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjq6ebw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmqjq6ebw.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjq6ebw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjq6ebw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmqjq6ebw.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjq6ebw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjq6ebw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmqjq6ebw.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjq6ebw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjq6ebw.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008989
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptqn2kyn.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpptqn2kyn.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpptqn2kyn.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptqn2kyn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptqn2kyn.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    if length(lst)\
    \ == 1\n        return 0\n    elseif lst[2] % 2 == 0\n        return lst[2] +\
    \ add(lst[3:end])\n    else\n        return add(lst[3:end])\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpvk5d4sif.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpvk5d4sif.jl:22\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpvk5d4sif.jl:11\n\
    \   [3] add(lst::Vector{Int64})\n     @ Main /tmp/tmpvk5d4sif.jl:12\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvk5d4sif.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvk5d4sif.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvk5d4sif.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpvk5d4sif.jl:11\n\
    \   [3] add(lst::Vector{Int64})\n     @ Main /tmp/tmpvk5d4sif.jl:12\n   [4] add(lst::Vector{Int64})\
    \ (repeats 2 times)\n     @ Main /tmp/tmpvk5d4sif.jl:14\n   [5] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpvk5d4sif.jl:23 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvk5d4sif.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvk5d4sif.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  BoundsError: attempt to access 0-element Vector{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] add(lst::Vector{Int64})\n     @ Main /tmp/tmpvk5d4sif.jl:11\n   [3] add(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmpvk5d4sif.jl:14\n   [4] add(lst::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvk5d4sif.jl:12\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    output = 0\n \
    \   for i in 2:2:length(lst)\n        output += lst[i]\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpazzswwff.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpazzswwff.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazzswwff.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazzswwff.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpazzswwff.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazzswwff.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazzswwff.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpna2cldhw.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpna2cldhw.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpna2cldhw.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens_at_odds\
    \ = 0\n    for (i, e) in enumerate(lst)\n        if i % 2 == 1 && e % 2 == 0\n\
    \            evens_at_odds += e\n        end\n    end\n    return evens_at_odds\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1sdazuk5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp1sdazuk5.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sdazuk5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sdazuk5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1sdazuk5.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sdazuk5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sdazuk5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1sdazuk5.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sdazuk5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sdazuk5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1sdazuk5.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sdazuk5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sdazuk5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_odd_sums\
    \ = 0\n    for (idx, elem) in enumerate(lst)\n        if iseven(idx) & iseven(elem)\n\
    \            even_odd_sums += elem\n        end\n    end\n    return even_odd_sums\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008988
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  res = 0\n  for i\
    \ in 1:length(lst)\n    if i % 2 == 1 && lst[i] % 2 == 0\n      res += lst[i]\n\
    \    end\n  end\n  return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpppnhc1ma.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpppnhc1ma.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppnhc1ma.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppnhc1ma.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpppnhc1ma.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppnhc1ma.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppnhc1ma.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpppnhc1ma.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppnhc1ma.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppnhc1ma.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpppnhc1ma.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppnhc1ma.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppnhc1ma.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for (i, v) in enumerate(lst)\n        if (v % 2 == 0) && (i % 2 != 0)\n   \
    \         total += v\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdsaa3amu.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpdsaa3amu.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsaa3amu.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsaa3amu.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdsaa3amu.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsaa3amu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsaa3amu.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdsaa3amu.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsaa3amu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsaa3amu.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdsaa3amu.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsaa3amu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsaa3amu.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    ans = 0\n    for\
    \ i = 1:2:length(lst)\n        ans += lst[i]\n    end\n    return ans\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt6us3ssn.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpt6us3ssn.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6us3ssn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6us3ssn.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpt6us3ssn.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6us3ssn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6us3ssn.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpt6us3ssn.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6us3ssn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6us3ssn.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpt6us3ssn.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6us3ssn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6us3ssn.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(x\
    \ -> x % 2 == 0, lst)\n    odds = filter(x -> x % 2 != 0, lst)\n    return sum(evens[odds])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmprrn4cdy9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmprrn4cdy9.jl:18\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrn4cdy9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrn4cdy9.jl:17\ntest set: Error\
    \ During Test at /tmp/tmprrn4cdy9.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [[5, 7]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ add(lst::Vector{Int64})\n     @ Main /tmp/tmprrn4cdy9.jl:11\n   [6] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [7] macro expansion\n     @ /tmp/tmprrn4cdy9.jl:19 [inlined]\n   [8] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmprrn4cdy9.jl:17\ntest set:\
    \ Error During Test at /tmp/tmprrn4cdy9.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [[7]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64}, I::Tuple{Vector{Int64}})\n\
    \     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n     @ ./abstractarray.jl:656\
    \ [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838 [inlined]\n  \
    \ [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5] add(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmprrn4cdy9.jl:11\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmprrn4cdy9.jl:20 ["
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in 1:length(lst)\n        if lst[i] % 2 == 0 && i % 2 != 0\n            res\
    \ += lst[i]\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqa9pgbo0.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqa9pgbo0.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa9pgbo0.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa9pgbo0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqa9pgbo0.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa9pgbo0.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa9pgbo0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqa9pgbo0.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa9pgbo0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa9pgbo0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqa9pgbo0.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa9pgbo0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa9pgbo0.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    new_lst = []\n\
    \    for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n      \
    \      push!(new_lst, lst[i])\n        end\n    end\n    sum(new_lst)\nend\n \n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc88ns6zo.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpc88ns6zo.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc88ns6zo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc88ns6zo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc88ns6zo.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc88ns6zo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc88ns6zo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc88ns6zo.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc88ns6zo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc88ns6zo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc88ns6zo.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc88ns6zo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc88ns6zo.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(Int64,\
    \ filter(i -> lst[i] % 2 == 0, 1:2:length(lst)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf910o_lb.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpf910o_lb.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 1 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf910o_lb.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf910o_lb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpf910o_lb.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 9 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf910o_lb.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf910o_lb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpf910o_lb.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf910o_lb.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf910o_lb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpf910o_lb.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 4 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf910o_lb.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf910o_lb.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if (lst[i] % 2 == 0) && (i % 2 != 0)\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpss9uyeot.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpss9uyeot.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss9uyeot.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss9uyeot.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpss9uyeot.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss9uyeot.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss9uyeot.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpss9uyeot.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss9uyeot.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss9uyeot.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpss9uyeot.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss9uyeot.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss9uyeot.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n        \
    \    total += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj0te_fqf.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpj0te_fqf.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpj0te_fqf.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0te_fqf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0te_fqf.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i in 1:length(lst)\n        if (i % 2 == 1) & (lst[i] % 2 == 0)\n     \
    \       total += lst[i]\n        end\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg6sspyu7.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpg6sspyu7.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6sspyu7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6sspyu7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpg6sspyu7.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6sspyu7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6sspyu7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpg6sspyu7.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6sspyu7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6sspyu7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpg6sspyu7.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6sspyu7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6sspyu7.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum = sum + lst[i]\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpum7e_zvb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpum7e_zvb.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    ret::Int64 = 0\n\
    \    for i::Int64 in 1:length(lst)\n        if (i % 2 == 1) & (lst[i] % 2 == 0)\n\
    \            ret += lst[i]\n        end\n    end\n    return ret\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpogsq7i4k.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpogsq7i4k.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogsq7i4k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogsq7i4k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpogsq7i4k.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogsq7i4k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogsq7i4k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpogsq7i4k.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogsq7i4k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogsq7i4k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpogsq7i4k.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogsq7i4k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogsq7i4k.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    acc = 0\n    for\
    \ i in 1:2:length(lst)\n        acc += lst[i]\n    end\n    return acc\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4qwkwfij.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp4qwkwfij.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    out::Int64 = 0\
    \ \n    for (idx, item) in enumerate(lst)\n        if idx % 2 == 1 && item % 2\
    \ == 0\n            out += item\n        end\n    end\n    return out\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr0q0vwy0.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpr0q0vwy0.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0q0vwy0.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0q0vwy0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr0q0vwy0.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0q0vwy0.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0q0vwy0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr0q0vwy0.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0q0vwy0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0q0vwy0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr0q0vwy0.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0q0vwy0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0q0vwy0.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    #lst = [4, 2,\
    \ 6, 7]\n    #lst = Array[4, 2, 6, 7]\n    #i = 0\n    x = 0\n    while i <= length(lst)\n\
    \        if i % 2 == 1\n            x += lst[i]\n        end\n        i += 1\n\
    \    end\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp97_ncw35.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp97_ncw35.jl:26\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp97_ncw35.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_ncw35.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_ncw35.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp97_ncw35.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp97_ncw35.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_ncw35.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_ncw35.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp97_ncw35.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp97_ncw35.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_ncw35.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_ncw35.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp97_ncw35.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([4, 4, 6, 8]) == 12\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmp97_ncw35.jl:13\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] mac"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n \n  sum = 0\n  for\
    \ i in 2:2:length(lst)\n    sum += lst[i]\n  end\n  return sum\nend\n \n \n \n\
    \ \n\"\"\"Given an integer n and a vector of integers lst. Remove the first n\
    \ elements of lst.\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1_2vs9m4.jl:20\nin expression starting at\
    \ /tmp/tmp1_2vs9m4.jl:20\n"
  stdout: ''
  timestamp: 1660008990
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    @assert length(lst)\
    \ > 0\n    total = 0\n    for (ind, val) in enumerate(lst)\n        if (val %\
    \ 2 == 0) && (ind % 2 != 0)\n            total += val\n        end\n    end\n\
    \    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbljpbbn7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpbljpbbn7.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbljpbbn7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbljpbbn7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbljpbbn7.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbljpbbn7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbljpbbn7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbljpbbn7.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbljpbbn7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbljpbbn7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbljpbbn7.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbljpbbn7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbljpbbn7.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n     sum = 0\n   \
    \  i = 1\n     while i <= size(lst)[1]\n        sum += lst[i]\n        i += 2\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\
    \t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) ==\
    \ 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8])\
    \ == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuyzm7vgm.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpuyzm7vgm.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyzm7vgm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyzm7vgm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuyzm7vgm.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyzm7vgm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyzm7vgm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuyzm7vgm.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyzm7vgm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyzm7vgm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpuyzm7vgm.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyzm7vgm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyzm7vgm.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp886bt46c.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp886bt46c.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 92 == 88\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp886bt46c.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp886bt46c.jl:21\ntest set: Test Failed at /tmp/tmp886bt46c.jl:23\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp886bt46c.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp886bt46c.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp886bt46c.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp886bt46c.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp886bt46c.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp886bt46c.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 22 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp886bt46c.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp886bt46c.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = 0\n    j\
    \ = 1\n    while j < length(lst)\n        if lst[j] % 2 == 0\n            res\
    \ += lst[j]\n        end\n        j += 2\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp90tzkhnf.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp90tzkhnf.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tzkhnf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tzkhnf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp90tzkhnf.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tzkhnf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tzkhnf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp90tzkhnf.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tzkhnf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tzkhnf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp90tzkhnf.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tzkhnf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tzkhnf.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum::Int64 = 0\n\
    \    for i in enumerate(lst)\n        (i, c) = i\n        if i % 2 != 0 && c %\
    \ 2 == 0\n            sum += c\n        end\n    end\n    return sum\nend\nadd([4,\
    \ 2, 6, 7])\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7xdce3ww.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp7xdce3ww.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xdce3ww.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xdce3ww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7xdce3ww.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xdce3ww.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xdce3ww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7xdce3ww.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xdce3ww.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xdce3ww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7xdce3ww.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xdce3ww.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xdce3ww.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \n    output =\
    \ 0\n    for i in enumerate(lst)\n        if(rem(i[1],2) == 1 && rem(i[2],2) ==\
    \ 0)\n            output += i[2]\n        end\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9it9prry.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp9it9prry.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9it9prry.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9it9prry.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9it9prry.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9it9prry.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9it9prry.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9it9prry.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9it9prry.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9it9prry.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9it9prry.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9it9prry.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9it9prry.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(i for\
    \ (i, idx) in enumerate(lst) if idx % 2 == 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqzrc9_6i.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpqzrc9_6i.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 3 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzrc9_6i.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzrc9_6i.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqzrc9_6i.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 15 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzrc9_6i.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzrc9_6i.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqzrc9_6i.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 6 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzrc9_6i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzrc9_6i.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqzrc9_6i.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzrc9_6i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzrc9_6i.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    ret = 0\n    for\
    \ i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            ret += lst[i]\n\
    \        end\n    end\n    return ret\nend\nprintln(add([4, 2, 6, 7]))\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkkraoz9l.jl:20

    '
  stdout: "10\ntest set: Test Failed at /tmp/tmpkkraoz9l.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkraoz9l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkraoz9l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkkraoz9l.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkraoz9l.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkraoz9l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkkraoz9l.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkraoz9l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkraoz9l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkkraoz9l.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkraoz9l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkraoz9l.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i = 1:2:length(lst)\n        if lst[i] % 2 == 0\n            s += lst[i]\n \
    \       end\n    end\n    return s\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1016xxng.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp1016xxng.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1016xxng.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1016xxng.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1016xxng.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1016xxng.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1016xxng.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1016xxng.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1016xxng.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1016xxng.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1016xxng.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1016xxng.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1016xxng.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i in enumerate(lst)\n        if (i[1] % 2 != 0) && (i[2] % 2 == 0)\n       \
    \     s += i[2]\n        end\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0v4_tkmh.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp0v4_tkmh.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v4_tkmh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v4_tkmh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0v4_tkmh.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v4_tkmh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v4_tkmh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0v4_tkmh.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v4_tkmh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v4_tkmh.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0v4_tkmh.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v4_tkmh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v4_tkmh.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008992
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    acc = 0\n    for\
    \ (i, x) in enumerate(lst)\n        if i % 2 == 1\n            if x % 2 == 0\n\
    \                acc += x\n            end\n        end\n    end\n    return acc\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphemaws7a.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmphemaws7a.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphemaws7a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphemaws7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphemaws7a.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphemaws7a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphemaws7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphemaws7a.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphemaws7a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphemaws7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphemaws7a.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphemaws7a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphemaws7a.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    lst_odd_even =\
    \ [lst[i] for i in 1:length(lst) if i % 2 == 1 && iseven(lst[i])]\n    return\
    \ sum(lst_odd_even)\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\
    \t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprsxlkige.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprsxlkige.jl:17\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsxlkige.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsxlkige.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprsxlkige.jl:18\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsxlkige.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsxlkige.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprsxlkige.jl:19\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsxlkige.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsxlkige.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprsxlkige.jl:20\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsxlkige.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsxlkige.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i in 2:2:length(lst)\n        s += lst[i]\n    end\n    return s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp7xecvob.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpp7xecvob.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7xecvob.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7xecvob.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpp7xecvob.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7xecvob.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7xecvob.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    res = Int64(0)\n\
    \    for i = 1:length(lst)\n        if i % 2 == 1 && lst[i] % 2 == 0\n       \
    \     res += lst[i]\n        end\n    end\n    return res\nend\n        \nprintln(add([4,\
    \ 2, 6, 7]))\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeifzv674.jl:21

    '
  stdout: "10\ntest set: Test Failed at /tmp/tmpeifzv674.jl:24\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeifzv674.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeifzv674.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeifzv674.jl:25\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeifzv674.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeifzv674.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeifzv674.jl:26\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeifzv674.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeifzv674.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeifzv674.jl:27\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeifzv674.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeifzv674.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    ret = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 == 1\n            ret += lst[i]\n     \
    \   end\n    end\n    return ret\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3sw6ufnr.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp3sw6ufnr.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sw6ufnr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sw6ufnr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3sw6ufnr.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sw6ufnr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sw6ufnr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3sw6ufnr.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sw6ufnr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sw6ufnr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3sw6ufnr.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sw6ufnr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sw6ufnr.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if(lst[i] % 2 == 0 && i % 2 != 0)\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplfymp1zn.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmplfymp1zn.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfymp1zn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfymp1zn.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplfymp1zn.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfymp1zn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfymp1zn.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplfymp1zn.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfymp1zn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfymp1zn.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplfymp1zn.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfymp1zn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfymp1zn.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ (i, e) in enumerate(lst)\n        if i % 2 == 1 && iseven(e)\n            sum\
    \ += e\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwc60is85.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpwc60is85.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc60is85.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc60is85.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwc60is85.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc60is85.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc60is85.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwc60is85.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc60is85.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc60is85.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwc60is85.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc60is85.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc60is85.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    add = 0\n    for\
    \ i in 1:length(lst)\n        if iseven(i) && isodd(lst[i])\n            add =\
    \ add + lst[i]\n        end\n    end\n    return add\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmg0_jinv.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpmg0_jinv.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmg0_jinv.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmg0_jinv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmg0_jinv.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmg0_jinv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmg0_jinv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmg0_jinv.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmg0_jinv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmg0_jinv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpmg0_jinv.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmg0_jinv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmg0_jinv.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in range(1, length(lst), 2)\n        if lst[i] % 2 == 0\n            sum +=\
    \ lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwskqasys.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpwskqasys.jl:22\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  ArgumentError: invalid index: 1.0 of\
    \ type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] add(lst::Vector{Int64})\n      @ Main /tmp/tmpwskqasys.jl:11\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpwskqasys.jl:22 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpwskqasys.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwskqasys.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  ArgumentError: invalid index: 1.0\
    \ of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] add(lst::Vector{Int64})\n      @ Main /tmp/tmpwskqasys.jl:11\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpwskqasys.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpwskqasys.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpwskqasys.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\n  ArgumentError: invalid index: 1.0 of type Float64\n\
    \  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n "
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wd6qt9p.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8wd6qt9p.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8wd6qt9p.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wd6qt9p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wd6qt9p.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  sum=0\n  for i in\
    \ 1:length(lst)\n    if lst[i]%2==0 && i%2!=0\n      sum=sum+lst[i]\n    end\n\
    \  end\n  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\
    \t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoq5sjol4.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpoq5sjol4.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq5sjol4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq5sjol4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoq5sjol4.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq5sjol4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq5sjol4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoq5sjol4.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq5sjol4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq5sjol4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoq5sjol4.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq5sjol4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq5sjol4.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpenrj6ut9.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpenrj6ut9.jl:21\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenrj6ut9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenrj6ut9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenrj6ut9.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenrj6ut9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenrj6ut9.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008984
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \"\"\"\n    Sum\
    \ the even indices in a vector of ints.\n    \"\"\"\n    tot = 0\n    for i =\
    \ 1:2:length(lst)\n        tot += lst[i]\n    end\n    return tot\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp47zo5lnm.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp47zo5lnm.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47zo5lnm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47zo5lnm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47zo5lnm.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47zo5lnm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47zo5lnm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47zo5lnm.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47zo5lnm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47zo5lnm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47zo5lnm.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47zo5lnm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47zo5lnm.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in eachindex(lst)\n        if (lst[i] % 2 == 0) && (i % 2 != 0)\n        \
    \    n += lst[i]\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9vo26dg.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpy9vo26dg.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9vo26dg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9vo26dg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpy9vo26dg.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9vo26dg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9vo26dg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpy9vo26dg.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9vo26dg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9vo26dg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpy9vo26dg.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9vo26dg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9vo26dg.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe5btwhi4.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpe5btwhi4.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    for i = 1:length(lst)\n\
    \        if (lst[i] % 2 == 0) && (i % 2 != 0)\n            return lst[i]\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\
    \t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6x2dhm93.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp6x2dhm93.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x2dhm93.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x2dhm93.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6x2dhm93.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 4 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x2dhm93.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x2dhm93.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6x2dhm93.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x2dhm93.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x2dhm93.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6x2dhm93.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 4 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x2dhm93.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x2dhm93.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 0
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(filter(x\
    \ -> iseven(x), lst[2:2:end]))\nend\n \nprintln(add([4, 2, 6, 7]))\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: OK
  stderr: '2

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1660008993
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    @assert length(lst)\
    \ != 0 \"need at least one element\"\n    for i in eachindex(lst)\n        if\
    \ i % 2 == 1 && lst[i] % 2 == 0\n            println(lst[i])\n        end\n  \
    \  end\nend\n@test add([4, 2, 6, 7]) == 2\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpeaap7z1v.jl:16

    in expression starting at /tmp/tmpeaap7z1v.jl:16

    '
  stdout: ''
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n  sum = 0 \n  for\
    \ (i, elt) in enumerate(lst)\n    if i % 2 == 1 && elt % 2 == 0\n      sum +=\
    \ elt\n    end\n  end\n  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwaoicj2w.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpwaoicj2w.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwaoicj2w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwaoicj2w.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwaoicj2w.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwaoicj2w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwaoicj2w.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwaoicj2w.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwaoicj2w.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwaoicj2w.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwaoicj2w.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwaoicj2w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwaoicj2w.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # Write your code\
    \ here\n    \nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpapt8v2si.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpapt8v2si.jl:17\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpapt8v2si.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapt8v2si.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapt8v2si.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpapt8v2si.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] add(lst::Vector{Int64})\n     @ Main /tmp/tmpapt8v2si.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapt8v2si.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapt8v2si.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpapt8v2si.jl:19\n  Test threw exception"
  timestamp: 1660008996
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(filter(x\
    \ -> x % 2 == 0, lst[1:2:end]))\nend\nadd([4, 2, 6, 7])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprw9ouogd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprw9ouogd.jl:17\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprw9ouogd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprw9ouogd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprw9ouogd.jl:18\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprw9ouogd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprw9ouogd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprw9ouogd.jl:19\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprw9ouogd.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprw9ouogd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprw9ouogd.jl:20\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprw9ouogd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprw9ouogd.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even = 0\n   \
    \ for (i, x) in enumerate(lst)\n        if x % 2 == 0 && i % 2 != 0\n        \
    \    even += x\n        end\n    end\n    return even\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1b1p4j5q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp1b1p4j5q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1b1p4j5q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1b1p4j5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1b1p4j5q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1b1p4j5q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1b1p4j5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1b1p4j5q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1b1p4j5q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1b1p4j5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1b1p4j5q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1b1p4j5q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1b1p4j5q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i = 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe5btwhi4.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpe5btwhi4.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpe5btwhi4.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5btwhi4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5btwhi4.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008994
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ (i,e) in enumerate(lst)\n        if e % 2 == 0 && i % 2 != 0\n            sum\
    \ += e\n        end\n    end\n    return sum\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5,\
    \ 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5bmvk9da.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp5bmvk9da.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bmvk9da.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bmvk9da.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5bmvk9da.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bmvk9da.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bmvk9da.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5bmvk9da.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bmvk9da.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bmvk9da.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5bmvk9da.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bmvk9da.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bmvk9da.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum=0\n    for\
    \ x in 1:length(lst)\n        if lst[x]%2==0 && x%2!=0\n            sum+=lst[x]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdtsaoanp.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpdtsaoanp.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtsaoanp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtsaoanp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdtsaoanp.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtsaoanp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtsaoanp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdtsaoanp.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtsaoanp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtsaoanp.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpdtsaoanp.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtsaoanp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtsaoanp.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\
    \ \nend\n \n            \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t\
    @test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\
    \t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5qcm8ckn.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp5qcm8ckn.jl:19\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qcm8ckn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qcm8ckn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp5qcm8ckn.jl:20\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qcm8ckn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qcm8ckn.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    total = 0\n  \
    \  for i = 1:length(lst)\n        if (mod(i,2) == 1) & (mod(lst[i],2) == 0)\n\
    \            total += lst[i]\n        end\n    end\n    return total\nend\n \n\
    \ \n \nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjtmt99h8.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjtmt99h8.jl:25\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtmt99h8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtmt99h8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjtmt99h8.jl:26\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtmt99h8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtmt99h8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjtmt99h8.jl:27\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtmt99h8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtmt99h8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjtmt99h8.jl:28\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtmt99h8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtmt99h8.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    acc = 0\n    for\
    \ i in 1:2:length(lst)\n        acc += lst[i]\n    end\n    return acc\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4qwkwfij.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp4qwkwfij.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4qwkwfij.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qwkwfij.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qwkwfij.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008991
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum = sum + lst[i]\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpum7e_zvb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpum7e_zvb.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpum7e_zvb.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpum7e_zvb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpum7e_zvb.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008981
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    acc = 0\n    for\
    \ i in eachindex(lst)\n        if i % 2 == 1 && lst[i] % 2 == 0\n            acc\
    \ += lst[i]\n        end\n    end\n    return acc\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0plf9z5q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp0plf9z5q.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0plf9z5q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0plf9z5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0plf9z5q.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0plf9z5q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0plf9z5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0plf9z5q.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0plf9z5q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0plf9z5q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0plf9z5q.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0plf9z5q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0plf9z5q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in 1:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) ==\
    \ 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo48qb016.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpo48qb016.jl:20\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:21\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:22\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpo48qb016.jl:23\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo48qb016.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo48qb016.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008979
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \"\"\"\n    >>>\
    \ add([2, 3, 4, 7])\n    0\n    \"\"\"\n    ans = 0\n    for i in 1:length(lst)\n\
    \        if lst[i] % 2 == 0 && i % 2 != 0\n            ans += lst[i]\n       \
    \ end\n    end\n    return ans\nend\nadd([4, 2, 6, 7])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpicxen5k9.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpicxen5k9.jl:27\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicxen5k9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicxen5k9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpicxen5k9.jl:28\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicxen5k9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicxen5k9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpicxen5k9.jl:29\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicxen5k9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicxen5k9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpicxen5k9.jl:30\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicxen5k9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicxen5k9.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    \"\"\"\n    A\
    \ function to add all even numbers at odd indices in a list\n    \"\"\"\n    #\
    \ initialize the sum to 0\n    s = 0\n    for i in 1:2:length(lst)\n        if\
    \ lst[i] % 2 == 0\n            s += lst[i]\n        end\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9vvqbocm.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp9vvqbocm.jl:26\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vvqbocm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vvqbocm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9vvqbocm.jl:27\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vvqbocm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vvqbocm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9vvqbocm.jl:28\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vvqbocm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vvqbocm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9vvqbocm.jl:29\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vvqbocm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vvqbocm.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008996
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    result = 0\n \
    \   for x in 1:length(lst)\n        if lst[x] % 2 == 0 && x % 2 != 0\n       \
    \     result += lst[x]\n        end\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp37ifadi6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp37ifadi6.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37ifadi6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37ifadi6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp37ifadi6.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37ifadi6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37ifadi6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp37ifadi6.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37ifadi6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37ifadi6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp37ifadi6.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37ifadi6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37ifadi6.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1660008995
- exit_code: 1
  program: "\"\"\"Given a non-empty vector of integers lst. add the even elements\
    \ that are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n  \
    \  2\n    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpna2cldhw.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpna2cldhw.jl:17\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpna2cldhw.jl:18\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpna2cldhw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpna2cldhw.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"

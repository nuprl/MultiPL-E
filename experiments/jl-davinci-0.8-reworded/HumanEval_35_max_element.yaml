name: HumanEval_35_max_element
language: jl
prompt: "\"\"\"Return maximum element in the vector.\n    >>> max_element([1, 2, 3])\n\
  \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
  \    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = max_element;\n\t@test(candidate([1,\
  \ 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\n\
  end\n"
completions: ["    m::Int64 = l[1]\n    for i in l\n        if i > m\n           \
    \ m = i\n        end\n    end\n    return m\nend", "    max = 0\n    for i in\
    \ l\n        if max < i\n            max = i\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    n = length(l)\n  \
    \  local max_l = l[1]\n    for i = 2:n\n        if l[i] > max_l\n            max_l\
    \ = l[i]\n        end\n    end\n    return max_l\nend", "    max = l[1]\n    for\
    \ e in l\n        if e > max\n            max = e\n        end\n    end\n    return\
    \ max\nend", "    max = l[1]\n    for i in l\n        if i > max\n           \
    \ max = i\n        end\n    end\n    return max\nend", "    maximum = l[1]\n \
    \   for i in l\n        if maximum < i\n            maximum = i\n        end\n\
    \    end\n    return maximum\nend", "    if length(l) == 0\n        return 0\n\
    \    end\n    if length(l) == 1\n        return l[1]\n    end\n    m::Int64 =\
    \ max_element(l[2:end])\n    if l[1] > m\n        return l[1]\n    else\n    \
    \    return m\n    end\nend", "    max = l[1]\n    for i in l[2:end]\n       \
    \ if i > max\n            max = i\n        end\n    end\n    return max\nend",
  "    max_el=0\n    for i=1:length(l)\n        if l[i]>max_el\n            max_el=l[i]\n\
    \        end\n    end\n    return max_el\nend", "    max = l[1]\n    for i in\
    \ 1:length(l)\n        if l[i] > max\n            max = l[i]\n        end\n  \
    \  end\n    return max\nend", "    mx = l[1]\n    for i in 2:length(l)\n     \
    \   if l[i] > mx\n            mx = l[i]\n        end\n    end\n    return mx\n\
    end", "    if length(l) == 0\n        error(\"Vector is empty!\")\n    end\n \
    \   max = l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max\
    \ = l[i]\n        end\n    end\n    return max\nend", "    m = l[1]\n    for i\
    \ in 2:length(l)\n        if l[i] > m\n            m = l[i]\n        end\n   \
    \ end\n    return m\nend", "    max = l[1]\n    for e in l\n        if e > max\n\
    \            max = e\n        end\n    end\n    return max\nend", "    max = l[1]\n\
    \    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n   \
    \     end\n    end\n    return max\nend", "    maximum = l[1]\n    for x in l[2:end]\n\
    \        if x > maximum\n            maximum = x\n        end\n    end\n    return\
    \ maximum\nend\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])", "    max\
    \ = 0\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])", "    max_elem = 0\n    for i in l\n        if i > max_elem\n       \
    \     max_elem = i\n        end\n    end\n    return max_elem\nend", "    max_val\
    \ = 0\n    for i in l\n        if i > max_val\n            max_val = i\n     \
    \   end\n    end\n    return max_val\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

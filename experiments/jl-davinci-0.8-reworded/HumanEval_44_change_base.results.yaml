name: HumanEval_44_change_base
language: jl
results:
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_number = \"\"\n    while x > 0\n        new_number\
    \ = string(x % base) * new_number\n        x = div(x, base)\n    end\n    return\
    \ new_number\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = x\n    res = \"\"\n    while n > 0\n        q,\
    \ r = divrem(n, base)\n        res = string(r) * res\n        n = q\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    y = \"\"\n    while x > 0\n        x,\
    \ r = divrem(x, base)\n        y = string(r) * y\n    end\n    return y\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x>0\n        s = (x%base)::String\
    \ * s\n        x = x//base\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdnc9n_se.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  TypeError: in typeassert, expected\
    \ String, got a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  TypeError: in typeassert, expected String, got\
    \ a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  TypeError: in typeassert, expected String,\
    \ got a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  TypeError: in typeassert, expected String,\
    \ got a value of "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdnc9n_se.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result::String = \"\"\n    while x > 0\n        x,\
    \ remainder = divrem(x, base)\n        result = string(remainder) * result\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = x\
    \ \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base \n        return string(x)\n    else\
    \ \n        return string(change_base(div(x, base), base)) * string(rem(x, base))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_base_n = \"\"\n    while x >= base\n        x_base_n\
    \ = string(x % base) * x_base_n\n        x = x \xF7 base\n    end\n    return\
    \ string(x) * x_base_n\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_list = [] #list to store the remainders\n    while\
    \ x > 0\n        m = x % base\n        x = div(x, base)\n        push!(x_list,\
    \ m)\n    end\n    x_list = reverse(x_list)\n    return join(map(string, x_list))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainders = []\n    while quotient\
    \ > 0\n        push!(remainders, quotient % base)\n        quotient = quotient\
    \ \xF7 base\n    end\n    return join(map(string, reverse(remainders)))\nend\n\
    change_base(8, 2)\n \nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    a = []\n    while x > 0\n        a[n]\
    \ = x % base\n        x = x \xF7 base\n        n += 1\n    end\n    y = \"\"\n\
    \    for i in 0:n-1\n        y = y * string(a[n-i-1])\n    end\n    return y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ehb6b3j.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1ehb6b3j.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access 0-element Vector{Any}\
    \ at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1ehb6b3j.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ehb6b3j.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = mod(x, base)\n\
    \    s = \"\"\n    if quotient != 0\n        s = change_base(quotient, base)\n\
    \    end\n    s * string(remainder)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(rem(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    #Base cases \n    if x == 0\n        return\
    \ \"0\"\n    elseif x == 1\n        return \"1\"\n    end\n    #Compute the quotient\n\
    \    q = x%base\n    #Compute the remainder\n    rem = convert(Int64, x/base)\n\
    \    #Recursive step\n    return change_base(rem, base) * string(q)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmiq5oez9.jl:31\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] change_base(x::Int64, base::Int64)\n \
    \    @ Main /tmp/tmpmiq5oez9.jl:22\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmiq5oez9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmiq5oez9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:22\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:24\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmiq5oez9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmiq5oez9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7, 2) == \"111\"\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:22\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmiq5oez9.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    reminder = 0\n    final = \"\"\n\
    \    while quotient > 0\n        reminder = quotient % base\n        quotient\
    \ = floor(quotient / base)\n        final = string(reminder) * final\n    end\n\
    \    return final\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmparoeu50m.jl:27\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:28\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:29\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:31\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1.00.00.00\" == \"1000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmparoeu50m.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    string_val\
    \ = string(remainder)\n    if quotient != 0\n        string_val = change_base(quotient,\
    \ base) * string_val\n    end\n    return string_val\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = \"0123456789ABCDEF\"\n    if x < base\n\
    \        return(digits[x+1])\n    else\n        return(change_base(x\xF7base,\
    \ base) * digits[x%base+1])\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv239ia7w.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:14\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpv239ia7w.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpv239ia7w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpv239ia7w.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:14\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpv239ia7w.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv239ia7w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    number = \"\"\n    while x != 0\n        i = x %\
    \ base\n        x = Int64(x / base)\n        push!(number, '0' + i)\n    end\n\
    \    return number\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2js5kzqf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp2js5kzqf.jl:15\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2js5kzqf.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2js5kzqf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2js5kzqf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp2js5kzqf.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2js5kzqf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2js5kzqf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2js5kzqf.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2js5kzqf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n  if x < base\n    return string(x)\n  else\n    return\
    \ change_base(floor(Int64, x/base), base) * string(x % base)\n  end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK

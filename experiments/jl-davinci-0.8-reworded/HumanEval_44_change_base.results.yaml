language: jl
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_number = \"\"\n    while x > 0\n        new_number\
    \ = string(x % base) * new_number\n        x = div(x, base)\n    end\n    return\
    \ new_number\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = x\n    res = \"\"\n    while n > 0\n        q,\
    \ r = divrem(n, base)\n        res = string(r) * res\n        n = q\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    y = \"\"\n    while x > 0\n        x,\
    \ r = divrem(x, base)\n        y = string(r) * y\n    end\n    return y\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x>0\n        s = (x%base)::String\
    \ * s\n        x = x//base\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpdnc9n_se.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpdnc9n_se.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  TypeError: in typeassert, expected\
    \ String, got a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  TypeError: in typeassert, expected String, got\
    \ a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  TypeError: in typeassert, expected String,\
    \ got a value of type Int64\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpdnc9n_se.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdnc9n_se.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdnc9n_se.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpdnc9n_se.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  TypeError: in typeassert, expected String,\
    \ got a value of "
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result::String = \"\"\n    while x > 0\n        x,\
    \ remainder = divrem(x, base)\n        result = string(remainder) * result\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = x\
    \ \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base \n        return string(x)\n    else\
    \ \n        return string(change_base(div(x, base), base)) * string(rem(x, base))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_base_n = \"\"\n    while x >= base\n        x_base_n\
    \ = string(x % base) * x_base_n\n        x = x \xF7 base\n    end\n    return\
    \ string(x) * x_base_n\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_list = [] #list to store the remainders\n    while\
    \ x > 0\n        m = x % base\n        x = div(x, base)\n        push!(x_list,\
    \ m)\n    end\n    x_list = reverse(x_list)\n    return join(map(string, x_list))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainders = []\n    while quotient\
    \ > 0\n        push!(remainders, quotient % base)\n        quotient = quotient\
    \ \xF7 base\n    end\n    return join(map(string, reverse(remainders)))\nend\n\
    change_base(8, 2)\n \nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    a = []\n    while x > 0\n        a[n]\
    \ = x % base\n        x = x \xF7 base\n        n += 1\n    end\n    y = \"\"\n\
    \    for i in 0:n-1\n        y = y * string(a[n-i-1])\n    end\n    return y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp1ehb6b3j.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp1ehb6b3j.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1ehb6b3j.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access 0-element Vector{Any}\
    \ at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1ehb6b3j.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1ehb6b3j.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ehb6b3j.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ehb6b3j.jl:29\ntest set:\
    \ Error During Tes"
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = mod(x, base)\n\
    \    s = \"\"\n    if quotient != 0\n        s = change_base(quotient, base)\n\
    \    end\n    s * string(remainder)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(rem(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    #Base cases \n    if x == 0\n        return\
    \ \"0\"\n    elseif x == 1\n        return \"1\"\n    end\n    #Compute the quotient\n\
    \    q = x%base\n    #Compute the remainder\n    rem = convert(Int64, x/base)\n\
    \    #Recursive step\n    return change_base(rem, base) * string(q)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpmiq5oez9.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpmiq5oez9.jl:31\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] change_base(x::Int64, base::Int64)\n \
    \    @ Main /tmp/tmpmiq5oez9.jl:22\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmiq5oez9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmiq5oez9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:22\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:24\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmiq5oez9.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmiq5oez9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7, 2) == \"111\"\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmiq5oez9.jl:22\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmiq5oez9.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined"
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    reminder = 0\n    final = \"\"\n\
    \    while quotient > 0\n        reminder = quotient % base\n        quotient\
    \ = floor(quotient / base)\n        final = string(reminder) * final\n    end\n\
    \    return final\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmparoeu50m.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmparoeu50m.jl:27\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:28\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:29\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparoeu50m.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparoeu50m.jl:26\ntest set: Test\
    \ Failed at /tmp/tmparoeu50m.jl:31\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1.00.00.00\" == \"1000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/"
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    string_val\
    \ = string(remainder)\n    if quotient != 0\n        string_val = change_base(quotient,\
    \ base) * string_val\n    end\n    return string_val\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = \"0123456789ABCDEF\"\n    if x < base\n\
    \        return(digits[x+1])\n    else\n        return(change_base(x\xF7base,\
    \ base) * digits[x%base+1])\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpv239ia7w.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpv239ia7w.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:14\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpv239ia7w.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpv239ia7w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpv239ia7w.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv239ia7w.jl:14\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpv239ia7w.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] "
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    number = \"\"\n    while x != 0\n        i = x %\
    \ base\n        x = Int64(x / base)\n        push!(number, '0' + i)\n    end\n\
    \    return number\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp2js5kzqf.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp2js5kzqf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp2js5kzqf.jl:15\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2js5kzqf.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2js5kzqf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2js5kzqf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp2js5kzqf.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2js5kzqf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2js5kzqf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2js5kzqf.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7"
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n  if x < base\n    return string(x)\n  else\n    return\
    \ change_base(floor(Int64, x/base), base) * string(x % base)\n  end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = []\n    while x > 0\n        digits.append(x\
    \ % base)\n        x = x \xF7 base\n    end\n    return join(map(string, digits))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpe3bf_7a1.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpe3bf_7a1.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  type Array has no field append\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpe3bf_7a1.jl:14\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpe3bf_7a1.jl:24 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe3bf_7a1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpe3bf_7a1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpe3bf_7a1.jl:14\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpe3bf_7a1.jl:25 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe3bf_7a1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpe3bf_7a1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpe3bf_7a1.jl:14\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpe3bf_7a1.jl:26 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe3bf_7a1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpe3bf_7a1.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] get"
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder = \"\"\n    quotient = x\n    while quotient\
    \ != 0\n        remainder = string(quotient % base) * remainder\n        quotient\
    \ = quotient \xF7 base\n    end\n    return remainder\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    if x == 0\n        return \"0\"\
    \n    end\n    if x < 0\n        sign = \"-\"\n        x = abs(x)\n    else\n\
    \        sign = \"\"\n    end\n    while x > 0\n        val = Int(x % base)\n\
    \        x = Int(x / base)\n        result =  string(val) * result\n    end\n\
    \    return sign * result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpomq4zpet.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpomq4zpet.jl:34\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpomq4zpet.jl:24\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpomq4zpet.jl:34 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpomq4zpet.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpomq4zpet.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpomq4zpet.jl:24\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpomq4zpet.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpomq4zpet.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpomq4zpet.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpomq4zpet.jl:24\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpomq4zpet.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpomq4zpet.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpomq4zpet.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)\n  Stacktrace:\n \
    \  [1] Int64\n  "
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        r = x % base\n\
    \        x = x // base\n        s = string(r) * s\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpxv178va9.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpxv178va9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpxv178va9.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxv178va9.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxv178va9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxv178va9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpxv178va9.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxv178va9.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxv178va9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxv178va9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int"
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_number = \"\"\n    temp = x\n    while temp >\
    \ 0\n        remainder = temp % base\n        temp = temp \xF7 base\n        push!(new_number,\
    \ remainder)\n    end\n    return new_number\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp6oqn_4cz.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp6oqn_4cz.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp6oqn_4cz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6oqn_4cz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6oqn_4cz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6oqn_4cz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp6oqn_4cz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6oqn_4cz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6oqn_4cz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6oqn_4cz.jl:28\n  Test threw exceptio"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = Int64(x/base)\n    remainder = x % base\n\
    \    s = string(remainder)\n    while quotient != 0\n        remainder = quotient\
    \ % base\n        quotient = Int64(quotient/base)\n        s = string(remainder)\
    \ * s\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpjom86fxd.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpjom86fxd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpjom86fxd.jl:12\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpjom86fxd.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjom86fxd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjom86fxd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpjom86fxd.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjom86fxd.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjom86fxd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjom86fxd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpjom86fxd.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjom86fxd.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjom86fxd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjom86fxd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)\n  Stacktrace:\n \
    \  [1] Int64\n  "
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # YOUR CODE HERE\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1yawdpbq.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp1yawdpbq.jl:20\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1yawdpbq.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1yawdpbq.jl:19\ntest set: Test Failed at /tmp/tmp1yawdpbq.jl:21\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"\" == \"100\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1yawdpbq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1yawdpbq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp1yawdpbq.jl:22\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1yawdpbq.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1yawdpbq.jl:19\ntest set: Test Failed at /tmp/tmp1yawdpbq.jl:23\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"\" == \"10000\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1yawdpbq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1yawdpbq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp1yawdpbq.jl:24\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp"
  timestamp: 1660008669
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return string(change_base(div(x, base), base)) * string(mod(x, base))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # The base always has to be less than 10\n    # Find\
    \ the quotient and remainder of your input number x\n    # until the quotient\
    \ is zero\n    # Push remainder to the stack\n    # Pop the stack to get the string\
    \ of input number in base\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: '
  stdout: "test set: Error During Test at /tmp/tmpbdt7t7z7.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpbdt7t7z7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbdt7t7z7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbdt7t7z7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpbdt7t7z7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpbdt7t7z7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbdt7t7z7.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbdt7t7z7"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = []\n    while x >= base\n        r = [x % base]\
    \ + r\n        x = x \xF7 base\n    end\n    return string(x) * join(r, \"\")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4icdg9ed.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp4icdg9ed.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp4icdg9ed.jl:14\n   [5] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmp4icdg9ed.jl:24 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp4icdg9ed.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4icdg9ed.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmp4icdg9ed.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp4icdg9ed.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp4icdg9ed.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4icdg9ed.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indices.jl:169 [inlined]\n"
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n  r = \"\"\n  while x >= base\n      r = string(x % base)\
    \ * r\n      x = x \xF7 base\n  end\n  return string(x) * r\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = \"\"\n    while x >= base \n        r = r * string(x\
    \ % base)\n        x = x \xF7 base\n    end\n    return r * string(x)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptacnpkvq.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmptacnpkvq.jl:25\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"001\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptacnpkvq.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptacnpkvq.jl:23\ntest set: Test Failed at /tmp/tmptacnpkvq.jl:26\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"01010111\" ==\
    \ \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptacnpkvq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptacnpkvq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptacnpkvq.jl:27\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"00001\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptacnpkvq.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptacnpkvq.jl:23\ntest set: Test Failed at /tmp/tmptacnpkvq.jl:28\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"0001\" == \"1000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptacnpkvq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptacnpkvq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  timestamp: 1660008669
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    rem = 0\n    s = \"\"\n    while (x != 0)\n     \
    \   rem = x % base\n        x = Int64(x / base)\n        s = string(rem) * s\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpewxj0wck.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpewxj0wck.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpewxj0wck.jl:16\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpewxj0wck.jl:26 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpewxj0wck.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpewxj0wck.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpewxj0wck.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpewxj0wck.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpewxj0wck.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpewxj0wck.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpewxj0wck.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpewxj0wck.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpewxj0wck.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpewxj0wck.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)\n  Stacktrace:\n \
    \  [1] Int64\n  "
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    base_list = []\n    while x >= base\n        temp\
    \ = x % base\n        push!(base_list, temp)\n        x = x // base\n    end\n\
    \    if x != 0\n        push!(base_list, x)\n    end\n    res = string(base_list)\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp852q1fls.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp852q1fls.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"Any[2, 8//3]\" == \"22\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp852q1fls.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp852q1fls.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp852q1fls.jl:30\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"Any[0, 0//1, 1//1]\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp852q1fls.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp852q1fls.jl:28\ntest set: Test Failed at /tmp/tmp852q1fls.jl:31\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"Any[0, 1//1,\
    \ 1//2, 5//4, 5//8, 21//16, 53//32, 117//64]\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp852q1fls.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp852q1fls.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp852q1fls.jl:32\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"Any[0, 0//1, 0//1, 0//1, 1//1]\" == \"10000\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp852q1fls.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp852q1fls.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp852q1fls.jl:33\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"Any[0, 0//1, 0//1, 1//1]\" == \"1000\"\nStacktrace:"
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    str_num = \"\"\n    while x >= base\n        str_num\
    \ = string(x % base) * str_num\n        x = x \xF7 base\n    end\n    return string(x)\
    \ * str_num\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        s = string(x %\
    \ base) * s\n        x = x \xF7 base\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    numstr = string(x)\n    return convert(Int64, x,\
    \ base=base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpymr0epwg.jl:20\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:218\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpymr0epwg.jl:13\n   [2] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpymr0epwg.jl:20 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymr0epwg.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpymr0epwg.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:218\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpymr0epwg.jl:13\n   [2] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpymr0epwg.jl:21 [inlined]\n   [4] macro\
    \ expansion\n     @"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = String(x%base)\n    while x >= base\n       \
    \ x = x\xF7base\n        r = string(x%base, r)\n    end\n    return r\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmporwc3hsj.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmporwc3hsj.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmporwc3hsj.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmporwc3hsj.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmporwc3hsj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmporwc3hsj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmporwc3hsj.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmporwc3hsj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmporwc3hsj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmporwc3hsj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/po"
  timestamp: 1660008671
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        \"0\"\n    else\n        digits\
    \ = map(string, collect(0:base-1))\n        result = \"\"\n        while x !=\
    \ 0\n            result = digits[x % base] * result\n            x = x \xF7 base\n\
    \        end\n        result\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Test Failed at /tmp/tmpdqfljm59.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdqfljm59.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdqfljm59.jl:28\ntest set: Error During Test\
    \ at /tmp/tmpdqfljm59.jl:30\n  Test threw exception\n  Expression: candidate(9,\
    \ 3) == \"100\"\n  BoundsError: attempt to access 3-element Vector{String} at\
    \ index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpdqfljm59.jl:18\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdqfljm59.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdqfljm59.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpdqfljm59.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 2-element\
    \ Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpdqfljm59.jl:18\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdqfljm59.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdqfljm59.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpdqfljm59.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  BoundsError: attempt to access 2-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int64, "
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    power::Int64 = 0\n    result::String = \"\"\n   \
    \ while base^power <= x\n        power = power + 1\n    end\n    power = power\
    \ - 1\n    while power >= 0\n        if base^power <= x\n            result =\
    \ result * \"1\"\n            x = x - base^power\n        else\n            result\
    \ = result * \"0\"\n        end\n        power = power - 1\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphvh9liqa.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmphvh9liqa.jl:34\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphvh9liqa.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphvh9liqa.jl:33\ntest set: Test Failed at /tmp/tmphvh9liqa.jl:40\n\
    \  Expression: candidate(2, 3) == \"2\"\n   Evaluated: \"1\" == \"2\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh9liqa.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh9liqa.jl:33\ntest set: Test\
    \ Failed at /tmp/tmphvh9liqa.jl:41\n  Expression: candidate(3, 4) == \"3\"\n \
    \  Evaluated: \"1\" == \"3\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh9liqa.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh9liqa.jl:33\ntest set: Test\
    \ Failed at /tmp/tmphvh9liqa.jl:42\n  Expression: candidate(4, 5) == \"4\"\n \
    \  Evaluated: \"1\" == \"4\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh9liqa.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh9liqa.jl:33\ntest set: Test\
    \ Failed at /tmp/tmphvh9liqa.jl:43\n  Expression: candidate(5, 6) == \"5\"\n \
    \  Evaluated: \"1\" == \"5\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh9liqa.jl:43 [inlined]\n [3]"
  timestamp: 1660008669
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    isnegative = x < 0\n    if isnegative\n        x\
    \ = abs(x)\n    end\n    quotient = x / base\n    remainder = x % base\n    result\
    \ = string(remainder)\n    while quotient != 0\n        result = string(remainder)\
    \ * result\n        remainder = quotient % base\n        quotient = quotient /\
    \ base\n    end\n    if isnegative\n        result = \"-\" * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe4_nu63g.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpe4_nu63g.jl:34\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"1.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.96181988063059"
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_aux = x \n    digits = []\n    while x_aux > 0\n\
    \        digits = push!(digits, x_aux % base)\n        x_aux = x_aux \xF7 base\n\
    \    end\n    return join(reverse(digits))\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    ##check base\n    if base > 10\n        println(\"\
    Base must be less than 10!\")\n        return\n    end\n    ##check x\n    if\
    \ x > (10^15)\n        println(\"x must be less than 10^15!\")\n        return\n\
    \    end\n    base_list = []\n    base_string = \"\"\n    while x > 0\n      \
    \  base_list = [x % base] + base_list\n        x = x % base\n    end\n    for\
    \ i in base_list\n        push!(base_string, string(i))\n    end\n    return base_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp2276dvsd.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmp2276dvsd.jl:38\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp2276dvsd.jl:25\n   [5] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmp2276dvsd.jl:38 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2276dvsd.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp2276dvsd.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmp2276dvsd.jl:25\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2276dvsd.jl:39 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2276dvsd.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp2276dvsd.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indices.jl:169 [inlined]\n"
  timestamp: 1660008671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # convert to base\n    if base > 10\n        return\
    \ \"base greater than 10.\"\n    end\n    # get digits\n    digits = []\n    while\
    \ x > 0\n        digits = [x % base] + digits\n        x = div(x, base)\n    end\n\
    \    # digits to string\n    s = \"\"\n    for d in digits\n        s = s * d\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpcrfyhw8_.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpcrfyhw8_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpcrfyhw8_.jl:19\n   [5] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpcrfyhw8_.jl:34 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcrfyhw8_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcrfyhw8_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmpcrfyhw8_.jl:19\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcrfyhw8_.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcrfyhw8_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcrfyhw8_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indices.jl:169 [inlined]\n"
  timestamp: 1660008672
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_remainder = x % base\n    if x <= base\n      \
    \  return string(x_remainder)\n    else\n        return string(change_base(x -\
    \ x_remainder, base), x_remainder)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008673
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while(x>0)\n        result = \"\
    1\"*(x%base) * result\n        x = x//base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpdw00n1_g.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:88\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n\
    \    ...\n  Stacktrace:\n   [1] *(::String, ::Int64, ::String)\n     @ Base ./operators.jl:655\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpdw00n1_g.jl:14\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdw00n1_g.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdw00n1_g.jl:23\n"
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return x\n    else\n       \
    \ return change_base(div(x, base), base) * base + mod(x, base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpb0ixytj0.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpb0ixytj0.jl:13\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpb0ixytj0.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb0ixytj0.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb0ixytj0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpb0ixytj0.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpb0ixytj0.jl:13\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpb0ixytj0.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb0ixytj0.jl:"
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    m, base_digits = x, \"\"\n    while m > 0\n     \
    \   m, r = divrem(m, base)\n        base_digits = string(r) * base_digits\n  \
    \  end\n    return base_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008668
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n  \"\"\"\n  >>> change_base(8, 3)\n  \"22\"\n  >>> change_base(8,\
    \ 2)\n  \"1000\"\n  >>> change_base(7, 2)\n  \"111\"\n  \"\"\"\n    if x == 0\n\
    \        return \"0\"\n    end\n    stack = []\n    while x > 0\n        stack.append(x\
    \ % base)\n        x = div(x, base)\n    end\n    return string(reverse(stack))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmphibe85w9.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmphibe85w9.jl:35\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  type Array has no field append\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmphibe85w9.jl:25\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphibe85w9.jl:35 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphibe85w9.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphibe85w9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmphibe85w9.jl:25\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphibe85w9.jl:36 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphibe85w9.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphibe85w9.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmphibe85w9.jl:25\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphibe85w9.jl:37 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphibe85w9.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphibe85w9.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] get"
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    quotient_list = []\n    while quotient\
    \ > 0\n        quotient, remainder = divrem(quotient, base)\n        quotient_list\
    \ = push!(quotient_list, remainder)\n    end\n    quotient_list = reverse(quotient_list)\n\
    \    quotient_list = join(quotient_list, \"\")\n    return quotient_list\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008669
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (x >= base)\n        return change_base(div(x,\
    \ base), base) * string(x % base)\n    else\n        return string(x)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008669
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    res = \"\"\n    while x >= base\n        res\
    \ = string(x % base) * res\n        x = x \xF7 base\n    end\n    res = string(x)\
    \ * res\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    rest = x\n    res = \"\"\n    while rest > 0\n  \
    \      remainder = rest % base\n        rest = div(rest, base)\n        res =\
    \ string(remainder) * res\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    result = \"\"\n    while quotient\
    \ > 0\n        remainder = quotient % base\n        quotient = quotient \xF7 base\n\
    \        result = string(remainder) * result\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nx = rand(0:10)\nprintln(change_base(x,2))\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: '10

    Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x >= base\n        rest, remain = divrem(x, base)\n\
    \        return change_base(rest, base) * string(remain)\n    else\n        return\
    \ string(x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    nums = String[]\n    while x != 0\n        x, r =\
    \ divrem(x, base)\n        push!(nums, string(r))\n    end\n    return reverse(join(nums))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    dividend = x\n    quotient = 0\n    remainder = 0\n\
    \    output = \"\"\n    while dividend > 0\n        quotient = div(dividend, base)\n\
    \        remainder = mod(dividend, base)\n        output = string(remainder) *\
    \ output\n        dividend = quotient\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008670
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s=\"\"\n    while x>0\n        r=x%base\n       \
    \ x=x//base\n        s=string(r) * s\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpq_izboc3.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpq_izboc3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpq_izboc3.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpq_izboc3.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpq_izboc3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpq_izboc3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpq_izboc3.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpq_izboc3.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpq_izboc3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpq_izboc3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int"
  timestamp: 1660008675
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    num = x\n    output = \"\"\n    while num > 0\n \
    \       num, rem = divrem(num, base)\n        if rem < 10\n            append!(output,\
    \ string(rem))\n        else\n            append!(output, string(char(rem+55)))\n\
    \        end\n    end\n    reverse(output)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmp554bgun6.jl:29\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching append!(::String,\
    \ ::String)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp554bgun6.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp554bgun6.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp554bgun6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp554bgun6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching append!(::String,\
    \ ::String)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp554bgun6.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp554bgun6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp554bgun6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp554bgun6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching append!(::String,\
    \ ::Stri"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_str = \"\"\n    for i in 1:10\n        digit =\
    \ x%base\n        x_str = string(digit) * x_str\n        x = x - digit\n     \
    \   x = div(x, base)\n    end\n    return x_str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8494gerb.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp8494gerb.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"0000000022\" == \"22\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8494gerb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8494gerb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8494gerb.jl:27\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"0000000100\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8494gerb.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8494gerb.jl:25\ntest set: Test Failed at /tmp/tmp8494gerb.jl:28\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"0011101010\"\
    \ == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8494gerb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8494gerb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8494gerb.jl:29\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"0000010000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8494gerb.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8494gerb.jl:25\ntest set: Test Failed at /tmp/tmp8494gerb.jl:30\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"0000001000\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    # base case\n    if x == 0\n        return\
    \ \"0\"\n    end\n    if x == 1\n        return \"1\"\n    end\n    \n    # recursion\n\
    \    if x % base == 0\n        return change_base(x \xF7 base, base) * \"0\"\n\
    \    else\n        return change_base(x \xF7 base, base) * \"1\"\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpot79lajl.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpot79lajl.jl:33\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"011\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpot79lajl.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpot79lajl.jl:32\ntest set: Test Failed at /tmp/tmpot79lajl.jl:39\n\
    \  Expression: candidate(2, 3) == \"2\"\n   Evaluated: \"01\" == \"2\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpot79lajl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpot79lajl.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpot79lajl.jl:40\n  Expression: candidate(3, 4) == \"3\"\n \
    \  Evaluated: \"01\" == \"3\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpot79lajl.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpot79lajl.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpot79lajl.jl:41\n  Expression: candidate(4, 5) == \"4\"\n \
    \  Evaluated: \"01\" == \"4\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpot79lajl.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpot79lajl.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpot79lajl.jl:42\n  Expression: candidate(5, 6) == \"5\"\n \
    \  Evaluated: \"01\" == \"5\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpot79lajl.jl:42 [inlined]"
  timestamp: 1660008673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x >= base\n        return change_base(div(x, base),\
    \ base) * string(x % base)\n    else\n        return string(x)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    str = \"\"\n    while x>0\n        n =\
    \ x%base\n        x = div(x,base)\n        str = string(n) * str\n    end\n  \
    \  return str\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        rem = x % base\n        x = div(x, base)\n\
    \        push!(res, string(rem))\n    end\n    reverse(res)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpuel81gwn.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpuel81gwn.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuel81gwn.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuel81gwn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuel81gwn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpuel81gwn.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuel81gwn.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuel81gwn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuel81gwn.jl:30\n  Test threw except"
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder_stack = Stack()\n    result = \"\"\n  \
    \  while x > 0\n        remainder = x % base\n        remainder_stack.push(remainder)\n\
    \        x = div(x, base)\n    end\n    while !remainder_stack.is_empty()\n  \
    \      result *= string(remainder_stack.pop())\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpwxi1lj2r.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpwxi1lj2r.jl:29\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: Stack not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpwxi1lj2r.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwxi1lj2r.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwxi1lj2r.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpwxi1lj2r.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpwxi1lj2r.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwxi1lj2r.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwxi1lj2r.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpwxi1lj2r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpwxi1lj2r.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwxi1lj2r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwxi1lj2r.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpwxi1lj2r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpwxi1lj2r.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1660008675
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x != 0\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    ret = \"\"\n    while x != 0\n        ret = string(x\
    \ % base) * ret\n        x = floor(Int64, x / base)\n    end\n    return ret\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base \n        return string(x)\n    else\n\
    \        return change_base(x\xF7base, base) * string(x%base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    if x > 0\n        while x > 0\n\
    \            result = string(x % base) * result\n            x = x \xF7 base\n\
    \        end\n    else\n        result = \"0\"\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # the representation of 0 is always 0, for all bases.\n\
    \    if x == 0\n        return \"0\"\n    end\n    # sign of number x\n    s =\
    \ 1\n    # if number x is negative, make it positive and s = -1\n    if x < 0\n\
    \        x = -x\n        s = -1\n    end\n    r = \"\" # result\n    while x >\
    \ 0\n        r = string(x % base) * r # reminder is the last digit of the representation\n\
    \        x = x \xF7 base # take floor(x/base) as the new number x\n    end\n \
    \   # if s = -1, then the number is negative, so we need to add the sign.\n  \
    \  # otherwise, it is positive and we don't need to add the sign.\n    if s ==\
    \ -1\n        return \"-\" * r\n    else\n        return r\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (x < base) \n        return string(x)\n    else\n\
    \        return string(change_base(x \xF7 base, base)) * string(x % base)\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = []\n    while x != 0\n        push!(res, x % base)\n        x = div(x, base)\n\
    \    end\n    res = reverse(res)\n    return join(res)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # call the helper\n    return num_to_str(int_to_digit_list(x,\
    \ base))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpv0kn4fpm.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpv0kn4fpm.jl:20\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: int_to_digit_list not\
    \ defined\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpv0kn4fpm.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv0kn4fpm.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv0kn4fpm.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpv0kn4fpm.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: int_to_digit_list not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpv0kn4fpm.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv0kn4fpm.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv0kn4fpm.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpv0kn4fpm.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: int_to_digit_list not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpv0kn4fpm.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv0kn4fpm.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv0kn4fpm.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpv0kn4fpm.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: int_to_digit_list not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpv0kn4fpm.jl:13\n\
    \   [2] macro expansion\n "
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base < 10\n        string = \"\"\n        while\
    \ x > 0\n            string = string * string(x % base)\n            x = x //\
    \ base\n        end\n        return string\n    else\n        return \"Base is\
    \ too big!\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpc3zidfzf.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpc3zidfzf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpc3zidfzf.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc3zidfzf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc3zidfzf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpc3zidfzf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpc3zidfzf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc3zidfzf.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc3zidfzf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpc3zidfzf.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n   \
    \  @ Main /tmp/tmpc3zidfzf.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc3zidfzf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc3zidfzf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpc3zidfzf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpc3zidfz"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base < 2 || base > 10\n        return \"Base number\
    \ is out of range. Please choose a number between 2 and 10.\"\n    end\n    remainder\
    \ = x\n    result = \"\"\n    while remainder > 0\n        result = string(remainder\
    \ % base) * result\n        remainder = floor(remainder / base)\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpncibzgl5.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpncibzgl5.jl:28\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpncibzgl5.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpncibzgl5.jl:27\ntest set: Test Failed at /tmp/tmpncibzgl5.jl:29\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1.00.00\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncibzgl5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncibzgl5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpncibzgl5.jl:30\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncibzgl5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncibzgl5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpncibzgl5.jl:31\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpncibzgl5.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpncibzgl5.jl:27\ntest set: Test Failed at /tmp/tmpncibzgl5.jl:32\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1660008674
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        m = x %\
    \ base\n        x = x / base\n        push!(result, m)\n    end\n    reverse(result)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpgaohtk6y.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpgaohtk6y.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgaohtk6y.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgaohtk6y.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgaohtk6y.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpgaohtk6y.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgaohtk6y.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgaohtk6y.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgaohtk6y.jl:27\n  Test threw exceptio"
  timestamp: 1660008676
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return x\n    else\n       \
    \ return change_base(x//base, base) * x%base\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: '
  stdout: "test set: Error During Test at /tmp/tmp0hg55x42.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0hg55x42.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp0hg55x42.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0hg55x42.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0hg55x42.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0hg55x42.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0hg55x42.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp0hg55x42.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0hg55x42.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0hg55x42.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0hg55x42.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0hg55x42.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp0hg55x42.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0hg55x42.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x >= base\n        res = string(x\
    \ % base) * res\n        x = x // base\n    end\n    res = string(x) * res\n \
    \   return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjk6mr7u5.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjk6mr7u5.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"8//32\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjk6mr7u5.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjk6mr7u5.jl:24\ntest set: Test Failed at /tmp/tmpjk6mr7u5.jl:26\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1//10//10\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6mr7u5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6mr7u5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjk6mr7u5.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"117//6453//3221//165//85//41//21//10\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6mr7u5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6mr7u5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjk6mr7u5.jl:28\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1//10//10//10//10\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjk6mr7u5.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjk6mr7u5.jl:24\ntest set: Test Failed at /tmp/tmpjk6mr7u5.jl:29\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1//10//10//10\" ==\
    \ \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/jul"
  timestamp: 1660008674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        result =\
    \ string(x % base) * result\n        x = div(x, base)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        x, r = divrem(x, base)\n        result = string(r)\
    \ * result\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y = x % base\n    if x == 0\n        return \"0\"\
    \n    elseif x == 1\n        return \"1\"\n    else\n        return change_base(floor(x/base),\
    \ base) * string(y)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpn5yqlqn7.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpn5yqlqn7.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpn5yqlqn7.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpn5yqlqn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn5yqlqn7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn5yqlqn7.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpn5yqlqn7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpn5yqlqn7.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpn5yqlqn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn5yqlqn7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn5yqlqn7.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpn5yqlqn7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpn5yqlqn7.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpn5yqlqn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn5yqlqn7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  timestamp: 1660008676
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x != 0\n        res = string(x % base) * res\n        x =\
    \ x \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = mod(x, base)\n\
    \    if quotient == 0 \n        return string(remainder)\n    else\n        return\
    \ change_base(quotient, base) * string(remainder)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = x\n    result = \"\"\n    while n > 0\n     \
    \   rem = n % base\n        result = string(rem) * result\n        n = floor(Int64,\
    \ n / base)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008673
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x // base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpvq325upl.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpvq325upl.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpvq325upl.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpvq325upl.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvq325upl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvq325upl.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpvq325upl.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpvq325upl.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvq325upl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvq325upl.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int"
  timestamp: 1660008676
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # base case: change base of x to itself\n    if x\
    \ < base\n        return string(x)\n    end\n    # change base recursively\n \
    \   return change_base(div(x, base), base) * string(rem(x, base))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = []\n    while x > 0\n        push!(res, x %\
    \ base)\n        x = div(x, base)\n    end\n    join(reverse(res))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008673
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    out = \"\"\n    q = x\n    while q >= base\n    \
    \    r = q % base\n        q = q \xF7 base\n        push!(out, string(r))\n  \
    \  end\n    push!(out, string(q))\n    return out\nend\n \nx = 8\nbase = 3\nstring(change_base(x,\
    \ base))\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: no method matching push!(::String, ::String)\n\
    Closest candidates are:\n  push!(::Any, ::Any, !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n\
    \  push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \  push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \  ...\nStacktrace:\n [1] change_base(x::Int64, base::Int64)\n   @ "
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x // base\n    remainder = x % base\n\
    \    if quotient == 0\n        return string(remainder)\n    else\n        return\
    \ change_base(quotient, base) * string(remainder)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpsy4qn2_j.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpsy4qn2_j.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsy4qn2_j.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpsy4qn2_j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsy4qn2_j.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsy4qn2_j.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsy4qn2_j.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsy4qn2_j.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpsy4qn2_j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsy4qn2_j.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsy4qn2_j.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsy4qn2_j.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsy4qn2_j.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpsy4qn2_j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsy4qn2_j.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # your code here\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpttivijkf.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpttivijkf.jl:20\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpttivijkf.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpttivijkf.jl:19\ntest set: Test Failed at /tmp/tmpttivijkf.jl:21\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"\" == \"100\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttivijkf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttivijkf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpttivijkf.jl:22\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpttivijkf.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpttivijkf.jl:19\ntest set: Test Failed at /tmp/tmpttivijkf.jl:23\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"\" == \"10000\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttivijkf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttivijkf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpttivijkf.jl:24\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp"
  timestamp: 1660008675
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = 0\n    remainder = 0\n    answer = 0\n\
    \    quotient = x \n    answer = \"\"\n    while quotient > 0\n        remainder\
    \ = quotient % base\n        quotient = div(quotient, base)\n        answer =\
    \ string(remainder) * answer\n    end\n    return answer\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008673
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q = x\n    r = 0\n    s = String()\n    while q >\
    \ 0\n        r = q % base\n        q = q \xF7 base\n        s = string(r) * s\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp3g1__win.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp3g1__win.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching String()\n\
    \  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp3g1__win.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3g1__win.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3g1__win.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3g1__win.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching String()\n  Closest\
    \ candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp3g1__win.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3g1__win.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3g1__win.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3g1__win.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching String()\n\
    \  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/ba"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = []\n    while x != 0\n        digits = [x\
    \ % base] + digits\n        x = div(x, base)\n    end\n    return join(string.(digits),\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpxzj4qd3u.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxzj4qd3u.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpxzj4qd3u.jl:14\n   [5] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpxzj4qd3u.jl:24 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxzj4qd3u.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxzj4qd3u.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmpxzj4qd3u.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxzj4qd3u.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxzj4qd3u.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxzj4qd3u.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indices.jl:169 [inlined]\n"
  timestamp: 1660008677
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    res = \"\"\n    while quotient\
    \ > 0\n        rem = quotient % base\n        res = string(rem) * res\n      \
    \  quotient = quotient \xF7 base\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y = x\n    if x < base\n        return string(x)\n\
    \    else\n        rem = x % base\n        return change_base(x \xF7 base, base)\
    \ * string(rem)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = []\n    while x > 0\n        a = x % base\n\
    \        push!(res, a)\n        x = floor(Int64, x / base)\n    end\n    return\
    \ join(reverse(res))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008674
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # Check if the base is valid\n    if base < 2 ||\
    \ base > 10\n        return \"\"\n    end\n    # Use a stack to store the numbers\
    \ for each digit\n    s = Stack()\n    while x != 0\n        s.push(x % base)\n\
    \        x = x \xF7 base\n    end\n    ans = \"\"\n    while !s.empty()\n    \
    \    # convert the digit back to string\n        ans *= string(s.pop())\n    end\n\
    \    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp86jbyqrd.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp86jbyqrd.jl:34\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: Stack not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp86jbyqrd.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86jbyqrd.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86jbyqrd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp86jbyqrd.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp86jbyqrd.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86jbyqrd.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86jbyqrd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp86jbyqrd.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp86jbyqrd.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86jbyqrd.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86jbyqrd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp86jbyqrd.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp86jbyqrd.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    reminder = mod(x, base)\n    quotient = x \xF7\
    \ base\n    rest = \"\"\n    \n    while quotient >= 1\n        reminder = mod(quotient,\
    \ base)\n        quotient = quotient \xF7 base\n        rest = string(reminder)\
    \ * rest\n    end\n    rest = string(reminder) * rest\n    \n    return rest\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjk5_gw_3.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpjk5_gw_3.jl:32\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"110\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjk5_gw_3.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjk5_gw_3.jl:30\ntest set: Test Failed at /tmp/tmpjk5_gw_3.jl:33\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"11110101\" ==\
    \ \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk5_gw_3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk5_gw_3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjk5_gw_3.jl:34\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"11000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjk5_gw_3.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjk5_gw_3.jl:30\ntest set: Test Failed at /tmp/tmpjk5_gw_3.jl:35\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1100\" == \"1000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk5_gw_3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk5_gw_3.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    nums = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"\
    , \"6\", \"7\", \"8\", \"9\"]\n    if base > 10\n        error(\"base should be\
    \ less than 10\")\n    end\n    if x < 0\n        error(\"input number should\
    \ be positive\")\n    end\n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x != 0\n        r = x % base\n        x = div(x, base)\n \
    \       result = nums[r] * result\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpzbb3gzxd.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpzbb3gzxd.jl:35\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzbb3gzxd.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzbb3gzxd.jl:34\ntest set: Error During Test\
    \ at /tmp/tmpzbb3gzxd.jl:36\n  Test threw exception\n  Expression: candidate(9,\
    \ 3) == \"100\"\n  BoundsError: attempt to access 10-element Vector{String} at\
    \ index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpzbb3gzxd.jl:26\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzbb3gzxd.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzbb3gzxd.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzbb3gzxd.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 10-element\
    \ Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpzbb3gzxd.jl:26\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzbb3gzxd.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzbb3gzxd.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzbb3gzxd.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  BoundsError: attempt to access 10-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int6"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\" \n    x_ = x\n    for i = 0:floor(log(x_,\
    \ base))\n        result = string(x_ % base) * result\n        x_ = floor(x_ /\
    \ base)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvo9hfx3p.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpvo9hfx3p.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvo9hfx3p.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvo9hfx3p.jl:24\ntest set: Test Failed at /tmp/tmpvo9hfx3p.jl:26\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"0\" == \"100\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9hfx3p.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9hfx3p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvo9hfx3p.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"0\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvo9hfx3p.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvo9hfx3p.jl:24\ntest set: Test Failed at /tmp/tmpvo9hfx3p.jl:28\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"0\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9hfx3p.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9hfx3p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvo9hfx3p.jl:29\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tm"
  timestamp: 1660008677
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    current_x = x\n    new_base_string = \"\"\n    i\
    \ = 0\n    while (current_x>0)\n        remainder = current_x % base\n       \
    \ new_base_string = remainder*string(10^i) + new_base_string\n        current_x\
    \ = floor(current_x/base)\n        i += 1\n    end\n    return new_base_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmp9z8ens1a.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching *(::Int64,\
    \ ::String)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:88\n    *(!Matched::Union{AbstractChar,\
    \ AbstractString}, ::Union{AbstractChar, AbstractString}...) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp9z8ens1a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9z8ens1a.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9z8ens1a.jl:27\n"
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    ans::Int64 = 0\n    rem::Int64 = 0\n    i::Int64\
    \ = 1\n    while x > 0\n        rem = x % base\n        x = x \xF7 base\n    \
    \    ans = ans + rem * i\n        i = i * 10\n    end\n    return string(ans)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008675
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    # initialize the string result with empty string\
    \ \n    result::String = \"\"\n    \n    # Convert input decimal number to a string\
    \ with the base\n    while x >= base\n        result = string(x % base) * result\n\
    \        x = x \xF7 base\n    end\n    \n    # Add the last digit to the string\
    \ result\n    result = string(x) * result\n    \n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008675
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # Check if base number is less than 10.\n    if base\
    \ > 10\n        print(\"base number is less than 10.\")\n        return\n    end\n\
    \    # Initialization of a stack.\n    stack = Stack(Int64)\n    while x > 0\n\
    \        push!(stack, x % base)\n        x = div(x, base)\n    end\n    ans =\
    \ \"\"\n    while !isempty(stack)\n        pop!(stack)\n        ans = string(top(stack))\
    \ * ans\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpqu6hz182.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpqu6hz182.jl:35\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: Stack not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqu6hz182.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqu6hz182.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqu6hz182.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpqu6hz182.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqu6hz182.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqu6hz182.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqu6hz182.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpqu6hz182.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqu6hz182.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqu6hz182.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqu6hz182.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpqu6hz182.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: Stack not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqu6hz182.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    base_string\
    \ = \"\"\n    while quotient > 0\n        remainder = quotient % base\n      \
    \  quotient = floor(quotient / base)\n        base_string = string(remainder)\
    \ * base_string\n    end\n    return base_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ytsjrog.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp0ytsjrog.jl:27\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0ytsjrog.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0ytsjrog.jl:26\ntest set: Test Failed at /tmp/tmp0ytsjrog.jl:28\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1.00.00\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ytsjrog.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ytsjrog.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0ytsjrog.jl:29\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ytsjrog.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ytsjrog.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0ytsjrog.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0ytsjrog.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0ytsjrog.jl:26\ntest set: Test Failed at /tmp/tmp0ytsjrog.jl:31\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1660008677
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        a = x % base\n        x = div(x, base)\n  \
    \      push!(result, a)\n    end\n    return reverse(result)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpxmbncy6g.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpxmbncy6g.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxmbncy6g.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxmbncy6g.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxmbncy6g.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpxmbncy6g.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxmbncy6g.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxmbncy6g.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxmbncy6g.jl:30\n  Test threw exceptio"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    div = div(x, base)\n    mod = mod(x, base)\n    if div > 0\n   \
    \     res = change_base(div, base)\n    end\n    res * string(mod)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpfgw588h_.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpfgw588h_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: div not defined\n \
    \ Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpfgw588h_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgw588h_.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgw588h_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfgw588h_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: div not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpfgw588h_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgw588h_.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgw588h_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfgw588h_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: div not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpfgw588h_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgw588h_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgw588h_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpfgw588h_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: div not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpfgw588h_.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    base_list = []\n    while x > 0\n        rest = x\
    \ % base\n        x = div(x, base)\n        push!(base_list, rest)\n    end\n\
    \    return join(reverse(base_list))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008676
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        q, r = divrem(x, base)\n        return change_base(q, base) * string(r)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x >= base\n        res = string(x\
    \ % base) * res\n        x = x // base\n    end\n    return string(x) * res\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0v0_9l9r.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp0v0_9l9r.jl:24\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"8//32\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0v0_9l9r.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0v0_9l9r.jl:23\ntest set: Test Failed at /tmp/tmp0v0_9l9r.jl:25\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1//10//10\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v0_9l9r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v0_9l9r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0v0_9l9r.jl:26\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"117//6453//3221//165//85//41//21//10\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0v0_9l9r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0v0_9l9r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0v0_9l9r.jl:27\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1//10//10//10//10\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0v0_9l9r.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0v0_9l9r.jl:23\ntest set: Test Failed at /tmp/tmp0v0_9l9r.jl:28\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1//10//10//10\" ==\
    \ \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/jul"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x &lt; base\n        return string(x)\n    else\n\
    \        return change_base(x//base, base) * string(x%base)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpixdw_c5z.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpixdw_c5z.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpixdw_c5z.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpixdw_c5z.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpixdw_c5z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpixdw_c5z.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpixdw_c5z.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpixdw_c5z.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpixdw_c5z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpixdw_c5z.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpixdw_c5z.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpixdw_c5z.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpixdw_c5z.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpixdw_c5z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpixdw_c5z.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr"
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result::String = \"\"\n    while x != 0\n       \
    \ result = string(x % base) * result\n        x = x // base\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpkae9hez2.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpkae9hez2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpkae9hez2.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkae9hez2.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkae9hez2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkae9hez2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpkae9hez2.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkae9hez2.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkae9hez2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkae9hez2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int"
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x \xF7 base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\" inner recursive function \"\"\"\n    function\
    \ change_base_inner(x::Int64, base::Int64, acc::String)::String\n        \"\"\"\
    \ goon until x > base \"\"\"\n        if x > base \n            return change_base_inner(div(x,\
    \ base), base, string(x % base) * acc)\n        else\n            return string(x)\
    \ * acc\n        end\n    end\n    return change_base_inner(x, base, \"\")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppr5rnyvo.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmppr5rnyvo.jl:29\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"30\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppr5rnyvo.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppr5rnyvo.jl:27\ntest set: Test Failed at /tmp/tmppr5rnyvo.jl:31\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"2000\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr5rnyvo.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr5rnyvo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmppr5rnyvo.jl:32\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"200\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr5rnyvo.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr5rnyvo.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # \uC785\uB825 \uAC12\uC774 \uCD5C\uC18C \uAC12\uBCF4\
    \uB2E4 \uC791\uAC70\uB098, base\uAC00 1\uC774\uD558\uC778 \uACBD\uC6B0\n    if\
    \ x < base || base < 2\n        return \"0\"\n    else\n        if x < 0 # \uC785\
    \uB825 \uAC12\uC774 \uC74C\uC218\uC778 \uACBD\uC6B0\n            # \uC74C\uC218\
    \uAC00 \uC544\uB2CC \uAC12\uC73C\uB85C \uBC14\uAFB8\uACE0, \uBB38\uC790\uC5F4\uB85C\
    \ \uB9AC\uD134\uD558\uAE30 \uC704\uD574\n            # \uC74C\uC218 \uD45C\uC2DC\
    \uB97C \uBD99\uC5EC\uC11C \uB9AC\uD134\n            return \"-\" * change_base(-x,\
    \ base)\n        elseif x == 0 # \uC785\uB825 \uAC12\uC774 0\uC778 \uACBD\uC6B0\
    \n            return \"0\"\n        else\n            remainder::Int64 = x % base\
    \ # \uB098\uBA38\uC9C0 \uAD6C\uD558\uAE30\n            quotient::Int64 = x \xF7\
    \ base # \uBAAB \uAD6C\uD558\uAE30\n            # \uC7AC\uADC0 \uD638\uCD9C. \uBAAB\
    \uC744 \uC774\uC6A9\uD574 \uB2E4\uC2DC \uBCC0\uD658\n            return change_base(quotient,\
    \ base) * string(remainder)\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpim1e7it5.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpim1e7it5.jl:35\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpim1e7it5.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpim1e7it5.jl:34\ntest set: Test Failed at /tmp/tmpim1e7it5.jl:36\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"000\" == \"100\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpim1e7it5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpim1e7it5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpim1e7it5.jl:37\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"01101010\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpim1e7it5.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpim1e7it5.jl:34\ntest set: Test Failed at /tmp/tmpim1e7it5.jl:38\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"00000\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpim1e7it5.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpim1e7it5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpim1e7it5.jl:39\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro e"
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        rem = x\
    \ % base\n        x = (x - rem) / base\n        result = string(rem) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_e5sb0dp.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp_e5sb0dp.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_e5sb0dp.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_e5sb0dp.jl:24\ntest set: Test Failed at /tmp/tmp_e5sb0dp.jl:26\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1.00.00\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e5sb0dp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e5sb0dp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_e5sb0dp.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e5sb0dp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e5sb0dp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_e5sb0dp.jl:28\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_e5sb0dp.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_e5sb0dp.jl:24\ntest set: Test Failed at /tmp/tmp_e5sb0dp.jl:29\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    rep\
    \ = \"\"\n    while x > 0\n        rep = string(x % base) * rep\n        x = x\
    \ \xF7 base\n    end\n    return rep\nend\nprintln(change_base(8, 3))\nprintln(change_base(8,\
    \ 2))\nprintln(change_base(7, 2))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: '22

    1000

    111

    Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    if x == 0\n        return \"0\"\
    \n    end\n    while x > 0\n        digit = x % base\n        result = string(digit)\
    \ * result\n        x = (x - digit) / base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmx0orxaz.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpmx0orxaz.jl:28\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmx0orxaz.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmx0orxaz.jl:27\ntest set: Test Failed at /tmp/tmpmx0orxaz.jl:29\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1.00.00\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx0orxaz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx0orxaz.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpmx0orxaz.jl:30\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx0orxaz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx0orxaz.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpmx0orxaz.jl:31\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmx0orxaz.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmx0orxaz.jl:27\ntest set: Test Failed at /tmp/tmpmx0orxaz.jl:32\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1660008679
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x == 0 && return \"0\"\n    res = \"\"\n    while\
    \ x != 0\n        append!(res, x % base)\n        x = div(x, base)\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmp_fxmxouw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching append!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp_fxmxouw.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fxmxouw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fxmxouw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_fxmxouw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching append!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp_fxmxouw.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fxmxouw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fxmxouw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_fxmxouw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching append!(::String,\
    \ ::Int64)"
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = mod(quotient, base)\n\
    \    quotient = quotient \xF7 base\n    result = string(remainder)\n    while\
    \ quotient \u2260 0\n        remainder = mod(quotient, base)\n        quotient\
    \ = quotient \xF7 base\n        result = string(remainder * result)\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpjk9awk_u.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching *(::Int64,\
    \ ::String)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:88\n    *(!Matched::Union{AbstractChar,\
    \ AbstractString}, ::Union{AbstractChar, AbstractString}...) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpjk9awk_u.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk9awk_u.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk9awk_u.jl:27\n"
  timestamp: 1660008682
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    nums = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \    result = \"\"\n    while x > 0\n        remainder = mod(x, base)\n      \
    \  x = div(x, base)\n        result = string(nums[remainder+1]) * result\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008677
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = floor(Int64,\
    \ x / base)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change base of x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   \"\"\"\n    if x < 0 || base < 0 || base > 10\n        return \"Invalid input\"\
    \n    end\n    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while\
    \ x > 0\n        rem = x % base\n        res = string(rem) * res\n        x =\
    \ x \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (x<0)\n        return \"-\"*change_base(-x, base)\n\
    \    end\n    result = \"\"\n    while x > 0\n        result = string(x%base)\
    \ * result\n        x = floor(Int64, x/base)\n    end\n    if result == \"\"\n\
    \        result = \"0\"\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    if quotient\
    \ == 0\n        return string(remainder)\n    else\n        return change_base(quotient,\
    \ base) * string(remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # convert integer to string, result is a string\n\
    \    res = string(x)\n    # we want to convert to this base\n    to_base = base\n\
    \    # we will use this string, to append the digits of the result\n    # for\
    \ example with input x = 8, base = 3\n    # result = 2, 10, 2\n    # 2 will be\
    \ appended to result_string\n    # 10 in base 3 is 1, 3\n    # 1 will be appended\
    \ to result_string\n    # 3 will be appended to result_string\n    result_string\
    \ = \"\"\n    # loop through the digits of x\n    # for example with input x =\
    \ 8, base = 3\n    # loop 1 : digit = 8, divide = 2\n    # loop 2 : digit = 2,\
    \ divide = 0\n    # loop 3 : digit = 0, divide = 0\n    for digit = parse(Int64,\
    \ res), divide = digit\xF7to_base\n        if digit == 0 \n            # if the\
    \ digit of x is 0, append \"0\" to result_string\n            append!(result_string,\
    \ \"0\")\n        else\n            # convert the digit in base 10 to a string\n\
    \            # for example with input x = 8, base = 3\n            # loop 1 :\
    \ digit = 8, to_base = 3, remainder = 2\n            # loop 2 : digit = 2, to_base\
    \ = 3, remainder = 2\n            # loop 3 : digit = 0, to_base = 3, remainder\
    \ = 0\n            digit_string = string(digit%to_base)\n            # append\
    \ digit to result_string\n            append!(result_string, digit_string)\n \
    \       end\n        # repeat the loop with digit = divide\n        # for example\
    \ with input x = 8, base = 3\n        # loop 1 : digit = 8, divide = 2\n     \
    \   # loop 2 : digit = 2, divide = 0\n        # loop 3 : digit = 0, divide = 0\n\
    \        digit = divide\n    end\n    # reverse the result_string\n    # for example\
    \ with input x = 8, base = 3\n    # loop 1 : digit = 8, divide = 2\n    # loop\
    \ 2 : digit = 2, divide = 0\n    # loop 3 : digit = 0, divide = 0\n    # result\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ben5a0v.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ben5a0v.jl:1\n\
    in expression starting at /tmp/tmp5ben5a0v.jl:1\n"
  stdout: ''
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y = \"\"\n    if base == 10\n        return string(x)\n\
    \    end\n    if x == 0\n        return \"0\"\n    end\n    while x > 0\n    \
    \    y = string(x % base) * y\n        x = x \xF7 base\n    end\n    return y\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    return\
    \ change_base(quotient, base) * string(remainder)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    #if input is zero return zero\n    if x ==\
    \ 0\n        return \"0\"\n    end\n    result::String = \"\"\n    #if input number\
    \ is negative\n    if x < 0\n        x = -x\n        result = \"-\"\n    end\n\
    \    # if input number is more than 1\n    while x >= 1\n        result = string(x\
    \ % base) * result\n        x = floor(Int64, x / base)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008678
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # base case\n    if x == 0\n        return \"0\"\n\
    \    end\n    # recursive case\n    return change_base(x \xF7 base, base) * string(x\
    \ % base)\nend;\nprintln(change_base(7, 2))\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp50zyn2w5.jl:22

    '
  stdout: "0111\ntest set: Test Failed at /tmp/tmp50zyn2w5.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"022\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp50zyn2w5.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp50zyn2w5.jl:24\ntest set: Test Failed at /tmp/tmp50zyn2w5.jl:26\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"0100\" == \"100\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp50zyn2w5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp50zyn2w5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp50zyn2w5.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"011101010\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp50zyn2w5.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp50zyn2w5.jl:24\ntest set: Test Failed at /tmp/tmp50zyn2w5.jl:28\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"010000\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp50zyn2w5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp50zyn2w5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp50zyn2w5.jl:29\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"01000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ ["
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x/base\n    remainder = x%base\n    if\
    \ quotient == 0:\n        return string(remainder)\n    else:\n        return\
    \ change_base(quotient, base) * string(remainder)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmz536nx.jl:15\nin expression starting at\
    \ /tmp/tmphmz536nx.jl:15\n"
  stdout: ''
  timestamp: 1660008679
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ r\n    else\n        return change_base(q, base) * r\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpynruwlx2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpynruwlx2.jl:14\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpynruwlx2.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpynruwlx2.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpynruwlx2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpynruwlx2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpynruwlx2.jl:14\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpynruwlx2.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpynruwlx2.jl:"
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return string(change_base(div(x, base), base), x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008679
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = String(\"\")\n    while x != 0\n        push!(result, x % base)\n        x\
    \ = div(x, base)\n    end\n    reverse(result)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpy5u5ryae.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpy5u5ryae.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy5u5ryae.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy5u5ryae.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpy5u5ryae.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpy5u5ryae.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy5u5ryae.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy5u5ryae.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpy5u5ryae.jl:29\n  Test threw exceptio"
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base > 10\n        error(\"base numbers are less\
    \ than 10\")\n    end\n    quotient, remainder = divrem(x, base)\n    if quotient\
    \ == 0\n        return string(remainder)\n    else\n        return string(change_base(quotient,\
    \ base), remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result_list = []\n    while x >= base\n        remainder\
    \ = convert(Int64, x % base)\n        # push remainder to front of list\n    \
    \    pushfirst!(result_list, remainder)\n        x = x / base\n    end\n    #\
    \ push last remainder to front of list\n    pushfirst!(result_list, x)\n    join(map(string,\
    \ result_list))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcozmhhgo.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpcozmhhgo.jl:28\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.66666666666666652\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcozmhhgo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcozmhhgo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpcozmhhgo.jl:29\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.000\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcozmhhgo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcozmhhgo.jl:27\ntest set: Error\
    \ During Test at /tmp/tmpcozmhhgo.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(0.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpcozmhhgo.jl:14\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcozmhhgo.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcozmhhgo.jl:27\ntest set:\
    \ Test Failed at /tmp/tmpcozmhhgo.jl:31\n  Expression: candidate(16, 2) == \"\
    10000\"\n   Evaluated: \"1.00000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcozmhhgo.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcozmhhgo.jl:27\ntest set: Test Failed a"
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    answer = \"\"\n    remainder =\
    \ mod(quotient, base)\n    while quotient != 0\n        answer = string(remainder)\
    \ * answer\n        quotient = Int64(quotient / base)\n        remainder = mod(quotient,\
    \ base)\n    end\n    return answer\nend\n \nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp9bn6a71z.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp9bn6a71z.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp9bn6a71z.jl:17\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp9bn6a71z.jl:28 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9bn6a71z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9bn6a71z.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp9bn6a71z.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9bn6a71z.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9bn6a71z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9bn6a71z.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp9bn6a71z.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9bn6a71z.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9bn6a71z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9bn6a71z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)\n  Stacktrace:\n \
    \  [1] Int64\n  "
  timestamp: 1660008682
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x > 0\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008679
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    s =\
    \ \"\"\n    while x > 0\n        s = string(x % base) * s\n        x = x / base\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_irjm0_u.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_irjm0_u.jl:27\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  timestamp: 1660008682
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    result = \"\"\n    if base == 10\n\
    \        return string(x)\n    end\n    if x == 0\n        return \"0\"\n    end\n\
    \    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = trunc(Int64, quotient / base)\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x = x\n    out = \"\"\n    while x > 0\n        y\
    \ = x % base\n        out = string(y) * out\n        x = div(x, base)\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008679
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = \"\"\n    if base == 10\n        return r = string(x)\n\
    \    end\n    while x > 0\n        r = string(x % base) * r\n        x = floor(Int64,\
    \ x / base)\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #this function converts x to base(2 to 10)\n    #using\
    \ remainder method and return string representation\n    # #example change_base(8,\
    \ 3) = 22\n    # #output example change_base(8, 3) = \"22\"\n    # #fill in the\
    \ function name and body\n    if x == 0\n        return \"0\"\n    end\n    str\
    \ = \"\"\n    while x > 0\n        r = x % base\n        str = string(r) * str\n\
    \        x = x \xF7 base\n    end\n    return str\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    i = 0\n    while x >= base^i\n        i += 1\n  \
    \  end\n    res = \"\"\n    while i > 0\n        i -= 1\n        res = string(res,\
    \ string(x \xF7 base^i))\n        x %= base^i\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    if\
    \ x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    stack = []\n\
    \    while x > 0\n        r = x % base\n        x = x \xF7 base\n        push!(stack,\
    \ r)\n    end\n    return reduce(*, map(string, stack))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5rlr_qp3.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp5rlr_qp3.jl:32\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"001\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5rlr_qp3.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5rlr_qp3.jl:30\ntest set: Test Failed at /tmp/tmp5rlr_qp3.jl:33\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"01010111\" ==\
    \ \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5rlr_qp3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5rlr_qp3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5rlr_qp3.jl:34\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"00001\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5rlr_qp3.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5rlr_qp3.jl:30\ntest set: Test Failed at /tmp/tmp5rlr_qp3.jl:35\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"0001\" == \"1000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5rlr_qp3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5rlr_qp3.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  timestamp: 1660008682
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    n =\
    \ x\n    y = \"\"\n    while n > 0\n        y = (n % base) * ones(Int, 1)\n  \
    \      n = n / base\n    end\n    return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmp0il_jut_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Float64} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp0il_jut_.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0il_jut_.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0il_jut_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0il_jut_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{Float64} to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp0il_jut_.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0il_jut_.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ "
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    assert(base in 0:9, \"base must be less than 10\"\
    )\n    if x < base\n        return string(x)\n    else\n        return string(change_base(div(x,\
    \ base), base), x % base)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp5tn_y0nw.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp5tn_y0nw.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: assert not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp5tn_y0nw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tn_y0nw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tn_y0nw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5tn_y0nw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp5tn_y0nw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tn_y0nw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tn_y0nw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5tn_y0nw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp5tn_y0nw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tn_y0nw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tn_y0nw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5tn_y0nw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp5tn_y0nw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std"
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        result =\
    \ string(x % base) * result\n        x = div(x, base)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y=Int64[]\n    if x==0\n        return 0\n    end\n\
    \    while x != 0\n        push!(y,x%base)\n        x=div(x,base)\n    end\n \
    \   x=reverse(y)\n    join(string.(x),\"\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x > base-1\n        return change_base(x//base,\
    \ base) * change_base(x%base, base)\n    else\n        return string(x)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmppytaaxzj.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppytaaxzj.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppytaaxzj.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppytaaxzj.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppytaaxzj.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppytaaxzj.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppytaaxzj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppytaaxzj.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppytaaxzj.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppytaaxzj.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppytaaxzj.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppytaaxzj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppytaaxzj.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppytaaxzj.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppytaaxzj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1660008684
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #before_conversion_num = x #\"before_conversion_num\"\
    \ = \"before conversion number\"\n    #after_conversion_num = \"\" #\"after_conversion_num\"\
    \ = \"after conversion number\"\n    before_conversion_num, after_conversion_num\
    \ = x, \"\"\n    base_str = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\
    \ \"7\", \"8\", \"9\"]\n    while before_conversion_num > 0\n        after_conversion_num\
    \ = string(base_str[mod(before_conversion_num, base)+1]) * after_conversion_num\n\
    \        before_conversion_num = div(before_conversion_num, base)\n    end\n \
    \   return after_conversion_num\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008667
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_str = \"\"\n    mod_str = \"\"\n    quotient =\
    \ div(x, base)\n    mod = rem(x, base)\n    push!(x_str, string(mod))\n    while\
    \ quotient >= base\n        mod = rem(quotient, base)\n        quotient = div(quotient,\
    \ base)\n        push!(x_str, string(mod))\n    end\n    push!(x_str, string(quotient))\n\
    \    for i in 1:length(x_str)\n        insert!(mod_str, 1, x_str[i])\n    end\n\
    \    return mod_str\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpzrll3_10.jl:33\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpzrll3_10.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzrll3_10.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzrll3_10.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpzrll3_10.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpzrll3_10.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzrll3_10.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzrll3_10.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpzrll3_10.jl:35\n  Test threw except"
  timestamp: 1660008684
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    rest = x\n    res = \"\"\n    while\
    \ quotient > 0\n        rest = quotient % base\n        quotient = quotient \xF7\
    \ base\n        res = string(rest) * res\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    number = x\n    list_of_numbers = []\n    while number\
    \ > 0\n        r = rem(number, base)\n        push!(list_of_numbers, string(r))\n\
    \        number = div(number, base)\n    end\n    list_of_numbers = reverse(list_of_numbers)\n\
    \    return join(list_of_numbers)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    str_rep\
    \ = string(remainder)\n    while quotient != 0\n        quotient, remainder =\
    \ divrem(quotient, base)\n        str_rep = string(remainder, str_rep)\n    end\n\
    \    return str_rep\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        remainder\
    \ = x % base\n        x = x \xF7 base\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008680
- exit_code: -1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_str = string(x)\n    return change_base(x_str,\
    \ base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpqj43m3_x.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpqj43m3_x.jl:20\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::String,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpqj43m3_x.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqj43m3_x.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqj43m3_x.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqj43m3_x.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqj43m3_x.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::String,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpqj43m3_x.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqj43m3_x.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqj43m3_x.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqj43m3_x.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqj43m3_x.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::String,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpqj43m3_x.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqj43m3_x.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqj43m3_x.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x==0\n        return \"0\"\n    end\n    res =\
    \ \"\"\n    for i in range(1,0,-1)\n        res = string(x % base) * res\n   \
    \     x = x//base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp00gmbif_.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp00gmbif_.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  ArgumentError: range(1.0, stop=0.0,\
    \ length=-1): negative length\n  Stacktrace:\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\n      @ Base ./twiceprecision.jl:724\n\
    \    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\n      @ Base ./twiceprecision.jl:706\n    [3] _linspace\n     \
    \ @ ./twiceprecision.jl:703 [inlined]\n    [4] range_start_stop_length\n     \
    \ @ ./range.jl:529 [inlined]\n    [5] _range\n      @ ./range.jl:128 [inlined]\n\
    \    [6] range(start::Int64, stop::Int64, length::Int64)\n      @ Base ./range.jl:112\n\
    \    [7] change_base(x::Int64, base::Int64)\n      @ Main /tmp/tmp00gmbif_.jl:16\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp00gmbif_.jl:27 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp00gmbif_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp00gmbif_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  ArgumentError: range(1.0, stop=0.0, length=-1):\
    \ negative length\n  Stacktrace:\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\n      @ Base ./twiceprecision.jl:724\n\
    \    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\n      @ Base ./twiceprecision.jl:706\n    [3] _linspace\n     \
    \ @ ./twiceprecision.jl:703 [inlined]\n    [4] range_start_stop_length\n     \
    \ @ ./range.jl:529 [inlined]\n    [5] _range\n      @ ./range.jl:128 [inlined]\n\
    \    [6] range(start::Int64, stop::Int64, length::Int64)\n      @ Base ./range.jl:112\n\
    \    [7] change_base(x::Int64, base::Int64)\n      @ Main /tmp/tmp00gmbif_.jl:16\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro ex"
  timestamp: 1660008684
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x >= base\n        rem = x\
    \ % base\n        res = string(rem) * res\n        x = x \xF7 base\n    end\n\
    \    res = string(x) * res\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    if\
    \ x == 1\n        return \"1\"\n    end\n    if x < 0\n        return \"-\" *\
    \ change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    result = \"\"\n    while x > 0\n        remainder = x % base\n        result\
    \ = digits[remainder + 1] * result\n        x = x \xF7 base\n    end\n    return\
    \ result\nend\n \nchange_base(8, 3)\nchange_base(8, 2)\nchange_base(7, 2)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #\n    remainder = x % base\n    quotient = div(x,\
    \ base)\n    if quotient == 0\n        return string(remainder)\n    else\n  \
    \      return change_base(quotient, base) * string(remainder)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x1 = x\n    x2 = \"\"\n    while x1 >= base\n   \
    \     x2 = string(x1 % base) * x2\n        x1 = floor(Int64, x1 / base)\n    end\n\
    \    x2 = string(x1) * x2\n    return x2\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8,\
    \ 2)\n    \"1000\"\n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\n    if\
    \ base <= 0 || base > 10\n        error(\"base must be greater than 0 and less\
    \ than 10\")\n    end\n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    if x < 0\n        x = -x\n        is_negative = true\n    else\n\
    \        is_negative = false\n    end\n    while x > 0\n        remainder = x\
    \ % base\n        x = div(x, base)\n        result = string(remainder) * result\n\
    \    end\n    if is_negative\n        result = \"-\" * result\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    assert(base > 1 && base < 10, \"base must be between\
    \ 2 and 9\")\n    # julia has no built in method to convert to base b\n    # so\
    \ we will use this naive method\n    result = \"\"\n    while x > 0\n        remainder\
    \ = x % base\n        result = string(remainder) * result\n        x = x \xF7\
    \ base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp0h259dh6.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp0h259dh6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: assert not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp0h259dh6.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0h259dh6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0h259dh6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0h259dh6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp0h259dh6.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0h259dh6.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0h259dh6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0h259dh6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp0h259dh6.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0h259dh6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0h259dh6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0h259dh6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp0h259dh6.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std"
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    rest = x % base\n    result = string(rest)\n\
    \    while quotient >= base\n        quotient = quotient / base\n        rest\
    \ = quotient % base\n        result = string(rest) * result\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8zoh1rx1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp8zoh1rx1.jl:27\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.66666666666666652\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zoh1rx1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zoh1rx1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8zoh1rx1.jl:28\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8zoh1rx1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8zoh1rx1.jl:26\ntest set: Test Failed at /tmp/tmp8zoh1rx1.jl:29\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"1.8281251.656251.31250.6251.250.51.00\"\
    \ == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zoh1rx1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zoh1rx1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8zoh1rx1.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8zoh1rx1.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8zoh1rx1.jl:26\ntest set: Test Failed at /tmp/tmp8zoh1rx1.jl:31\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/sha"
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    input_number = x\n    output_number = \"\"\n    while\
    \ input_number > 0\n        remainder = input_number % base\n        output_number\
    \ = string(remainder) * output_number\n        input_number = input_number \xF7\
    \ base\n    end\n    return output_number\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008681
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_str = \"\"\n    # tmp = x\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptu3dz54s.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptu3dz54s.jl:1\n\
    in expression starting at /tmp/tmptu3dz54s.jl:1\n"
  stdout: ''
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x / base\n    remainder = x % base\n \
    \   if quotient == 0\n        return \"$remainder\"\n    else\n        return\
    \ change_base(quotient, base) * \"$remainder\"\n    end\nend\nprint(change_base(17,\
    \ 2))\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\nClosest candidates are:\n  change_base(!Matched::Int64, ::Int64) at\
    \ /tmp/tmptxrw3rnl.jl:11\nStacktrace:\n [1] change_base(x::Int64, base::Int64)\n\
    \   @ Main /tmp/tmptxrw3rnl.jl:17\n [2] top-level scope\n   @ /tmp/tmptxrw3rnl.jl:20\n\
    in expression starting at /tmp/tmptxrw3rnl.jl:20\n"
  stdout: ''
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x // base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp8jjsl_w8.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp8jjsl_w8.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8jjsl_w8.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp8jjsl_w8.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jjsl_w8.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jjsl_w8.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8jjsl_w8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8jjsl_w8.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp8jjsl_w8.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jjsl_w8.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jjsl_w8.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8jjsl_w8.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8jjsl_w8.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp8jjsl_w8.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jjsl_w8.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainders = []\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplulq25mt.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplulq25mt.jl:1\n\
    in expression starting at /tmp/tmplulq25mt.jl:1\n"
  stdout: ''
  timestamp: 1660008683
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    new_number = []\n    while x > 0\n        push!(new_number,\
    \ x % base)\n        x = x \xF7 base\n    end\n    return join(reverse(map(Int64,\
    \ new_number)))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008682
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8,\
    \ 2)\n    \"1000\"\n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\n    out\
    \ = \"\"\n    while x > 0\n        out = string(x % base) * out\n        x = x\
    \ \xF7 base\n    end\n    out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008682
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # check if base is valid.\n    if base > 10 || base\
    \ < 1\n        error(\"Invalid base. Base should be less than 10 and greater than\
    \ 0\")\n    end\n    # base case\n    if x == 0\n        return \"\"\n    end\n\
    \    # call helper function.\n    return change_base_helper(x, base)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpyjrklebn.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpyjrklebn.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: change_base_helper\
    \ not defined\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n    \
    \ @ Main /tmp/tmpyjrklebn.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyjrklebn.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyjrklebn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpyjrklebn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: change_base_helper not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpyjrklebn.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyjrklebn.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyjrklebn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpyjrklebn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: change_base_helper not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpyjrklebn.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyjrklebn.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyjrklebn.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpyjrklebn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: change_base_helper not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpyjrklebn.jl:21\n\
    \   [2] macro expansi"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    converted_number = \"\"\n    last_digit = 0\n   \
    \ if x < base:\n        converted_number = string(x)\n    else:\n        while\
    \ x >= base:\n            last_digit = x % base\n            x = (x - last_digit)\
    \ / base\n            converted_number = string(last_digit) * converted_number\n\
    \        converted_number = string(x) * converted_number\n    end\n    return\
    \ converted_number\nend\n \n \n \n\"\"\"Checks if a given number is a prime number\n\
    \    >>> is_prime(1)\n    false\n    >>> is_prime(11)\n    true\n    >>> is_prime(14)\n\
    \    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnwusegk2.jl:15\nin expression starting at\
    \ /tmp/tmpnwusegk2.jl:15\n"
  stdout: ''
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x != 0\n        res = string(x\
    \ % base) * res\n        x = x // base\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpmqp72ba7.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpmqp72ba7.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmqp72ba7.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmqp72ba7.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmqp72ba7.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmqp72ba7.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpmqp72ba7.jl:14\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmqp72ba7.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmqp72ba7.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmqp72ba7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    y = copy(x)\n    while y > 0\n       \
    \ n += 1\n        y = y \xF7 base\n    end\n    n = n - 1\n    y = copy(x)\n \
    \   s = [\"\" for i in 0:n]\n    while y > 0\n        temp = y \xF7 base\n   \
    \     s[n] = UInt8(y - temp * base)\n        y = temp\n        n -= 1\n    end\n\
    \    \"\"\n    for i in 0:n\n        s[i] = UInt8(0)\n    end\n    return join(s,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpurepkqk9.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpurepkqk9.jl:38\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type UInt8 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{String}, x::UInt8, i1::Int64)\n\
    \     @ Base ./array.jl:903\n   [2] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmpurepkqk9.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpurepkqk9.jl:38 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpurepkqk9.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpurepkqk9.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ UInt8 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{String}, x::UInt8, i1::Int64)\n\
    \     @ Base ./array.jl:903\n   [2] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmpurepkqk9.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpurepkqk9.jl:39 ["
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    answer = []\n    remainder = zero(Int64)\n    quotient\
    \ = x\n    while quotient >= base\n        push!(answer, Int(rem(quotient, base)))\n\
    \        quotient = quotient \xF7 base\n    end\n    push!(answer, quotient)\n\
    \    return string(answer...)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp812j4h79.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp812j4h79.jl:28\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"001\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp812j4h79.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp812j4h79.jl:26\ntest set: Test Failed at /tmp/tmp812j4h79.jl:29\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"01010111\" ==\
    \ \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp812j4h79.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp812j4h79.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp812j4h79.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"00001\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp812j4h79.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp812j4h79.jl:26\ntest set: Test Failed at /tmp/tmp812j4h79.jl:31\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"0001\" == \"1000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp812j4h79.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp812j4h79.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    input_list = []\n    str_output = \"\"\n    mod =\
    \ x % base\n    input_list.append(mod)\n    while x >= base\n        x = x % base\n\
    \        mod = x % base\n        input_list.append(mod)\n    end\n    for x in\
    \ input_list\n        str_output = str_output * string(x)\n    end\n    return\
    \ str_output\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp1usnmbxq.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp1usnmbxq.jl:31\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  type Array has no field append\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp1usnmbxq.jl:15\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp1usnmbxq.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1usnmbxq.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp1usnmbxq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp1usnmbxq.jl:15\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp1usnmbxq.jl:32 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1usnmbxq.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp1usnmbxq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp1usnmbxq.jl:15\n   [3] macro expansion\n \
    \    @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp1usnmbxq.jl:33 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1usnmbxq.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp1usnmbxq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] get"
  timestamp: 1660008686
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"\n    This is a reverse base conversion from\
    \ base 10 to given base.\n    \"\"\"\n    remainder = Int64[] # empty array\n\
    \    while x > 0\n        push!(remainder, x % base)\n        x = x \xF7 base\n\
    \    end\n    # remainder array is still in reverse order\n    return string(reverse(remainder))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3fu5iv39.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp3fu5iv39.jl:28\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"[2, 2]\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3fu5iv39.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3fu5iv39.jl:27\ntest set: Test Failed at /tmp/tmp3fu5iv39.jl:29\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"[1, 0, 0]\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fu5iv39.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fu5iv39.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp3fu5iv39.jl:30\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"[1, 1, 1, 0, 1, 0, 1, 0]\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fu5iv39.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fu5iv39.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp3fu5iv39.jl:31\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"[1, 0, 0, 0, 0]\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3fu5iv39.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3fu5iv39.jl:27\ntest set: Test Failed at /tmp/tmp3fu5iv39.jl:32\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"[1, 0, 0, 0]\" ==\
    \ \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x != 0\n        r = x % base\n\
    \        x = div(x, base)\n        push!(s, r)\n    end\n    return string(reverse(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmph_7o9k39.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmph_7o9k39.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmph_7o9k39.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph_7o9k39.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph_7o9k39.jl:24\ntest set:\
    \ Error During Test at /tmp/tmph_7o9k39.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmph_7o9k39.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph_7o9k39.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph_7o9k39.jl:24\ntest set:\
    \ Error During Test at /tmp/tmph_7o9k39.jl:27\n  Test threw exceptio"
  timestamp: 1660008687
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    a = []\n    while (x >= base)\n        tmp = x %\
    \ base\n        push!(a, tmp)\n        x = x - tmp\n        x = x/base\n    end\n\
    \    push!(a, x)\n    x = \"\"\n    while !isempty(a)\n        x = x * string(a[end])\n\
    \        pop!(a)\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp__bdengp.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp__bdengp.jl:32\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.02\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp__bdengp.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp__bdengp.jl:31\ntest set: Test Failed at /tmp/tmp__bdengp.jl:33\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"1.00.00\" == \"100\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp__bdengp.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp__bdengp.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp__bdengp.jl:34\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.01.01.00.01.00.01.00\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp__bdengp.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp__bdengp.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp__bdengp.jl:35\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp__bdengp.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp__bdengp.jl:31\ntest set: Test Failed at /tmp/tmp__bdengp.jl:36\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"1.00.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1660008685
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder::Int64 = 0\n    res::String = \"\"\n  \
    \  while x > 0\n        remainder = x % base\n        x = x \xF7 base\n      \
    \  res = string(remainder) * res\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008683
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # Stores the converted number\n    final_num = \"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1p85f3le.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1p85f3le.jl:1\n\
    in expression starting at /tmp/tmp1p85f3le.jl:1\n"
  stdout: ''
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    # if x == 0 return \"0\"\n    if x == 0 \n\
    \        return \"0\"\n    end\n    \n    # initialize empty string.\n    result\
    \ = \"\"\n    \n    # while x >= 1\n    while x >= 1\n        \n        # append\
    \ x%base as a string.\n        result = result * string(x%base)\n        \n  \
    \      # divide x by base\n        x = x/base\n    end\n    \n    # return string\
    \ result reversed.\n    return reverse(result)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxfmuqk6o.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpxfmuqk6o.jl:39\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5666666666666666.22\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfmuqk6o.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfmuqk6o.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpxfmuqk6o.jl:40\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"0.10.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxfmuqk6o.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxfmuqk6o.jl:38\ntest set: Test Failed at /tmp/tmpxfmuqk6o.jl:41\n\
    \  Expression: candidate(234, 2) == \"11101010\"\n   Evaluated: \"521828.152656.15213.1526.052.15.00.10\"\
    \ == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfmuqk6o.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfmuqk6o.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpxfmuqk6o.jl:42\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"0.10.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxfmuqk6o.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxfmuqk6o.jl:38\ntest set: Test Failed at /tmp/tmpxfmuqk6o.jl:43\n\
    \  Expression: candidate(8, 2) == \"1000\"\n   Evaluated: \"0.10.00.00\" == \"\
    1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/sha"
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    while x>=base^n\n        n += 1\n    end\n\
    \    n -= 1\n    rep = String(\"\")\n    while n>=0\n        while x>=base^n\n\
    \            rep = rep*string(base)\n            x -= base^n\n        end\n  \
    \      n -= 1\n    end\n    return rep\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx9iwm7a9.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpx9iwm7a9.jl:32\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"3333\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx9iwm7a9.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx9iwm7a9.jl:31\ntest set: Test Failed at /tmp/tmpx9iwm7a9.jl:33\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"3\" == \"100\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9iwm7a9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9iwm7a9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpx9iwm7a9.jl:34\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"22222\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx9iwm7a9.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx9iwm7a9.jl:31\ntest set: Test Failed at /tmp/tmpx9iwm7a9.jl:35\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"2\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9iwm7a9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9iwm7a9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpx9iwm7a9.jl:36\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"2\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660008686
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # your code goes here\n    ans = \"\"\n    while\
    \ x > 0\n        ans = string(x % base) * ans\n        x = x \xF7 base\n    end\n\
    \    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008684
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = mod(x, base)\n\
    \    if quotient == 0\n        remainder = remainder\n    else\n        remainder\
    \ = string(change_base(quotient, base), remainder)\n    end\n    return remainder\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpycesr_6_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpycesr_6_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpycesr_6_.jl:19\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpycesr_6_.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpycesr_6_.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpycesr_6_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpycesr_6_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpycesr_6_.jl:19\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpycesr_6_.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpycesr_6_.jl:"
  timestamp: 1660008688
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # put your code here\n    return \"0\"\nend\n# function\
    \ change_base(x::Int64, base::Int64)::String\n    # x, base = Int64(x), Int64(base)\n\
    \    # changed = \"\"\n    # x_n = x\n    # while x_n != 0\n        # changed\
    \ = changed * string(x_n % base)\n        # x_n = x_n / base\n    # end\n    #\
    \ return changed\n# end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpldorn5_k.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpldorn5_k.jl:30\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"0\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpldorn5_k.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpldorn5_k.jl:29\ntest set: Test Failed at /tmp/tmpldorn5_k.jl:31\n\
    \  Expression: candidate(9, 3) == \"100\"\n   Evaluated: \"0\" == \"100\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpldorn5_k.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpldorn5_k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpldorn5_k.jl:32\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"0\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpldorn5_k.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpldorn5_k.jl:29\ntest set: Test Failed at /tmp/tmpldorn5_k.jl:33\n\
    \  Expression: candidate(16, 2) == \"10000\"\n   Evaluated: \"0\" == \"10000\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpldorn5_k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpldorn5_k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpldorn5_k.jl:34\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tm"
  timestamp: 1660008686
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x \xF7 base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008676
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n, rest = div(x, base)\n    if n > 0\n        return\
    \ change_base(n, base) * string(rest)\n    else\n        return string(rest)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpmhc2w97s.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpmhc2w97s.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  BoundsError: attempt to access Int64\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate(I::Int64, i::Int64, state::Nothing)\n\
    \     @ Base ./tuple.jl:98\n   [2] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmpmhc2w97s.jl:12\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmhc2w97s.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmhc2w97s.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmhc2w97s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access Int64 at index\
    \ [2]\n  Stacktrace:\n   [1] indexed_iterate(I::Int64, i::Int64, state::Nothing)\n\
    \     @ Base ./tuple.jl:98\n   [2] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmpmhc2w97s.jl:12\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmhc2w97s.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmhc2w97s.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmhc2w97s.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access Int64 at\
    \ index [2]\n  Stacktrace:\n   [1] indexed_iterate(I::Int64, i::Int64, state::Nothing)\n\
    \     @ Base ./tuple.jl:98\n   [2] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmpmhc2w97s.jl:12\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmhc2w97s.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmhc2w97s.jl:23\ntest set:\
    \ E"
  timestamp: 1660008687
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = String[]\n    while(x > 0)\n        push!(res,\
    \ string(x % base))\n        x = div(x, base)\n    end\n    return join(reverse(res))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1660008685
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    \"22\"\n    >>> change_base(8, 2)\n    \"1000\"\
    \n    >>> change_base(7, 2)\n    \"111\"\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        result =\
    \ string(x % base) * result\n        x = x // base\n    end\n    return result\n\
    end\nprint(change_base(8, 3))\nprint(change_base(8, 2))\nprint(change_base(7,\
    \ 2))\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: OverflowError: 4052555153018976267 * 3 overflowed for\
    \ type Int64\nStacktrace:\n [1] throw_overflowerr_binaryop(op::Symbol, x::Int64,\
    \ y::Int64)\n   @ Base.Checked ./checked.jl:154\n [2] checked_mul\n   @ ./checked.jl:288\
    \ [inlined]\n [3] rem\n   @ ./rational.jl:312 [inlined]\n [4] change_base(x::Int64,\
    \ base::Int64)\n   @ Main /tmp/tmp1bk54ga5.jl:14\n [5] top-level scope\n   @ /tmp/tmp1bk54ga5.jl:19\n\
    in expression starting at /tmp/tmp1bk54ga5.jl:19\n"
  stdout: ''
  timestamp: 1660008686

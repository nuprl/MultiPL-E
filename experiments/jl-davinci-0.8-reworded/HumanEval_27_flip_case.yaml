name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \"\"\"\nfunction\
  \ flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    for i in 1:length(string)\n        if islower(string[i])\n    \
    \        string[i] = uppercase(string[i])\n        else\n            string[i]\
    \ = lowercase(string[i])\n        end\n    end\n    return string\nend", "   \
    \ flipped::String = \"\"\n    for i in 1:length(string)\n        if string[i]\
    \ in String(\"abcdefghijklmnopqrstuvwxyz\")\n            flipped *= uppercase(string[i])\n\
    \        elseif string[i] in String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n        \
    \    flipped *= lowercase(string[i])\n        else\n            flipped *= string[i]\n\
    \        end\n    end\n    return flipped\nend", "    string = string[:]\n   \
    \ for i = 1:length(string)\n        if islower(string[i])\n            string[i]\
    \ = uppercase(string[i])\n        else\n            string[i] = lowercase(string[i])\n\
    \        end\n    end\n    return string\nend", "    for i=1:length(string)\n\
    \        if (string[i] === string[i] * 0xFF + 0x20) || (string[i] === string[i]\
    \ * 0xFF - 0x20) \n            string[i] = string[i] * 0xFF + 0x20\n        end\n\
    \    end\n    return string\nend", "    return String(string) \n        .gsub(/[a-z]/,\
    \ c -> Char(c) in Char.(('a':'z')::ASCIIString)::Char ? c | uppercase(c))\n  \
    \      .gsub(/[A-Z]/, c -> Char(c) in Char.(('A':'Z')::ASCIIString)::Char ? c\
    \ | lowercase(c))\nend", "    string = string |> collect \n    \n    for i = 1:length(string)\n\
    \        if islower(string[i])\n            string[i] = uppercase(string[i])\n\
    \        elseif isupper(string[i])\n            string[i] = lowercase(string[i])\n\
    \        end\n    end\n    \n    return join(string)\nend", "   return string\
    \ .|> [c->c in lowercase ? uppercase[c] : lowercase[c]] |> String\nend", "   \
    \ output = \"\"\n    for character in string\n        if character in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            output *= string(char_to_upper(character))\n        elseif character\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            output *= string(char_to_lower(character))\n\
    \        else\n            output *= character\n        end\n    end\n    return\
    \ output\nend", "    temp = Char[]\n    for ch in string\n        if islower(ch)\n\
    \            push!(temp, uppercase(ch))\n        else\n            push!(temp,\
    \ lowercase(ch))\n        end\n    end\n    return join(temp)\nend", "    string[map(ismatch(r\"\
    [a-z]\", .), 1:end)] = uppercase(string[map(ismatch(r\"[a-z]\", .), 1:end)])\n\
    \    string[map(ismatch(r\"[A-Z]\", .), 1:end)] = lowercase(string[map(ismatch(r\"\
    [A-Z]\", .), 1:end))\nend", "    news = \"\"\n    for i in 1:length(string)\n\
    \        if string[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            push!(news,\
    \ lowercase(string[i]))\n        elseif string[i] in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            push!(news, uppercase(string[i]))\n        else\n            push!(news,\
    \ string[i])\n        end\n    end\n    return news\nend", "    chars = Array{Char}(undef,\
    \ length(string))\n    for i in 1:length(string)\n        c = string[i]\n    \
    \    c = islower(c) ? uppercase(c) : lowercase(c)\n        chars[i] = c\n    end\n\
    \    return join(chars)\nend", "    return replace(string, \"a-z\", \"A-Z\")\n\
    end\n \n \n \n\"\"\" Apply a rotation cipher to a string.\n    >>> rotate_string(\"\
    cheer\", 7)\n    \"jolly\"\n    >>> rotate_string(\"melon\", -10)\n    \"cubed\"\
    \n    >>> rotate_string(\"sleep\", 9)\n    \"bless\"\n    \"\"\"", "    input\
    \ = Array(string)\n    flipped_array = Array{String}(undef, length(input))\n \
    \   for (index, element) in enumerate(input)\n        if islower(element)\n  \
    \          flipped_array[index] = uppercase(element)\n        elseif isupper(element)\n\
    \            flipped_array[index] = lowercase(element)\n        else\n       \
    \     flipped_array[index] = element\n        end\n    end\n    return join(flipped_array)\n\
    end", "    for letter in string\n        if letter in string.lowercase\n     \
    \       string.lowercase[letter] = string.uppercase[letter]\n        else\n  \
    \          string.uppercase[letter] = string.lowercase[letter]\n    return string.lowercase+string.uppercase\n\
    end", "    new_string = []\n    for i in string\n        i in ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\
    \ && push!(new_string, uppercase(i)) || push!(new_string, lowercase(i))\n    end\n\
    \    return join(new_string, \"\")\nend", "    flipped = \"\"\n    for c in string\n\
    \        if islower(c)\n            append!(flipped, uppercase(c))\n        elseif\
    \ isupper(c)\n            append!(flipped, lowercase(c))\n        else\n     \
    \       append!(flipped, c)\n        end\n    end\n    return flipped\nend", " \
    \   out = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            out = out * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            out = out * string(char)\n        else\n            out = out *\
    \ string(char)\n        end\n    end\n    return out\nend", "    new_string =\
    \ \"\"\n    for c in string\n        if c in String('abcdefghijklmnopqrstuvwxyz')\n\
    \            push!(new_string, uppercase(c))\n        elseif c in String('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \            push!(new_string, lowercase(c))\n        else\n            push!(new_string,\
    \ c)\n        end\n    end\n    return new_string\nend", "    flipped = [Char]()\n\
    \    for c in string\n        if c \u2208 lowercase \n            push!(flipped,\
    \ uppercase[lowercase.index(c)])\n        elseif c \u2208 uppercase\n        \
    \    push!(flipped, lowercase[uppercase.index(c)])\n        else\n           \
    \ push!(flipped, c)\n        end\n    end\n    return join(flipped)\nend", " \
    \   new_string = []\n    for character in string\n        if character == lowercase(character)\n\
    \            push!(new_string, uppercase(character))\n        else\n         \
    \   push!(new_string, lowercase(character))\n        end\n    end\n    return\
    \ join(new_string)\nend", "    string = map(c -> ifislower(c) ? uppercase(c) :\
    \ lowercase(c), string)\n    return string\nend", "    letters = split(string,\
    \ \"\")\n    for letter in letters\n        if letter === lowercase(letter)\n\
    \            letter = uppercase(letter)\n        else\n            letter = lowercase(letter)\n\
    \        end\n    end\n    join(letters, \"\")\nend\n \n \n \n\"\"\" For a given\
    \ string and character, check if the string has that character.\n    >>> has_character(\"\
    This string contains an 'a'\", 'a')\n    true\n    \"\"\"", "    new_string =\
    \ \"\"\n    for c in string\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  \
    \          append!(new_string,lowercase(c))\n        elseif c in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            append!(new_string,uppercase(c))\n        else\n            append!(new_string,c)\n\
    \        end\n    end\n    return new_string\nend", "    return [swapcase(c) for\
    \ c in string] \nend", "    flipped_string = \"\"\n    for ch in string\n    \
    \    if ch in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ ch)])\n        elseif ch in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ ch)])\n        else\n            push!(flipped_string, ch)\n        end\n  \
    \  end\n    return flipped_string\nend", "    flipped = \"\"\n    for char in\
    \ string\n        if char in 'abcdefghijklmnopqrstuvwxyz'\n            push!(flipped,\
    \ uppercase(char))\n        elseif char in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    \
    \        push!(flipped, lowercase(char))\n        else\n            push!(flipped,\
    \ char)\n        end\n    end\n    return flipped\nend", "    return [ uppercase(lowercase(c))\
    \ for c in string ]\nend", "    string_array = split(string, \"\")\n    for i\
    \ in 1:length(string_array)\n        if uppercase(string_array[i])[1] == string_array[i]\n\
    \            string_array[i] = lowercase(string_array[i])[1]\n        elseif lowercase(string_array[i])[1]\
    \ == string_array[i]\n            string_array[i] = uppercase(string_array[i])[1]\n\
    \        end\n    end\n    return join(string_array, \"\")\nend", "    new_string\
    \ = \"\"\n    for letter in string\n        if letter == lowercase(letter)\n \
    \           push!(new_string, uppercase(letter))\n        else\n            push!(new_string,\
    \ lowercase(letter))\n        end\n    end\n    return new_string\nend", "   \
    \ char_list = String[]\n    for char in string\n        if char.islower()\n  \
    \          push!(char_list,char.upper())\n        else\n            push!(char_list,char.lower())\n\
    \        end\n    end\n    return join(char_list,\"\")\nend", "    flip = String[]\n\
    \    for letter in string\n        if letter == upper(letter)\n            push!(flip,\
    \ lowercase(letter))\n        else\n            push!(flip, uppercase(letter))\n\
    \        end\n    end\n    return join(flip)\nend", "    output = \"\"\n    for\
    \ i in 1:length(string)\n        if isalpha(string[i])\n            if islower(string[i])\n\
    \                output = string(i)\n            else\n                output\
    \ = string(i)\n            end\n        else\n            output = string(i)\n\
    \        end\n    end\n    return output\nend", "    flipped_string = \"\"\n \
    \   for i in 1:length(string)\n        char = string[i]\n        if islower(char)\n\
    \            char = uppercase(char)\n        elseif isupper(char)\n          \
    \  char = lowercase(char)\n        end\n        flipped_string = flipped_string\
    \ * char\n    end\n    return flipped_string\nend", "    # set up string\n   \
    \ flipped_string = \"\"\n    # create loop to flip string\n    for i in string\n\
    \        if islower(i)\n            # if letter is lowercase make it uppercase\n\
    \            flipped_string *= i | 0x20\n        elseif isupper(i)\n         \
    \   # if letter is uppercase make it lowercase\n            flipped_string *=\
    \ i & 0x5F\n        else\n            # else just add the character to the string\n\
    \            flipped_string *= i\n        end\n    end\n    return flipped_string\n\
    end\n ", "    # defining output string\n    flipped_string = \"\"\n    # iterating\
    \ over input string\n    for char in string\n        # case for lowercase\n  \
    \      if char in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n            # appending uppercase\
    \ character\n            append!(flipped_string, uppercase(char))\n        # case\
    \ for uppercase\n        elseif char in [\"A\", \"B\", \"C\", \"D\", \"E\", \"\
    F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"\
    Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n        \
    \    # appending lowercase character\n            append!(flipped_string, lowercase(char))\n\
    \        # case for everything else\n        else\n            # appending the\
    \ character\n            append!(flipped_string, char)\n        end\n    end\n\
    \    # returning string\n    return flipped_string\nend", "    flipped_case_string\
    \ = \"\"\n    for char in string\n        new_char = ifislower(char) ? uppercase(char)\
    \ : lowercase(char)\n        append!(flipped_case_string, new_char)\n    end\n\
    \    return flipped_case_string\nend", "    s = \"\"\n    for i in string\n  \
    \      islower(i) ? append!(s, uppercase(i)) : append!(s, lowercase(i))\n    end\n\
    \    return s\nend\nprintln(flip_case(\"Hello\"))", "    \n    # Have to convert\
    \ each string character to an array of characters, then convert back to string\n\
    \    chars = collect(string)\n    new_chars = []\n    for c in chars\n       \
    \ if islower(c)\n            append!(new_chars,uppercase(c))\n        else\n \
    \           append!(new_chars,lowercase(c))\n        end\n    end\n    join(new_chars)\n\
    end", "    newString = \"\"\n    for c in string\n        if c isa String\n  \
    \          c = lowercase(c)\n        else\n            c = uppercase(c)\n    \
    \    end\n        push!(newString, c)\n    end\n    return newString\nend", " \
    \   flipped = String[]\n    for char in string\n        if islower(char)\n   \
    \         push!(flipped, uppercase(char))\n        elseif isupper(char)\n    \
    \        push!(flipped, lowercase(char))\n        else\n            push!(flipped,\
    \ char)\n        end\n    end\n    return join(flipped)\nend", "    new_string\
    \ = []\n    for i in string\n        if i in uppercase(string)\n            append!(new_string,\
    \ lowercase(i))\n        else\n            append!(new_string, uppercase(i))\n\
    \        end\n    end\n    return join(new_string)\nend", "    return string |>\
    \ char_flip()\nend\n ", "    flipped::String = \"\"\n    for char in string\n\
    \        if char in string(\"A-Z\")\n            push!(flipped,lowercase(char))\n\
    \        else\n            push!(flipped,uppercase(char))\n        end\n    end\n\
    \    return flipped\nend", "    s = \"\"\n    for char in string\n        if char\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            s = s * (char in string(char)::String)\
    \ \n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            s = s *\
    \ (char in string(lowercase(char))::String)\n        else\n            s = s *\
    \ (char in string(char)::String)\n    end\n    return s\nend", "    output = \"\
    \"\n    for i in 1:length(string)\n        if islower(string[i])\n           \
    \ append!(output, string[i] |> uppercase)\n        elseif isupper(string[i])\n\
    \            append!(output, string[i] |> lowercase)\n        else\n         \
    \   append!(output, string[i])\n        end\n    end\n    return output\nend",
  "    return join([lowercase(c) => uppercase(c) => c for c in string])\nend", " \
    \   new_string = \"\"\n    for i in 1:length(string)\n        if string[i] ==\
    \ string[i] |> String |> String.lower\n            new_string = string[i] |> String\
    \ |> String.upper\n        elseif string[i] == string[i] |> String |> String.upper\n\
    \            new_string = string[i] |> String |> String.lower\n        else\n\
    \            new_string = string[i]\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for letter in string\n        if letter in lowercase\n\
    \            new_string = push!(new_string, uppercase[findall(lowercase, letter)[1]])\n\
    \        elseif letter in uppercase\n            new_string = push!(new_string,\
    \ lowercase[findall(uppercase, letter)[1]])\n        else\n            new_string\
    \ = push!(new_string, letter)\n        end\n    end\n    return new_string\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    [a-z]\")\n            flipped_string *= string(\"[A-Z]\")\n        else\n    \
    \        flipped_string *= string(\"[a-z]\")\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in range(1, length(string))\n        if\
    \ islower(string[i])\n            push!(new_string, uppercase(string[i]))\n  \
    \      else\n            push!(new_string, lowercase(string[i]))\n        end\n\
    \    end\n    return new_string\nend", "    return [swapcase(c) for c in string]\n\
    end", "    new_string = \"\"\n    for i in string\n        if i == uppercase(i)\n\
    \            push!(new_string, lowercase(i))\n        else\n            push!(new_string,\
    \ uppercase(i))\n        end\n    end\n    return new_string\nend\nflip_case(\"\
    Hello\")", "    chars = []\n    for ch in string\n        if ch in lowercase\n\
    \            push!(chars, uppercase[lowercase .== ch])\n        elseif ch in uppercase\n\
    \            push!(chars, lowercase[uppercase .== ch])\n        else\n       \
    \     push!(chars, ch)\n        end\n    end\n    join(chars)\nend", "    string\
    \ = uppercase(string)\n    string = lowercase(string)\n    return string\nend",
  "    return uppercase(string)\nend", "    newString = \"\"\n    for s in string\n\
    \        if islower(s)\n            newString = newString * s \n        elseif\
    \ isupper(s)\n            newString = newString * s\n        else\n          \
    \  newString = newString * s\n        end\n    end\n    return newString\nend",
  "    flipped = \"\"\n    for c in string\n        if islower(c)\n            flipped\
    \ *= upper(c)\n        elseif isupper(c)\n            flipped *= lower(c)\n  \
    \      else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    char_array = collect(string)\n    flipped_string = \"\"\n    for char\
    \ in char_array\n        is_lower =  char \u2208 \"abcdefghijklmnopqrstuvwxyz\"\
    \n        is_upper =  char \u2208 \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        if is_lower\n\
    \            flipped_string *= uppercase(char)\n        elseif is_upper\n    \
    \        flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipstring\
    \ = \"\"\n    for a in string\n        if islower(a)\n            a = upper(a)\n\
    \        elseif isupper(a)\n            a = lower(a)\n        end\n        push!(flipstring,\
    \ a)\n    end\n    return flipstring\nend", "    result = \"\"\n    for s in string\n\
    \        if isupper(s)\n            push!(result,lowercase(s))\n        elseif\
    \ islower(s)\n            push!(result,uppercase(s))\n        else\n         \
    \   push!(result,s)\n        end\n    end\n    return result\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if islower(c)\n            push!(flipped_string,\
    \ uppercase(c))\n        elseif isupper(c)\n            push!(flipped_string,\
    \ lowercase(c))\n        else\n            push!(flipped_string, c)\n        end\n\
    \    end\n    return flipped_string\nend", "    temp = \"\"\n    for c in string\n\
    \        temp *= lowercase(c) ? uppercase(c) : lowercase(c)\n    end\n    return\
    \ temp\nend", "    flipped_string = \"\"\n    for c in string\n        if islower(c)\n\
    \            flipped_string *= uppercase(c)\n        else\n            flipped_string\
    \ *= lowercase(c)\n        end\n    end\n    return flipped_string\nend", "  \
    \  out = String[]\n    for i in string\n        if i in lowercase(string)\n  \
    \          push!(out, uppercase(i))\n        elseif i in uppercase(string)\n \
    \           push!(out, lowercase(i))\n        else\n            push!(out, i)\n\
    \        end\n    end\n    return join(out)\nend", "    string = split(string)\
    \ \n    flipped_string = \"\"\n    for letter in string \n        if islower(letter)\n\
    \            letter = uppercase(letter)\n        elseif isupper(letter)\n    \
    \        letter = lowercase(letter)\n        end\n        push!(flipped_string,\
    \ letter)\n    end\n    return flipped_string\nend", "    new_string = \"\"\n\
    \    for char in string\n        if char == uppercase(char)\n            new_string\
    \ = string(char) + lowercase(char)\n        else\n            new_string = string(char)\
    \ + uppercase(char)\n        end\n    end\n    return new_string\nend", "    flipped_case\
    \ = []\n    for i in string\n        if i in lowercase\n            push!(flipped_case,\
    \ uppercase[findfirst(lowercase, i)])\n        elseif i in uppercase\n       \
    \     push!(flipped_case, lowercase[findfirst(uppercase, i)])\n        else\n\
    \            push!(flipped_case, i)\n        end\n    end\n    join(flipped_case)\n\
    end", "  result = \"\"\n  for char in string\n    if char in string(abc...xyz)\n\
    \        push!(result, uppercase(char))\n    elseif char in string(ABC...XYZ)\n\
    \        push!(result, lowercase(char))\n    else\n        push!(result, char)\n\
    \    end\n  end\n  return result\nend", "    return(String(string.swapcase()))\n\
    end", "    for char in string\n        if char \u2208 \"a\"..\"z\"\n         \
    \   char = string(toupper(char))\n        elseif char \u2208 \"A\"..\"Z\"\n  \
    \          char = string(tolower(char))\n        end\n    end\n    return string\n\
    end", "    new_str = \"\"\n    for char in string\n        if isalpha(char)\n\
    \            if islower(char)\n                new_str *= uppercase(char)\n  \
    \          else\n                new_str *= lowercase(char)\n        else\n  \
    \          new_str *= char\n        end\n    end\n    return new_str\nend", " \
    \   new_string = \"\"\n    for i in 1:length(string)\n        s = string[i]\n\
    \        if s == uppercase(s)\n            s = lowercase(s)\n        else\n  \
    \          s = uppercase(s)\n        end\n        new_string = new_string * s\n\
    \    end\n    return new_string\nend\nflip_case(\"Hello\")", "  #Does not mutate\
    \ the string \n  flipped_string = \"\"\n  for i in string\n    if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n      flipped_string = flipped_string * string(i)\n    elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n      flipped_string = flipped_string * string(i)\n  end\n  return flipped_string\n\
    end", "    return replace(string, [\"a\"=>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"\
    d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"\
    I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"\
    o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"\
    T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"\
    z\"=>\"Z\", \"A\"=>\"a\", \"B\"=>\"b\", \"C\"=>\"c\", \"D\"=>\"d\", \"E\"=>\"\
    e\", \"F\"=>\"f\", \"G\"=>\"g\", \"H\"=>\"h\", \"I\"=>\"i\", \"J\"=>\"j\", \"\
    K\"=>\"k\", \"L\"=>\"l\", \"M\"=>\"m\", \"N\"=>\"n\", \"O\"=>\"o\", \"P\"=>\"\
    p\", \"Q\"=>\"q\", \"R\"=>\"r\", \"S\"=>\"s\", \"T\"=>\"t\", \"U\"=>\"u\", \"\
    V\"=>\"v\", \"W\"=>\"w\", \"X\"=>\"x\", \"Y\"=>\"y\", \"Z\"=>\"z\"])\nend", " \
    \   return lowercase(string) ? String(uppercase(string)) : String(lowercase(string))\n\
    end", "    return [casedict[c] for c in string]\nend", "    out = Array{Char}(length(string))\n\
    \    for (i,char) in enumerate(string)\n        if islower(char)\n           \
    \ out[i] = char(upper(char))\n        elseif isupper(char)\n            out[i]\
    \ = char(lower(char))\n        else\n            out[i] = char\n        end\n\
    \    end\n    return string(out)\nend", "    # Determine whether the character\
    \ is a letter\n    # Flip the case of the character\nend", "    new_string = \"\
    \"\n    for character in string\n        if character in lowercase(string)\n \
    \           push!(new_string, uppercase(character))\n        else\n          \
    \  push!(new_string, lowercase(character))\n        end\n    end\n    return new_string\n\
    end", "    return [flip_case(c) for c in string]\nend", "    output = \"\"\n \
    \   for c in string\n        if c.islower()\n            push!(output, uppercase(c))\n\
    \        else\n            push!(output, lowercase(c))\n        end\n    end\n\
    \    return output\nend", "    new_string = \"\"\n    for char in string\n   \
    \     if islower(char)\n            new_string = new_string * uppercase(char)\n\
    \        else\n            new_string = new_string * lowercase(char)\n       \
    \ end\n    end\n    return new_string\nend", "    return lowercase(string) ==\
    \ upper(string) ? upper(string) : lowercase(string)\nend", "    a = uppercase(string)\n\
    \    b = lowercase(string)\n    string = join([ifelse(i in a, b[a.index(i)], a[b.index(i)])\
    \ for i in string])\n    return string\nend\n    \n    ", "    temp = \"\"\n \
    \   for x in string\n        if(islower(x))\n            push!(temp, uppercase(x))\n\
    \        elseif(isupper(x))\n            push!(temp, lowercase(x))\n        else\n\
    \            push!(temp, x)\n        end\n    end\n    return temp\nend", "  \
    \  newString = \"\"\n    for char in string\n        if char == lowercase(char)\n\
    \            push!(newString, uppercase(char))\n        else\n            push!(newString,\
    \ lowercase(char))\n        end\n    end\n    return newString\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if(islower(character))\n      \
    \      push!(flipped_string, uppercase(character))\n        elseif(isupper(character))\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for letter in string\n        if letter\
    \ in uppercase(string)\n            letter = lowercase(letter)\n        else\n\
    \            letter = uppercase(letter)\n        end\n        push!(flipped_string,\
    \ letter)\n    end\n    return flipped_string\nend", "    s = \"\"\n    for i\
    \ in string\n        if isupper(i)\n            s = s * i\n        elseif islower(i)\n\
    \            s = s * uppercase(i)\n        else\n            s = s * i\n     \
    \   end\n    end\n    return s\nend", "  for character in string\n    if character\
    \ in lowercase_set\n      character = uppercase(character)\n    elseif character\
    \ in uppercase_set\n      character = lowercase(character)\n    end\n  end\n \
    \ return string\nend", "    chars = string |> collect |> to_array\n    flipped_chars\
    \ = map(chars) do x\n        if islower(x)\n            return uppercase(x)\n\
    \        elseif isupper(x)\n            return lowercase(x)\n        else\n  \
    \          return x\n        end\n    end\n    flipped_chars |> join\nend", " \
    \   out_string = String[]\n    for c in string\n        if islower(c)\n      \
    \      append!(out_string, uppercase(c))\n        else\n            append!(out_string,\
    \ lowercase(c))\n        end\n    end\n    return join(out_string)\nend", "  str\
    \ = \"\"\n  for c in string\n    if islower(c)\n      push!(str, uppercase(c))\n\
    \    else\n      push!(str, lowercase(c))\n    end\n  end\n  return str\nend",
  "    flip_string = \"\"\n    for character in string\n        if isupper(character)\n\
    \            append!(flip_string, lowercase(character))\n        elseif islower(character)\n\
    \            append!(flip_string, uppercase(character))\n        else\n      \
    \      append!(flip_string, character)\n        end\n    end\n    return flip_string\n\
    end", "    string_out = string[1]\n    for i = 2:length(string)\n        if islower(string[i])\n\
    \            string_out = string_out * uppercase(string[i])\n        else\n  \
    \          string_out = string_out * lowercase(string[i])\n        end\n    end\n\
    \    return string_out\nend", "  s = uppercase(string)\n  for i = 1:length(string)\n\
    \    if islower(string[i])\n      s[i] = uppercase(string[i])\n    else\n    \
    \  s[i] = lowercase(string[i])\n    end\n  end\n  return s\nend", "    return_string\
    \ = \"\"\n    for char in string\n        if char in string(\"A\",\"B\",\"C\"\
    ,\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\"\
    ,\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\")\n            return_string\
    \ = return_string * char.lower()\n        else\n            return_string = return_string\
    \ * char.upper()\n    end\n    return return_string\nend", "    flipped = \"\"\
    \n    for char in string\n        if char in (\"a\"::\"z\"::String)\n        \
    \    append!(flipped, uppercase(char))\n        elseif char in (\"A\"::\"Z\"::String)\n\
    \            append!(flipped, lowercase(char))\n        else\n            append!(flipped,\
    \ char)\n        end\n    end\n    return flipped\nend", "    string = char.(string)\n\
    \    for i in eachindex(string)\n        if string[i] \u2208 Char.(['a':'z'])\n\
    \            string[i] = uppercase(string[i])\n        elseif string[i] \u2208\
    \ Char.(['A':'Z'])\n            string[i] = lowercase(string[i])\n        end\n\
    \    end\n    return string\nend", "    new_string = \"\"\n    for ch in string\n\
    \        if ch in lowercase\n            new_string = new_string * uppercase[lowercase.index(ch)]\n\
    \        elseif ch in uppercase\n            new_string = new_string * lowercase[uppercase.index(ch)]\n\
    \        else\n            new_string = new_string * ch\n        end\n    end\n\
    \    return new_string\nend", "    s = String()\n    for c in string\n       \
    \ if c == c.upper()\n            s = s * c.lower()\n        else\n           \
    \ s = s * c.upper()\n    end\n    return s\nend", "    string = [ch^('a'-'A')\
    \ for ch in string]\n    return string\nend", "    s = \"hello\"\n    u = \"HELLO\"\
    \n    s = s[1:1]\n    u = u[1:1]\n    if string == s:\n        return u\n    elseif\
    \ string == u:\n        return s\n    else\n        return string\n    end\nend",
  "    toUpper = String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    toLower = String(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    s = String(\"\")\n    for i = 1:length(string)\n        c = string[i]\n\
    \        index = findfirst(toUpper, c)\n        if index == 0\n            index\
    \ = findfirst(toLower, c)\n            s = s * toUpper[index]\n        else\n\
    \            s = s * toLower[index]\n        end\n    end\n    return s\nend",
  "    final_string = \"\"\n    for c in string\n        if islower(c)\n         \
    \   final_string *= uppercase(c)\n        elseif isupper(c)\n            final_string\
    \ *= lowercase(c)\n        else\n            final_string *= c\n        end\n\
    \    end\n    return final_string\nend", "    str = String[]\n    for c in string\n\
    \        if isupper(c)\n            push!(str,lowercase(c))\n        else\n  \
    \          push!(str,uppercase(c))\n        end\n    end\n    join(str)\nend",
  "    output = \"\"\n    for c in string\n        if islower(c)\n            output\
    \ *= uppercase(c)\n        elseif isupper(c)\n            output *= lowercase(c)\n\
    \        else\n            output *= c\n        end\n    end\n    return output\n\
    end", "    new_string = \"\"\n    for i in string\n        if islower(i)\n   \
    \         new_string = new_string * string(toupper(i))\n        elseif isupper(i)\n\
    \            new_string = new_string * string(tolower(i))\n        else\n    \
    \        new_string = new_string * i\n        end\n    end\n    return new_string\n\
    end", "    string1 = String[]\n    for i in 1:length(string)\n        if string[i]\
    \ == uppercase(string[i])\n            append!(string1,lowercase(string[i]))\n\
    \        else\n            append!(string1,uppercase(string[i]))\n        end\n\
    \    end\n    return join(string1,\"\")\nend", "    flipped_case = \"\"\n    for\
    \ c in string\n        if c in string(\"a\"::ASCIIString, \"b\"::ASCIIString,\
    \ \"c\"::ASCIIString, \"d\"::ASCIIString, \"e\"::ASCIIString, \"f\"::ASCIIString,\
    \ \"g\"::ASCIIString, \"h\"::ASCIIString, \"i\"::ASCIIString, \"j\"::ASCIIString,\
    \ \"k\"::ASCIIString, \"l\"::ASCIIString, \"m\"::ASCIIString, \"n\"::ASCIIString,\
    \ \"o\"::ASCIIString, \"p\"::ASCIIString, \"q\"::ASCIIString, \"r\"::ASCIIString,\
    \ \"s\"::ASCIIString, \"t\"::ASCIIString, \"u\"::ASCIIString, \"v\"::ASCIIString,\
    \ \"w\"::ASCIIString, \"x\"::ASCIIString, \"y\"::ASCIIString, \"z\"::ASCIIString)\n\
    \            flipped_case = flipped_case * uppercase(c)\n        else\n      \
    \      flipped_case = flipped_case * lowercase(c)\n        end\n    end\n    return\
    \ flipped_case\nend", "    \n    for i=1:length(string)\n        if islower(string[i])\n\
    \            string[i] = uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            string[i] = lowercase(string[i])\n        end\n    end\n    \n  \
    \  return string\nend", "    res = \"\"\n    for char in string\n        if islower(char)\n\
    \            push!(res, uppercase(char))\n        elseif isupper(char)\n     \
    \       push!(res, lowercase(char))\n        else\n            push!(res, char)\n\
    \        end\n    end\n    return res\nend", "    n = length(string)\n    new_string\
    \ = \"\"\n    for i = 1:n\n        if islower(string[i])\n            new_string\
    \ *= uppercase(string[i])\n        else\n            new_string *= lowercase(string[i])\n\
    \        end\n    end\n    return new_string\nend", "    new_string = \"\"\n \
    \   for letter in string\n        if letter in string.lowercase\n            push!(new_string,\
    \ string.uppercase[search(string.lowercase, letter)])\n        elseif letter in\
    \ string.uppercase\n            push!(new_string, string.lowercase[search(string.uppercase,\
    \ letter)])\n        else\n            push!(new_string, letter)\n        end\n\
    \    end\n    return new_string\nend\nflip_case(\"Hello\")", "    new_string =\
    \ \" \"\n    for x in string\n        if (islower(x))\n            new_string\
    \ = new_string * string(x)\n        else\n            new_string = new_string\
    \ * x\n    end\n    return new_string\nend", "    str = uppercase(string)\n  \
    \  str = lowercase(str)\n    return str\nend", "    new_string = \"\"\n    for\
    \ c in string\n        if c == lowercase(c)\n            new_string = new_string\
    \ * uppercase(c)\n        else\n            new_string = new_string * lowercase(c)\n\
    \        end\n    end\n    return new_string\nend", "    news= String[]\n    for\
    \ i in string\n        if i in [lowercase(a) for a in range('a','z')]\n      \
    \      push!(news,uppercase(i))\n        elseif i in [uppercase(a) for a in range('a','z')]\n\
    \            push!(news,lowercase(i))\n        else\n            push!(news,i)\n\
    \        end\n    end\n    return(join(news))\nend", "    return uppercase(string)\n\
    end", "    flipped_string = \"\"\n    for ch in string\n        if ch in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= ch | (1 << 5)\n        elseif ch in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= ch & ~(1 << 5)\n        else\n            flipped_string\
    \ *= ch\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if islower(i)\n            push!(new_string,\
    \ uppercase(i))\n        elseif isupper(i)\n            push!(new_string, lowercase(i))\n\
    \        else\n            push!(new_string, i)\n        end\n    end\n    return\
    \ new_string\nend", "    newstring = [toupper(tolower(s)) for s in string]\n \
    \   return string(newstring)\nend", "    output = \"\"\n    for c in string\n\
    \        if c in lowercase\n            push!(output, uppercase[lowercase .==\
    \ c])\n        elseif c in uppercase\n            push!(output, lowercase[uppercase\
    \ .== c])\n        else\n            push!(output, c)\n        end\n    end\n\
    \    return output\nend", "    flipped_case = String[]\n    for c in string\n\
    \        if uppercase(c)\n            push!(flipped_case, lowercase(c))\n    \
    \    else\n            push!(flipped_case, uppercase(c))\n        end\n    end\n\
    \    return join(flipped_case)\nend", "    flipped = []\n    for ch in string\n\
    \        flipped = push!(flipped, caseflip(ch))\n    end\n    return join(flipped)\n\
    end", "    flippedString = \"\"\n    for c in string\n        if islower(c)\n\
    \            flippedString *= uppercase(c)\n        elseif isupper(c)\n      \
    \      flippedString *= lowercase(c)\n        else\n            flippedString\
    \ *= c\n        end\n    end\n    return flippedString\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            new_string = new_string * char.upper()\n        elseif char in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            new_string = new_string * char.lower()\n        else\n          \
    \  new_string = new_string * char\n        end\n    end\n    return new_string\n\
    end", "    str = \"\"\n    for i in string\n        if islower(i)\n          \
    \  str *= String(uppercase(i))\n        elseif isupper(i)\n            str *=\
    \ String(lowercase(i))\n        else\n            str *= String(i)\n        end\n\
    \    end\n    return str\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    \n    flipped_string = \"\"\n    \n    for i in\
    \ 1:length(string)\n        \n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n            \n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        \
    \    \n        else\n            flipped_string = flipped_string * string[i]\n\
    \        end\n        \n    end\n    \n    return flipped_string\nend", "    out_string\
    \ = \"\"\n    for c in string\n        if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \            append!(out_string, lowercase(c))\n        elseif c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            append!(out_string, uppercase(c))\n        else\n            append!(out_string,\
    \ c)\n        end\n    end\n    return out_string\nend", "    string_flipped_case\
    \ = String[]\n    for i in eachindex(string)\n        if string[i] in ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \            push!(string_flipped_case,string[i] |> upper)\n        elseif string[i]\
    \ in ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n\
    \            push!(string_flipped_case,string[i] |> lower)\n        else\n   \
    \         push!(string_flipped_case,string[i])\n        end\n    end\n    return\
    \ join(string_flipped_case)\nend", "    s = \"\"\n    for letter in string\n \
    \       if letter in string(letter) == lowercase\n            s = s * string(letter)\
    \ == uppercase\n        else\n            s = s * string(letter) == lowercase\n\
    \    end\n    s\nend", "    new_string = \"\"\n    for character in string\n \
    \       if character isa String\n            if character in string(\"a\"::String)\n\
    \                new_string *= uppercase(character)\n            elseif character\
    \ in string(\"A\"::String)\n                new_string *= lowercase(character)\n\
    \            else\n                new_string *= character\n            end\n\
    \        end\n    end\n    return new_string\nend", "    flipped_string = \"\"\
    \n    for s in string\n        if islower(s)\n            append!(flipped_string,\
    \ uppercase(s))\n        elseif isupper(s)\n            append!(flipped_string,\
    \ lowercase(s))\n        else\n            append!(flipped_string, s)\n      \
    \  end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for ch in string\n        if (ch in \"abcdefghijklmnopqrstuvwxyz\")\n   \
    \         flipped_string = flipped_string * uppercase(ch)\n        elseif (ch\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string = flipped_string\
    \ * lowercase(ch)\n        else\n            flipped_string = flipped_string *\
    \ ch\n        end\n    end\n    return flipped_string\nend", "    new_string =\
    \ \"\"\n    for i in 1:length(string)\n        char = string[i]\n        if isupper(char)\n\
    \            append!(new_string, lowercase(char))\n        elseif islower(char)\n\
    \            append!(new_string, uppercase(char))\n        else\n            append!(new_string,\
    \ char)\n        end\n    end\n    return new_string\nend", "    flipped = \"\"\
    \n    for c in string\n        if islower(c)\n            append!(flipped, uppercase(c))\n\
    \        elseif isupper(c)\n            append!(flipped, lowercase(c))\n     \
    \   else\n            append!(flipped, c)\n        end\n    end\n    return flipped\n\
    end", '    flipped_string = String[]', "    return uppercase(string)\nend", " \
    \   return lowercase(string) + uppercase(string)\nend", "    # get uppercase letters\
    \ \n    upper_string = String(uppercase(string))\n    # get lowercase letters\
    \ \n    lower_string = String(lowercase(string))\n    # combine \n    return upper_string\
    \ * lower_string\nend", "    string = string.lower()\n    string = string.capitalize()\n\
    \    return string\nend", "    \n    new_string = \"\"\n    for i in string\n\
    \        if i in string(islower)\n            new_string = new_string.push(i::String(uppercase))\n\
    \        else\n            new_string = new_string.push(i::String(lowercase))\n\
    \        end\n    end\n    \n    return new_string\nend", "    str = \"\"\n  \
    \  for c in string\n        if c in string(\"abcdefghijklmnopqrstuvwxyz\")\n \
    \           str = str * string(c)\n        elseif c in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            str = str * string(c)\n        else\n            str = str * c\n\
    \        end\n    end\n    return str\nend", "    for i=1:length(string)\n   \
    \     if string[i] in [string(x) for x in 'qwertyuiopasdfghjklzxcvbnm']\n    \
    \        string[i] = string(string[i]):upper()\n        elseif string[i] in [string(x)\
    \ for x in 'QWERTYUIOPASDFGHJKLZXCVBNM']\n            string[i] = string(string[i]):lower()\n\
    \        end\n    end\n    return string\nend", "    new_string = \"\"\n    for\
    \ i in 1:length(string)\n        if islower(string[i])\n            new_string\
    \ = string[i]*upper(string[i])\n        elseif isupper(string[i])\n          \
    \  new_string = string[i]*lower(string[i])\n        else\n            new_string\
    \ = string[i]\n        end\n    end\n    return new_string\nend", "    flip_string\
    \ = string\n    lc = \"abcdefghijklmnopqrstuvwxyz\"\n    uc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    for i in 1:length(string)\n        if string[i] in lc\n            flip_string[i]\
    \ = uppercase(string[i])\n        elseif string[i] in uc\n            flip_string[i]\
    \ = lowercase(string[i])\n        end\n    end\n    return flip_string\nend",
  "    output = String[]\n    for ch in string\n        if !islower(ch)\n        \
    \    append!(output,lowercase(ch))\n        else\n            append!(output,uppercase(ch))\n\
    \        end\n    end\n    return(join(output))\nend", "    flip_case = \"\"\n\
    \    for letter in string\n        if islower(letter)\n            push!(flip_case,\
    \ uppercase(letter))\n        else\n            push!(flip_case, lowercase(letter))\n\
    \        end\n    end\n    return flip_case\nend\nflip_case(\"Hello\")", "   \
    \ newString = \"\"\n    for c in string\n        if c in String('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \            push!(newString, lowercase(c))\n        elseif c in String('abcdefghijklmnopqrstuvwxyz')\n\
    \            push!(newString, uppercase(c))\n        else\n            push!(newString,\
    \ c)\n        end\n    end\n    return newString\nend", "    \"\"\" For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \"\"\"\n    new_string = \"\"\
    \n    for i in string\n        if islower(i)\n            new_string = string(new_string,\
    \ string(i,i))\n        elseif isupper(i)\n            new_string = string(new_string,\
    \ string(i,i))\n        else\n            new_string = string(new_string, string(i,i))\n\
    \        end\n    end\n    return new_string\nend", "    flipped = [Character(swapcase(x))\
    \ for x in string]\n    return string(flipped)\nend", "    flip = Dict{Char, Char}()\n\
    \    for c in \"abcdefghijklmnopqrstuvwxyz\"\n        flip[c] = uppercase(c)\n\
    \    end\n    for c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        flip[c] = lowercase(c)\n\
    \    end\n    return join(flip[c] for c in string)\nend", "    tempstring = \"\
    \"\n    for char in string\n        if char \u2208 \"abcdefghijklmnopqrstuvwxyz\"\
    \n            push!(tempstring, uppercase(char))\n        elseif char \u2208 \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            push!(tempstring, lowercase(char))\n\
    \        else\n            push!(tempstring, char)\n        end\n    end\n   \
    \ return tempstring\nend", "    new_string = String[]\n    for s in string\n \
    \       if islower(s)\n            push!(new_string, uppercase(s))\n        else\n\
    \            push!(new_string, lowercase(s))\n        end\n    end\n    return\
    \ join(new_string)\nend", "    string = map(flip, string)\n    return join(string)\n\
    end", "    return [case_convert(c) for c in string] \nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if isalpha(char)\n            if islower(char)\n\
    \                append!(flipped_string, uppercase(char))\n            else\n\
    \                append!(flipped_string, lowercase(char))\n            end\n \
    \       else\n            append!(flipped_string, char)\n        end\n    end\n\
    \    return flipped_string\nend", "    string_flipped = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            string_flipped = string_flipped *\
    \ string[i]\n        else\n            string_flipped = string_flipped * string[i]\n\
    \        end\n    end\n    return string_flipped\nend", "    string_out::String\
    \ = \"\"\n    # loop over each character in the input string\n    for char in\
    \ string\n        if !isascii(char)\n            error(\"flip_case() only accepts\
    \ ASCII strings.\")\n        end\n        # check if current character is uppercase\n\
    \        if char in String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            # add\
    \ lowercase version of the character to output string\n            push!(string_out,\
    \ lowercase(char))\n        elseif char in String(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            # add uppercase version of the character to output string\n   \
    \         push!(string_out, uppercase(char))\n        else\n            # add\
    \ the character to output string\n            push!(string_out, char)\n      \
    \  end\n    end\n    return string_out\nend\n ", "    for i=1:length(string)\n\
    \        if islower(string[i])\n            string[i] = uppercase(string[i])\n\
    \        elseif isupper(string[i])\n            string[i] = lowercase(string[i])\n\
    \        end\n    end\n    return string\nend\nprintln(flip_case(\"Hello\"))",
  "    new_string = \"\"\n    for character in string\n        if (character in \"\
    abcdefghijklmnopqrstuvwxyz\") \n            character = uppercase(character)\n\
    \        elseif (character in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            character\
    \ = lowercase(character)\n        end\n        push!(new_string, character)\n\
    \    end\n    return new_string\nend", "    result = \"\"\n    for i = 1:length(string)\n\
    \        char = string[i]\n        if(char in 'a':'z')\n            result *=\
    \ string(uppercase(char))\n        elseif(char in 'A':'Z')\n            result\
    \ *= string(lowercase(char))\n        else\n            result *= char\n     \
    \   end\n    end\n    return result\nend", "    string = string |> uppercase |>\
    \ lowercase\n   \n    new_string = []\n    for character in string\n        if\
    \ isuppercase(character)\n            push!(new_string, lowercase(character))\n\
    \        else\n            push!(new_string, uppercase(character))\n        end\n\
    \    end\n    \n    join(new_string)\nend", "    for i in 1:length(string)\n \
    \       if isalpha(string[i])\n            if islower(string[i])\n           \
    \     string[i] = uppercase(string[i])\n            else\n                string[i]\
    \ = lowercase(string[i])\n            end\n        end\n    end\n    \n    return\
    \ string\nend", "    s = String()\n    for c in string\n        if lowercase(c)\n\
    \            push!(s, uppercase(c))\n        else\n            push!(s, lowercase(c))\n\
    \        end\n    end\n    return s\nend", "    string_flipped = [] \n    for\
    \ c in string \n        if c in uppercase(string) \n            push!(string_flipped,\
    \ lowercase(c)) \n        elseif c in lowercase(string) \n            push!(string_flipped,\
    \ uppercase(c)) \n        else \n            push!(string_flipped, c) \n     \
    \   end \n    end \n    string_flipped = join(string_flipped) \n    return string_flipped\
    \ \nend ", "   x = string[1]\n   i = 1\n   while i <= length(string)\n    if x\
    \ == string[i]\n        x == string[i]\n    end\n    i += 1\n   end\n   return\
    \ string[i]\nend", "    return map(string) do x\n        if islower(x) == true\n\
    \            return uppercase(x)\n        elseif isupper(x) == true\n        \
    \    return lowercase(x)\n        else\n            return x\n        end\n  \
    \  end\nend", "    character_array = []\n    for character in string\n       \
    \ if(islower(character))\n            push!(character_array, uppercase(character))\n\
    \        elseif(isupper(character))\n            push!(character_array, lowercase(character))\n\
    \        else\n            push!(character_array, character)\n        end\n  \
    \  end\n    join(character_array)\nend\nflip_case(\"Hello\")", "    flipped_chars\
    \ = []\n    for char in string\n        isupper(char) ? push!(flipped_chars, lowercase(char))\
    \ : push!(flipped_chars, uppercase(char))\n    end\n    return join(flipped_chars)\n\
    end", "    nstring = \"\"\n    for letter in string\n        if letter in [\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\
    \            nstring = string(letter).upper()\n        elseif letter in [\"A\"\
    ,\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\"\
    ,\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]\n  \
    \          nstring = string(letter).lower()\n        else \n            nstring\
    \ = string(letter)\n        end\n    end\n    return nstring\nend\nflip_case(\"\
    Hello\")", "    out = \"\"\n    for c in string\n        if isalpha(c)\n     \
    \       if islower(c)\n                out *= uppercase(c)\n            else\n\
    \                out *= lowercase(c)\n        else\n            out *= c\n   \
    \     end\n    end\n    return out\nend", "    flipped = \"\"\n    for i in string\n\
    \        uppercase(i) ? (flipped *= lowercase(i)) : (flipped *= uppercase(i))\n\
    \    end\n    return flipped\nend", "    newstring = \"\"\n    for x in string\n\
    \        if islower(x)\n            append!(newstring, toupper(x))\n        elseif\
    \ isupper(x)\n            append!(newstring, tolower(x))\n        else\n     \
    \       append!(newstring, x)\n        end\n    end\n    return newstring\nend",
  "    output = String(length(string))\n    for i = 1:length(string)\n        if islower(string[i])\n\
    \            output[i] = uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            output[i] = lowercase(string[i])\n        else\n            output[i]\
    \ = string[i]\n        end\n    end\n    return output\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            new_string = string(char)\n            println(new_string)\n  \
    \      else \n            string(lowercase(char))\n            println(new_string)\n\
    \    end\n    return new_string\nend", "    new_string = \"\"\n    for c in string\n\
    \        if c in lowercase\n            new_string = new_string * upper(c)\n \
    \       elseif c in uppercase\n            new_string = new_string * lower(c)\n\
    \        else\n            new_string = new_string * c\n        end\n    end\n\
    \    return new_string\nend", "    n = length(string)\n    new_string = \"\"\n\
    \    for i in 1:n\n        if isletter(string[i])\n            #if lowercase\n\
    \            if islower(string[i])\n                new_string *= uppercase(string[i])\n\
    \            else #uppercase\n                new_string *= lowercase(string[i])\n\
    \            end\n        else\n            new_string *= string[i]\n        end\n\
    \    end\n    return new_string\nend", "    flipped_string = \"\"\n    for letter\
    \ in string\n        if letter in string.lowercase\n            append!(flipped_string,\
    \ upper(letter))\n        elseif letter in string.uppercase\n            append!(flipped_string,\
    \ lower(letter))\n        else\n            append!(flipped_string, letter)\n\
    \        end\n    end\n    return flipped_string\nend", "    return [flip(c) for\
    \ c in string]\nend", "    retval = \"\"\n    for c in string\n        c_new =\
    \ c\n        if c == 'a'\n            c_new = 'A'\n        elseif c == 'A'\n \
    \           c_new = 'a'\n        elseif c == 'b'\n            c_new = 'B'\n  \
    \      elseif c == 'B'\n            c_new = 'b'\n        elseif c == 'c'\n   \
    \         c_new = 'C'\n        elseif c == 'C'\n            c_new = 'c'\n    \
    \    elseif c == 'd'\n            c_new = 'D'\n        elseif c == 'D'\n     \
    \       c_new = 'd'\n        elseif c == 'e'\n            c_new = 'E'\n      \
    \  elseif c == 'E'\n            c_new = 'e'\n        elseif c == 'f'\n       \
    \     c_new = 'F'\n        elseif c == 'F'\n            c_new = 'f'\n        elseif\
    \ c == 'g'\n            c_new = 'G'\n        elseif c == 'G'\n            c_new\
    \ = 'g'\n        elseif c == 'h'\n            c_new = 'H'\n        elseif c ==\
    \ 'H'\n            c_new = 'h'\n        elseif c == 'i'\n            c_new = 'I'\n\
    \        elseif c == 'I'\n            c_new = 'i'\n        elseif c == 'j'\n \
    \           c_new = 'J'\n        elseif c == 'J'\n            c_new = 'j'\n  \
    \      elseif c == 'k'\n            c_new = 'K'\n        elseif c == 'K'\n   \
    \         c_new = 'k'\n        elseif c == 'l'\n            c_new = 'L'\n    \
    \    elseif c == 'L'\n            c_new = 'l'\n        elseif c == 'm'\n     \
    \       c_new = 'M'\n        elseif c == 'M'\n            c_new = 'm'\n      \
    \  elseif c == 'n'\n            c_new = 'N'\n        elseif c == 'N", "    return\
    \ join([char in uppercase(string) ? lowercase(char) : uppercase(char) for char\
    \ in string])\nend", "    return replace(string, \"a\"::String, \"A\"::String)\
    \ |> replace(string, \"A\"::String, \"a\"::String)\nend", "    ret_str = \"\"\n\
    \    for c in string\n        if islower(c)\n            ret_str *= uppercase(c)\n\
    \        else\n            ret_str *= lowercase(c)\n        end\n    end\n   \
    \ return ret_str\nend", "    i::Int64 = 1\n    out_string::String = \"\"\n   \
    \ for c in string\n        if islower(c)\n            out_string = out_string\
    \ * string(c, uppercase=true)\n        elseif isupper(c)\n            out_string\
    \ = out_string * string(c, uppercase=false)\n        else\n            out_string\
    \ = out_string * string(c)\n        end\n    end\n    return out_string\nend\n\
    print(flip_case(\"Hello\"))", "    for i=1:length(string)\n        if islower(string[i])\n\
    \            string[i] = string[i] | 0x20\n        else\n            string[i]\
    \ = string[i] & 0x5F\n        end\n    end\n    return string\nend", "    string\
    \ = split(string)\n    for i in string\n        if islower(i)\n            string[string.index(i)]\
    \ = uppercase(i)\n        else\n            string[string.index(i)] = lowercase(i)\n\
    \    end\n    return join(string)\nend\nflip_case(\"hello\")", "    flipped_string\
    \ = \"\"\n    for i = 1:length(string)\n        if islower(string[i])\n      \
    \      push!(flipped_string, uppercase(string[i]))\n        elseif isupper(string[i])\n\
    \            push!(flipped_string, lowercase(string[i]))\n        else\n     \
    \       push!(flipped_string, string[i])\n        end\n    end\n    return flipped_string\n\
    end", "    s = \"\"\n    for i in string\n        if(islower(i))\n           \
    \ s = s * uppercase(i)\n        elseif(isupper(i))\n            s = s * lowercase(i)\n\
    \        else\n            s = s * i\n        end\n    end\n    return s\nend",
  "    newstring = \"\"\n    for x = 1:length(string)\n        c = string[x]\n   \
    \     if c in lowercase(string)\n            newstring = newstring * uppercase(c)\n\
    \        elseif c in uppercase(string)\n            newstring = newstring * lowercase(c)\n\
    \        else\n            newstring = newstring * c\n        end\n    end\n \
    \   return newstring\nend", "    newString = \"\"\n    for c in string\n     \
    \   if c in \"Aa\"\n            newString *= \"a\"\n        elseif c in \"Bb\"\
    \n            newString *= \"b\"\n        elseif c in \"Cc\"\n            newString\
    \ *= \"c\"\n        elseif c in \"Dd\"\n            newString *= \"d\"\n     \
    \   elseif c in \"Ee\"\n            newString *= \"e\"\n        elseif c in \"\
    Ff\"\n            newString *= \"f\"\n        elseif c in \"Gg\"\n           \
    \ newString *= \"g\"\n        elseif c in \"Hh\"\n            newString *= \"\
    h\"\n        elseif c in \"Ii\"\n            newString *= \"i\"\n        elseif\
    \ c in \"Jj\"\n            newString *= \"j\"\n        elseif c in \"Kk\"\n  \
    \          newString *= \"k\"\n        elseif c in \"Ll\"\n            newString\
    \ *= \"l\"\n        elseif c in \"Mm\"\n            newString *= \"m\"\n     \
    \   elseif c in \"Nn\"\n            newString *= \"n\"\n        elseif c in \"\
    Oo\"\n            newString *= \"o\"\n        elseif c in \"Pp\"\n           \
    \ newString *= \"p\"\n        elseif c in \"Qq\"\n            newString *= \"\
    q\"\n        elseif c in \"Rr\"\n            newString *= \"r\"\n        elseif\
    \ c in \"Ss\"\n            newString *= \"s\"\n        elseif c in \"Tt\"\n  \
    \          newString *= \"t\"\n        elseif c in \"Uu\"\n            newString\
    \ *= \"u\"\n        elseif c in \"Vv\"\n            newString *= \"v\"\n     \
    \   elseif c in \"Ww\"\n            newString *= \"w\"\n        elseif c in \"\
    Xx\"\n            newString *= \"x\"\n        elseif c in \"Yy\"\n           \
    \ newString *= \"y\"\n        elseif c in \"Zz\"\n            newString *= \"\
    z\"\n        else\n            newString", "    flipped = \"\"\n    for character\
    \ in string\n        if 'a' <= character <= 'z'\n            flipped *= string(string(character)::Int64\
    \ + ('A' - 'a')::Int64)\n        elseif 'A' <= character <= 'Z'\n            flipped\
    \ *= string(string(character)::Int64 - ('A' - 'a')::Int64)\n        else\n   \
    \         flipped *= character\n        end\n    end\n    return flipped\nend",
  "    new_string = []\n    for char in string\n        char == lowercase(char) ?\
    \ push!(new_string, uppercase(char)) : push!(new_string, lowercase(char))\n  \
    \  end\n    return join(new_string)\nend", "    new_string = \"\"\n    for char\
    \ in string\n        if(char in lowercase(string))\n            append!(new_string,uppercase(char))\n\
    \        elseif(char in uppercase(string))\n            append!(new_string,lowercase(char))\n\
    \        else\n            append!(new_string,char)\n        end\n    end\n  \
    \  return new_string\nend", "    for char in string\n        if islower(char)\n\
    \            uppercase(char)\n        elseif isupper(char)\n            lowercase(char)\n\
    \        end\n    end\n    return string\nend", "    if string[1] in string(\"\
    a\"::Char, \"e\"::Char, \"i\"::Char, \"o\"::Char, \"u\"::Char)\n        return\
    \ string[1] in string(\"A\"::Char, \"E\"::Char, \"I\"::Char, \"O\"::Char, \"U\"\
    ::Char)\n    else\n        return string[1] in string(\"A\"::Char, \"E\"::Char,\
    \ \"I\"::Char, \"O\"::Char, \"U\"::Char)\nend\n \n\"\"\" Return the word that\
    \ appears the most times in a sentence.\n    >>> most_repeated_word(\"What is\
    \ the most common word in this sentence sentence\")\n    \"sentence\"\n    \"\"\
    \"", "    new_string = \"\"\n    for i = 1:length(string)\n        if string[i]\
    \ in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            new_string = new_string\
    \ * string(lowercase(string[i]))\n        elseif string[i] in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            new_string = new_string * string(uppercase(string[i]))\n      \
    \  else\n            new_string = new_string * string[i]\n        end\n    end\n\
    \    return new_string\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

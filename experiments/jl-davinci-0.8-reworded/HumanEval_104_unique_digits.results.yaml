name: HumanEval_104_unique_digits
language: jl
results:
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits(x::Vector{Int64}) = unique_digits(deepcopy(x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk3316ib0.jl:20\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: Cannot\
    \ `convert` an object of type var\"#unique_digits#1\" to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpk3316ib0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk3316ib0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk3316ib0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpk3316ib0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: Cannot\
    \ `convert` an object of type var\"#unique_digits#1\" to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpk3316ib0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk3316ib0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    not_unique = Vector{Int64}()\n    for elem in x\n        if any([typeof(x)\
    \ == Int64 for x in digits(elem)])\n            push!(not_unique, elem)\n    \
    \    end\n    end\n    return deleteat!(x, not_unique)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0b0t0ei4.jl:26\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [15]\n  Stacktrace:\n    [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Int64})\n      @ Base ./abstractarray.jl:691\n    [2] checkbounds\n\
    \      @ ./abstractarray.jl:656 [inlined]\n    [3] _deleteat!(a::Vector{Int64},\
    \ inds::Vector{Int64}, dltd::Base.Nowhere)\n      @ Base ./array.jl:1479\n   \
    \ [4] _deleteat!\n      @ ./array.jl:1475 [inlined]\n    [5] deleteat!\n     \
    \ @ ./array.jl:1469 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n     \
    \ @ Main /tmp/tmp0b0t0ei4.jl:19\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp0b0t0ei4.jl:26 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp0b0t0ei4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0b0t0ei4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [152]\n  Stacktrace:\n    [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Int64})\n      @ Base ./abstractarray.jl:691\n    [2] checkbounds\n\
    \      @ ./abstractarray.jl:656 [inlined]\n    [3] _deleteat!(a::Vector{Int64},\
    \ inds::Vector{Int64}, dltd::Base.Nowhere)\n      @ Base ./array.jl:1479\n   \
    \ [4] _deleteat!\n      @ ./array.jl:1475 [inlined]\n    [5] deleteat!\n     \
    \ @ ./array.jl:1469 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n     \
    \ @ Main /tmp/tmp0b0t0ei4.jl:19\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp0b0t0ei4.jl:27 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp0b0t0ei4.jl:25\ntest"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0b0t0ei4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    y = Int64[]\n    \n    for i in x\n        digits = digits(i)\n   \
    \     is_unique = true\n        for j in digits\n            if j % 2 == 0\n \
    \               is_unique = false\n                break\n            end\n  \
    \      end\n        if is_unique == true\n            push!(y, i)\n        end\n\
    \    end\n    return sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzkq3b5x1.jl:36\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: digits\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzkq3b5x1.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzkq3b5x1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzkq3b5x1.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpzkq3b5x1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: digits\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzkq3b5x1.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzkq3b5x1.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzkq3b5x1.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpzkq3b5x1.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: digits not\
    \ defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzkq3b5x1.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzkq3b5x1.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzkq3b5x1.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpzkq3b5x1.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzkq3b5x1.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    x = [i for i in x if has_even_digit(i) == false]\n    sort!(x)\n  \
    \  return x\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7hql6fpk.jl:23\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmp7hql6fpk.jl:14\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp7hql6fpk.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7hql6fpk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp7hql6fpk.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmp7hql6fpk.jl:14\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp7hql6fpk.jl:24 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7hql6fpk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp7hql6fpk.jl:25\n  Test threw exceptio"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hql6fpk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odds = Vector{Int64}() \n    for i in x \n        if !(occursin(\"2\", i)\
    \ || occursin(\"4\", i) || occursin(\"6\", i) || occursin(\"8\", i) || occursin(\"\
    0\", i))\n            push!(odds, i)\n        end\n    end\n    odds\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjk6rz9u1.jl:26\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: no\
    \ method matching occursin(::String, ::Int64)\n  Closest candidates are:\n   \
    \ occursin(::Union{AbstractChar, AbstractString}, !Matched::AbstractString) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n    occursin(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n  Stacktrace:\n\
    \   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpjk6rz9u1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk6rz9u1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk6rz9u1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjk6rz9u1.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: no method\
    \ matching occursin(::String, ::Int64)\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpjk6rz9u1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjk6rz9u1.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk6rz9u1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjk6rz9u1.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  MethodError: no method matching\
    \ occursin(::String, ::Int64)\n  Closest candidates are:\n    occursin(::Union{Abstra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjk6rz9u1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    filtered = filter(x) do a\n        return any(digits(a) .% 2 .== 0)\n   \
    \ end\n    return sort(x[filtered])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaodbz2yp.jl:23\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [[1422]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpaodbz2yp.jl:16\n   [6]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpaodbz2yp.jl:23 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpaodbz2yp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaodbz2yp.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [[152, 323, 1422, 10]]\n  Stacktrace:\n\
    \   [1] throw_boundserror(A::Vector{Int64}, I::Tuple{Vector{Int64}})\n     @ Base\
    \ ./abstractarray.jl:691\n   [2] checkbounds\n     @ ./abstractarray.jl:656 [inlined]\n\
    \   [3] _getindex\n     @ ./multidimensional.jl:838 [inlined]\n   [4] getindex\n\
    \     @ ./abstractarray.jl:1218 [inlined]\n   [5] unique_digits(x::Vector{Int64})\n\
    \     @ Main /tmp/tmpaodbz2yp.jl:16\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpaodbz2yp.jl:24 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpaodbz2yp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaodbz2yp.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  BoundsError: attempt to\
    \ access 4-element Ve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaodbz2yp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    vec = []\n    for i in x\n        if iseven(i) == false\n            push!(vec,\
    \ i)\n        end\n    end\n    return sort(vec)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvdl1vjzz.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdl1vjzz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdl1vjzz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvdl1vjzz.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdl1vjzz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdl1vjzz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvdl1vjzz.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdl1vjzz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdl1vjzz.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvdl1vjzz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = zeros(Int64,0)\n    for i in x\n        if i%2 == 0\n            continue\n\
    \        elseif i%5 == 0\n            continue\n        elseif i%10 == 0\n   \
    \         continue\n        elseif i%20 == 0\n            continue\n        elseif\
    \ i%25 == 0\n            continue\n        elseif i%50 == 0\n            continue\n\
    \        elseif i%100 == 0\n            continue\n        elseif i%200 == 0\n\
    \            continue\n        elseif i%500 == 0\n            continue\n     \
    \   elseif i%1000 == 0\n            continue\n        elseif i%2000 == 0\n   \
    \         continue\n        elseif i%5000 == 0\n            continue\n       \
    \ elseif i%10000 == 0\n            continue\n        elseif i%20000 == 0\n   \
    \         continue\n        elseif i%50000 == 0\n            continue\n      \
    \  else\n            push!(y,i)\n        end\n    end\n    y = sort(y)\n    return\
    \ y\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpclcbgsta.jl:57\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 33] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclcbgsta.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclcbgsta.jl:56\ntest set: Test\
    \ Failed at /tmp/tmpclcbgsta.jl:58\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclcbgsta.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclcbgsta.jl:56\ntest set: Test\
    \ Failed at /tmp/tmpclcbgsta.jl:59\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclcbgsta.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclcbgsta.jl:56\ntest set: Test\
    \ Failed at /tmp/tmpclcbgsta.jl:60\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclcbgsta.jl:60 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclcbgsta.jl:56\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclcbgsta.jl:54\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # return a sorted Vector{Int64} containing only elements of x without even\
    \ digits\n    return sort(x[(x .% 2) .!= 0])\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp074q24dg.jl:23\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp074q24dg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp074q24dg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp074q24dg.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp074q24dg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp074q24dg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp074q24dg.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp074q24dg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp074q24dg.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp074q24dg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # your solution here\n    return x\nend\nx = unique_digits([15, 33, 1422,\
    \ 1])\nprintln(x)\n@testset \"Test unique_digits\" begin\n    @test unique_digits([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n    @test unique_digits([152, 323, 1422, 10])\
    \ == []\nend\n \n \n \n \n \n\"\"\"Given a vector of positive integers x. return\
    \ a sorted vector of all \n    elements that hasn't any odd digit.\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "[15, 33, 1422, 1]\n"
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpbpk166xx.jl:18\nin expression starting at /tmp/tmpbpk166xx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    xunique = Int64[]\n    n = 0\n    for elem in x\n        if all(elem % 2\
    \ != 0 for elem in digits(elem))\n            append!(xunique, elem)\n       \
    \ end\n    end\n    xunique = sort(xunique)\n    return xunique\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuivfw6pz.jl:20\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpuivfw6pz.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuivfw6pz.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuivfw6pz.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpuivfw6pz.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpuivfw6pz.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuivfw6pz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        push!(y, i) if !(has_even_digit(i))\n   \
    \ end\n    sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp39vr6do7.jl:14 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp39vr6do7.jl:15\n\
    in expression starting at /tmp/tmp39vr6do7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = []\n    for i in x\n        flag = 0\n        #transform\
    \ each number from the vector into an array of chars\n        str = string(i)\n\
    \        for j in str\n            if parse(Int64, j) % 2 == 0\n             \
    \   flag = 1\n                break\n            end\n        end\n        if\
    \ flag == 0\n            push!(unique_digits, i)\n        end\n    end\n    sort(unique_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    is_vowel(char) = char in ['a', 'e', 'i', 'o', 'u']\n    res = []\n    for\
    \ el in x\n        if sum(is_vowel(char) for char in string(el)) == 0\n      \
    \      push!(res, el)\n        end\n    end\n    return sort(res)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpznokl7mr.jl:27\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznokl7mr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznokl7mr.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpznokl7mr.jl:28\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznokl7mr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznokl7mr.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpznokl7mr.jl:29\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznokl7mr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznokl7mr.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpznokl7mr.jl:30\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznokl7mr.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznokl7mr.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpznokl7mr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if any(dig in \"02468\" for dig in string(i))\n\
    \            continue\n        else\n            push!(y, i)\n        end\n  \
    \  end\n    return sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    count = 0\n    for i in x\n        if contains(digits(i), 0) || contains(digits(i),\
    \ 2) || contains(digits(i), 4) || contains(digits(i), 6) || contains(digits(i),\
    \ 8)\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsfigzpvx.jl:26\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: no\
    \ method matching contains(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n\
    \    contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\n\
    \    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpsfigzpvx.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfigzpvx.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfigzpvx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpsfigzpvx.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: no method\
    \ matching contains(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n   \
    \ contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\n\
    \    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpsfigzpvx.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfigzpvx.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfigzpvx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpsfigzpvx.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  MethodError: no method matching\
    \ contains(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    contains(!Matched::AbstractString,\
    \ ::Any) at /shared/centos7/julia/1.7.3/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsfigzpvx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Array{Int64}(length(x))\n    p = 0\n    for i in 1:length(x)\n      \
    \  if !is_even(x[i])\n            p += 1\n            y[p] = x[i]\n        end\n\
    \    end\n    sort(y[1:p])\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp51_p2xzq.jl:28\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: no\
    \ method matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmp51_p2xzq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp51_p2xzq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp51_p2xzq.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp51_p2xzq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: no method\
    \ matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmp51_p2xzq.jl:13\n\
    \   [2] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51_p2xzq.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = Array{Int64}(0)\n    for i = 1:length(x)\n        unique\
    \ = true\n        for j = 1:length(x[i])\n            char = convert(Int64, string(x[i][j]))\n\
    \            if char % 2 == 0\n                unique = false\n            end\n\
    \        end\n        if unique\n            push!(unique_digits, x[i])\n    \
    \    end\n    end\n    sort(unique_digits)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpl9n1fw9r.jl:33\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  MethodError: no\
    \ method matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpl9n1fw9r.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9n1fw9r.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9n1fw9r.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpl9n1fw9r.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  MethodError: no method\
    \ matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main /tmp/tmpl9n1fw9r.jl:13\n\
    \   [2] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9n1fw9r.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a vector of positive integers x. return a sorted vector of\
    \ all \n    elements that hasn't any even digit.\n\n    Note: Returned vector\
    \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # call function `no_even` to filter out all even numbers\n    return sort(x[no_even(x)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9pbrkc1z.jl:21\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: no_even\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp9pbrkc1z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pbrkc1z.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pbrkc1z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9pbrkc1z.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: no_even\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp9pbrkc1z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pbrkc1z.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pbrkc1z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9pbrkc1z.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: no_even not\
    \ defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp9pbrkc1z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pbrkc1z.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pbrkc1z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9pbrkc1z.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: no_even not defined\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9pbrkc1z.jl:18\n"
  exit_code: 1
  status: SyntaxError

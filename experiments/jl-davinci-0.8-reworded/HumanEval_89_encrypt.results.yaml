language: jl
name: HumanEval_89_encrypt
results:
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_letter = \"\"\n    for i in s\n        if i == \"h\"\n           \
    \ new_letter = new_letter * i\n        end\n        if i == \"a\"\n          \
    \  new_letter = new_letter * i\n        end\n        if i == \"i\"\n         \
    \   new_letter = new_letter * i\n        end\n        if i == \"b\"\n        \
    \    new_letter = new_letter * i\n        end\n        if i == \"j\"\n       \
    \     new_letter = new_letter * i\n        end\n        if i == \"c\"\n      \
    \      new_letter = new_letter * i\n        end\n        if i == \"k\"\n     \
    \       new_letter = new_letter * i\n        end\n        if i == \"d\"\n    \
    \        new_letter = new_letter * i\n        end\n        if i == \"l\"\n   \
    \         new_letter = new_letter * i\n        end\n        if i == \"e\"\n  \
    \          new_letter = new_letter * i\n        end\n        if i == \"m\"\n \
    \           new_letter = new_letter * i\n        end\n        if i == \"f\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"n\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"g\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"o\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"p\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"q\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"s\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"r\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"t\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"u\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"v\"\n\
    \            new_letter = new_letter * i\n        end\n        if i == \"w\"\n\
    \            new_letter = new\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8coqok0_.jl:1\nin expression starting at /tmp/tmp8coqok0_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # s = \"hi\"\n    for c in s\n        c += 2*2\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpihcav24f.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpihcav24f.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpihcav24f.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpihcav24f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpihcav24f.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpihcav24f.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpihcav24f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpihcav24f.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpihcav24f.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpihcav24f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpihcav24f.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpihcav24f.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpihcav24f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpihcav24f.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_text = String[]\n    for letter in s\n        char_code = Int(letter)\n\
    \        encrypted_text = push!(encrypted_text, char(char_code+2))\n    end\n\
    \    return join(encrypted_text)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpcjcomc1z.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpcjcomc1z.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcjcomc1z.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjcomc1z.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjcomc1z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpcjcomc1z.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcjcomc1z.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjcomc1z.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjcomc1z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpcjcomc1z.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpcjcomc1z.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjcomc1z.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjcomc1z.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpcjcomc1z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpcjcomc1z.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_string = String[]\n\
    \    for char in s\n        new_string = push!(new_string, alphabet[(mod(Int(char)-96,\
    \ 26)+2)*2])\n    end\n    return join(new_string)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpd8zxwpc2.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpd8zxwpc2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpd8zxwpc2.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd8zxwpc2.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd8zxwpc2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpd8zxwpc2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpd8zxwpc2.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd8zxwpc2.jl:29 [in"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    p=string(\"abcdefghijklmnopqrstuvwxyz\")\n    a=string(\"cdefghijklmnopqrstuvwxyzab\"\
    )\n    q=string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    b=string(\"CDEFGHIJKLMNOPQRSTUVWXYZAB\"\
    )\n    s=replace(s,p,a)\n    s=replace(s,q,b)\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp4q14ohgl.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp4q14ohgl.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4q14ohgl.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4q14ohgl.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4q14ohgl.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp4q14ohgl.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4q14ohgl.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4q14ohgl.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4q14ohgl.jl:28\ntest set:\
    \ Error During T"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for letter in s\n        if letter == \"\
    z\"\n            encrypted_string = encrypted_string * \"b\"\n        elseif letter\
    \ == \"y\"\n            encrypted_string = encrypted_string * \"a\"\n        else\n\
    \            idx = findfirst(letter,letters)\n            encrypted_string = encrypted_string\
    \ * letters[idx+2]\n        end\n    end\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpovuuluz1.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpovuuluz1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpovuuluz1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpovuuluz1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpovuuluz1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpovuuluz1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpovuuluz1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpovuuluz1.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpovuuluz1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpovuuluz1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpovuuluz1.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpovuuluz1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpovuuluz1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpovuuluz1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpovuuluz1.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    list=collect(s)\n    let\n        result=[]\n        for i in 1:length(list)\n\
    \            if (Int(list[i])>Int(\"a\"))&&(Int(list[i])<Int(\"z\"))\n       \
    \         result=push!(result,Char(Int(list[i])+2))\n            elseif (Int(list[i])==Int(\"\
    z\"))\n                result=push!(result,Char(Int(list[i])-25))\n          \
    \  elseif (Int(list[i])==Int(\"y\"))\n                result=push!(result,Char(Int(list[i])-24))\n\
    \            else\n                result=push!(result,list[i])\n            end\n\
    \        end\n    end\n    return join(result)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp53dlr4o4.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmp53dlr4o4.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp53dlr4o4.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp53dlr4o4.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp53dlr4o4.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp53dlr4o4.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp53dlr4o4.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp53dlr4o4.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    A = Dict()\n    for i in\
    \ range(1,27)\n        A[alphabet[i]] = alphabet[i-2]\n    end\n    encrypted\
    \ = \"\"\n    for i in s\n        encrypted = string(encrypted, A[i])\n    end\n\
    \    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptceebor6.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmptceebor6.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 26-codeunit\
    \ String at index [-1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmptceebor6.jl:19\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptceebor6.jl:32 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptceebor6.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptceebor6.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 26-codeunit String at index [-1]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ encrypt(s::String)\n     @ Main /tmp/tmptceebor6.jl:19\n   [5] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptceebor6.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptceebor6.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptceebor6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 26-codeunit String\
    \ at index [-1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmptceebor6.jl:19\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    res = \"\"\n    for i in 1:length(s)\n        res = res * shift(s[i],2)\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpszujvmsz.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpszujvmsz.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpszujvmsz.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpszujvmsz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpszujvmsz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpszujvmsz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpszujvmsz.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpszujvmsz.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpszujvmsz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpszujvmsz.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpszujvmsz.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpszujvmsz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpszujvmsz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpszujvmsz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpszujvmsz.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return String[(shift(i)) for i in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpeft83539.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpeft83539.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeft83539.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeft83539.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeft83539.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpeft83539.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeft83539.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeft83539.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeft83539.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpeft83539.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpeft83539.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeft83539.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeft83539.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpeft83539.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpeft83539.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = String[]\n\
    \    for i in s\n        for j in alphabet\n            if i == j\n          \
    \      encrypted = push!(encrypted, alphabet[j + 2])\n            end\n      \
    \  end\n    end\n    \n    return join(encrypted)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpy80mr47h.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpy80mr47h.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ getindex(::String, ::Char)\n  Closest candidates are:\n    getindex(::AbstractString,\
    \ !Matched::Colon) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\n\
    \    getindex(::String, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\n\
    \    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpy80mr47h.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy80mr47h.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy80mr47h.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpy80mr47h.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ getindex(::String, ::Char)\n  Closest candidates are:\n    getindex(::AbstractString,\
    \ !Matched::Colon) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\n\
    \    getindex(::String, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\n\
    \    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpy80mr47h.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy80mr47h.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy80mr47h.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpy80mr47h.jl:35\n  Test threw exception\n  Express"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n   \n    s = [x for x in s]\n    for i in 1:length(s)\n        s[i] = char(Int(s[i])+4)\n\
    \    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpz4fir7hi.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpz4fir7hi.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpz4fir7hi.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4fir7hi.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4fir7hi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpz4fir7hi.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpz4fir7hi.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4fir7hi.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4fir7hi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpz4fir7hi.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpz4fir7hi.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4fir7hi.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4fir7hi.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpz4fir7hi.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpz4fir7hi.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create an array for the alphabet\n    alphabet = [\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    # create a string to store the encrypted text\n    encrypted_text\
    \ = \"\"\n    # iterate through the string\n    for char in s\n        # find\
    \ the index of the letter in the alphabet\n        index = findfirst(alphabet,\
    \ char)\n        # add two to the index\n        new_index = index + 2\n     \
    \   # if the index goes beyond the end of the alphabet, subtract 26\n        if\
    \ new_index > 26\n            new_index = new_index - 26\n        end\n      \
    \  # add the new letter to the encrypted text\n        push!(encrypted_text, alphabet[new_index])\n\
    \    end\n    # return the encrypted text\n    return encrypted_text\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpa3gi6e6h.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpa3gi6e6h.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa3gi6e6h.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa3gi6e6h.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa3gi6e6h.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpa3gi6e6h.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa3gi6e6h.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa3gi6e6h.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa3gi6e6h.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpa3gi6e6h.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::Char)\n  Closest candidates are:\n    fin"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    encrypted_message = \"\"\n\
    \    for i in 1:length(s)\n        if islower(s[i])\n            letter_index\
    \ = find(alphabet, s[i])\n            new_letter_index = mod((letter_index-1)\
    \ * 2, 26) + 1\n            push!(encrypted_message, alphabet[new_letter_index])\n\
    \        else\n            push!(encrypted_message, s[i])\n        end\n    end\n\
    \    return encrypted_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpuuj30z68.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpuuj30z68.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuuj30z68.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuj30z68.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuj30z68.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuuj30z68.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuuj30z68.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuj30z68.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuj30z68.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuuj30z68.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuuj30z68.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuj30z68.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuj30z68.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuuj30z68.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuuj30z68.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Rotate the alphabet by 2*number of letters in string\n    caesar = CaesarCipher(2*length(s))\n\
    \    return string(caesar.encrypt(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpnc22jq3x.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpnc22jq3x.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: CaesarCipher not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnc22jq3x.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnc22jq3x.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnc22jq3x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnc22jq3x.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: CaesarCipher not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnc22jq3x.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnc22jq3x.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnc22jq3x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnc22jq3x.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: CaesarCipher not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpnc22jq3x.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnc22jq3x.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnc22jq3x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnc22jq3x.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: CaesarCipher not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpnc22jq3x.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    d = Dict{Char,Char}()\n\
    \    n = length(alphabet)\n    i = 1\n    while i <= n\n        d[alphabet[i]]\
    \ = alphabet[(i + 2*i) % n + 1]\n        i += 1\n    end\n    return join([d[c]\
    \ for c in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8ey_ta_a.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp8ey_ta_a.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"yb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ey_ta_a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ey_ta_a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8ey_ta_a.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"dfmsvyehk\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ey_ta_a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ey_ta_a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8ey_ta_a.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"vs\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ey_ta_a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ey_ta_a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8ey_ta_a.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"pi\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ey_ta_a.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ey_ta_a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8ey_ta_a.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"sdprsdrpsdprv\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_shift = [(i - 'a' + 3) % 26 + 'a' for i in s]\n    return String(s_shift)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_e1jx4q5.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp_e1jx4q5.jl:24\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"kl\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e1jx4q5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e1jx4q5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_e1jx4q5.jl:25\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"dvgijkmno\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e1jx4q5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e1jx4q5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_e1jx4q5.jl:26\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ji\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e1jx4q5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e1jx4q5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_e1jx4q5.jl:27\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"hw\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e1jx4q5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e1jx4q5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_e1jx4q5.jl:28\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"idhzidzhidhzj\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i == \"z\"\n     \
    \       encrypted_string = encrypted_string * \"b\"\n        elseif i == \"y\"\
    \n            encrypted_string = encrypted_string * \"a\"\n        else\n    \
    \        encrypted_string = encrypted_string * (next(next(i)))\n        end\n\
    \    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp25u6n3st.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp25u6n3st.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp25u6n3st.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25u6n3st.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25u6n3st.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp25u6n3st.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp25u6n3st.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25u6n3st.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25u6n3st.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp25u6n3st.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp25u6n3st.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25u6n3st.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25u6n3st.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp25u6n3st.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp25u6n3st.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    # a-y, b-z, c-a, d-b ...\n    for c in s\n\
    \        if c == 'z'\n            encrypted_string = encrypted_string * \"b\"\n\
    \        elseif c == 'y'\n            encrypted_string = encrypted_string * \"\
    a\"\n        else\n            encrypted_string = encrypted_string * string(char(Int(c)\
    \ + 2))\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpyhi9fl7f.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpyhi9fl7f.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyhi9fl7f.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyhi9fl7f.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyhi9fl7f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpyhi9fl7f.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyhi9fl7f.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyhi9fl7f.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyhi9fl7f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpyhi9fl7f.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyhi9fl7f.jl:24\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyhi9fl7f.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyhi9fl7f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpyhi9fl7f.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyhi9fl7f.jl:24\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str_1 = \"\"\n    for i in s\n        if i == \"a\" || i == \"b\"\n  \
    \          str_1 = str_1 * \"yz\"\n        elseif i == \"y\" || i == \"z\"\n \
    \           str_1 = str_1 * \"ab\"\n        elseif i == \"A\" || i == \"B\"\n\
    \            str_1 = str_1 * \"YZ\"\n        elseif i == \"Y\" || i == \"Z\"\n\
    \            str_1 = str_1 * \"AB\"\n        elseif i in 'cdefghijklmnopqrstuvwxyz'\n\
    \            str_1 = str_1 * (chr(Int(i) + 2))\n        elseif i in 'CDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            str_1 = str_1 * (chr(Int(i) + 2))\n        else\n            str_1\
    \ = str_1 * i\n        end\n    end\n    return str_1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpp9sksb9q.jl:26\nin expression\
    \ starting at /tmp/tmpp9sksb9q.jl:26\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encryptedstring = \"\"\n    for letter in s\n        letternumber = ord(letter)\n\
    \        if letternumber <= 121\n            letternumber = letternumber + 4\n\
    \        else\n            letternumber = letternumber -22\n        end\n    \
    \    encryptedstring = string(encryptedstring, string(letternumber))\n    end\n\
    \    encryptedstring\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpdlk9xzni.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdlk9xzni.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdlk9xzni.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpdlk9xzni.jl:32\ntest set: Error During Test at
    /tmp/tmpdlk9xzni.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdlk9xzni.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdlk9xzni.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdlk9xzni.jl:32\ntest set: Error
    During Test at /tmp/tmpdlk9xzni.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdlk9xzni.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdlk9xzni.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdlk9xzni.jl:32\ntest set: Error
    During Test at /tmp/tmpdlk9xzni.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdlk9xzni.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    rot = 2\n    max_index =\
    \ length(alphabet)\n    new_string = \"\"\n    for i = 1:length(s)\n        index\
    \ = findfirst(alphabet,s[i])\n        if isnothing(index)\n            new_string\
    \ = new_string * s[i]\n        else\n            # shifts down by two\n      \
    \      index = index + 2*rot\n            # wraps around if it's too far\n   \
    \         index = index > max_index ? index - max_index : index\n            new_string\
    \ = new_string * alphabet[index]\n        end\n    end\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpnv0r6qdd.jl:16\nin expression\
    \ starting at /tmp/tmpnv0r6qdd.jl:16\n"
  stdout: ''
  timestamp: 1659979421
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        index = findfirst(alphabet,\
    \ i)\n        new_string *= alphabet[(index+2):end] * alphabet[1:(index+2-26)]\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpl4ast708.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: alphabet not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpl4ast708.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl4ast708.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl4ast708.jl:27\ntest set: Error
    During Test at /tmp/tmpl4ast708.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpl4ast708.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl4ast708.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl4ast708.jl:27\ntest set: Error
    During Test at /tmp/tmpl4ast708.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpl4ast708.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl4ast708.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl4ast708.jl:27\ntest set: Error
    During Test at /tmp/tmpl4ast708.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpl4ast708.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [String(i) for i in s].map(x -> shift(x,2)).join()\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp17jgkuef.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    String(::Char)\n  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    (::var"#1#3")(i::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#3"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp17jgkuef.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp17jgkuef.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp17jgkuef.jl:22\ntest set: Error
    During Test at /tmp/tmp17jgkuef.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching String(::Char)\n  Closest candidates
    are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    (::var"#1#3")(i::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#3"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp17jgkuef.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp17jgkuef.jl:24 [inlined]\n   [7]
    macro e'
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i in ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \            if i in ['a','b','c','d','e','f','g','h','i','j','k','l','m']\n \
    \               new_string = new_string * string(i + 2)\n            elseif i\
    \ in ['n','o','p','q','r','s','t','u','v','w','x','y','z']\n                new_string\
    \ = new_string * string(i - 23)\n            end\n        else\n            new_string\
    \ = new_string * string(i)\n        end\n    end\n    return new_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfp_s7uet.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpfp_s7uet.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfp_s7uet.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfp_s7uet.jl:34\ntest set: Test Failed at /tmp/tmpfp_s7uet.jl:36\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"c\\\\\
    fhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfp_s7uet.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfp_s7uet.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfp_s7uet.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfp_s7uet.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfp_s7uet.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfp_s7uet.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"g]\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfp_s7uet.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfp_s7uet.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfp_s7uet.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcg`hc`ghcg`i\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str = \"\"\n    for i in s\n        j = Int(i)\n        if j >= 97 &&\
    \ j <=109\n            str *= string(Char(j+2))\n        elseif j >= 110 && j\
    \ <= 122\n            str *= string(Char(j-24))\n        elseif j >= 65 && j <=\
    \ 77\n            str *= string(Char(j+2))\n        elseif j >= 78 && j <= 90\n\
    \            str *= string(Char(j-24))\n        else\n            str *= string(Char(j))\n\
    \        end\n    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg7thox86.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmpg7thox86.jl:38\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg7thox86.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg7thox86.jl:37\ntest set: Test Failed at /tmp/tmpg7thox86.jl:39\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"c[fhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7thox86.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7thox86.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpg7thox86.jl:40\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7thox86.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7thox86.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpg7thox86.jl:41\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"g\\\\\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7thox86.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7thox86.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpg7thox86.jl:42\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcg_hc_ghcg_i\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1659979422
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    dictionary = Dict{Char,Int}()\n\
    \    for i in 1:length(alphabet)\n        dictionary[alphabet[i]] = i\n    end\n\
    \    s = lowercase(s)\n    new_string = \"\"\n    for i in 1:length(s)\n     \
    \   if s[i] == ' '\n            new_string *= ' '\n        else\n            new_string\
    \ *= alphabet[((dictionary[s[i]] - 2) % length(alphabet)) + 1]\n        end\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmp47ajj8fw.jl:37\n  Expression: candidate("hi")
    == "lm"\n   Evaluated: "gh" == "lm"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp47ajj8fw.jl:37 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp47ajj8fw.jl:36\n'''
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for letter in s\n        if letter == \"z\"\n            letter = \"b\"\
    \n        elseif letter == \"y\"\n            letter = \"a\"\n        else\n \
    \           letter = chr(ord(letter) + 2)\n        end\n    end\n    return s\n\
    end\nprint(encrypt(\"apple\"))\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: ord not defined\nStacktrace:\n [1] encrypt(s::String)\n\
    \   @ Main /tmp/tmpik3av2d0.jl:22\n [2] top-level scope\n   @ /tmp/tmpik3av2d0.jl:27\n\
    in expression starting at /tmp/tmpik3av2d0.jl:27\n"
  stdout: ''
  timestamp: 1659979421
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * (char(Int(i)\
    \ + 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp_9eol74m.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp_9eol74m.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp_9eol74m.jl:27 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp_9eol74m.jl:26\ntest set: Error During Test at
    /tmp/tmp_9eol74m.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp_9eol74m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9eol74m.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_9eol74m.jl:26\ntest set: Error
    During Test at /tmp/tmp_9eol74m.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp_9eol74m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9eol74m.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_9eol74m.jl:26\ntest set: Error
    During Test at /tmp/tmp_9eol74m.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp_9eol74m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return shift(s, 2)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkjq_3ci5.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpkjq_3ci5.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkjq_3ci5.jl:23 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpkjq_3ci5.jl:22\ntest set: Error During Test at
    /tmp/tmpkjq_3ci5.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkjq_3ci5.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkjq_3ci5.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkjq_3ci5.jl:22\ntest set: Error
    During Test at /tmp/tmpkjq_3ci5.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkjq_3ci5.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkjq_3ci5.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkjq_3ci5.jl:22\ntest set: Error
    During Test at /tmp/tmpkjq_3ci5.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkjq_3ci5.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift('a', x) for x in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp79wdi723.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp79wdi723.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp79wdi723.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp79wdi723.jl:22\ntest set: Error
    During Test at /tmp/tmp79wdi723.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmp79wdi723.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp79wdi723.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp79wdi723.jl:22\ntest set: Error
    During Test at /tmp/tmp79wdi723.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmp79wdi723.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift_letter(c,2*2) for c in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpunqb3thr.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift_letter
    not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpunqb3thr.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpunqb3thr.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpunqb3thr.jl:22\ntest set: Error
    During Test at /tmp/tmpunqb3thr.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift_letter not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpunqb3thr.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpunqb3thr.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpunqb3thr.jl:22\ntest set: Error
    During Test at /tmp/tmpunqb3thr.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift_letter not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpunqb3thr.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    t = \"\"\n    for i in s\n        for l in i\n            t += Char(l-2)\n\
    \        end\n    end\n    return t\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgetim363.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    +(::String, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,
    !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::Integer,
    ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl:247\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpgetim363.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgetim363.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgetim363.jl:28\ntest set: Error During Test at
    /tmp/tmpgetim363.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching +(::String, ::Char)\n  Closest
    candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::Integer,
    ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl:247\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpgetim363.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgetim363.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgetim363.jl:28\n'''
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_lower = lowercase(s)\n    s_upper = uppercase(s)\n    encrypted_s =\
    \ \"\"\n    for x in s\n        if (x in s_lower)\n            if isequal(x, \"\
    z\")\n                encrypted_s = encrypted_s * \"b\"\n            elseif isequal(x,\
    \ \"y\")\n                encrypted_s = encrypted_s * \"a\"\n            else\n\
    \                encrypted_s = encrypted_s * chr(Int(x)+2)\n            end\n\
    \        elseif (x in s_upper)\n            if isequal(x, \"Z\")\n           \
    \     encrypted_s = encrypted_s * \"B\"\n            elseif isequal(x, \"Y\")\n\
    \                encrypted_s = encrypted_s * \"A\"\n            else\n       \
    \         encrypted_s = encrypted_s * chr(Int(x)+2)\n            end\n       \
    \ else\n            encrypted_s = encrypted_s * x\n        end\n    end\n    return\
    \ encrypted_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpf8xvj3a_.jl:47\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpf8xvj3a_.jl:26\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpf8xvj3a_.jl:47 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpf8xvj3a_.jl:46\ntest set: Error During Test at
    /tmp/tmpf8xvj3a_.jl:48\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpf8xvj3a_.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf8xvj3a_.jl:48 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf8xvj3a_.jl:46\ntest set: Error
    During Test at /tmp/tmpf8xvj3a_.jl:49\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpf8xvj3a_.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf8xvj3a_.jl:49 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf8xvj3a_.jl:46\ntest set: Error
    During Test at /tmp/tmpf8xvj3a_.jl:50\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpf8xvj3a_.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Encrypts a string, by rotating the alphabet.\n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    \"\"\"\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    result = \"\"\n    for i in s\n        index = findfirst(alphabet, i)\n \
    \       if index != nothing\n            index = mod(index + 2*2, 26)\n      \
    \      index == 0 && (index = 26)\n            append!(result, alphabet[index])\n\
    \        else\n            append!(result, i)\n        end\n    end\n    return\
    \ result\nend\nencrypt(\"hi\")\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: None
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = s \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for i in\
    \ 1:length(s)\n        if s[i] in alphabet\n            out[i] = alphabet[(alphabet\
    \ .== s[i])[1] + 2]\n        end\n    end\n    return out\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkkpjx9k_.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkkpjx9k_.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkpjx9k_.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkpjx9k_.jl:29\ntest set: Error
    During Test at /tmp/tmpkkpjx9k_.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching setindex!(::String, ::Char,
    ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkkpjx9k_.jl:20\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkpjx9k_.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkpjx9k_.jl:29\ntest set: Error
    During Test at /tmp/tmpkkpjx9k_.jl:32\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpkkpjx9k_.jl:20\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkkpjx9k_.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpkkpjx9k_.jl:29\ntest set: Error During Test at
    /tmp/tmpkkpjx9k_.jl:33\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  MethodError: no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return String([rotate(x) for x in s])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpyno4155f.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpyno4155f.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyno4155f.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyno4155f.jl:22\ntest set: Error
    During Test at /tmp/tmpyno4155f.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpyno4155f.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyno4155f.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyno4155f.jl:22\ntest set: Error
    During Test at /tmp/tmpyno4155f.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpyno4155f.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/s'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if (i in alpha)\n         \
    \   new_string *= string(alpha[(findfirst(alpha, i)+4)%26])\n        else\n  \
    \          new_string *= string(i)\n        end\n    end\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwbt7u7oi.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: alpha not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwbt7u7oi.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwbt7u7oi.jl:31 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwbt7u7oi.jl:30\ntest set: Error During Test at
    /tmp/tmpwbt7u7oi.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: alpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwbt7u7oi.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbt7u7oi.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbt7u7oi.jl:30\ntest set: Error
    During Test at /tmp/tmpwbt7u7oi.jl:33\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: alpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwbt7u7oi.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbt7u7oi.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbt7u7oi.jl:30\ntest set: Error
    During Test at /tmp/tmpwbt7u7oi.jl:34\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: alpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwbt7u7oi.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes'
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #zipped with a,b,c,d...\n    a = [(\"a\", \"c\"), (\"b\", \"d\"), (\"\
    c\", \"e\"), (\"d\", \"f\"), (\"e\", \"g\"), (\"f\", \"h\"), (\"g\", \"i\"), (\"\
    h\", \"j\"), (\"i\", \"k\"), (\"j\", \"l\"), (\"k\", \"m\"), (\"l\", \"n\"), (\"\
    m\", \"o\"), (\"n\", \"p\"), (\"o\", \"q\"), (\"p\", \"r\"), (\"q\", \"s\"), (\"\
    r\", \"t\"), (\"s\", \"u\"), (\"t\", \"v\"), (\"u\", \"w\"), (\"v\", \"x\"), (\"\
    w\", \"y\"), (\"x\", \"z\"), (\"y\", \"a\"), (\"z\", \"b\")]\n    b = Dict(a)\n\
    \    c = split(s, \"\")\n    for i in c\n        if i in keys(b)\n           \
    \ i = get(b, i, \"\")\n        end\n    end\n    join(c, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnjbk3hsx.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpnjbk3hsx.jl:32\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnjbk3hsx.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnjbk3hsx.jl:31\ntest set: Test Failed at /tmp/tmpnjbk3hsx.jl:33\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjbk3hsx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjbk3hsx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpnjbk3hsx.jl:34\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjbk3hsx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjbk3hsx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpnjbk3hsx.jl:35\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjbk3hsx.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjbk3hsx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpnjbk3hsx.jl:36\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979422
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        try\n            if i\
    \ in 'abcdefghijklmnopqrstuvwxyz'\n                j = (ord(i)-97+2)%26 + 97\n\
    \                encrypted_string = encrypted_string * string(Char(j))\n     \
    \       else\n                j = (ord(i)-65+2)%26 + 65\n                encrypted_string\
    \ = encrypted_string * string(Char(j))\n            end\n        catch\n     \
    \       throw(DomainError)\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpta2adjv1.jl:19\nin expression\
    \ starting at /tmp/tmpta2adjv1.jl:19\n"
  stdout: ''
  timestamp: 1659979421
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    length = length(s)\n    out_string = \"\"\n    new_string = \"\"\n   \
    \ for i = 1:length\n        new_letter = s[i]\n        if new_letter == \"a\"\
    \ || new_letter == \"A\"\n            new_letter = \"c\"\n        elseif new_letter\
    \ == \"b\" || new_letter == \"B\"\n            new_letter = \"d\"\n        elseif\
    \ new_letter == \"c\" || new_letter == \"C\"\n            new_letter = \"e\"\n\
    \        elseif new_letter == \"d\" || new_letter == \"D\"\n            new_letter\
    \ = \"f\"\n        elseif new_letter == \"e\" || new_letter == \"E\"\n       \
    \     new_letter = \"g\"\n        elseif new_letter == \"f\" || new_letter ==\
    \ \"F\"\n            new_letter = \"h\"\n        elseif new_letter == \"g\" ||\
    \ new_letter == \"G\"\n            new_letter = \"i\"\n        elseif new_letter\
    \ == \"h\" || new_letter == \"H\"\n            new_letter = \"j\"\n        elseif\
    \ new_letter == \"i\" || new_letter == \"I\"\n            new_letter = \"k\"\n\
    \        elseif new_letter == \"j\" || new_letter == \"J\"\n            new_letter\
    \ = \"l\"\n        elseif new_letter == \"k\" || new_letter == \"K\"\n       \
    \     new_letter = \"m\"\n        elseif new_letter == \"l\" || new_letter ==\
    \ \"L\"\n            new_letter = \"n\"\n        elseif new_letter == \"m\" ||\
    \ new_letter == \"M\"\n            new_letter = \"o\"\n        elseif new_letter\
    \ == \"n\" || new_letter == \"N\"\n            new_letter = \"p\"\n        elseif\
    \ new_letter == \"o\" || new_letter == \"O\"\n            new_letter = \"q\"\n\
    \        elseif new_letter == \"p\" || new_letter == \"P\"\n            new_letter\
    \ = \"r\"\n        elseif new_letter == \"q\" || new_letter == \"Q\"\n       \
    \     new_letter =\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zon27x9.jl:1\nin expression starting at /tmp/tmp1zon27x9.jl:1\n"
  stdout: ''
  timestamp: 1659979421
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for letter in s\n        letter == ' ' ? new_string\
    \ *= letter : new_string *= string(letter)[3]\n    end\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9j9xob_0.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  BoundsError: attempt to access
    1-codeunit String at index [3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216
    [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @
    ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp9j9xob_0.jl:18\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9j9xob_0.jl:27 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9j9xob_0.jl:26\ntest set: Error
    During Test at /tmp/tmp9j9xob_0.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  BoundsError: attempt to access 1-codeunit String at index [3]\n  Stacktrace:\n   [1]
    checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @
    ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp9j9xob_0.jl:18\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9j9xob_0.jl:28 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9j9xob_0.jl:26\ntest set: Error
    During Test at /tmp/tmp9j9xob_0.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  BoundsError: attempt to access 1-codeunit String at index [3]\n  Stacktrace:\n   [1]
    checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @
    ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp9j9xob_0.jl:18\n   [5]
    macro expansion\n     @'
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabets = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n   \
    \ for i in s\n        encrypted = encrypted * alphabets[findfirst(alphabets, i)[1]\
    \ + 4]\n    end\n    return encrypted\nend\n    \n    \n    \n    \n    \n   \
    \ \n    \n    \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa3wg7st4.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpa3wg7st4.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpa3wg7st4.jl:36 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpa3wg7st4.jl:35\ntest set: Error During Test at
    /tmp/tmpa3wg7st4.jl:37\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpa3wg7st4.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpa3wg7st4.jl:37 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpa3wg7st4.jl:35\ntest set: Error During Test at
    /tmp/tmpa3wg7st4.jl:38\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::String, ::'
  timestamp: 1659979423
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    this function takes in a string and rotates it by two places\n\
    \    \"\"\"\n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    b = a[3:end]*2\n    c\
    \ = a[1:3]\n    d = b*\"\"c\n    e = Dict(zip(a,d))\n    f = string[]\n    for\
    \ letter in s\n        push!(f,e[letter])\n    end\n    return f*\"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl03vl8nx.jl:22\nin expression starting at\
    \ /tmp/tmpl03vl8nx.jl:22\n"
  stdout: ''
  timestamp: 1659979423
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    alphabets = Array('a':'z')\n    encrypted_alphabets = Array('a':'z')\n\
    \    for i in range(1,length(alphabets))\n        push!(encrypted_alphabets,alphabets[(i*2)%length(alphabets)])\n\
    \    end\n    encrypted_alphabets[1] = 'a'\n    encrypted_alphabets[2] = 'b'\n\
    \    encrypted_alphabets\n    \n    encrypted_s = \"\"\n    for i in s\n     \
    \   if i == ' '\n            push!(encrypted_s,' ')\n        else\n          \
    \  push!(encrypted_s,encrypted_alphabets[findfirst(alphabets,i)])\n        end\n\
    \    end\n    return encrypted_s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj0e43chh.jl:41\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  BoundsError: attempt to access
    26-element Vector{Char} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861
    [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpj0e43chh.jl:20\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj0e43chh.jl:41 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj0e43chh.jl:40\ntest set: Error
    During Test at /tmp/tmpj0e43chh.jl:42\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  BoundsError: attempt to access 26-element Vector{Char} at index
    [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpj0e43chh.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj0e43chh.jl:42 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj0e43chh.jl:40\ntest set: Error
    During Test at /tmp/tmpj0e43chh.jl:43\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  BoundsError: attempt to access 26-element Vector{Char} at index [0]\n  Stacktrace:\n   [1]
    getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @ Main
    /tmp/tmpj0e43chh.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj0e43chh.jl:43 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj0e43chh.jl:40\ntest set: Error
    During Test at /tmp/tmpj0e43chh.jl:44\n  T'
  timestamp: 1659979426
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Your code here.\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpk1vf8lpb.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpk1vf8lpb.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpk1vf8lpb.jl:23 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpk1vf8lpb.jl:22\ntest set: Error During Test at
    /tmp/tmpk1vf8lpb.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpk1vf8lpb.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpk1vf8lpb.jl:24 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n '
  timestamp: 1659979426
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = String[]\n    for i in 1:length(s)\n        if s[i] == \"\
    z\"\n            push!(encrypted, \"b\")\n        elseif s[i] == \"y\"\n     \
    \       push!(encrypted, \"a\")\n        else\n            push!(encrypted, chr(Int(s[i])\
    \ + 2))\n        end\n    end\n    return join(encrypted)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp2nx8innu.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp2nx8innu.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp2nx8innu.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp2nx8innu.jl:32\ntest set: Error During Test at
    /tmp/tmp2nx8innu.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2nx8innu.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2nx8innu.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2nx8innu.jl:32\ntest set: Error
    During Test at /tmp/tmp2nx8innu.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2nx8innu.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2nx8innu.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2nx8innu.jl:32\ntest set: Error
    During Test at /tmp/tmp2nx8innu.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2nx8innu.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979426
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa4876mqv.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpa4876mqv.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa4876mqv.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa4876mqv.jl:22\ntest set: Test Failed at /tmp/tmpa4876mqv.jl:24\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"\" ==\
    \ \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4876mqv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4876mqv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpa4876mqv.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4876mqv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4876mqv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpa4876mqv.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4876mqv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4876mqv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpa4876mqv.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  timestamp: 1659979426
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if length(s) == 0\n        return \"\"\n    else\n        if s[1] == 'z'\n\
    \            return \"b\" * encrypt(s[2:end])\n        elseif s[1] == 'y'\n  \
    \          return \"a\" * encrypt(s[2:end])\n        else\n            return\
    \ char(s[1] + 2) * encrypt(s[2:end])\n        end\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0bv5qmzj.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0bv5qmzj.jl:24\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0bv5qmzj.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0bv5qmzj.jl:32\ntest set: Error During Test at
    /tmp/tmp0bv5qmzj.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0bv5qmzj.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0bv5qmzj.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0bv5qmzj.jl:32\ntest set: Error
    During Test at /tmp/tmp0bv5qmzj.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0bv5qmzj.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0bv5qmzj.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0bv5qmzj.jl:32\ntest set: Error
    During Test at /tmp/tmp0bv5qmzj.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: char not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0bv5qmzj.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979427
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for i in s\n        for\
    \ j in alphabet\n            if i == j\n                i = alphabet[find(j)]\
    \ + 2\n            end\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpep4f1nay.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpep4f1nay.jl:20\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpep4f1nay.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpep4f1nay.jl:29\ntest set: Error During Test at
    /tmp/tmpep4f1nay.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpep4f1nay.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpep4f1nay.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpep4f1nay.jl:29\ntest set: Error
    During Test at /tmp/tmpep4f1nay.jl:32\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpep4f1nay.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpep4f1nay.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpep4f1nay.jl:29\ntest set: Error
    During Test at /tmp/tmpep4f1nay.jl:33\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpep4f1nay.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979427
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = []\n    for i in s\n        push!(c, chr(ord(i) + 4))\n    end\n \
    \   s = join(c)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp54x0xx0u.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp54x0xx0u.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp54x0xx0u.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp54x0xx0u.jl:27\ntest set: Error During Test at
    /tmp/tmp54x0xx0u.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp54x0xx0u.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp54x0xx0u.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp54x0xx0u.jl:27\ntest set: Error
    During Test at /tmp/tmp54x0xx0u.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp54x0xx0u.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp54x0xx0u.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp54x0xx0u.jl:27\ntest set: Error
    During Test at /tmp/tmp54x0xx0u.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp54x0xx0u.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [rotate_two(x) for x in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjeystque.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate_two
    not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpjeystque.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjeystque.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjeystque.jl:22\ntest set: Error
    During Test at /tmp/tmpjeystque.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate_two not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpjeystque.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjeystque.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjeystque.jl:22\ntest set: Error
    During Test at /tmp/tmpjeystque.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate_two not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpjeystque.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return join([shift2(i) for i in s])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpclz380g8.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift2 not
    defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Char)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpclz380g8.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpclz380g8.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpclz380g8.jl:22\ntest set: Error
    During Test at /tmp/tmpclz380g8.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift2 not defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpclz380g8.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpclz380g8.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpclz380g8.jl:22\ntest set: Error
    During Test at /tmp/tmpclz380g8.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift2 not defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpclz380g8.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/s'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if 'a' <= s[1] <= 'y'\n        return s[1]*2\n    else\n        return\
    \ s[1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = length(s)\n    x = collect(s)\n    for i in 1:n\n        x[i] = Int(x[i])\
    \ + 2*2\n    end\n    return String(x)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpldbys2v1.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpldbys2v1.jl:32\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpldbys2v1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpldbys2v1.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpldbys2v1.jl:33\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpldbys2v1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpldbys2v1.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpldbys2v1.jl:34\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpldbys2v1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpldbys2v1.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659979427
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt_letters = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"\
    =>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\"\
    , \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"\
    =>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\"\
    , \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"\
    =>\"b\")\n    new_string = string(\"\")\n    for word in s\n        push!(new_string,\
    \ encrypt_letters[word])\n    end\n    return new_string\nend\n \n\"\"\"Create\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift up by two places.\n    For example:\n\
    \    >>> decrypt(\"ix\")\n    \"et\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"kj\")\n    \"gf\"\n    >>> decrypt(\"lm\")\n    \"hi\"\n \
    \   \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpwlkutsk8.jl:24\nin expression starting at /tmp/tmpwlkutsk8.jl:24\n"
  stdout: ''
  timestamp: 1659979426
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    lower_s = lowercase(s)\n\
    \    encrypted_s = \"\"\n    for i in lower_s\n        index = search(alphabet,\
    \ i)\n        new_index = index + 2*2\n        if new_index > 26\n           \
    \ new_index = new_index - 26\n        end\n        push!(encrypted_s, alphabet[new_index])\n\
    \    end\n    return encrypted_s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpazjizdu4.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpazjizdu4.jl:20\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazjizdu4.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazjizdu4.jl:33\ntest set: Error
    During Test at /tmp/tmpazjizdu4.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpazjizdu4.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazjizdu4.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazjizdu4.jl:33\ntest set: Error
    During Test at /tmp/tmpazjizdu4.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpazjizdu4.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazjizdu4.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazjizdu4.jl:33\ntest set: Error
    During Test at /tmp/tmpazjizdu4.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpazjizdu4.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    # shifted_alphabet = [\"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\", \"a\", \"b\"]\n    to_return = \"\"\n    for letter in s\n        index\
    \ = findfirst(isequal(letter), alphabet)\n        if index != 0\n            to_return\
    \ = to_return * alphabet[index+2]\n        else\n            to_return = to_return\
    \ * letter\n        end\n    end\n    return to_return\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpqt6rm1u_.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    +(::Nothing, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,
    !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpqt6rm1u_.jl:22\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpqt6rm1u_.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpqt6rm1u_.jl:33\n'''
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ind = 0\n    output = \"\"\n    for a in s\n        i = Int(a)\n     \
    \   if i < 123\n            i += 4\n        elseif i > 123\n            i -= 22\n\
    \        end\n        output *= Char(i)\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpam_amni5.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpam_amni5.jl:38\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpam_amni5.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpam_amni5.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpam_amni5.jl:39\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpam_amni5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpam_amni5.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpam_amni5.jl:40\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpam_amni5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpam_amni5.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659979427
- exit_code: 0
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in 1:length(s)\n        letter = s[i]\n \
    \       new_letter = letter + 2*2\n        if new_letter > 'z'\n            new_letter\
    \ = new_letter - 26\n        end\n        new_string = new_string * string(new_letter)\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659979424
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters = [i for i in \"abcdefghijklmnopqrstuvwxyz\"]\n    s = s.lower()\n\
    \    encrypted = \"\"\n    for i in s\n        index = findfirst(i, letters)\n\
    \        push!(encrypted, letters[index-2])\n    end\n    return encrypted\nend\n\
    println(encrypt(\"hi\"))\nprintln(encrypt(\"asdfghjkl\"))\nprintln(encrypt(\"\
    gf\"))\nprintln(encrypt(\"et\"))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: type String has no field lower\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] encrypt(s::String)\n   @ Main /tmp/tmp6gbidz7x.jl:17\n\
    \ [3] top-level scope\n   @ /tmp/tmp6gbidz7x.jl:25\nin expression starting at\
    \ /tmp/tmp6gbidz7x.jl:25\n"
  stdout: ''
  timestamp: 1659979426
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    alphabet2 = \"cdefghijklmnopqrstuvwxyzab\"\
    \n    encrypted_text = \"\"\n    for letter in s\n        letter_index = search(alphabet,\
    \ letter)\n        encrypted_text = encrypted_text * alphabet2[letter_index]\n\
    \    end\n    return encrypted_text\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpddazd2_3.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpddazd2_3.jl:20\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddazd2_3.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddazd2_3.jl:29\ntest set: Error
    During Test at /tmp/tmpddazd2_3.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpddazd2_3.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddazd2_3.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddazd2_3.jl:29\ntest set: Error
    During Test at /tmp/tmpddazd2_3.jl:32\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpddazd2_3.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddazd2_3.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddazd2_3.jl:29\ntest set: Error
    During Test at /tmp/tmpddazd2_3.jl:33\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpddazd2_3.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * to_rot(i)\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmps01phis3.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: to_rot not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmps01phis3.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmps01phis3.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmps01phis3.jl:26\ntest set: Error
    During Test at /tmp/tmps01phis3.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: to_rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmps01phis3.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmps01phis3.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmps01phis3.jl:26\ntest set: Error
    During Test at /tmp/tmps01phis3.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: to_rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmps01phis3.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmps01phis3.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmps01phis3.jl:26\ntest set: Error
    During Test at /tmp/tmps01phis3.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: to_rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmps01phis3.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str = \"abcdefghijklmnopqrstuvwxyz\"\n    str = [j for j in s]\n    for\
    \ i in eachindex(str)\n        if str[i] != \"z\"\n            ind = findfirst(isequal(str[i]),\
    \ str)\n            str[i] = str[ind+1]\n        else\n            str[i] = \"\
    a\"\n        end\n    end\n    return str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpxy1xwhz4.jl:33\n  Test threw
    exception\n'''
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    output=String[]\n    for x=1:length(s)\n        push!(output,s[x])\n \
    \   end \n    for i=1:length(output)\n        if output[i]==\"z\"\n          \
    \  output[i]=\"b\"\n        elseif output[i]==\"y\"\n            output[i]=\"\
    a\"\n        else\n            output[i]=Char(Int(output[i])+2)\n        end\n\
    \    end\n    return join(output)\nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp4l72dctv.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    push!(a::Vector{String}, item::Char)\n     @ Base ./array.jl:994\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp4l72dctv.jl:18\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4l72dctv.jl:36 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4l72dctv.jl:35\n'''
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return String[rotate(x) for x in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm0569jqs.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpm0569jqs.jl:16\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm0569jqs.jl:23 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm0569jqs.jl:22\ntest set: Error
    During Test at /tmp/tmpm0569jqs.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpm0569jqs.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm0569jqs.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm0569jqs.jl:22\ntest set: Error
    During Test at /tmp/tmpm0569jqs.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpm0569jqs.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm0569jqs.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm0569jqs.jl:22\ntest set: Error
    During Test at /tmp/tmpm0569jqs.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpm0569jqs.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979428
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = \"\"\n    for i in s\n        if i == \"z\"\n            s_new\
    \ = s_new * \"b\"\n        elseif i == \"y\"\n            s_new = s_new * \"a\"\
    \n        else\n            s_new = s_new * string(chr(int(string(i)) + 3))\n\
    \        end\n    end\n    return s_new\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu970zhkx.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpu970zhkx.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu970zhkx.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu970zhkx.jl:32\ntest set: Error During Test at
    /tmp/tmpu970zhkx.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpu970zhkx.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu970zhkx.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu970zhkx.jl:32\ntest set: Error
    During Test at /tmp/tmpu970zhkx.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpu970zhkx.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu970zhkx.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu970zhkx.jl:32\ntest set: Error
    During Test at /tmp/tmpu970zhkx.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpu970zhkx.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979428
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #make string empty\n    #shift ascii code by two and then shift by two\
    \ again\n    #make code wrap around if it goes over 122\n    #convert code to\
    \ character\n    #add to empty string\n    new_string = \"\"\n    for i in 1:length(s)\n\
    \        if s[i] != \" \"\n            if s[i] == \"z\" || s[i] == \"Z\"\n   \
    \             new_string *= string(Char(s[i]-24))\n            elseif s[i] ==\
    \ \"y\" || s[i] == \"Y\"\n                new_string *= string(Char(s[i]-23))\n\
    \            else\n                new_string *= string(Char(s[i]+2))\n      \
    \      end\n        else\n            new_string *= \" \"\n        end\n    end\n\
    \    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpptp5oqpg.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpptp5oqpg.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpptp5oqpg.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpptp5oqpg.jl:41\ntest set: Test Failed at /tmp/tmpptp5oqpg.jl:43\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptp5oqpg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptp5oqpg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpptp5oqpg.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptp5oqpg.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptp5oqpg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpptp5oqpg.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptp5oqpg.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptp5oqpg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpptp5oqpg.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979429
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\"]\n    encrypted = \"\"\n    # loop through string\n    for\
    \ i in s\n        #get index of the letter\n        index = findfirst(alphabet,i)\n\
    \        #check if it's nil\n        if index == nothing\n            encrypted\
    \ = encrypted * i\n        else\n            #rotate\n            rotated = (index\
    \ + 2) % length(alphabet)\n            #add to encrypted string\n            encrypted\
    \ = encrypted * alphabet[rotated]\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9o4i5t6a.jl:39\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp9o4i5t6a.jl:21\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp9o4i5t6a.jl:39 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp9o4i5t6a.jl:38\n'''
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    alphabet = ['a':'z']\n    rotated_alphabet = ['c':'z',\
    \ 'a', 'b']\n    c = [x -> findfirst(x, alphabet) for x in s]\n    encrypted =\
    \ [x -> findfirst(x, rotated_alphabet) for x in c]\n    encrypted = [rotated_alphabet[x]\
    \ for x in encrypted]\n    return string(encrypted)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1eq5x6cf.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp1eq5x6cf.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1eq5x6cf.jl:29 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1eq5x6cf.jl:28\ntest set: Error
    During Test at /tmp/tmp1eq5x6cf.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp1eq5x6cf.jl:16\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1eq5x6cf.jl:30 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1eq5x6cf.jl:28\ntest set: Error
    During Test at /tmp/tmp1eq5x6cf.jl:31\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp1eq5x6cf.jl:16\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1eq5x6cf.jl:31 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1eq5x6cf.jl:28\ntest set: Error
    During Test at /tmp/tmp1eq5x6cf.jl:32\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no field lowercase'
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        encrypted_string = encrypted_string\
    \ * push!(rot_array(i),2*2)\n    end\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprb7e_uuc.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rot_array not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmprb7e_uuc.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprb7e_uuc.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprb7e_uuc.jl:26\ntest set: Error
    During Test at /tmp/tmprb7e_uuc.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rot_array not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmprb7e_uuc.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmprb7e_uuc.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmprb7e_uuc.jl:26\ntest set: Error During Test at
    /tmp/tmprb7e_uuc.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rot_array not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmprb7e_uuc.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprb7e_uuc.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprb7e_uuc.jl:26\ntest set: Error
    During Test at /tmp/tmprb7e_uuc.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rot_array not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmprb7e_uuc.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia'
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for c in s\n        encrypted_string = encrypted_string\
    \ * string(rotate(c))\n    end\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpnz5katif.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnz5katif.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnz5katif.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnz5katif.jl:26\ntest set: Error
    During Test at /tmp/tmpnz5katif.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpnz5katif.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnz5katif.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnz5katif.jl:26\ntest set: Error
    During Test at /tmp/tmpnz5katif.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpnz5katif.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnz5katif.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnz5katif.jl:26\ntest set: Error
    During Test at /tmp/tmpnz5katif.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpnz5katif.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str = \"\"\n    for i in 1:length(s)\n        push!(str, s[i] + 2*2)\n\
    \    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpoxbpwlpw.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpoxbpwlpw.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpoxbpwlpw.jl:27 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpoxbpwlpw.jl:26\ntest set: Error During Test at
    /tmp/tmpoxbpwlpw.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpoxbpwlpw.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpoxbpwlpw.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpoxbpwlpw.jl:26\n'''
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = split(s)\n    for x in s\n        x = getindex(x,1)\n        x = ord(x)\
    \ + 4\n        if x > 122\n            x = x-26\n        end\n        x = chr(x)\n\
    \    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpje_cioso.jl:32\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpje_cioso.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpje_cioso.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpje_cioso.jl:31\ntest set: Error During Test at
    /tmp/tmpje_cioso.jl:33\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpje_cioso.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpje_cioso.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpje_cioso.jl:31\ntest set: Error
    During Test at /tmp/tmpje_cioso.jl:34\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpje_cioso.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpje_cioso.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpje_cioso.jl:31\ntest set: Error
    During Test at /tmp/tmpje_cioso.jl:35\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpje_cioso.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [encode(x) for x in s]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1zx_mvxr.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: encode not
    defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmp1zx_mvxr.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1zx_mvxr.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1zx_mvxr.jl:22\ntest set: Error
    During Test at /tmp/tmp1zx_mvxr.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: encode not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmp1zx_mvxr.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1zx_mvxr.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1zx_mvxr.jl:22\ntest set: Error
    During Test at /tmp/tmp1zx_mvxr.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: encode not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmp1zx_mvxr.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/s'
  timestamp: 1659979432
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    rotated_index = map(x -> x + 2*2, [findfirst(x -> x == 'a', ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'])])\n\
    \    d = Dict(zip(rotated_index, ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']))\n\
    \    return join(map(x -> d[x], map(x -> (x-1)%26 + 1, map(x -> findfirst(y ->\
    \ y == x, ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']),\
    \ collect(s)))))\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp23owv485.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  KeyError: key 8 not found\n  Stacktrace:\n    [1]
    getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #3\n      @ /tmp/tmp23owv485.jl:18
    [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{Int64},
    itr::Base.Generator{Vector{Int64}, var"#3#9"{Dict{Int64, Char}}}, #unused#::Base.EltypeUnknown,
    isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [5] collect_similar(cont::Vector{Int64},
    itr::Base.Generator{Vector{Int64}, var"#3#9"{Dict{Int64, Char}}})\n      @ Base
    ./array.jl:653\n    [6] map(f::Function, A::Vector{Int64})\n      @ Base ./abstractarray.jl:2867\n    [7]
    encrypt(s::String)\n      @ Main /tmp/tmp23owv485.jl:18\n    [8] macro expansion\n      @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9]
    macro expansion\n      @ /tmp/tmp23owv485.jl:25 [inlined]\n   [10] macro expansion\n      @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11]
    top-level scope\n      @ /tmp/tmp23owv485.jl:24\ntest set: Error During Test at
    /tmp/tmp23owv485.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  KeyError: key 1 not found\n  Stacktrace:\n    [1] getindex\n      @
    ./dict.jl:481 [inlined]\n    [2] #3\n      @ /tmp/tmp23owv485.jl:18 [inlined]\n    [3]
    iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{Int64},
    itr::Base.Generator{Vector{Int64}, var"#3#9"{Dict{Int64, Char}}}, #unused#::Base.EltypeUnknown,
    isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [5] collect_similar(cont::Vector{Int64},
    itr::Base.Generator{Vector{Int64}, var"#3#9"{Dict{Int64, Char}}})\n      @ Base
    ./array.jl:653\n    [6] map(f::Function, A::Vector{Int64})\n      @ Base ./abstractarray.jl:2867\n    [7]
    encrypt(s::String)\n      @ Main /tmp/tmp23owv485.jl:18\n    [8] macro expansion\n      @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:'
  timestamp: 1659979432
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n \n \n \n \n\"\"\"Create a function decrypt that takes a string as an argument\
    \ and\n    returns a string that is decrypted by the same function encrypt.\n\
    \    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"kj\")\n    \"gf\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi5uxdua4.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi5uxdua4.jl:1\n\
    in expression starting at /tmp/tmpi5uxdua4.jl:1\n"
  stdout: ''
  timestamp: 1659979430
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [c for c in 'abcdefghijklmnopqrstuvwxyz']\n    n = 2\n    start\
    \ = alphabet[n:end]\n    finish = alphabet[1:n]\n    alphabet = start * finish\n\
    \    s = collect(s)\n    s = map(x -> alphabet[findfirst(islower(x), alphabet)],\
    \ s)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpd1xs6e5u.jl:16\nin expression\
    \ starting at /tmp/tmpd1xs6e5u.jl:16\n"
  stdout: ''
  timestamp: 1659979430
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_arr = [x for x in s]\n    return [x for x in s_arr]\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy1s6isbr.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy1s6isbr.jl:1\n\
    in expression starting at /tmp/tmpy1s6isbr.jl:1\n"
  stdout: ''
  timestamp: 1659979430
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]*2\n\
    \    map = Dict(zip(alphabet, new_alphabet))\n    return join([map[s[i]] for i\
    \ in 1:length(s)])\nend\nencrypt(\"a\")\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: None
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_letters = \"\"\n    for letter in s\n        i = findin(letters, letter)\n\
    \        if i >= length(letters) - 2\n            i = i - length(letters) + 2\n\
    \        else\n            i = i + 2\n        end\n        push!(new_letters,\
    \ letters[i])\n    end\n    return new_letters\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpod76krn7.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: findin not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpod76krn7.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpod76krn7.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpod76krn7.jl:32\ntest set: Error
    During Test at /tmp/tmpod76krn7.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: findin not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpod76krn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpod76krn7.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpod76krn7.jl:32\ntest set: Error
    During Test at /tmp/tmpod76krn7.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: findin not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpod76krn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpod76krn7.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpod76krn7.jl:32\ntest set: Error
    During Test at /tmp/tmpod76krn7.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: findin not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpod76krn7.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979433
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #https://docs.julialang.org/en/v1/manual/strings/#man-string-indexing-1\n\
    \    #Julia strings are 1-indexed.\n    result = \"\"\n    for letter in s\n \
    \       if letter == \"a\" || letter == \"A\"\n            result = result * \"\
    c\"\n        elseif letter == \"b\" || letter == \"B\"\n            result = result\
    \ * \"d\"\n        elseif letter == \"c\" || letter == \"C\"\n            result\
    \ = result * \"e\"\n        elseif letter == \"d\" || letter == \"D\"\n      \
    \      result = result * \"f\"\n        elseif letter == \"e\" || letter == \"\
    E\"\n            result = result * \"g\"\n        elseif letter == \"f\" || letter\
    \ == \"F\"\n            result = result * \"h\"\n        elseif letter == \"g\"\
    \ || letter == \"G\"\n            result = result * \"i\"\n        elseif letter\
    \ == \"h\" || letter == \"H\"\n            result = result * \"j\"\n        elseif\
    \ letter == \"i\" || letter == \"I\"\n            result = result * \"k\"\n  \
    \      elseif letter == \"j\" || letter == \"J\"\n            result = result\
    \ * \"l\"\n        elseif letter == \"k\" || letter == \"K\"\n            result\
    \ = result * \"m\"\n        elseif letter == \"l\" || letter == \"L\"\n      \
    \      result = result * \"n\"\n        elseif letter == \"m\" || letter == \"\
    M\"\n            result = result * \"o\"\n        elseif letter == \"n\" || letter\
    \ == \"N\"\n            result = result * \"p\"\n        elseif letter == \"o\"\
    \ || letter == \"O\"\n            result = result * \"q\"\n        elseif letter\
    \ == \"p\" || letter == \"P\"\n            result = result * \"r\"\n        elseif\
    \ letter == \"q\" || letter == \"Q\"\n            result = result * \"s\"\n  \
    \      elseif letter == \"r\" || letter == \"R\"\n            result = result\
    \ * \"t\"\n        elseif letter == \"s\" || letter == \"S\"\n            result\
    \ = result * \"u\"\n       \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt4o5zp2l.jl:1\nin expression starting at /tmp/tmpt4o5zp2l.jl:1\n"
  stdout: ''
  timestamp: 1659979431
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    o = s |> collect |> map(x -> x+2*2) |> collect |> join\n    return o\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp4ktlsfq1.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    (::var"#1#2")()\n  Closest candidates are:\n    (::var"#1#2")(!Matched::Any) at
    /tmp/tmp4ktlsfq1.jl:16\n  Stacktrace:\n   [1] map(f::var"#1#2")\n     @ Base ./abstractarray.jl:2965\n   [2]
    encrypt(s::String)\n     @ Main /tmp/tmp4ktlsfq1.jl:16\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp4ktlsfq1.jl:24 [inlined]\n   [5] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp4ktlsfq1.jl:23\ntest set: Error During Test at
    /tmp/tmp4ktlsfq1.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching (::var"#1#2")()\n  Closest candidates
    are:\n    (::var"#1#2")(!Matched::Any) at /tmp/tmp4ktlsfq1.jl:16\n  Stacktrace:\n   [1]
    map(f::var"#1#2")\n     @ Base ./abstractarray.jl:2965\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp4ktlsfq1.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4ktlsfq1.jl:25 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4ktlsfq1.jl:23\ntest set: Error
    During Test at /tmp/tmp4ktlsfq1.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching (::var"#1#2")()\n  Closest candidates
    are:\n    (::var"#1#2")(!Matched::Any) at /tmp/tmp4ktlsfq1.jl:16\n  Stacktrace:\n   [1]
    map(f::var"#1#2")\n     @ Base ./abstractarray.jl:2965\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp4ktlsfq1.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4ktlsfq1.j'
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  \n    #empty string to store encrypted letters\n    empty_string = \"\"\n\
    \    \n    #loop through s\n    for i in s\n        \n        #convert letter\
    \ to ascii\n        ascii_letter = string(i)\n        \n        #shift the ascii\
    \ value by two\n        ascii_letter = (ascii_letter::UInt8 + 2)\n        \n \
    \       #if loop\n        if (ascii_letter > 122)\n            \n            #rotate\
    \ by 2\n            ascii_letter = (ascii_letter - 123)\n            \n      \
    \      #add 96 to convert back to alphabets\n            ascii_letter = (ascii_letter\
    \ + 96)\n        \n        end\n        \n        #letter to string and append\
    \ to empty string\n        empty_string = empty_string * string(Char(ascii_letter))\n\
    \        \n    end\n    \n    #return encrypted string\n    return empty_string\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcfo0jpyv.jl:54\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  TypeError: in typeassert,
    expected UInt8, got a value of type String\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfo0jpyv.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfo0jpyv.jl:54 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfo0jpyv.jl:53\ntest set: Error
    During Test at /tmp/tmpcfo0jpyv.jl:55\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  TypeError: in typeassert, expected UInt8, got a value of type
    String\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcfo0jpyv.jl:27\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfo0jpyv.jl:55 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfo0jpyv.jl:53\ntest set: Error
    During Test at /tmp/tmpcfo0jpyv.jl:56\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  TypeError: in typeassert, expected UInt8, got a value of type String\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpcfo0jpyv.jl:27\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcfo0jpyv.jl:56 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcfo0jpyv.jl:53\ntest set: Error During Test at
    /tmp/tmpcfo0jpyv.jl:57\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  TypeError: in typeassert, expected UInt8, got a value of type String\n  Stacktrace:\n'
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    alphabet2 = [\"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    , \"a\", \"b\"]\n    encrypt_string = \"\"\n    for i in s\n        push!(encrypt_string,\
    \ alphabet2[findall(x->x==i, alphabet)[1]])\n    end\n    return encrypt_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpl21vbn1p.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  BoundsError: attempt to access
    0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861
    [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpl21vbn1p.jl:20\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpl21vbn1p.jl:29 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpl21vbn1p.jl:28\ntest set: Error
    During Test at /tmp/tmpl21vbn1p.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  BoundsError: attempt to access 0-element Vector{Int64} at index
    [1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpl21vbn1p.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpl21vbn1p.jl:30 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpl21vbn1p.jl:28\ntest set: Error
    During Test at /tmp/tmpl21vbn1p.jl:31\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]
    getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @ Main
    /tmp/tmpl21vbn1p.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpl21vbn1p.jl:31 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpl21vbn1p.jl:28\ntest set: Error
    During Test at /tmp/tmpl21vbn1p.jl:32\n  T'
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alph = \"abcdefghijklmnopqrstuvwxyz\"\n    let\n        x_arr = collect(split(s))\n\
    \        y_arr = zeros(length(x_arr))\n        for i in 1:length(x_arr)\n    \
    \        y_arr[i] = findfirst(alph, x_arr[i])\n        end\n        for i in 1:length(y_arr)\n\
    \            y_arr[i] = mod1(y_arr[i]*2+2, 26)\n        end\n        for i in\
    \ 1:length(y_arr)\n            y_arr[i] = alph[y_arr[i]]\n        end\n      \
    \  return join(y_arr)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: '''
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s=Dict(c => rotate_two(c) for c in s)\n    return str(s)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpky291jf0.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate_two
    not defined\n  Stacktrace:\n    [1] (::var"#1#2")(c::Char)\n      @ Main ./none:0\n    [2]
    iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::Base.var"#318#320",
    itr::Base.Generator{String, var"#1#2"}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4]
    all\n      @ ./reduce.jl:1152 [inlined]\n    [5] Dict(kv::Base.Generator{String,
    var"#1#2"})\n      @ Base ./dict.jl:131\n    [6] encrypt(s::String)\n      @ Main
    /tmp/tmpky291jf0.jl:16\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmpky291jf0.jl:24 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmpky291jf0.jl:23\n  \n  caused
    by: UndefVarError: rotate_two not defined\n  Stacktrace:\n    [1] (::var"#1#2")(c::Char)\n      @
    Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] grow_to!(dest::Dict{Any,
    Any}, itr::Base.Generator{String, var"#1#2"})\n      @ Base ./dict.jl:140\n    [4]
    dict_with_eltype\n      @ ./abstractdict.jl:550 [inlined]\n    [5] Dict(kv::Base.Generator{String,
    var"#1#2"})\n      @ Base ./dict.jl:129\n    [6] encrypt(s::String)\n      @ Main
    /tmp/tmpky291jf0.jl:16\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmpky291jf0.jl:24 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmpky291jf0.jl:23\ntest set:
    Error During Test at /tmp/tmpky291jf0.jl:25\n  Test threw exception\n  Expression:
    candidate("asdfghjkl") == "ewhjklnop"\n  UndefVarError: rotate_two not defined\n  Stacktrace:\n    [1]
    (::var"#1#2")(c::Char)\n      @ Main ./none:0\n '
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = Array{Char}(length(s))\n    for (i,c) in enumerate(s)\n        index\
    \ = findin(base_alphabet,c)\n        new_index = mod(index + i*2, 26)\n      \
    \  s2[i] = encrypt_alphabet[new_index]\n    end\n    return s2\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpw63q_4_u.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    (Array{Char})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpw63q_4_u.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpw63q_4_u.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpw63q_4_u.jl:28\ntest set: Error During Test at
    /tmp/tmpw63q_4_u.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching (Array{Char})(::Int64)\n  Closest
    candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,
    Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpw63q_4_u.jl:16\n   [2] macro expa'
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_alpha = String[]\n    for c in s\n        #println(c)\n        if\
    \ c in \"abcdefghijklm\"\n            push!(new_alpha, c)\n        elseif c in\
    \ \"nopqrstuvwxyz\"\n            push!(new_alpha, c)\n        else\n         \
    \   push!(new_alpha, c)\n        end\n    end\n    return join(new_alpha)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6s88m7lo.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    push!(a::Vector{String}, item::Char)\n     @ Base ./array.jl:994\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp6s88m7lo.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6s88m7lo.jl:34 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6s88m7lo.jl:33\n'''
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = (\"a\"::String)::Array{String,1}\n    count = 1\n    for i\
    \ in 'b':'z'\n        push!(alphabet, i)\n        count += 1\n    end\n    for\
    \ i in 'a':'z'\n        push!(alphabet, i)\n        count += 1\n    end\n    dict\
    \ = Dict(alphabet[i] => alphabet[i+2] for i in 1:count)\n    return map(dict,\
    \ s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmkmax7zu.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  TypeError: in typeassert,
    expected Vector{String}, got a value of type String\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmkmax7zu.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmkmax7zu.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmkmax7zu.jl:33\ntest set: Error
    During Test at /tmp/tmpmkmax7zu.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  TypeError: in typeassert, expected Vector{String}, got a value
    of type String\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmkmax7zu.jl:16\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmkmax7zu.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmkmax7zu.jl:33\ntest set: Error
    During Test at /tmp/tmpmkmax7zu.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  TypeError: in typeassert, expected Vector{String}, got a value of type
    String\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmkmax7zu.jl:16\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmkmax7zu.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmkmax7zu.jl:33\ntest set: Error
    During Test at /tmp/tmpmkmax7zu.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  TypeError: in typeassert, expected Vector{String}, got a v'
  timestamp: 1659979433
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_mapped = map(s) do x\n        if x == \"z\" || x == \"y\"\n        \
    \    \"a\"\n        elseif x == \"Z\" || x == \"Y\"\n            \"A\"\n     \
    \   else\n            x\n        end\n    end\n    shifted = map(s_mapped) do\
    \ x\n        if x == \"a\" || x == \"A\"\n            x\n        else\n      \
    \      Int(x) + 2\n        end\n    end\n    join(shifted)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn3mhcc6c.jl:39\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  ArgumentError: map(f, s::AbstractString)
    requires f to return AbstractChar; try map(f, collect(s)) or a comprehension instead\n  Stacktrace:\n   [1]
    map(f::var"#2#4", s::String)\n     @ Base ./strings/basic.jl:611\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpn3mhcc6c.jl:25\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn3mhcc6c.jl:39 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn3mhcc6c.jl:38\ntest set: Error
    During Test at /tmp/tmpn3mhcc6c.jl:40\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  ArgumentError: map(f, s::AbstractString) requires f to return
    AbstractChar; try map(f, collect(s)) or a comprehension instead\n  Stacktrace:\n   [1]
    map(f::var"#2#4", s::String)\n     @ Base ./strings/basic.jl:611\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpn3mhcc6c.jl:25\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn3mhcc6c.jl:40 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn3mhcc6c.jl:38\ntest set: Error
    During Test at /tmp/tmpn3mhcc6c.jl:41\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  ArgumentError: map(f, s::AbstractString) requires f to return AbstractChar;
    try map(f, collect(s)) or a comprehension instead\n  Stacktrace:\n   [1] map(f::var"#2#4",
    s::String)\n     @ Base ./strings/basic.jl:611\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpn3mhcc6c.jl:25\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn3mhcc6'
  timestamp: 1659979434
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in 1:length(s)\n        if s[i] ==\
    \ \"z\" || s[i] == \"Z\"\n            encrypted_string = encrypted_string * \"\
    b\"\n        elseif s[i] == \"y\" || s[i] == \"Y\"\n            encrypted_string\
    \ = encrypted_string * \"a\"\n        elseif (s[i] >= \"a\" && s[i] <= \"y\")\
    \ || (s[i] >= \"A\" && s[i] <= \"Y\")\n            encrypted_string = encrypted_string\
    \ * chr(Int(s[i]) + 2)\n        else\n            encrypted_string = encrypted_string\
    \ * s[i]\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwl6wwlfa.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    isless(::String, ::Char)\n  Closest candidates are:\n    isless(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:344\n    isless(::Any,
    !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:88\n    isless(!Matched::Missing,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:87\n    ...\n  Stacktrace:\n   [1]
    <(x::String, y::Char)\n     @ Base ./operators.jl:352\n   [2] <=(x::String, y::Char)\n     @
    Base ./operators.jl:401\n   [3] >=(x::Char, y::String)\n     @ Base ./operators.jl:425\n   [4]
    encrypt(s::String)\n     @ Main /tmp/tmpwl6wwlfa.jl:22\n   [5] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6]
    macro expansion\n     @ /tmp/tmpwl6wwlfa.jl:35 [inlined]\n   [7] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8]
    top-level scope\n     @ /tmp/tmpwl6wwlfa.jl:34\ntest set: Error During Test at
    /tmp/tmpwl6wwlfa.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching isless(::String, ::Char)\n  Closest
    candidates are:\n    isless(::AbstractString, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:344\n    isless(::Any,
    !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:88\n    isless(!Matched::Missing,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:87\n    ...\n  Stacktrace:\n   [1]
    <(x::String, y::Char)\n     @ Base ./operators.jl:352\n   [2] <=(x::String, y::Char)\n     @
    Base ./operators.jl:401\n   [3] >=(x::Char, y::String)\n     @ Base ./operators.jl:425\n   [4]
    encrypt(s::String)\n     @ Main /tmp/tmpwl6wwlfa.jl:22\n   [5] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n '
  timestamp: 1659979435
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for char in s\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            push!(encrypted, (char + 2*2)::Char)\n        else\n           \
    \ push!(encrypted, char)\n        end\n    end\n    return encrypted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp27ipljoo.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp27ipljoo.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp27ipljoo.jl:31 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp27ipljoo.jl:30\ntest set: Error During Test at
    /tmp/tmp27ipljoo.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp27ipljoo.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp27ipljoo.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp27ipljoo.jl:30\n'''
  timestamp: 1659979435
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for character in s\n        if character\
    \ == \"z\"\n            encrypted_string *= \"b\"\n        elseif character ==\
    \ \"y\"\n            encrypted_string *= \"a\"\n        else\n            character_idx\
    \ = ord(character) + 2 * 2\n            encrypted_string *= string(character_idx)\n\
    \        end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpchwb9wjl.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpchwb9wjl.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpchwb9wjl.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpchwb9wjl.jl:33\ntest set: Error During Test at
    /tmp/tmpchwb9wjl.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpchwb9wjl.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpchwb9wjl.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpchwb9wjl.jl:33\ntest set: Error
    During Test at /tmp/tmpchwb9wjl.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpchwb9wjl.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpchwb9wjl.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpchwb9wjl.jl:33\ntest set: Error
    During Test at /tmp/tmpchwb9wjl.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpchwb9wjl.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979435
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7,\
    \ 'h'=>8, 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16,\
    \ 'q'=>17, 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25,\
    \ 'z'=>26)\n    i=1\n    @inbounds while i <= length(s)\n        key_val = letters[s[i]]\
    \ \n        if key_val>=2\n            if key_val>24\n                key_val\
    \ = key_val-24\n            else\n                key_val = key_val-2\n      \
    \      end\n        end\n        for (key, value) in letters\n            if value\
    \ == key_val\n                s[i] = key\n            end\n        end\n     \
    \   i += 1\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpy0pvhjcq.jl:41\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpy0pvhjcq.jl:29\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy0pvhjcq.jl:41 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy0pvhjcq.jl:40\ntest set: Error
    During Test at /tmp/tmpy0pvhjcq.jl:42\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching setindex!(::String, ::Char,
    ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpy0pvhjcq.jl:29\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy0pvhjcq.jl:42 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy0pvhjcq.jl:40\n'''
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        ind = findfirst(alphabet, i)\n        if ind <= 25 - 4\n   \
    \         encrypted = encrypted * i\n        else\n            encrypted = encrypted\
    \ * alphabet[ind - 25 + 2]\n        end\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpd9udlfkm.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpd9udlfkm.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpd9udlfkm.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpd9udlfkm.jl:32\ntest set: Error During Test at
    /tmp/tmpd9udlfkm.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpd9udlfkm.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpd9udlfkm.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpd9udlfkm.jl:32\ntest set: Error During Test at
    /tmp/tmpd9udlfkm.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::String, ::'
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    function rotate(c::Char)\n        c = lowercase(c)\n        x = Int(c)\
    \ - 97\n        y = ((x + 2) * 2) % 26\n        return Char(y + 97)\n    end\n\
    \    s2 = \"\"\n    for i = 1:length(s)\n        c = s[i]\n        c = rotate(c)\n\
    \        s2 = s2 * c\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmw99ub13.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpmw99ub13.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"su\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmw99ub13.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmw99ub13.jl:34\ntest set: Test Failed at /tmp/tmpmw99ub13.jl:36\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"eokoqswya\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw99ub13.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw99ub13.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmw99ub13.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"qo\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw99ub13.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw99ub13.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmw99ub13.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"mq\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw99ub13.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw99ub13.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmw99ub13.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"oemwoewmoemwq\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979435
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\
    \ \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\"\
    \ \"x\" \"y\" \"z\"] \n    for i in s\n    for j in alphabet\n        j += 2\n\
    \        j *= 2\n        print(j)\n    end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpczgjbujh.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,
    !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpczgjbujh.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpczgjbujh.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpczgjbujh.jl:29\ntest set: Error During Test at
    /tmp/tmpczgjbujh.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching +(::String, ::Int64)\n  Closest
    candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:87\n    +(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:145\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpczgjbujh.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpczgjbujh.jl:31 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test'
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = []\n    for c in s\n        k = search(chars, c)\n        c\
    \ = chars[k+4]\n        push!(encrypt, c)\n    end\n    return join(encrypt)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp105uoadx.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp105uoadx.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp105uoadx.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp105uoadx.jl:28\ntest set: Error
    During Test at /tmp/tmp105uoadx.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp105uoadx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp105uoadx.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp105uoadx.jl:28\ntest set: Error
    During Test at /tmp/tmp105uoadx.jl:31\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp105uoadx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp105uoadx.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp105uoadx.jl:28\ntest set: Error
    During Test at /tmp/tmp105uoadx.jl:32\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp105uoadx.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = []\n    for x in s \n        if x == \"h\"\n            push!(new_string,\
    \ \"j\")\n        elseif x == \"j\"\n            push!(new_string, \"l\")\n  \
    \      elseif x == \"k\"\n            push!(new_string, \"n\")\n        elseif\
    \ x == \"l\"\n            push!(new_string, \"p\")\n        elseif x == \"z\"\n\
    \            push!(new_string, \"b\")\n        elseif x == \"y\"\n           \
    \ push!(new_string, \"a\")\n        else \n            push!(new_string, nextchar(x))\n\
    \        end\n    end\n    return join(new_string)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7ndrmb6q.jl:41\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: nextchar not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7ndrmb6q.jl:31\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndrmb6q.jl:41 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndrmb6q.jl:40\ntest set: Error
    During Test at /tmp/tmp7ndrmb6q.jl:42\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: nextchar not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp7ndrmb6q.jl:31\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndrmb6q.jl:42 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndrmb6q.jl:40\ntest set: Error
    During Test at /tmp/tmp7ndrmb6q.jl:43\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: nextchar not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp7ndrmb6q.jl:31\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndrmb6q.jl:43 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndrmb6q.jl:40\ntest set: Error
    During Test at /tmp/tmp7ndrmb6q.jl:44\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: nextchar not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp7ndrmb6q.jl:31\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std'
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    array=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\"]\n    result=\"\"\n    for i in s\n        push!(result,array[findfirst(array,i)+2])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpfoew5t7y.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpfoew5t7y.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpfoew5t7y.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpfoew5t7y.jl:27\ntest set: Error During Test at
    /tmp/tmpfoew5t7y.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{String},
    ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any) at
    ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpfoew5t7y.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpfoew5t7y.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpfoew5t7y.jl:27\n'''
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [c for c = 'a':'z']\n    encrypted = ''\n    for char in s\n\
    \        c_index = searchsortedfirst(alphabet, char) - 1\n        encrypted =\
    \ encrypted * alphabet[mod1(c_index + 4, 26)]\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8fgka_u0.jl:17\nin expression starting at\
    \ /tmp/tmp8fgka_u0.jl:17\n"
  stdout: ''
  timestamp: 1659979435
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return replace(s, [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"\
    h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], [\"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"a\", \"\
    b\"])\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwa65wj5z.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    replace(::String, ::Vector{String}, ::Vector{String})\n  Closest candidates are:\n    replace(!Matched::Union{Function,
    Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwa65wj5z.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwa65wj5z.jl:23 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwa65wj5z.jl:22\ntest set: Error During Test at
    /tmp/tmpwa65wj5z.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching replace(::String, ::Vector{String},
    ::Vector{String})\n  Closest candidates are:\n    replace(!Matched::Union{Function,
    Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwa65wj5z.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwa65wj5z.jl:24 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwa65wj5z.jl:22\n'
  timestamp: 1659979437
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    encrypt_alpha = ['c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b']\n\
    \    encrypted_words = \"\"\n    \n    for i in s\n        for j in 1:25\n   \
    \         if i == alphabet[j]\n                encrypted_words = string(encrypted_words,\
    \ encrypt_alpha[j])\n            end\n        end\n    end\n    \n    return encrypted_words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp13w_c8ts.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp13w_c8ts.jl:36\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp13w_c8ts.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp13w_c8ts.jl:35\ntest set: Test Failed at /tmp/tmp13w_c8ts.jl:37\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp13w_c8ts.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp13w_c8ts.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp13w_c8ts.jl:38\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp13w_c8ts.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp13w_c8ts.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp13w_c8ts.jl:39\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp13w_c8ts.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp13w_c8ts.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp13w_c8ts.jl:40\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979437
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in eachindex(s)\n        index = search(s[i])\n\
    \        # if s[i] is a lower case character, \n        # add it to the end of\
    \ encrypted_string\n        if index != 0 \n            encrypted_string = string(encrypted_string,char(index+97))\n\
    \        # if s[i] is an upper case character, \n        # add it to the end of\
    \ encrypted_string\n        elseif index != 26\n            encrypted_string =\
    \ string(encrypted_string,char(index+65))\n        # if s[i] is a space character,\
    \ \n        # add it to the end of encrypted_string\n        elseif index == 26\n\
    \            encrypted_string = string(encrypted_string,\" \")\n        # if s[i]\
    \ is a character that is not a letter, \n        # add it to the end of encrypted_string\n\
    \        else \n            encrypted_string = string(encrypted_string,s[i])\n\
    \        end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmparilwvfh.jl:44\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmparilwvfh.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmparilwvfh.jl:44 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmparilwvfh.jl:43\ntest set: Error
    During Test at /tmp/tmparilwvfh.jl:45\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmparilwvfh.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmparilwvfh.jl:45 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmparilwvfh.jl:43\ntest set: Error
    During Test at /tmp/tmparilwvfh.jl:46\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmparilwvfh.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmparilwvfh.jl:46 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmparilwvfh.jl:43\ntest set: Error
    During Test at /tmp/tmparilwvfh.jl:47\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmparilwvfh.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979438
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = \"\"\n    for x in s\n        if 'a' <= x <= 'z'\n            x =\
    \ Char(Int(x) + 2)\n            if x > 'z'\n                x = Char(Int(x) -\
    \ 26)\n            end\n        elseif 'A' <= x <= 'Z'\n            x = Char(Int(x)\
    \ + 2)\n            if x > 'Z'\n                x = Char(Int(x) - 26)\n      \
    \      end\n        end\n        s2 = s2 * x\n    end\n    return s2\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9yv3jpnh.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmp9yv3jpnh.jl:38\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9yv3jpnh.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9yv3jpnh.jl:37\ntest set: Test Failed at /tmp/tmp9yv3jpnh.jl:39\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3jpnh.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3jpnh.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9yv3jpnh.jl:40\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3jpnh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3jpnh.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9yv3jpnh.jl:41\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3jpnh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3jpnh.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9yv3jpnh.jl:42\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979438
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_letters = []\n    for letter in s\n        if letter in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            letter_index = alphabet.find(letter)\n            new_letter_index\
    \ = (letter_index + (2*2)) % 26\n            new_letter = alphabet[new_letter_index]\n\
    \            push!(encrypted_letters, new_letter)\n        elseif letter in \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            letter_index = alphabet.find(letter)\n\
    \            new_letter_index = (letter_index + (2*2)) % 26\n            new_letter\
    \ = alphabet[new_letter_index]\n            push!(encrypted_letters, new_letter)\n\
    \        else\n            push!(encrypted_letters, letter)\n        end\n   \
    \ end\n    return join(encrypted_letters)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp17mpej06.jl:39\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: alphabet not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp17mpej06.jl:19\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17mpej06.jl:39 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17mpej06.jl:38\ntest set: Error
    During Test at /tmp/tmp17mpej06.jl:40\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp17mpej06.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17mpej06.jl:40 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17mpej06.jl:38\ntest set: Error
    During Test at /tmp/tmp17mpej06.jl:41\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp17mpej06.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17mpej06.jl:41 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17mpej06.jl:38\ntest set: Error
    During Test at /tmp/tmp17mpej06.jl:42\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp17mpej06.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std'
  timestamp: 1659979438
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"\
    =>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\"\
    , \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"\
    =>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\"\
    , \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    #\
    \ the empty string\n    b = \"\"\n    # for letter in s, append the encrypted\
    \ version of the letter to b\n    for letter in s\n        append!(b, a[letter])\n\
    \    end\n    # return the encrypted string\n    return b\nend\n \n\"\"\"Create\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift up by two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"kj\")\n    \"gf\"\n    >>> decrypt(\"ix\")\n    \"et\"\n \
    \   \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpkoyu4nwv.jl:27\nin expression starting at /tmp/tmpkoyu4nwv.jl:27\n"
  stdout: ''
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for i = 1:length(s)\n \
    \       c = s[i]\n        if c == 'a' || c == 'b'\n            s[i] = 'c'\n  \
    \      elseif c == 'y' || c == 'z'\n            s[i] = 'a'\n        else\n   \
    \         found = false\n            for j = 2:26\n                if alphabet[j]\
    \ == c\n                    s[i] = alphabet[j+2]\n                    found =\
    \ true\n                    break\n                end\n            end\n    \
    \        if !found\n                s[i] = ' '\n            end\n        end\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7opoo6gx.jl:44\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp7opoo6gx.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7opoo6gx.jl:44 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7opoo6gx.jl:43\ntest set: Error
    During Test at /tmp/tmp7opoo6gx.jl:45\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching setindex!(::String, ::Char,
    ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7opoo6gx.jl:20\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7opoo6gx.jl:45 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7opoo6gx.jl:43\ntest set: Error
    During Test at /tmp/tmp7opoo6gx.jl:46\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp7opoo6gx.jl:27\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp7opoo6gx.jl:46 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp7opoo6gx.jl:43\ntest set: Error During Test at
    /tmp/tmp7opoo6gx.jl:47\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  MethodError: no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n'
  timestamp: 1659979438
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #credits to https://stackoverflow.com/questions/39679021/rotate-a-string-in-julia-without-loops\n\
    \    s = [Int(c) - 96 for c in s]\n    s = mod(s - 3, 26) + 96\n    s = map(chr,\
    \ s)\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9n0fgeua.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    -(::Vector{Int64}, ::Int64)\n  For element-wise subtraction, use broadcasting
    with dot syntax: array .- scalar\n  Closest candidates are:\n    -(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:86\n    -(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:147\n    -(!Matched::Base.TwicePrecision,
    ::Number) at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:293\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp9n0fgeua.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp9n0fgeua.jl:27 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp9n0fgeua.jl:26\n'''
  timestamp: 1659979438
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string=\"\"\n    for i in s\n        if ord(i)>=97 && ord(i)<=109\
    \ || ord(i)>=65 && ord(i)<=77 \n            encrypted_string=encrypted_string*(string(char(ord(i)+2)))\n\
    \        elseif ord(i)>=110 && ord(i)<=122 || ord(i)>=78 && ord(i)<=90 \n    \
    \        encrypted_string=encrypted_string*(string(char(ord(i)-24)))\n       \
    \ else\n            encrypted_string=encrypted_string*(string(char(ord(i))))\n\
    \        end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpdi_vhq1k.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdi_vhq1k.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdi_vhq1k.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpdi_vhq1k.jl:32\ntest set: Error During Test at
    /tmp/tmpdi_vhq1k.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdi_vhq1k.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdi_vhq1k.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdi_vhq1k.jl:32\ntest set: Error
    During Test at /tmp/tmpdi_vhq1k.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdi_vhq1k.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdi_vhq1k.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdi_vhq1k.jl:32\ntest set: Error
    During Test at /tmp/tmpdi_vhq1k.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpdi_vhq1k.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979438
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    string = \"\"\n    for letter in s\n        if letter=='a' || letter=='b'\n\
    \            string = string * \"c\"\n        elseif letter=='x' || letter=='y'\n\
    \            string = string * \"z\"\n        elseif letter in 'cdefghijklmnopqrstuvw'\n\
    \            string = string * string(letter + 2)\n        else\n            string\
    \ = string * \" \"\n        end\n    end\n    return string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpr4a5s848.jl:22\nin expression\
    \ starting at /tmp/tmpr4a5s848.jl:22\n"
  stdout: ''
  timestamp: 1659979436
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  end\nend\ns = \"gf\"\nn = length(s)\nlet a = [1:n]\n    for i in 1:n\n \
    \       a[i] = s[i] + 2\n    end\nend\na\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwfbe6pjf.jl:17\nin expression starting at /tmp/tmpwfbe6pjf.jl:17\n"
  stdout: ''
  timestamp: 1659979436
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    strs = String[]\n    for i in 1:length(s)\n        push!(strs,shift(s[i],2*2))\n\
    \    end\n    return join(strs)\nend\n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmfkrssiv.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmfkrssiv.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmfkrssiv.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmfkrssiv.jl:27\ntest set: Error During Test at
    /tmp/tmpmfkrssiv.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmfkrssiv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmfkrssiv.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmfkrssiv.jl:27\ntest set: Error
    During Test at /tmp/tmpmfkrssiv.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmfkrssiv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmfkrssiv.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmfkrssiv.jl:27\ntest set: Error
    During Test at /tmp/tmpmfkrssiv.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmfkrssiv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes'
  timestamp: 1659979439
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out_string = \"\"\n    for c in s\n        new_char = c\n        if c\
    \ == 'g'\n            new_char = 'k'\n        elseif c == 'h'\n            new_char\
    \ = 'l'\n        elseif c == 'i'\n            new_char = 'm'\n        elseif c\
    \ == 'j'\n            new_char = 'n'\n        elseif c == 'k'\n            new_char\
    \ = 'o'\n        elseif c == 'l'\n            new_char = 'p'\n        elseif c\
    \ == 'm'\n            new_char = 'q'\n        elseif c == 'n'\n            new_char\
    \ = 'r'\n        elseif c == 'o'\n            new_char = 's'\n        elseif c\
    \ == 'p'\n            new_char = 't'\n        elseif c == 'q'\n            new_char\
    \ = 'u'\n        elseif c == 'r'\n            new_char = 'v'\n        elseif c\
    \ == 's'\n            new_char = 'w'\n        elseif c == 't'\n            new_char\
    \ = 'x'\n        elseif c == 'u'\n            new_char = 'y'\n        elseif c\
    \ == 'v'\n            new_char = 'z'\n        elseif c == 'w'\n            new_char\
    \ = 'a'\n        elseif c == 'x'\n            new_char = 'b'\n        elseif c\
    \ == 'y'\n            new_char = 'c'\n        elseif c == 'z'\n            new_char\
    \ = 'd'\n        elseif c == 'a'\n            new_char = 'e'\n        elseif c\
    \ == 'b'\n            new_char = 'f'\n        elseif c == 'c'\n            new_char\
    \ = 'g'\n        elseif c == 'd'\n            new_char = 'h'\n        elseif c\
    \ == 'e'\n            new_char = 'i'\n        end\n        push!(out_string, new_char)\n\
    \    end\n    return out_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz5o0pkd1.jl:79\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpz5o0pkd1.jl:70\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpz5o0pkd1.jl:79 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpz5o0pkd1.jl:78\ntest set: Error During Test at
    /tmp/tmpz5o0pkd1.jl:80\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpz5o0pkd1.jl:70\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpz5o0pkd1.jl:80 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpz5o0pkd1.jl:78\ntest set: Error During Test at
    /tmp/tmpz5o0pkd1.jl:81\'
  timestamp: 1659979440
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"\
    g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"\
    t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    encrypted_string = \"\"\n    for\
    \ i in 1:length(s)\n        new_index = findfirst(alphabet, s[i]) + 2\n      \
    \  if new_index > 26\n            new_index = new_index % 26\n        end\n  \
    \      append!(encrypted_string, alphabet[new_index])\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpurb32esy.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpurb32esy.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpurb32esy.jl:33 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpurb32esy.jl:32\ntest set: Error
    During Test at /tmp/tmpurb32esy.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpurb32esy.jl:16\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpurb32esy.jl:34 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpurb32esy.jl:32\ntest set: Error
    During Test at /tmp/tmpurb32esy.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpurb32esy.jl:16\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpurb32esy.jl:35 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpurb32esy.jl:32\ntest set: Error
    During Test at /tmp/tmpurb32esy.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no field lowercase'
  timestamp: 1659979440
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    s_encrypted = \"\"\n    shift = 2\n    num_chars = length(s)\n \
    \   for i in 1:num_chars\n        \n        char = s[i]\n        s_encrypted =\
    \ s_encrypted * char_shift(char, shift)\n        \n    end\n    \n    return s_encrypted\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpv5wj7kka.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: char_shift
    not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpv5wj7kka.jl:23\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5wj7kka.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5wj7kka.jl:34\ntest set: Error
    During Test at /tmp/tmpv5wj7kka.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: char_shift not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpv5wj7kka.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpv5wj7kka.jl:36 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpv5wj7kka.jl:34\ntest set: Error During Test at
    /tmp/tmpv5wj7kka.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: char_shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpv5wj7kka.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5wj7kka.jl:37 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5wj7kka.jl:34\ntest set: Error
    During Test at /tmp/tmpv5wj7kka.jl:38\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: char_shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpv5wj7kka.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/j'
  timestamp: 1659979440
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\
    \ \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\"\
    \ \"x\" \"y\" \"z\"]\n    new = \"\"\n    for c in s\n        i = findfirst(alphabet,\
    \ c)\n        if i == 24\n            i += 1\n        elseif i == 25\n       \
    \     i = 0\n        else\n            i += 2\n        end\n        new = new\
    \ * alphabet[i]\n    end\n    return new\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpqp3hly6o.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Matrix{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpqp3hly6o.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpqp3hly6o.jl:36 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpqp3hly6o.jl:35\n'''
  timestamp: 1659979440
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = collect(s)\n    c = map(x -> (shift(x,2)), c)\n    return join(c)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5suea8k1.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Char)\n      @ Main /tmp/tmp5suea8k1.jl:17\n    [2] iterate\n      @
    ./generator.jl:47 [inlined]\n    [3] _collect(c::Vector{Char}, itr::Base.Generator{Vector{Char},
    var"#1#2"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base
    ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5]
    map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] encrypt(s::String)\n      @
    Main /tmp/tmp5suea8k1.jl:17\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmp5suea8k1.jl:25 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmp5suea8k1.jl:24\ntest set:
    Error During Test at /tmp/tmp5suea8k1.jl:26\n  Test threw exception\n  Expression:
    candidate("asdfghjkl") == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Char)\n      @ Main /tmp/tmp5suea8k1.jl:17\n    [2] iterate\n      @
    ./generator.jl:47 [inlined]\n    [3] _collect(c::Vector{Char}, itr::Base.Generator{Vector{Char},
    var"#1#2"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base
    ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5]
    map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] encrypt(s::String)\n      @
    Main /tmp/tmp5suea8k1.jl:17\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmp5suea8k1.jl:26 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmp5suea8k1.jl:24\ntest set:
    Error During Test at /tmp/tmp5suea8k1.jl:27\n  Test th'
  timestamp: 1659979440
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # to do this we need a dictionary of letters and their position in the\
    \ alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    # create a map\
    \ between letters and their position in the alphabet\n    let idx_to_letter =\
    \ Dict(i=>alphabet[i] for i in 1:length(alphabet))\n    # create a map between\
    \ the letter and its position in the alphabet\n    let letter_to_idx = Dict(idx_to_letter[i]=>i\
    \ for i in 1:length(alphabet))\n    # define a function to shift two places to\
    \ the right\n    function shift(idx::Int64)\n        # special case if we are\
    \ at the end of the alphabet\n        if idx == length(alphabet)\n           \
    \ return 2\n        # special case if we are at the second to last letter\n  \
    \      elseif idx == length(alphabet)-1\n            return 1\n        # otherwise\
    \ take the position in the alphabet and add 2 to it\n        else\n          \
    \  return idx+2\n        end\n    end\n    # now split the string into characters\
    \ and iterate over them\n    for c in collect(s)\n        # do the shift\n   \
    \     idx = shift(letter_to_idx[c])\n        # append the new character to the\
    \ string\n        append!(s,idx_to_letter[idx])\n    end\n    # return the string\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"let\" at /tmp/tmpgda4w513.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgda4w513.jl:1\n\
    in expression starting at /tmp/tmpgda4w513.jl:1\n"
  stdout: ''
  timestamp: 1659979439
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    shift = 2\n    a = [char for char in s]\n    b = [ord(char) for char in\
    \ a]\n    c = [x + (shift*2) for x in b]\n    d = [chr(x) for x in c]\n    return\
    \ join(d, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmplgcxz3f0.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    (::var"#1#4")(char::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{Vector{Char}, var"#1#4"})\n     @
    Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmplgcxz3f0.jl:18\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmplgcxz3f0.jl:28 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmplgcxz3f0.jl:27\ntest set: Error
    During Test at /tmp/tmplgcxz3f0.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] (::var"#1#4")(char::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Char},
    var"#1#4"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmplgcxz3f0.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmplgcxz3f0.jl:29 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmplgcxz3f0.jl:27\ntest set: Error
    During Test at /tmp/tmplgcxz3f0.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] (::var"#1#4")(char::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Char},
    var"#1#4"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmplgcxz3f0.jl:18\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/'
  timestamp: 1659979441
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s |> s->replace(s, \"a\", \"c\")\n    s = s |> s->replace(s, \"b\"\
    , \"d\")\n    s = s |> s->replace(s, \"c\", \"e\")\n    s = s |> s->replace(s,\
    \ \"d\", \"f\")\n    s = s |> s->replace(s, \"e\", \"g\")\n    s = s |> s->replace(s,\
    \ \"f\", \"h\")\n    s = s |> s->replace(s, \"g\", \"i\")\n    s = s |> s->replace(s,\
    \ \"h\", \"j\")\n    s = s |> s->replace(s, \"i\", \"k\")\n    s = s |> s->replace(s,\
    \ \"j\", \"l\")\n    s = s |> s->replace(s, \"k\", \"m\")\n    s = s |> s->replace(s,\
    \ \"l\", \"n\")\n    s = s |> s->replace(s, \"m\", \"o\")\n    s = s |> s->replace(s,\
    \ \"n\", \"p\")\n    s = s |> s->replace(s, \"o\", \"q\")\n    s = s |> s->replace(s,\
    \ \"p\", \"r\")\n    s = s |> s->replace(s, \"q\", \"s\")\n    s = s |> s->replace(s,\
    \ \"r\", \"t\")\n    s = s |> s->replace(s, \"s\", \"u\")\n    s = s |> s->replace(s,\
    \ \"t\", \"v\")\n    s = s |> s->replace(s, \"u\", \"w\")\n    s = s |> s->replace(s,\
    \ \"v\", \"x\")\n    s = s |> s->replace(s, \"w\", \"y\")\n    s = s |> s->replace(s,\
    \ \"x\", \"z\")\n    s = s |> s->replace(s, \"y\", \"a\")\n    s = s |> s->replace(s,\
    \ \"z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpp7gnxuhh.jl:49\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,
    Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    (::var"#1#27")(s::String)\n     @ Main /tmp/tmpp7gnxuhh.jl:16\n   [2] |>(x::String,
    f::var"#1#27")\n     @ Base ./operators.jl:966\n   [3] encrypt(s::String)\n     @
    Main /tmp/tmpp7gnxuhh.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [5] macro expansion\n     @ /tmp/tmpp7gnxuhh.jl:49 [inlined]\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [7] top-level scope\n     @ /tmp/tmpp7gnxuhh.jl:48\ntest set: Error
    During Test at /tmp/tmpp7gnxuhh.jl:50\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching replace(::String, ::String,
    ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type},
    ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    (::var"#1#27")(s::String)\n     @ Main /tmp/tmpp7gnxuhh.jl:16\n   [2] |>(x::String,
    f::var"#1#27")\n     @ Base ./operators.jl:966\n   [3] encrypt(s::String)\n     @
    Main /tmp/tmpp7gnxuhh.jl:16\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:'
  timestamp: 1659979441
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i in \"ghijklmnopqrstuvwxyz\"\
    \n            push!(encrypted_string, \"ghijklmnopqrstuvwxyz\"[indexin(\"ghijklmnopqrstuvwxyz\"\
    , i) - 2 + 2 + 2])\n        elseif i in \"abcdef\"\n            push!(encrypted_string,\
    \ \"abcdef\"[indexin(\"abcdef\", i) - 2 + 2 + 2])\n        elseif i in \"GHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(encrypted_string, \"GHIJKLMNOPQRSTUVWXYZ\"[indexin(\"GHIJKLMNOPQRSTUVWXYZ\"\
    , i) - 2 + 2 + 2])\n        elseif i in \"ABCDEF\"\n            push!(encrypted_string,\
    \ \"ABCDEF\"[indexin(\"ABCDEF\", i) - 2 + 2 + 2])\n        else\n            push!(encrypted_string,\
    \ i)\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpdwhjyui6.jl:37\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    indexin(::String, ::Char)\n  Closest candidates are:\n    indexin(::Any, !Matched::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:2352\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdwhjyui6.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdwhjyui6.jl:37 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpdwhjyui6.jl:36\ntest set: Error During Test at
    /tmp/tmpdwhjyui6.jl:38\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching indexin(::String, ::Char)\n  Closest
    candidates are:\n    indexin(::Any, !Matched::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2352\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdwhjyui6.jl:21\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdwhjyui6.jl:38 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpdwhjyui6.jl:36\ntest set: Error During Test at
    /tmp/tmpdwhjyui6.jl:39\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching indexin(::String, ::Char)\n  Closest
    candidates are:\n    indexin(::Any, !Matched::AbstractArray) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2352\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdwhjyui6.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdwhjyui6.jl:39 [inlined]\n   [4] macro expa'
  timestamp: 1659979441
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = \"\"\n    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z']\n    for i in s\n        if i == 'a' || i == 'b'\n            out = out\
    \ * \"c\"\n        elseif i == 'y' || i == 'z'\n            out = out * \"a\"\n\
    \        else\n            p = findfirst(alphabet, i)\n            out = out *\
    \ alphabet[p+2]\n        end\n    end\n    return out\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpp6kdzewq.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpp6kdzewq.jl:24\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpp6kdzewq.jl:35 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpp6kdzewq.jl:34\ntest set: Error During Test at
    /tmp/tmpp6kdzewq.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpp6kdzewq.jl:24\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpp6kdzewq.jl:36 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpp6kdzewq.jl:34\n'''
  timestamp: 1659979441
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #@assert s \u2208 String\n    #@assert length(s) \u2265 1\n    #@assert\
    \ isequal(s[i] \u2208 s for i = 1:length(s))\n    return map(s){((x) -> (x ==\
    \ 'z') ? 'b' : (x == 'y') ? 'a' : (x == ' ') ? ' ' : nextnext(x)))}\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or } in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2g6zcgfm.jl:19\nin expression starting at\
    \ /tmp/tmp2g6zcgfm.jl:19\n"
  stdout: ''
  timestamp: 1659979439
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = length(s)\n    result = Array(Char, n)\n    for i in 1:n\n       \
    \ result[i] = shift(s[i], 2)\n    end\n    return string(result)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp3_a1h4ud.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    Array(::Type{Char}, ::Int64)\n  Closest candidates are:\n    Array(!Matched::LinearAlgebra.UniformScaling,
    ::Integer, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:496\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp3_a1h4ud.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp3_a1h4ud.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp3_a1h4ud.jl:27\ntest set: Error During Test at
    /tmp/tmp3_a1h4ud.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching Array(::Type{Char}, ::Int64)\n  Closest
    candidates are:\n    Array(!Matched::LinearAlgebra.UniformScaling, ::Integer,
    !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:496\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp3_a1h4ud.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp3_a1h4ud.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp3_a1h4ud.jl:27\n'''
  timestamp: 1659979441
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s=lowercase(s)\n    arr=collect(s)\n    for i in 1:length(arr)\n     \
    \   arr[i]=chr(rotate2(arr[i]))\n    end\n    return join(arr)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpedtx7ng4.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate2 not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpedtx7ng4.jl:19\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpedtx7ng4.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpedtx7ng4.jl:27\ntest set: Error
    During Test at /tmp/tmpedtx7ng4.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate2 not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpedtx7ng4.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpedtx7ng4.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpedtx7ng4.jl:27\ntest set: Error
    During Test at /tmp/tmpedtx7ng4.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate2 not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpedtx7ng4.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpedtx7ng4.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpedtx7ng4.jl:27\ntest set: Error
    During Test at /tmp/tmpedtx7ng4.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate2 not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpedtx7ng4.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/'
  timestamp: 1659979442
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #The alphabet should be rotated in a manner such that the letters \n \
    \   #shift down by two multiplied to two places.\n    cipher = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    rotation = length(cipher)\n    code = \"\"\n    for x in s\n        idx\
    \ = findfirst(cipher, x)\n        code = code * cipher[idx + 2*2]\n    end\n \
    \   return code\nend\n        \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn9x4xv4n.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn9x4xv4n.jl:22\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn9x4xv4n.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn9x4xv4n.jl:32\ntest set: Error During Test at
    /tmp/tmpn9x4xv4n.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn9x4xv4n.jl:22\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn9x4xv4n.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn9x4xv4n.jl:32\n'''
  timestamp: 1659979442
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return rot(s, [1,3,5,7,9,11,15,17,19,21,23,25], 26)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5kqj0yn4.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rot not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp5kqj0yn4.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp5kqj0yn4.jl:23 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp5kqj0yn4.jl:22\ntest set: Error During Test at
    /tmp/tmp5kqj0yn4.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp5kqj0yn4.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5kqj0yn4.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5kqj0yn4.jl:22\ntest set: Error
    During Test at /tmp/tmp5kqj0yn4.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp5kqj0yn4.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5kqj0yn4.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5kqj0yn4.jl:22\ntest set: Error
    During Test at /tmp/tmp5kqj0yn4.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rot not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp5kqj0yn4.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979442
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = \"\"\n    for i in s\n        if !isalpha(i)\n            s_new\
    \ *= i\n        elseif i == \"x\" || i == \"y\"\n            s_new *= string(chr(ord(i)\
    \ - 24))\n        elseif i == \"X\" || i == \"Y\"\n            s_new *= string(chr(ord(i)\
    \ - 24))\n        else\n            s_new *= string(chr(ord(i) + 2))\n       \
    \ end\n    end\n    return s_new\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmph4148eft.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: isalpha not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmph4148eft.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4148eft.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4148eft.jl:34\ntest set: Error
    During Test at /tmp/tmph4148eft.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph4148eft.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4148eft.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4148eft.jl:34\ntest set: Error
    During Test at /tmp/tmph4148eft.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph4148eft.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4148eft.jl:37 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4148eft.jl:34\ntest set: Error
    During Test at /tmp/tmph4148eft.jl:38\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph4148eft.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/'
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(x, 2*2) for x in s] \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpvv5gli9k.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpvv5gli9k.jl:16\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpvv5gli9k.jl:23 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvv5gli9k.jl:22\ntest set: Error
    During Test at /tmp/tmpvv5gli9k.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpvv5gli9k.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpvv5gli9k.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvv5gli9k.jl:22\ntest set: Error
    During Test at /tmp/tmpvv5gli9k.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpvv5gli9k.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/'
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Encrypt a string using the ROT-4 method.\"\"\"\n    #check if the\
    \ string is empty or if there is no input\n    if s == \"\"\n        return \"\
    \"\n    end\n    #check for invalid input\n    for i in s\n        if !(i in \"\
    abcdefghijklmnopqrstuvwxyz\")\n            return \"Invalid input\"\n        end\n\
    \    end\n    #use the rotate function to get the desired output\n    return rotate(s,\
    \ -4)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprqzca13h.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmprqzca13h.jl:28\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqzca13h.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqzca13h.jl:34\ntest set: Error
    During Test at /tmp/tmprqzca13h.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmprqzca13h.jl:28\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqzca13h.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqzca13h.jl:34\ntest set: Error
    During Test at /tmp/tmprqzca13h.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmprqzca13h.jl:28\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprqzca13h.jl:37 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprqzca13h.jl:34\ntest set: Error
    During Test at /tmp/tmprqzca13h.jl:38\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmprqzca13h.jl:28\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a= ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    s=split(s,\"\")\n    c=\"\"\n    for i in s\n        b=findfirst(a,i)\n \
    \       if b>=1 && b<=12\n            push!(c,a[b+4])\n        else\n        \
    \    push!(c,a[b-12])\n        end\n    end\n    return join(c,\"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkig4xayy.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::SubString{String})\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Union{AbstractString, AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(!Matched::AbstractString,
    ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpkig4xayy.jl:20\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkig4xayy.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpkig4xayy.jl:33\n'''
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_lst = Array{Char}(undef, length(s))\n    s_lst[1] = s[1]\n    s_lst[2]\
    \ = s[2]\n    i = 3\n    while i < length(s)+1\n        s_lst[i] = s[i-2]\n  \
    \      i += 2\n    end\n    i = 3\n    while i < length(s)+1\n        s_lst[i+1]\
    \ = s[i]\n        i += 2\n    end\n    s_lst\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmps4k7lv7g.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n'''
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #input string s\n    #returns encrypted string\n    #takes each character\
    \ of the string and shifts it down by 2*2\n    #according to unicode chart\n \
    \   s=collect(s)\n    new_s=String[]\n    for i in s\n        new_s=push!(new_s,String(getindex(i,1)+6))\n\
    \    end\n    join(new_s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpzefz330v.jl:32\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    String(::Char)\n  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpzefz330v.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpzefz330v.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpzefz330v.jl:31\ntest set: Error During Test at
    /tmp/tmpzefz330v.jl:33\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching String(::Char)\n  Closest candidates
    are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpzefz330v.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpzefz330v.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpzefz330v.jl:31\n'''
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for letter in s\n        if letter == \"y\"\n \
    \           new_string *= \"a\"\n        elseif letter == \"z\"\n            new_string\
    \ *= \"b\"\n        else\n            new_string *= chr(ord(letter) + 2)\n   \
    \     end\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0aq9c0gd.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0aq9c0gd.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0aq9c0gd.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0aq9c0gd.jl:32\ntest set: Error During Test at
    /tmp/tmp0aq9c0gd.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0aq9c0gd.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0aq9c0gd.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0aq9c0gd.jl:32\ntest set: Error
    During Test at /tmp/tmp0aq9c0gd.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0aq9c0gd.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0aq9c0gd.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0aq9c0gd.jl:32\ntest set: Error
    During Test at /tmp/tmp0aq9c0gd.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp0aq9c0gd.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979443
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    temp = Dict()\n    for i in 1:26\n        temp[String(Char(i+96))] = String(Char(i+100))\n\
    \    end\n    ans = \"\"\n    for i in s\n        ans = ans * temp[String(i)]\n\
    \    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp97uk1o8l.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    String(::Char)\n  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp97uk1o8l.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp97uk1o8l.jl:31 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp97uk1o8l.jl:30\ntest set: Error During Test at
    /tmp/tmp97uk1o8l.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching String(::Char)\n  Closest candidates
    are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp97uk1o8l.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp97uk1o8l.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp97uk1o8l.jl:30\n'''
  timestamp: 1659979444
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [char for char in \"abcdefghijklmnopqrstuvwxyz\"]\n    new_alpha\
    \ = alphabet[(length(alphabet) - 2):(length(alphabet) - 1)]\n    new_alpha = append!(new_alpha,\
    \ alphabet[1:(length(alphabet) - 2)])\n    new_alpha = append!(new_alpha, alphabet[(length(alphabet)\
    \ - 1):(length(alphabet))])\n    encrypted = \"\"\n    for char in s\n       \
    \ if char in alphabet\n            idx = findfirst(new_alpha, char)\n        \
    \    encrypted = string(encrypted, new_alpha[idx+2])\n        else\n         \
    \   encrypted = string(encrypted, char)\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7iorlwca.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp7iorlwca.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp7iorlwca.jl:36 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp7iorlwca.jl:35\ntest set: Error During Test at
    /tmp/tmp7iorlwca.jl:37\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp7iorlwca.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp7iorlwca.jl:37 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp7iorlwca.jl:35\n'''
  timestamp: 1659979444
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = String[]\n    for letter in s\n        new_letter = rotate(letter,\
    \ 2)\n        push!(out, new_letter)\n    end\n    return join(out)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcjtefxo2.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcjtefxo2.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjtefxo2.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjtefxo2.jl:27\ntest set: Error
    During Test at /tmp/tmpcjtefxo2.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcjtefxo2.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjtefxo2.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjtefxo2.jl:27\ntest set: Error
    During Test at /tmp/tmpcjtefxo2.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcjtefxo2.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcjtefxo2.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcjtefxo2.jl:27\ntest set: Error
    During Test at /tmp/tmpcjtefxo2.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcjtefxo2.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979444
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = String[]\n    for char in s\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            c = char\n            n = 2\n            while n > 0\n         \
    \       c = Char(Int(c) + 1)\n                if c == 'z'\n                  \
    \  c = 'a'\n                end\n                n -= 1\n            end\n   \
    \         push!(encrypted, c)\n        else\n            push!(encrypted, char)\n\
    \        end\n    end\n    return join(encrypted)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at '''
  timestamp: 1659979445
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encryptedString = \"\"\n    for i in s\n        if 'a' <= i <= 'z'\n \
    \           i = chr(ord(i) + 2)\n            if i > 'z'\n                i = chr(ord(i)\
    \ - 26)\n            end\n        end\n        encryptedString = encryptedString\
    \ * i\n    end\n    return encryptedString\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwk1eg9ld.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwk1eg9ld.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwk1eg9ld.jl:33 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwk1eg9ld.jl:32\ntest set: Error During Test at
    /tmp/tmpwk1eg9ld.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwk1eg9ld.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwk1eg9ld.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwk1eg9ld.jl:32\ntest set: Error
    During Test at /tmp/tmpwk1eg9ld.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwk1eg9ld.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwk1eg9ld.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwk1eg9ld.jl:32\ntest set: Error
    During Test at /tmp/tmpwk1eg9ld.jl:36\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwk1eg9ld.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979445
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = String[]\n    for i in 1:length(s)\n        s2 = append!(s2, (string(chr(ord(s[i])\
    \ + 2))))\n    end\n    s3 = string(s2)\n    return s3\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp2ajli1af.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp2ajli1af.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp2ajli1af.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp2ajli1af.jl:27\ntest set: Error During Test at
    /tmp/tmp2ajli1af.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2ajli1af.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ajli1af.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ajli1af.jl:27\ntest set: Error
    During Test at /tmp/tmp2ajli1af.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2ajli1af.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ajli1af.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ajli1af.jl:27\ntest set: Error
    During Test at /tmp/tmp2ajli1af.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp2ajli1af.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979445
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"type assertions\"\n    n = length(s)\n    #create a new string to store\
    \ the result\n    encrypted_string = \"\"\n    for i in 1:n\n        #convert\
    \ to ASCII, move the alphabet by 2, convert back\n        encoded_val = Int(s[i])+2\n\
    \        encrypted_string = encrypted_string * string(Char(encoded_val))\n   \
    \ end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzrzqk22e.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpzrzqk22e.jl:32\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzrzqk22e.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzrzqk22e.jl:31\ntest set: Test Failed at /tmp/tmpzrzqk22e.jl:33\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrzqk22e.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrzqk22e.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzrzqk22e.jl:34\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrzqk22e.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrzqk22e.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzrzqk22e.jl:35\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrzqk22e.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrzqk22e.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzrzqk22e.jl:36\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979444
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    shift = [e in ['c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\
    \ for e in s]\n    encrypt = [(e in ['c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'])\
    \ ? 'a'+2*2 : e for e in s]\n    return(encrypt)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmproyjipfr.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Vector{Char} to an object of type String\n  Closest candidates
    are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmproyjipfr.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmproyjipfr.jl:25 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmproyjipfr.jl:24\n'''
  timestamp: 1659979446
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # convert string to array of chars\n    char_array = collect(s)\n    #\
    \ convert each char to ascii integer\n    ascii_ints = map(ord, char_array)\n\
    \    # map each ascii integer to letter + 1\n    ascii_ints_mapped = map(x ->\
    \ x + 1, ascii_ints)\n    # convert back to ascii characters\n    ascii_chars\
    \ = map(chr, ascii_ints_mapped)\n    # concatenate to a string and return\n  \
    \  return string(ascii_chars)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmperea2e5e.jl:32\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmperea2e5e.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmperea2e5e.jl:32 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmperea2e5e.jl:31\ntest set: Error During Test at
    /tmp/tmperea2e5e.jl:33\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmperea2e5e.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmperea2e5e.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmperea2e5e.jl:31\ntest set: Error
    During Test at /tmp/tmperea2e5e.jl:34\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmperea2e5e.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmperea2e5e.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmperea2e5e.jl:31\ntest set: Error
    During Test at /tmp/tmperea2e5e.jl:35\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmperea2e5e.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979446
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s1 = Set()\n    for i in s\n        push!(s1,i)\n    end\n    s1 = collect(s1)\n\
    \    s2 = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\"]\n    s3 = Set()\n    for i in s2\n        push!(s3,i)\n    end\n  \
    \  s3 = collect(s3)\n    j = 0\n    for i in s1\n        j +=1\n        for k\
    \ in s3\n            if i == k\n                if k == \"w\"\n              \
    \      s2[j] = \"a\"\n                elseif k == \"x\"\n                    s2[j]\
    \ = \"b\"\n                elseif k == \"y\"\n                    s2[j] = \"c\"\
    \n                elseif k == \"z\"\n                    s2[j] = \"d\"\n     \
    \           else \n                    s2[j] = s3[findfirst(s3,i)+2]\n       \
    \         end\n            end\n        end\n    end\n    s2 = s2[s1]\n    ans\
    \ = \"\"\n    for i in s2\n        ans = ans*i\n    end\n    return ans\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp11pmog9j.jl:58\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  ArgumentError: unable to check
    bounds for indices of type Char\n  Stacktrace:\n    [1] checkindex(#unused#::Type{Bool},
    inds::Base.OneTo{Int64}, i::Char)\n      @ Base ./abstractarray.jl:713\n    [2]
    checkindex\n      @ ./abstractarray.jl:728 [inlined]\n    [3] checkbounds\n      @
    ./abstractarray.jl:641 [inlined]\n    [4] checkbounds\n      @ ./abstractarray.jl:656
    [inlined]\n    [5] _getindex\n      @ ./multidimensional.jl:838 [inlined]\n    [6]
    getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [7] encrypt(s::String)\n      @
    Main /tmp/tmp11pmog9j.jl:46\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [9] macro expansion\n      @ /tmp/tmp11pmog9j.jl:58 [inlined]\n   [10]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [11] top-level scope\n      @ /tmp/tmp11pmog9j.jl:57\ntest set:
    Error During Test at /tmp/tmp11pmog9j.jl:59\n  Test threw exception\n  Expression:
    candidate("asdfghjkl") == "ewhjklnop"\n  ArgumentError: unable to check bounds
    for indices of type Char\n  Stacktrace:\n    [1] checkindex(#unused#::Type{Bool},
    inds::Base.OneTo{Int64}, i::Char)\n      @ Base ./abstractarray.jl:713\n    [2]
    checkindex\n      @ ./abstractarray.jl:728 [inlined]\n    [3] checkbounds\n      @
    ./abstractarray.jl:641 [inlined]\n    [4] checkbounds\n      @ ./abstractarray.jl:656
    [inlined]\n    [5] _getindex\n      @ ./multidimensional.jl:838 [inlined]\n    [6]
    getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [7] encrypt(s::String)\n      @
    Main /tmp/tmp11pmog9j.jl:46\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [9] macro expansion\n      @ /tmp/tmp11pmog9j.jl:59 [inlined]\n   [10]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [11] top'
  timestamp: 1659979446
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n::Int = length(s) \n    a::String = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    b::String = \"cdefghijklmnopqrstuvwxyzab\"\n    c::String = \"\"\n    for\
    \ i = 1:n\n        c = c * b[find(x -> x == s[i], a)[1]]\n    end\n    return\
    \ c\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpstruj5ss.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpstruj5ss.jl:21\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpstruj5ss.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpstruj5ss.jl:29\ntest set: Error During Test at
    /tmp/tmpstruj5ss.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpstruj5ss.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstruj5ss.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstruj5ss.jl:29\ntest set: Error
    During Test at /tmp/tmpstruj5ss.jl:32\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpstruj5ss.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstruj5ss.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstruj5ss.jl:29\ntest set: Error
    During Test at /tmp/tmpstruj5ss.jl:33\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: find not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpstruj5ss.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979446
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in 1:length(s)\n        let c = s[i]\n       \
    \     new_s = new_s *\n            isascii(c) ? chr(mod(c + 2*i - 'a', 26) + 'a')\
    \ : c\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979447
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = collect(s)\n    c = map(x -> char(x+2), c)\n    return string(c)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpf8oc6sid.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: char not defined\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Char)\n      @ Main /tmp/tmpf8oc6sid.jl:17\n    [2] iterate\n      @
    ./generator.jl:47 [inlined]\n    [3] _collect(c::Vector{Char}, itr::Base.Generator{Vector{Char},
    var"#1#2"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base
    ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5]
    map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] encrypt(s::String)\n      @
    Main /tmp/tmpf8oc6sid.jl:17\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmpf8oc6sid.jl:25 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmpf8oc6sid.jl:24\ntest set:
    Error During Test at /tmp/tmpf8oc6sid.jl:26\n  Test threw exception\n  Expression:
    candidate("asdfghjkl") == "ewhjklnop"\n  UndefVarError: char not defined\n  Stacktrace:\n    [1]
    (::var"#1#2")(x::Char)\n      @ Main /tmp/tmpf8oc6sid.jl:17\n    [2] iterate\n      @
    ./generator.jl:47 [inlined]\n    [3] _collect(c::Vector{Char}, itr::Base.Generator{Vector{Char},
    var"#1#2"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base
    ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5]
    map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] encrypt(s::String)\n      @
    Main /tmp/tmpf8oc6sid.jl:17\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [8] macro expansion\n      @ /tmp/tmpf8oc6sid.jl:26 [inlined]\n    [9]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [10] top-level scope\n      @ /tmp/tmpf8oc6sid.jl:24\ntest set:
    Error During Test at /tmp/tmpf8oc6sid.jl:27\n  Test thre'
  timestamp: 1659979447
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Initialize variables \n    l = length(s)\n    s_ascii = zeros(Int, l)\n\
    \    s_shift = zeros(Int, l)\n    s_shift_char = zeros(Char, l)\n    s_shift_str\
    \ = String()\n    \n    # Convert the string to ASCII\n    for i in 1:l\n    \
    \    s_ascii[i] = Int(s[i])\n    end\n    \n    # Shift by two and multiply\n\
    \    for i in 1:l\n        s_shift[i] = (s_ascii[i] + 2) * 2\n    end\n    \n\
    \    # Convert back to char\n    for i in 1:l\n        s_shift_char[i] = Char(s_shift[i])\n\
    \    end\n    \n    # Join the characters into a string\n    for i in 1:l\n  \
    \      s_shift_str = string(s_shift_str, s_shift_char[i])\n    end\n    \n   \
    \ return s_shift_str\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcyy6sjbs.jl:50\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    zero(::Type{Char})\n  Closest candidates are:\n    zero(!Matched::Union{Type{P},
    P}) where P<:Dates.Period at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n    zero(!Matched::LinearAlgebra.UniformScaling{T})
    where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:136\n    zero(!Matched::AbstractIrrational)
    at ~/.conda/envs/polyglot/share/julia/base/irrationals.jl:150\n    ...\n  Stacktrace:\n   [1]
    zeros(#unused#::Type{Char}, dims::Tuple{Int64})\n     @ Base ./array.jl:526\n   [2]
    zeros(#unused#::Type{Char}, dims::Int64)\n     @ Base ./array.jl:521\n   [3] encrypt(s::String)\n     @
    Main /tmp/tmpcyy6sjbs.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcyy6sjbs.jl:50 [inlined]\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcyy6sjbs.jl:49\ntest set: Error
    During Test at /tmp/tmpcyy6sjbs.jl:51\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching zero(::Type{Char})\n  Closest
    candidates are:\n    zero(!Matched::Union{Type{P}, P}) where P<:Dates.Period at
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n    zero(!Matched::LinearAlgebra.UniformScaling{T})
    where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:136\n    zero(!Matched::AbstractIrrational)
    at ~/.conda/envs/polyglot/share/julia/base/irrationals.jl:150\n    ...\n  Stacktrace:\n   [1]
    zeros(#unused#::Type{Char}, dims::Tuple{Int64})\n     @ Base ./array.jl:526\n   [2]
    zeros(#unused#::Type{Char}, dims::Int64)\n     @ Base ./array.jl:521\n   [3] encrypt(s::String)\n     @
    Main /tmp/tmpcyy6sjbs.jl:20\n   [4] macro expansio'
  timestamp: 1659979447
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    cipher_alpha = \"abcdefghijklmnopqrstuvwxyz\"\n    cipher_alpha_list =\
    \ list(cipher_alpha)\n    if s in cipher_alpha_list\n        index = cipher_alpha_list.index(s)\n\
    \        index = index - 4\n        if index < 0\n            index = index +\
    \ 26\n        end\n        return cipher_alpha_list[index]\n    else\n       \
    \ return \" \"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmph7s0qc5b.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: list not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmph7s0qc5b.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmph7s0qc5b.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmph7s0qc5b.jl:33\ntest set: Error During Test at
    /tmp/tmph7s0qc5b.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: list not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph7s0qc5b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7s0qc5b.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7s0qc5b.jl:33\ntest set: Error
    During Test at /tmp/tmph7s0qc5b.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: list not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph7s0qc5b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7s0qc5b.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7s0qc5b.jl:33\ntest set: Error
    During Test at /tmp/tmph7s0qc5b.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: list not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmph7s0qc5b.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979447
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = 2\n    for c in s\n        if 'a' <= c <= 'y'\n            println(c\
    \ + n)\n        elseif 'A' <= c <= 'Y'\n            println(c + n)\n        else\n\
    \            println(c)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: b'j\nk\n'
  timestamp: 1659979447
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = Array(s)\n    new_s = \"\"\n    for i in s_array\n        push!(new_s,char(Int(i)+2*2))\n\
    \    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpps5863ia.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    Array(::String)\n  Closest candidates are:\n    Array(!Matched::Union{LinearAlgebra.QR,
    LinearAlgebra.QRCompactWY}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\n    Array(!Matched::Union{LinearAlgebra.Hermitian,
    LinearAlgebra.Symmetric}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\n    Array(!Matched::LinearAlgebra.LDLt)
    at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/ldlt.jl:222\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpps5863ia.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpps5863ia.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpps5863ia.jl:27\ntest set: Error During Test at
    /tmp/tmpps5863ia.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching Array(::String)\n  Closest candidates
    are:\n    Array(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY})
    at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\n    Array(!Matched::Union{LinearAlgebra.Hermitian,
    LinearAlgebra.Symmetric}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\n    Array(!Matched::LinearAlgebra.LDLt)
    at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/ldlt.jl:222\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpps5863ia.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpps5863ia.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Te'
  timestamp: 1659979448
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary to translate characters\n    # with a space in between\
    \ to reduce the number of keys\n    shift_dict = {chr(i):chr(i+1) for i in range(97,121)}\n\
    \    shift_dict['z'] = 'a'\n    shift_dict['y'] = 'z'\n    # Turn string into\
    \ list to iterate through\n    s_list = string(s)\n    # Turn list into dictionary\
    \ with keys being characters and \n    # values being the number of times the\
    \ character is seen\n    s_dict = Dict{Char,Int}()\n    for i in s_list\n    \
    \    if i in keys(s_dict)\n            s_dict[i] += 1\n        else\n        \
    \    s_dict[i] = 1\n        end\n    end\n    # Iterate through dictionary \n\
    \    s_list = s_list[:]\n    for (k,v) in s_dict\n        # If character appears\
    \ more than once\n        if v > 1\n            # Create a sublist to iterate\
    \ through the list\n            # and find the location of the character\n   \
    \         sub_list = s_list[:]\n            while true\n                sub_list\
    \ = sub_list[2:end]\n                if k in sub_list\n                    # Find\
    \ the index and substract 2 to find\n                    # the index that should\
    \ be changed in the \n                    # original list\n                  \
    \  loc = findfirst(isequal(k),sub_list) + 1\n                    s_list[loc -\
    \ 2] = shift_dict[k]\n                else\n                    break\n      \
    \          end\n            end\n        end\n    end\n    # Change first two\
    \ characters based on what the first character is\n    s_list[1] = shift_dict[s_list[1]]\n\
    \    s_list[2] = shift_dict[s_list[2]]\n    return string(s_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: { } vector syntax is discontinued around /tmp/tmpylh1iksi.jl:18\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpylh1iksi.jl:1\nin expression starting\
    \ at /tmp/tmpylh1iksi.jl:1\n"
  stdout: ''
  timestamp: 1659979445
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    #convert to lowercase\n    s = lowercase(s)\n    \n    #shift every\
    \ letter by two\n    for i = 1:length(s)\n        if Int('a') <= Int(s[i]) <=\
    \ Int('x')\n            s[i] = Char(Int(s[i]) + 2)\n        elseif Int('y') <=\
    \ Int(s[i]) <= Int('z')\n            s[i] = Char(Int(s[i]) - 24)\n        end\n\
    \    end\n    \n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5k07p0xh.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp5k07p0xh.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5k07p0xh.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5k07p0xh.jl:35\ntest set: Error
    During Test at /tmp/tmp5k07p0xh.jl:37\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching setindex!(::String, ::Char,
    ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5k07p0xh.jl:23\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5k07p0xh.jl:37 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5k07p0xh.jl:35\ntest set: Error
    During Test at /tmp/tmp5k07p0xh.jl:38\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp5k07p0xh.jl:23\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp5k07p0xh.jl:38 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp5k07p0xh.jl:35\n'''
  timestamp: 1659979448
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ln = length(s)\n    s_n = lowercase(s)\n    s_t = Array{Char}(ln)\n  \
    \  for i in 1:ln\n        num = Int(s_n[i]) - 96\n        s_t[i] = Char(mod(num+2*2,\
    \ 26) + 96)\n    end\n    s_t\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpfhtect0r.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    (Array{Char})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpfhtect0r.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpfhtect0r.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpfhtect0r.jl:29\ntest set: Error During Test at
    /tmp/tmpfhtect0r.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching (Array{Char})(::Int64)\n  Closest
    candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,
    Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpfhtect0r.jl:18\n   [2] macro expa'
  timestamp: 1659979448
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for l in s\n        if l in keys(alphabet)\n       \
    \     new_s = new_s * alphabet[(alphabet[l] + 4) % 26]\n        else\n       \
    \     new_s = new_s * l\n        end\n    end\n    return new_s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcv2k9igb.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: alphabet not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcv2k9igb.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcv2k9igb.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcv2k9igb.jl:30\ntest set: Error
    During Test at /tmp/tmpcv2k9igb.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcv2k9igb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcv2k9igb.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcv2k9igb.jl:30\ntest set: Error
    During Test at /tmp/tmpcv2k9igb.jl:33\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcv2k9igb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcv2k9igb.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcv2k9igb.jl:30\ntest set: Error
    During Test at /tmp/tmpcv2k9igb.jl:34\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcv2k9igb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/std'
  timestamp: 1659979448
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l=[]\n    for i in s\n        c=Char(i)\n        c2=Int(c)\n        if(c2<=109)\n\
    \            c3=c2+2\n        else\n            c3=c2-24\n        end\n      \
    \  push!(l,Char(c3))\n    end\n    return join(l)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdxnd6rvc.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpdxnd6rvc.jl:34\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdxnd6rvc.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdxnd6rvc.jl:33\ntest set: Test Failed at /tmp/tmpdxnd6rvc.jl:35\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"c[fhijlmn\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxnd6rvc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxnd6rvc.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdxnd6rvc.jl:36\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxnd6rvc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxnd6rvc.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdxnd6rvc.jl:37\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"g\\\\\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxnd6rvc.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxnd6rvc.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdxnd6rvc.jl:38\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcg_hc_ghcg_i\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/"
  timestamp: 1659979448
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for char\
    \ in s\n        pos = findfirst(c, char)\n        encrypted *= c[(pos + 2) % length(c)]\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn4lrdqly.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn4lrdqly.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn4lrdqly.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn4lrdqly.jl:28\ntest set: Error During Test at
    /tmp/tmpn4lrdqly.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn4lrdqly.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn4lrdqly.jl:30 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn4lrdqly.jl:28\n'''
  timestamp: 1659979449
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypt_list = Array{Char}(length(s))\n\
    \    for i in 1:length(s)\n        idx = findfirst(isequal(s[i]),abc)\n      \
    \  encrypt_list[i] = abc[(idx+2*2)%length(abc)]\n    end\n    return join(encrypt_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5j82zr4q.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    (Array{Char})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp5j82zr4q.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp5j82zr4q.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp5j82zr4q.jl:28\ntest set: Error During Test at
    /tmp/tmp5j82zr4q.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching (Array{Char})(::Int64)\n  Closest
    candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,
    Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,
    !Matched::Integer, !Matched::Integer) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T,
    S} where S<:AbstractMatrix{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp5j82zr4q.jl:17\n   [2] macro expa'
  timestamp: 1659979449
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = split(\"abcdefghijklmnopqrstuvwxyz\", \"\")\n    encrypted\
    \ = []\n    for i in s\n        if i in alphabet\n            index = findfirst(x\
    \ -> x == i, alphabet)\n            index = index + 2*2\n            index %=\
    \ length(alphabet)\n            push!(encrypted, alphabet[index])\n        else\n\
    \            push!(encrypted, i)\n        end\n    end\n    return join(encrypted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq8bxj7iv.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpq8bxj7iv.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq8bxj7iv.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq8bxj7iv.jl:34\ntest set: Test Failed at /tmp/tmpq8bxj7iv.jl:36\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8bxj7iv.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8bxj7iv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq8bxj7iv.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8bxj7iv.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8bxj7iv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq8bxj7iv.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8bxj7iv.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8bxj7iv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq8bxj7iv.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659979449
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return shift(2, s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpy1r1abcj.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpy1r1abcj.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpy1r1abcj.jl:23 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpy1r1abcj.jl:22\ntest set: Error During Test at
    /tmp/tmpy1r1abcj.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpy1r1abcj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy1r1abcj.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy1r1abcj.jl:22\ntest set: Error
    During Test at /tmp/tmpy1r1abcj.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpy1r1abcj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy1r1abcj.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy1r1abcj.jl:22\ntest set: Error
    During Test at /tmp/tmpy1r1abcj.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpy1r1abcj.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes'
  timestamp: 1659979449
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #get the size of the string\n    #size = length(s)\n    #create the alphabet\n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a new string to hold\
    \ our encrypted message\n    encrypted_message = \"\"\n    #for loop to access\
    \ every character in the string\n    for i in s\n        #check if the character\
    \ is in the alphabet and not a space\n        if i in alphabet && i != \" \"\n\
    \            #map the characters to the alphabet to get the corresponding index\n\
    \            letter_index = findfirst(alphabet, i)\n            #access the two\
    \ previous letters in the alphabet\n            #use map to convert the integer\
    \ to a string\n            encrypted_message *= map(x -> string(alphabet[x]),\
    \ letter_index - 2)\n        elseif i == \" \"\n            #add a space in the\
    \ encrypted message if the letter is a space\n            encrypted_message *=\
    \ i\n        end\n    end\n    return encrypted_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpc278y71r.jl:43\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpc278y71r.jl:27\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpc278y71r.jl:43 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpc278y71r.jl:42\n'''
  timestamp: 1659979450
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = \"\"\n    for i in s\n        out = out * rotate(i, -4)\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp882l14ju.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp882l14ju.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp882l14ju.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp882l14ju.jl:26\ntest set: Error
    During Test at /tmp/tmp882l14ju.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp882l14ju.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp882l14ju.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp882l14ju.jl:26\ntest set: Error
    During Test at /tmp/tmp882l14ju.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp882l14ju.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp882l14ju.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp882l14ju.jl:26\ntest set: Error
    During Test at /tmp/tmp882l14ju.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp882l14ju.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979450
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = length(s)\n    result = \"\"\n    for i = 1:n\n        result *= convert(String,\
    \ s[i] + 2*2)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at '''
  timestamp: 1659979450
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #this function takes a string s as an argument and returns a string encrypted\n\
    \    #with the alphabet being rotated. The alphabet should be rotated in a manner\n\
    \    #such that the letters shift down by two multiplied to two places.\n    chars\
    \ = [] #initialize an empty array\n    for i in s #loops through each character\
    \ of the string s\n        char = i \n        if i in string('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z') #if the character i is in the string\n       \
    \     char = string('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')[string('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z').index(i) + 2*2] #find the character\
    \ i in the string\n        end\n        push!(chars, char) #push the character\
    \ onto the array chars\n    end\n    return join(chars) #join all the characters\
    \ in the array chars and return the joined string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcnkdrep8.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field index\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpcnkdrep8.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcnkdrep8.jl:34 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcnkdrep8.jl:33\ntest set: Error
    During Test at /tmp/tmpcnkdrep8.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpcnkdrep8.jl:23\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcnkdrep8.jl:35 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcnkdrep8.jl:33\ntest set: Error
    During Test at /tmp/tmpcnkdrep8.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpcnkdrep8.jl:23\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcnkdrep8.jl:36 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcnkdrep8.jl:33\ntest set: Error
    During Test at /tmp/tmpcnkdrep8.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no field index\n  Stacktrace:\'
  timestamp: 1659979450
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\"]\n    # Declare an empty string\n    output = \"\"\n    #loop\
    \ through the string\n    for c in s\n        # store the next two characters\
    \ in a variable\n        i = alphabet[findfirst(alphabet,c)]\n        output =\
    \ output * i\n    end\n    # append the characters to the string\n    output\n\
    end\nencrypt(\"hi\")\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: None
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #function encrypts a string into a string\n    encrypt = \"\"\n    for\
    \ i = 1:length(s)\n        encrypt = encrypt * rotl(s[i],2*i)\n    end\n    return\
    \ encrypt\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpzew9aoih.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotl not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpzew9aoih.jl:19\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpzew9aoih.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpzew9aoih.jl:27\ntest set: Error During Test at
    /tmp/tmpzew9aoih.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotl not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpzew9aoih.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzew9aoih.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzew9aoih.jl:27\ntest set: Error
    During Test at /tmp/tmpzew9aoih.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotl not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpzew9aoih.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzew9aoih.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzew9aoih.jl:27\ntest set: Error
    During Test at /tmp/tmpzew9aoih.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotl not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpzew9aoih.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # String to array\n    x = map(String, collect(s))\n    # Iterate through\
    \ array\n    for i = 1:length(x)\n        # Encrypt characters\n        # decrypt\
    \ is the reverse function of this\n        # thus, we can just subtract the difference\n\
    \        if x[i] == \"z\"\n            x[i] = \"b\"\n        elseif x[i] == \"\
    y\"\n            x[i] = \"a\"\n        elseif x[i] == \" \"\n            x[i]\
    \ = \" \"\n        else\n            x[i] = Char(Integer(x[i]) + 2)\n        end\n\
    \    end\n    #join the array back into a string\n    return join(x)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmplhc8x08x.jl:41\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    String(::Char)\n  Closest candidates are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744
    [inlined]\n   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @
    ./abstractarray.jl:2867 [inlined]\n   [5] encrypt(s::String)\n     @ Main /tmp/tmplhc8x08x.jl:17\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmplhc8x08x.jl:41 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmplhc8x08x.jl:40\ntest set: Error
    During Test at /tmp/tmplhc8x08x.jl:42\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching String(::Char)\n  Closest candidates
    are:\n    String(!Matched::String) at ~/.conda/envs/polyglot/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)
    at ~/.conda/envs/polyglot/share/julia/base/strings/string.jl:83\n    ...\n  Stacktrace:\n   [1]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744
    [inlined]\n   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n     @
    ./abstractarray.jl:2867 [inlined]\n   [5] encrypt(s::String)\n     @ Main /tmp/tmplhc8x08x.jl:17\n   [6]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ '
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for char in s\n        if char == \"z\" || char == \"y\"\n           \
    \ print(\"a\")\n        elseif char == \"Z\" || char == \"Y\"\n            print(\"\
    A\")\n        else\n            print(chr(int(string(char)) + 2 * 2))\n      \
    \  end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpfc2gmid8.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpfc2gmid8.jl:22\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpfc2gmid8.jl:31 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpfc2gmid8.jl:30\ntest set: Error During Test at
    /tmp/tmpfc2gmid8.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpfc2gmid8.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfc2gmid8.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfc2gmid8.jl:30\ntest set: Error
    During Test at /tmp/tmpfc2gmid8.jl:33\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpfc2gmid8.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfc2gmid8.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfc2gmid8.jl:30\ntest set: Error
    During Test at /tmp/tmpfc2gmid8.jl:34\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpfc2gmid8.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    cipher = \"\"\n    i = 0\n    while i <= length(s) - 1\n        if s[i]\
    \ == \" \"\n            cipher = cipher * \" \"\n        else\n            new_char\
    \ = s[i] + 2\n            if new_char > 122\n                if s[i] <= 88 \n\
    \                    new_char = 96 + (new_char - 88)\n                else\n \
    \                   new_char = 96 + (new_char - 122)\n                end\n  \
    \          end\n            cipher = cipher * string(Char(new_char))\n       \
    \ end\n        i += 1\n    end\n    return cipher\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpuj9o8mx1.jl:41\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  BoundsError: attempt to access
    2-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216
    [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @
    ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpuj9o8mx1.jl:19\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuj9o8mx1.jl:41 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuj9o8mx1.jl:40\ntest set: Error
    During Test at /tmp/tmpuj9o8mx1.jl:42\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  BoundsError: attempt to access 9-codeunit String at index [0]\n  Stacktrace:\n   [1]
    checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @
    ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpuj9o8mx1.jl:19\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuj9o8mx1.jl:42 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuj9o8mx1.jl:40\ntest set: Error
    During Test at /tmp/tmpuj9o8mx1.jl:43\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  BoundsError: attempt to access 2-codeunit String at index [0]\n  Stacktrace:\n   [1]
    checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @
    ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpuj9o8mx1.jl:19\n   [5]
    macro expansion\n     @'
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    key = Dict(('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')=>('c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b'))\n\
    \    new_string = String[]\n    for i in s\n        push!(new_string,key[i])\n\
    \    end\n    return join(new_string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpai68jmbx.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  KeyError: key \''h\'' not
    found\n  Stacktrace:\n   [1] getindex(h::Dict{NTuple{26, Char}, NTuple{26, Char}},
    key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main
    /tmp/tmpai68jmbx.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai68jmbx.jl:29 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai68jmbx.jl:28\ntest set: Error
    During Test at /tmp/tmpai68jmbx.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  KeyError: key \''a\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{NTuple{26,
    Char}, NTuple{26, Char}}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpai68jmbx.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai68jmbx.jl:30 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai68jmbx.jl:28\ntest set: Error
    During Test at /tmp/tmpai68jmbx.jl:31\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  KeyError: key \''g\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{NTuple{26,
    Char}, NTuple{26, Char}}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpai68jmbx.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai68jmbx.jl:31 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai68jmbx.jl:28\ntest set: Error
    During'
  timestamp: 1659979452
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    r=String[]\n    let l=length(s)\n        let c=collect(s)\n        let\
    \ lettera=\"abcdefghijklmnopqrstuvwxyz\"\n        let letterb=\"cdefghijklmnopqrstuvwxyzab\"\
    \n        let alphabet=Dict(zip(collect(lettera),collect(letterb)))\n        for\
    \ i in 1:l\n            if c[i] in keys(alphabet)\n                push!(r,alphabet[c[i]])\n\
    \            else\n                push!(r,c[i])\n            end\n        end\n\
    \    end\n    return join(r)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"let\" at /tmp/tmpei7zm1xe.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpei7zm1xe.jl:1\n\
    in expression starting at /tmp/tmpei7zm1xe.jl:1\n"
  stdout: ''
  timestamp: 1659979449
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    string_list=collect(s)\n    encrypted_list=[]\n    index_counter=1\n    for\
    \ i in string_list\n        if i=='z'\n            push!(encrypted_list, 'b')\n\
    \        elseif i=='y'\n            push!(encrypted_list, 'a')\n        else\n\
    \            push!(encrypted_list, alphabet[index_counter+2])\n        end\n \
    \       index_counter+=1\n    end\n    return join(encrypted_list)\nend\n \nprint(encrypt(\"\
    hi\"))\nprint(encrypt(\"asdfghjkl\"))\nprint(encrypt(\"gf\"))\nprint(encrypt(\"\
    et\"))\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''cdcdefghijkcdcdtest set: Test Failed at /tmp/tmpe6qjo40y.jl:42\n  Expression:
    candidate("hi") == "lm"\n   Evaluated: "cd" == "lm"\nStacktrace:\n [1] macro expansion\n   @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n
    [2] macro expansion\n   @ /tmp/tmpe6qjo40y.jl:42 [inlined]\n [3] macro expansion\n   @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n
    [4] top-level scope\n   @ /tmp/tmpe6qjo40y.jl:41\ntest set: Test Failed at /tmp/tmpe6qjo40y.jl:43\n  Expression:
    candidate("asdfghjkl") == "ewhjklnop"\n   Evaluated: "cdefghijk" == "ewhjklnop"\nStacktrace:\n
    [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6qjo40y.jl:43 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6qjo40y.jl:41\ntest set: Test Failed
    at /tmp/tmpe6qjo40y.jl:44\n  Expression: candidate("gf") == "kj"\n   Evaluated:
    "cd" == "kj"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6qjo40y.jl:44 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6qjo40y.jl:41\ntest set: Test Failed
    at /tmp/tmpe6qjo40y.jl:45\n  Expression: candidate("et") == "ix"\n   Evaluated:
    "cd" == "ix"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6qjo40y.jl:45 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6qjo40y.jl:41\ntest set: Test Failed
    at /tmp/tmpe6qjo40y.jl:46\n  Expression: candidate("faewfawefaewg") == "jeiajeaijeiak"\n   Evaluated:
    "cdefghijklmno" == "jeiajeaijeiak"\nStacktrace:\n [1] macro exp'
  timestamp: 1659979452
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n \n alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n  #var=\"abcdefghijklmnopqrstuvwxyz\"\
    \n   \n    n=0\n    flag=false\n    l=length(s)\n    l1=length(alphabet)\n   \
    \ for i in 1:l\n     for j in 1:l1\n         if s[i]==alphabet[j]\n          \
    \ \n           if j>=24\n             if j==25\n               s[i]=alphabet[1]\n\
    \               break\n             elseif j==26\n               s[i]=alphabet[2]\n\
    \               break\n             end\n           elseif j<=2\n            \
    \ if j==1\n               s[i]=alphabet[25]\n               break\n          \
    \   elseif j==2\n               s[i]=alphabet[26]\n               break\n    \
    \         end\n           else\n             s[i]=alphabet[j+2]\n            \
    \ break\n           end\n         end\n     end\n    end\n    return s\n    end\n\
    \    encrypt(\"et\")\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: None
  timestamp: 1659979452
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string with all the letters of the alphabet\n    alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n    # create a string with the encrypted alphabet,\
    \ each letter \n    # shifted two places down \n    new_alphabet = alphabet[3:end]\
    \ * 2\n    # create a result string\n    result = \"\"\n    # iterate through\
    \ the letters of the string\n    for letter in s\n        # find the index of\
    \ each letter in the alphabet string\n        index = findfirst(alphabet, letter)\n\
    \        # append the letter at the same index in the new_alphabet \n        #\
    \ string to the result string\n        push!(result, new_alphabet[index])\n  \
    \  end\n    # return the encrypted result\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979453
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    abc = \"abcdefghijklmnopqrstuvwxyz\"\n    for c in s\n        i = search(abc,\
    \ c)\n        if i > 0\n            return abc[((i - 1) * 2 + 1) % 26 + 1]\n \
    \       end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkq_s2vxm.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkq_s2vxm.jl:18\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq_s2vxm.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq_s2vxm.jl:28\ntest set: Error
    During Test at /tmp/tmpkq_s2vxm.jl:30\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkq_s2vxm.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq_s2vxm.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq_s2vxm.jl:28\ntest set: Error
    During Test at /tmp/tmpkq_s2vxm.jl:31\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkq_s2vxm.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq_s2vxm.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq_s2vxm.jl:28\ntest set: Error
    During Test at /tmp/tmpkq_s2vxm.jl:32\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpkq_s2vxm.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979453
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    new_str = \"\"\n    for i in s\n        for j in letters\n     \
    \       if i == j\n                index = letters.index(j)\n                new_index\
    \ = index + (2*2)\n                #check if index exceeded length of letters\n\
    \                if new_index > 26\n                    index_diff = new_index\
    \ - 26\n                    final_index = 1 + index_diff\n                   \
    \ new_str = new_str * letters[final_index]\n                else\n           \
    \         new_str = new_str * letters[new_index]\n                end\n      \
    \      end\n        end\n    end\n    \n    return new_str\n    \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpapjs5p2m.jl:43\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: letters not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpapjs5p2m.jl:19\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjs5p2m.jl:43 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjs5p2m.jl:42\ntest set: Error
    During Test at /tmp/tmpapjs5p2m.jl:44\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: letters not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpapjs5p2m.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjs5p2m.jl:44 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjs5p2m.jl:42\ntest set: Error
    During Test at /tmp/tmpapjs5p2m.jl:45\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: letters not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpapjs5p2m.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjs5p2m.jl:45 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjs5p2m.jl:42\ntest set: Error
    During Test at /tmp/tmpapjs5p2m.jl:46\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: letters not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpapjs5p2m.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/'
  timestamp: 1659979453
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a new string to hold our encrypted message\n    msg = \"\"\n \
    \   #iterate through each character in the string\n    for i in s\n        #convert\
    \ character to int and add 2*2\n        let n = int(i) + 2*2\n        #if n >\
    \ 122, then minus 122 from n and add 96 to get new character value\n        if\
    \ n > 122\n            let n = n - 122 + 96\n        end\n        #add our new\
    \ character to the message\n        append!(msg, string(Char(n)))\n    end\n \
    \   return msg\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpxp_fpj_7.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxp_fpj_7.jl:1\n\
    in expression starting at /tmp/tmpxp_fpj_7.jl:1\n"
  stdout: ''
  timestamp: 1659979451
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #s = string\n    #s = s.replace('A','C')\n    #s = s.replace('B','D')\n\
    \    #s = s.replace('C','E')\n    #s = s.replace('D','F')\n    #s = s.replace('E','G')\n\
    \    #s = s.replace('F','H')\n    #s = s.replace('G','I')\n    #s = s.replace('H','J')\n\
    \    #s = s.replace('I','K')\n    #s = s.replace('J','L')\n    #s = s.replace('K','M')\n\
    \    #s = s.replace('L','N')\n    #s = s.replace('M','O')\n    #s = s.replace('N','P')\n\
    \    #s = s.replace('O','Q')\n    #s = s.replace('P','R')\n    #s = s.replace('Q','S')\n\
    \    #s = s.replace('R','T')\n    #s = s.replace('S','U')\n    #s = s.replace('T','V')\n\
    \    #s = s.replace('U','W')\n    #s = s.replace('V','X')\n    #s = s.replace('W','Y')\n\
    \    #s = s.replace('X','Z')\n    #s = s.replace('Y','A')\n    #s = s.replace('Z','B')\n\
    \    #result = s.lower()\n    #println(result)\n    alphabet = split(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n    new_alphabet = split(\"CDEFGHIJKLMNOPQRSTUVWXYZAB\")\n    new_s = \"\"\n\
    \    for letter in s\n        index = searchsortedfirst(alphabet, letter)\n  \
    \      if index != 0\n            new_s = new_s * new_alphabet[index]\n      \
    \  else\n            new_s = new_s * letter\n        end\n    end\n    new_s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpvihmnwuk.jl:63\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    isless(::SubString{String}, ::Char)\n  Closest candidates are:\n    isless(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:344\n    isless(::Any,
    !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:88\n    isless(!Matched::Missing,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:87\n    ...\n  Stacktrace:\n    [1]
    lt(o::Base.Order.ForwardOrdering, a::SubString{String}, b::Char)\n      @ Base.Order
    ./ordering.jl:109\n    [2] searchsortedfirst\n      @ ./sort.jl:184 [inlined]\n    [3]
    searchsortedfirst\n      @ ./sort.jl:295 [inlined]\n    [4] #searchsortedfirst#4\n      @
    ./sort.jl:297 [inlined]\n    [5] searchsortedfirst\n      @ ./sort.jl:297 [inlined]\n    [6]
    encrypt(s::String)\n      @ Main /tmp/tmpvihmnwuk.jl:49\n    [7] macro expansion\n      @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8]
    macro expansion\n      @ /tmp/tmpvihmnwuk.jl:63 [inlined]\n    [9] macro expansion\n      @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10]
    top-level scope\n      @ /tmp/tmpvihmnwuk.jl:62\ntest set: Error During Test at
    /tmp/tmpvihmnwuk.jl:64\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching isless(::SubString{String},
    ::Char)\n  Closest candidates are:\n    isless(::AbstractString, !Matched::AbstractString)
    at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:344\n    isless(::Any,
    !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:88\n    isless(!Matched::Missing,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:87\n    ...\n  Stacktrace:\n    [1]
    lt(o::Base.Order.ForwardOrdering, a::SubString{String}, b::Char)\n      @ Base.Order
    ./ordering.jl:109\n    [2] searchsortedfirst\n      @ ./sort.jl:184 [i'
  timestamp: 1659979453
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    n = length(s)\n    ret = \"\"\n    for i in 1:n\n        #print(s[i])\n\
    \        if s[i] == 'z'\n            ret = ret * \"b\"\n        elseif s[i] ==\
    \ 'y'\n            ret = ret * \"a\"\n        else\n            ret = ret * chr(Int(s[i])\
    \ + 2)\n        end\n    end\n    ret\nend\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpt1o2dzbz.jl:37\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpt1o2dzbz.jl:26\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpt1o2dzbz.jl:37 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpt1o2dzbz.jl:36\ntest set: Error During Test at
    /tmp/tmpt1o2dzbz.jl:38\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpt1o2dzbz.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt1o2dzbz.jl:38 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt1o2dzbz.jl:36\ntest set: Error
    During Test at /tmp/tmpt1o2dzbz.jl:39\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpt1o2dzbz.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt1o2dzbz.jl:39 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt1o2dzbz.jl:36\ntest set: Error
    During Test at /tmp/tmpt1o2dzbz.jl:40\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpt1o2dzbz.jl:26\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = lowercase(s)\n    alpha = \"abcdefghijklmnopqrstuvwxyz\"\n    mapped_alpha\
    \ = Dict{String,String}()\n    for i = 1:26\n        mapped_alpha[alpha[i]] =\
    \ alpha[i+2]\n    end\n    #  mapped_alpha[\"z\"] = \"b\"\n    #  mapped_alpha[\"\
    y\"] = \"a\"\n    return map(s) do x\n        mapped_alpha[x]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmph_ernfzf.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, String}, v0::Char, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    encrypt(s::String)\n     @ Main /tmp/tmph_ernfzf.jl:20\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmph_ernfzf.jl:33 [inlined]\n   [5] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmph_ernfzf.jl:32\n'''
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for i in s\n        encrypted = string(encrypted,\
    \ chr(Int(i)+2))\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpylnm7cvj.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpylnm7cvj.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpylnm7cvj.jl:27 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpylnm7cvj.jl:26\ntest set: Error During Test at
    /tmp/tmpylnm7cvj.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpylnm7cvj.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpylnm7cvj.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpylnm7cvj.jl:26\ntest set: Error
    During Test at /tmp/tmpylnm7cvj.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpylnm7cvj.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpylnm7cvj.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpylnm7cvj.jl:26\ntest set: Error
    During Test at /tmp/tmpylnm7cvj.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpylnm7cvj.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te'
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #using Base.rotate\n    #return rotate(s, 2*2)\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    for i in s\n        if i in alphabet\n            index_of_i = findall(x->x==i,\
    \ alphabet)[1]\n            push!(temp, alphabet[index_of_i + 2*2])\n        else\n\
    \            push!(temp, i)\n        end\n    end\n    return join(temp)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmptxohpjx6.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: temp not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmptxohpjx6.jl:22\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmptxohpjx6.jl:34 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmptxohpjx6.jl:33\ntest set: Error During Test at
    /tmp/tmptxohpjx6.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: temp not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmptxohpjx6.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmptxohpjx6.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmptxohpjx6.jl:33\ntest set: Error
    During Test at /tmp/tmptxohpjx6.jl:36\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: temp not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmptxohpjx6.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmptxohpjx6.jl:36 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmptxohpjx6.jl:33\ntest set: Error
    During Test at /tmp/tmptxohpjx6.jl:37\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: temp not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmptxohpjx6.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/sr'
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Alphabet is a string. \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    newstr = \"\"\n    for i in s\n        # Finds index of the character from\
    \ the string in the alphabet.\n        index = search(alphabet, i)\n        if\
    \ index == 26\n            # If an index is 26, the last character of the alphabet,\
    \ the\n            # new character is the first character of the alphabet.\n \
    \           newstr = newstr * alphabet[1]\n        elseif index == 25\n      \
    \      # If an index is 25, the second last character of the alphabet, \n    \
    \        # the new character is the second character of the alphabet.\n      \
    \      newstr = newstr * alphabet[2]\n        else\n            # Add 2 to the\
    \ index of the current character, to get the \n            # new character.\n\
    \            newstr = newstr * alphabet[index + 2]\n        end\n    end\n   \
    \ return newstr\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp3xffqdpa.jl:43\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: search not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3xffqdpa.jl:21\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xffqdpa.jl:43 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xffqdpa.jl:42\ntest set: Error
    During Test at /tmp/tmp3xffqdpa.jl:44\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3xffqdpa.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xffqdpa.jl:44 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xffqdpa.jl:42\ntest set: Error
    During Test at /tmp/tmp3xffqdpa.jl:45\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3xffqdpa.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xffqdpa.jl:45 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xffqdpa.jl:42\ntest set: Error
    During Test at /tmp/tmp3xffqdpa.jl:46\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: search not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3xffqdpa.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7'
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return rotatestring(s,2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpbd4wxs2_.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotatestring
    not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpbd4wxs2_.jl:16\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbd4wxs2_.jl:23 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbd4wxs2_.jl:22\ntest set: Error
    During Test at /tmp/tmpbd4wxs2_.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotatestring not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpbd4wxs2_.jl:16\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpbd4wxs2_.jl:24 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpbd4wxs2_.jl:22\ntest set: Error During Test at
    /tmp/tmpbd4wxs2_.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotatestring not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpbd4wxs2_.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbd4wxs2_.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbd4wxs2_.jl:22\ntest set: Error
    During Test at /tmp/tmpbd4wxs2_.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotatestring not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpbd4wxs2_.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot'
  timestamp: 1659979454
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = []\n    for char in s\n        if in(char, \"abcdefghijklmnopqrstuvwxyz\"\
    ) == true\n            encrypted_string.append(chr(ord(char) + 4))\n        elseif\
    \ in(char, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == true\n            encrypted_string.append(chr(ord(char)\
    \ + 4))\n        else\n            encrypted_string.append(char)\n        end\n\
    \    end\n    encrypted_string = join(encrypted_string)\n    return encrypted_string\n\
    end\n \n\"\"\"Create a function decrypt that takes a string as an argument and\n\
    \    returns a string decrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift up by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"kj\")\n    \"gf\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpuan7qent.jl:30\nin expression starting at /tmp/tmpuan7qent.jl:30\n"
  stdout: ''
  timestamp: 1659979453
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    newString = \"\"\n    for i in s\n        push!(newString, i+2)\n    end\n\
    \    return newString\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpi8myojfz.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpi8myojfz.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpi8myojfz.jl:27 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpi8myojfz.jl:26\ntest set: Error During Test at
    /tmp/tmpi8myojfz.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpi8myojfz.jl:18\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpi8myojfz.jl:28 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpi8myojfz.jl:26\ntest set: Error During Test at
    /tmp/tmpi8myojfz.jl:29\'
  timestamp: 1659979455
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in 1:length(s)\n        new_s = new_s * string(Char(s[i]\
    \ + 2 * 2))\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpse_uyor1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpse_uyor1.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpse_uyor1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpse_uyor1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpse_uyor1.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpse_uyor1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpse_uyor1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpse_uyor1.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpse_uyor1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpse_uyor1.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659979454
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_u = uppercase(s)\n    s_l = lowercase(s)\n    e_u = \"\"\n    e_l =\
    \ \"\"\n    for i in s_u\n        if i == 'Z'\n            e_u = e_u * \"B\"\n\
    \        elseif i == 'Y'\n            e_u = e_u * \"A\"\n        else\n      \
    \      e_u = e_u * string(char(int(Char(i)) + 2))\n        end\n    end\n    for\
    \ i in s_l\n        if i == 'z'\n            e_l = e_l * \"b\"\n        elseif\
    \ i == 'y'\n            e_l = e_l * \"a\"\n        else\n            e_l = e_l\
    \ * string(char(int(Char(i)) + 2))\n        end\n    end\n    e = e_u * e_l\n\
    \    return e\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp6_uvuezp.jl:43

    '
  stdout: "test set: Error During Test at /tmp/tmp6_uvuezp.jl:46\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_uvuezp.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6_uvuezp.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_uvuezp.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp6_uvuezp.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_uvuezp.jl:26\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6_uvuezp.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_uvuezp.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp6_uvuezp.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_uvuezp.jl:26\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp6_uvuezp.jl:48 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_uvuezp.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp6_uvuezp.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_uvuezp.jl:26\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/"
  timestamp: 1659979455
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_list = Array{Char}(undef,length(s))\n    s_list = collect(s)\n    for\
    \ i = 1:length(s)\n        if (s_list[i] == \"a\")\n            s_list[i] = \"\
    c\"\n        elseif (s_list[i] == \"b\")\n            s_list[i] = \"d\"\n    \
    \    elseif (s_list[i] == \"c\")\n            s_list[i] = \"e\"\n        elseif\
    \ (s_list[i] == \"d\")\n            s_list[i] = \"f\"\n        elseif (s_list[i]\
    \ == \"e\")\n            s_list[i] = \"g\"\n        elseif (s_list[i] == \"f\"\
    )\n            s_list[i] = \"h\"\n        elseif (s_list[i] == \"g\")\n      \
    \      s_list[i] = \"i\"\n        elseif (s_list[i] == \"h\")\n            s_list[i]\
    \ = \"j\"\n        elseif (s_list[i] == \"i\")\n            s_list[i] = \"k\"\n\
    \        elseif (s_list[i] == \"j\")\n            s_list[i] = \"l\"\n        elseif\
    \ (s_list[i] == \"k\")\n            s_list[i] = \"m\"\n        elseif (s_list[i]\
    \ == \"l\")\n            s_list[i] = \"n\"\n        elseif (s_list[i] == \"m\"\
    )\n            s_list[i] = \"o\"\n        elseif (s_list[i] == \"n\")\n      \
    \      s_list[i] = \"p\"\n        elseif (s_list[i] == \"o\")\n            s_list[i]\
    \ = \"q\"\n        elseif (s_list[i] == \"p\")\n            s_list[i] = \"r\"\n\
    \        elseif (s_list[i] == \"q\")\n            s_list[i] = \"s\"\n        elseif\
    \ (s_list[i] == \"r\")\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumx7__os.jl:1\nin expression starting at /tmp/tmpumx7__os.jl:1\n"
  stdout: ''
  timestamp: 1659979453
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary to replace the first alphabet with the shifted one\n\
    \    a = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"\
    g\", \n             \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"\
    j\"=>\"l\", \n             \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"\
    p\", \"o\"=>\"q\", \n             \"p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"\
    s\"=>\"u\", \"t\"=>\"v\", \n             \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"\
    y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    # Create an array to hold\
    \ the output\n    output = []\n    # Create a for loop to loop through each character\
    \ in the string\n    for i in s\n        # Append the replaced characters to the\
    \ output array\n        push!(output,a[i])\n    end\n    # Join the output array\
    \ and return it as a string\n    return join(output,\"\")\nend;\n \n    \"\"\"\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift up by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"kj\")\n    \"gf\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp06fybkj3.jl:33\nin expression starting at /tmp/tmp06fybkj3.jl:33\n"
  stdout: ''
  timestamp: 1659979454
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_lower = lowercase(s) #convert to lower case to avoid errors\n    s_length\
    \ = length(s_lower)\n    s_type = typeof(s_lower) #determine type\n    s_code_list\
    \ = []\n    s_code_list_encrypt = []\n    s_encrypt = \"\"\n    if (s_type ==\
    \ ASCIIString)\n        s_code_list = [Int(x) for x in s_lower] #convert each\
    \ character to code\n        for i = 1:s_length\n            if(s_code_list[i]\
    \ >= 119) #if it's over 119, then start from 97\n                s_code_list_encrypt[i]\
    \ = s_code_list[i] - 23\n            else\n                s_code_list_encrypt[i]\
    \ = s_code_list[i] + 2\n            end\n        end\n        s_encrypt = String(Char.(s_code_list_encrypt))\
    \ #convert back to character\n    else\n        println(\"Not a String!\")\n \
    \   end\n    return s_encrypt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpksipdh2_.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmpksipdh2_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ASCIIString not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpksipdh2_.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksipdh2_.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksipdh2_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpksipdh2_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ASCIIString not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpksipdh2_.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpksipdh2_.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksipdh2_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpksipdh2_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ASCIIString not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpksipdh2_.jl:22\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpksipdh2_.jl:44 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpksipdh2_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpksipdh2_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ASCIIString not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpksipdh2_.jl:22\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   "
  timestamp: 1659979455
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #:=:=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    encrypted::String=\"\
    \"\n    alphabet::String=\"abcdefghijklmnopqrstuvwxyz\"\n    for letter in s\n\
    \        encrypted=encrypted*alphabet[mod(alphabet.find(letter)+3,26)+1]\n   \
    \ end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpj878580_.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpj878580_.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj878580_.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj878580_.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj878580_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpj878580_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj878580_.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj878580_.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj878580_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpj878580_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj878580_.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj878580_.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj878580_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpj878580_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encry"
  timestamp: 1659979455
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for c in s\n        print(string(chr(c + 2)))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpoo70m6mw.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpoo70m6mw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoo70m6mw.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoo70m6mw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoo70m6mw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpoo70m6mw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoo70m6mw.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoo70m6mw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoo70m6mw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpoo70m6mw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoo70m6mw.jl:17\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpoo70m6mw.jl:27 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoo70m6mw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpoo70m6mw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoo70m6mw.jl:17\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/"
  timestamp: 1659979455
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i = 1:length(s)\n        if !(s[i] in ('z','y'))\n\
    \            if s[i] in ('a'):\n                new_string += \"c\"\n        \
    \    elseif s[i] in ('b'):\n                new_string += \"d\"\n            else\n\
    \                new_string += chr(Int(s[i]) + 2)\n            end\n        else\n\
    \            if s[i] in ('z'):\n                new_string += \"b\"\n        \
    \    else\n                new_string += \"a\"\n            end\n        end\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpydy7unpy.jl:20\nin expression starting at\
    \ /tmp/tmpydy7unpy.jl:20\n"
  stdout: ''
  timestamp: 1659979454
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_alphabet=alphabet[3:26]*2\n\
    \    new_string=\"\"\n    for c in s\n        new_string*=string(encrypted_alphabet[indexin(alphabet,c)])\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmptdrupfme.jl:29\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    *(::String, ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any,
    !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:88\n    *(::Union{AbstractChar,
    AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmptdrupfme.jl:17\n   [2] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmptdrupfme.jl:29 [inlined]\n   [4] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmptdrupfme.jl:28\n'''
  timestamp: 1659979457
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\"]\n    output = \"\"\n    for x in s\n        i = search(alphabet,x)\n\
    \        output = output * alphabet[i+2]\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpd7smq7n3.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpd7smq7n3.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd7smq7n3.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd7smq7n3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7smq7n3.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd7smq7n3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd7smq7n3.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd7smq7n3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7smq7n3.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd7smq7n3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpd7smq7n3.jl:19\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpd7smq7n3.jl:31 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7smq7n3.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd7smq7n3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpd7smq7n3.jl:19\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n"
  timestamp: 1659979456
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = map(s) do x \n        y = x - 97\n        z = y - 2*2\n        if\
    \ z < 0\n            z = z + 26\n        end\n        z + 97\n    end\n    return\
    \ string(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpsymfix43.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpsymfix43.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ isless(::Char, ::Int64)\n  Closest candidates are:\n    isless(!Matched::AbstractFloat,\
    \ ::Real) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:186\n    isless(!Matched::Real,\
    \ ::Real) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:430\n    isless(::Any,\
    \ !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:88\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Char, y::Int64)\n     @ Base ./operators.jl:352\n\
    \   [2] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmpsymfix43.jl:19\n   [3] map(f::var\"\
    #1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmpsymfix43.jl:16\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsymfix43.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsymfix43.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpsymfix43.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  InexactError: trunc(UInt32, -4)\n\
    \  Stacktrace:\n    [1] throw_inexacterror(f::Symbol, #unused#::Type{UInt32},\
    \ val::Int64)\n      @ Core ./boot.jl:612\n    [2] checked_trunc_uint\n      @\
    \ ./boot.jl:642 [inlined]\n    [3] toUInt32\n      @ ./boot.jl:726 [inlined]\n\
    \    [4] UInt32\n      @ ./boot.jl:766 [inlined]\n    [5] -\n      @ ./char.jl:232\
    \ [inlined]\n    [6] (::var\"#1#2\")(x::Char)\n      @ Main /tmp/tmpsymfix43.jl:18\n\
    \    [7] map(f::var\"#1#2\", s::String)\n      @ Base ./strings/basic.jl:610\n\
    \    [8] encrypt(s::String)\n      @ Main /tmp/tmpsymfix43.jl:16\n    [9] macro\
    \ expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpsymfix43.jl:32 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test"
  timestamp: 1659979457
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    x = length(s)\n    result = \"\"\n    for i in s\n        i = ord(i)\n\
    \        if i >= 97 && i <= 122\n            i = i - 122 + (2*2) + 122\n     \
    \   end\n        if i >= 65 && i <= 90\n            i = i - 90 + (2*2) + 90\n\
    \        end\n        result = result * string(Char(i))\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp_xnlzqn1.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmp_xnlzqn1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_xnlzqn1.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_xnlzqn1.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_xnlzqn1.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_xnlzqn1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_xnlzqn1.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_xnlzqn1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_xnlzqn1.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_xnlzqn1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp_xnlzqn1.jl:19\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp_xnlzqn1.jl:37 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_xnlzqn1.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_xnlzqn1.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp_xnlzqn1.jl:19\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/"
  timestamp: 1659979456

name: HumanEval_81_numerical_letter_grade
language: jl
prompt: "\"\"\"It is the last week of the semester and the teacher has to give the\
  \ grades\n    to students. The teacher has been making her own algorithm for grading.\n\
  \    The only problem is, she has lost the code she used for grading.\n    She has\
  \ given you a vector of GPAs for some students and you have to write \n    a function\
  \ that can output a vector of letter grades using the following table:\n       \
  \      GPA       |    Letter grade\n              4.0                A+\n      \
  \      > 3.7                A \n            > 3.3                A- \n         \
  \   > 3.0                B+\n            > 2.7                B \n            >\
  \ 2.3                B-\n            > 2.0                C+\n            > 1.7\
  \                C\n            > 1.3                C-\n            > 1.0     \
  \           D+ \n            > 0.7                D \n            > 0.0        \
  \        D-\n              0.0                E\n    \n\n    Example:\n    >>> grade_equation([4.0,\
  \ 3, 1.7, 2, 3.5])\n    [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \"\"\"\nfunction\
  \ numerical_letter_grade(grades::Vector{Float64})::Vector{String} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
  \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
  \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
  \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"\
  C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
completions: ["    letter_grades = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\",\
    \ \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    rating = [4.0, 3.7,\
    \ 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    grade_indices =\
    \ zeros(Int,length(grades))\n    for i in eachindex(grades)\n        for j in\
    \ eachindex(rating)\n            if grades[i] >= rating[j]\n                grade_indices[i]\
    \ = j\n                break\n            end\n        end\n    end\n    return\
    \ letter_grades[grade_indices]\nend", "    letter_grades = fill(\"\", length(grades))\n\
    \    for i in eachindex(grades)\n        numerical_grade = grades[i]\n       \
    \ if numerical_grade > 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ numerical_grade > 3.7\n            letter_grades[i] = \"A\"\n        elseif\
    \ numerical_grade > 3.3\n            letter_grades[i] = \"A-\"\n        elseif\
    \ numerical_grade > 3.0\n            letter_grades[i] = \"B+\"\n        elseif\
    \ numerical_grade > 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ numerical_grade > 2.3\n            letter_grades[i] = \"B-\"\n        elseif\
    \ numerical_grade > 2.0\n            letter_grades[i] = \"C+\"\n        elseif\
    \ numerical_grade > 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ numerical_grade > 1.3\n            letter_grades[i] = \"C-\"\n        elseif\
    \ numerical_grade > 1.0\n            letter_grades[i] = \"D+\"\n        elseif\
    \ numerical_grade > 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ numerical_grade > 0.0\n            letter_grades[i] = \"D-\"\n        else\n\
    \            letter_grades[i] = \"E\"\n        end\n    end\n    return letter_grades\n\
    end", "        letter_grade_table = [\n        (4.0, \"A+\"), \n        (3.7,\
    \ \"A\"), \n        (3.3, \"A-\"), \n        (3.0, \"B+\"), \n        (2.7, \"\
    B\"), \n        (2.3, \"B-\"), \n        (2.0, \"C+\"), \n        (1.7, \"C\"\
    ), \n        (1.3, \"C-\"), \n        (1.0, \"D+\"), \n        (0.7, \"D\"), \n\
    \        (0.0, \"D-\"), \n        (0.0, \"E\")]\n    letter_grades = []\n    for\
    \ i in 1:length(grades)\n        for j in 1:length(letter_grade_table)\n     \
    \       if grades[i] >= letter_grade_table[j][1]\n                push!(letter_grades,\
    \ letter_grade_table[j][2])\n                break\n            end\n        end\n\
    \    end\n    return letter_grades\nend", "    \n    #if length(grades) == 0 #\
    \ check if the vector is empty\n        #return error(\"Empty Vector\")\n    #end\n\
    \    answer = []\n    for i in grades \n        if i > 4.0 \n            append!(answer,\
    \ \"A+\")\n        elseif 3.7 < i <= 4.0\n            append!(answer, \"A\")\n\
    \        elseif 3.3 < i <= 3.7\n            append!(answer, \"A-\")\n        elseif\
    \ 3.0 < i <= 3.3\n            append!(answer, \"B+\")\n        elseif 2.7 < i\
    \ <= 3.0\n            append!(answer, \"B\")\n        elseif 2.3 < i <= 2.7\n\
    \            append!(answer, \"B-\")\n        elseif 2.0 < i <= 2.3\n        \
    \    append!(answer, \"C+\")\n        elseif 1.7 < i <= 2.0\n            append!(answer,\
    \ \"C\")\n        elseif 1.3 < i <= 1.7\n            append!(answer, \"C-\")\n\
    \        elseif 1.0 < i <= 1.3\n            append!(answer, \"D+\")\n        elseif\
    \ 0.7 < i <= 1.0\n            append!(answer, \"D\")\n        elseif 0.0 < i <=\
    \ 0.7\n            append!(answer, \"D-\")\n        else 0.0 == i\n          \
    \  append!(answer, \"E\")\n        end\n    end\n    return answer\nend", "  \
    \  num_letter_vec = Vector{String}(length(grades))\n    for i = 1:length(grades)\n\
    \        gpa = grades[i]\n        if gpa >= 4.0\n            num_letter_vec[i]\
    \ = \"A+\"\n        elseif gpa >= 3.7 && gpa < 4.0\n            num_letter_vec[i]\
    \ = \"A\"\n        elseif gpa >= 3.3 && gpa < 3.7\n            num_letter_vec[i]\
    \ = \"A-\"\n        elseif gpa >= 3.0 && gpa < 3.3\n            num_letter_vec[i]\
    \ = \"B+\"\n        elseif gpa >= 2.7 && gpa < 3.0\n            num_letter_vec[i]\
    \ = \"B\"\n        elseif gpa >= 2.3 && gpa < 2.7\n            num_letter_vec[i]\
    \ = \"B-\"\n        elseif gpa >= 2.0 && gpa < 2.3\n            num_letter_vec[i]\
    \ = \"C+\"\n        elseif gpa >= 1.7 && gpa < 2.0\n            num_letter_vec[i]\
    \ = \"C\"\n        elseif gpa >= 1.3 && gpa < 1.7\n            num_letter_vec[i]\
    \ = \"C-\"\n        elseif gpa >= 1.0 && gpa < 1.3\n            num_letter_vec[i]\
    \ = \"D+\"\n        elseif gpa >= 0.7 && gpa < 1.0\n            num_letter_vec[i]\
    \ = \"D\"\n        elseif gpa >= 0.0 && gpa < 0.7\n            num_letter_vec[i]\
    \ = \"D-\"\n        elseif gpa == 0.0\n            num_letter_vec[i] = \"E\"\n\
    \        end\n    end\n    return num_letter_vec\nend", "    for i in 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            grades[i] = \"A+\"\n        elseif grades[i]\
    \ > 3.7\n            grades[i] = \"A\"\n        elseif grades[i] > 3.3\n     \
    \       grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n            grades[i]\
    \ = \"B+\"\n        elseif grades[i] > 2.7\n            grades[i] = \"B\"\n  \
    \      elseif grades[i] > 2.3\n            grades[i] = \"B-\"\n        elseif\
    \ grades[i] > 2.0\n            grades[i] = \"C+\"\n        elseif grades[i] >\
    \ 1.7\n            grades[i] = \"C\"\n        elseif grades[i] > 1.3\n       \
    \     grades[i] = \"C-\"\n        elseif grades[i] > 1.0\n            grades[i]\
    \ = \"D+\"\n        elseif grades[i] > 0.7\n            grades[i] = \"D\"\n  \
    \      elseif grades[i] > 0.0\n            grades[i] = \"D-\"\n        elseif\
    \ grades[i] == 0.0\n            grades[i] = \"E\"\n        end\n    end\n    return\
    \ grades\nend", "    \"\"\"It is the last week of the semester and the teacher\
    \ has to give the grades\n    to students. The teacher has been making her own\
    \ algorithm for grading.\n    The only problem is, she has lost the code she used\
    \ for grading.\n    She has given you a vector of GPAs for some students and you\
    \ have to write \n    a function that can output a vector of letter grades using\
    \ the following table:\n             GPA       |    Letter grade\n           \
    \   4.0                A+\n            > 3.7                A \n            >\
    \ 3.3                A- \n            > 3.0                B+\n            > 2.7\
    \                B \n            > 2.3                B-\n            > 2.0  \
    \              C+\n            > 1.7                C\n            > 1.3     \
    \           C-\n            > 1.0                D+ \n            > 0.7      \
    \          D \n            > 0.0                D-\n              0.0        \
    \        E\n    ", "    \"\"\"\n    Given a vector of GPAs, it returns a vector\
    \ of letter grades.\n    \"\"\"\n    letter_grades = []\n    for i in grades\n\
    \        if i == 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ i > 3.7\n            push!(letter_grades, \"A\")\n        elseif i > 3.3\n \
    \           push!(letter_grades, \"A-\")\n        elseif i > 3.0\n           \
    \ push!(letter_grades, \"B+\")\n        elseif i > 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif i > 2.3\n            push!(letter_grades, \"B-\")\n \
    \       elseif i > 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ i > 1.7\n            push!(letter_grades, \"C\")\n        elseif i > 1.3\n \
    \           push!(letter_grades, \"C-\")\n        elseif i > 1.0\n           \
    \ push!(letter_grades, \"D+\")\n        elseif i > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif i > 0.0\n            push!(letter_grades, \"D-\")\n \
    \       elseif i == 0.0\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    \"\"\"\n    Translates the numerical\
    \ grades in a vector to letter grades and outputs a\n    vector of letter grades.\n\
    \    \"\"\"\n    letters = []\n    for i in 1:length(grades)\n        if grades[i]\
    \ >= 4.0\n            push!(letters, \"A+\")\n        elseif grades[i] >= 3.7\n\
    \            push!(letters, \"A\")\n        elseif grades[i] >= 3.3\n        \
    \    push!(letters, \"A-\")\n        elseif grades[i] >= 3.0\n            push!(letters,\
    \ \"B+\")\n        elseif grades[i] >= 2.7\n            push!(letters, \"B\")\n\
    \        elseif grades[i] >= 2.3\n            push!(letters, \"B-\")\n       \
    \ elseif grades[i] >= 2.0\n            push!(letters, \"C+\")\n        elseif\
    \ grades[i] >= 1.7\n            push!(letters, \"C\")\n        elseif grades[i]\
    \ >= 1.3\n            push!(letters, \"C-\")\n        elseif grades[i] >= 1.0\n\
    \            push!(letters, \"D+\")\n        elseif grades[i] >= 0.7\n       \
    \     push!(letters, \"D\")\n        elseif grades[i] >= 0.0\n            push!(letters,\
    \ \"D-\")\n        else\n            push!(letters, \"E\")\n        end\n    end\n\
    \    return letters\nend", "    grades_letter = [\"E\" for i in 1:length(grades)]\n\
    \    for i in 1:length(grades)\n        if grades[i] == 4.0\n            grades_letter[i]\
    \ = \"A+\"\n        elseif 3.7 <= grades[i] < 4.0\n            grades_letter[i]\
    \ = \"A\"\n        elseif 3.3 <= grades[i] < 3.7\n            grades_letter[i]\
    \ = \"A-\"\n        elseif 3.0 <= grades[i] < 3.3\n            grades_letter[i]\
    \ = \"B+\"\n        elseif 2.7 <= grades[i] < 3.0\n            grades_letter[i]\
    \ = \"B\"\n        elseif 2.3 <= grades[i] < 2.7\n            grades_letter[i]\
    \ = \"B-\"\n        elseif 2.0 <= grades[i] < 2.3\n            grades_letter[i]\
    \ = \"C+\"\n        elseif 1.7 <= grades[i] < 2.0\n            grades_letter[i]\
    \ = \"C\"\n        elseif 1.3 <= grades[i] < 1.7\n            grades_letter[i]\
    \ = \"C-\"\n        elseif 1.0 <= grades[i] < 1.3\n            grades_letter[i]\
    \ = \"D+\"\n        elseif 0.7 <= grades[i] < 1.0\n            grades_letter[i]\
    \ = \"D\"\n        elseif 0.0 <= grades[i] < 0.7\n            grades_letter[i]\
    \ = \"D-\"\n        else\n            grades_letter[i] = \"E\"\n        end\n\
    \    end\n    return grades_letter\nend", "    \"\"\"The function numerical_letter_grade\
    \ takes in a vector of float \n    grades, converts them to letter grades and\
    \ returns a vector of \n    letter grades\"\"\"\n    letter_grades = [\"A+\",\
    \ \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\",\
    \ \"D-\", \"E\"]\n    output = []\n    for i in grades\n        if i > 4.0\n \
    \           push!(output, \"A+\")\n        elseif i > 3.7\n            push!(output,\
    \ \"A\")\n        elseif i > 3.3\n            push!(output, \"A-\")\n        elseif\
    \ i > 3.0\n            push!(output, \"B+\")\n        elseif i > 2.7\n       \
    \     push!(output, \"B\")\n        elseif i > 2.3\n            push!(output,\
    \ \"B-\")\n        elseif i > 2.0\n            push!(output, \"C+\")\n       \
    \ elseif i > 1.7\n            push!(output, \"C\")\n        elseif i > 1.3\n \
    \           push!(output, \"C-\")\n        elseif i > 1.0\n            push!(output,\
    \ \"D+\")\n        elseif i > 0.7\n            push!(output, \"D\")\n        elseif\
    \ i > 0.0\n            push!(output, \"D-\")\n        else\n            push!(output,\
    \ \"E\")\n        end\n    end\n    return output\nend", "    # Initialize an\
    \ empty vector to store grades \n    lettered_grades = String[]\n    # Loop through\
    \ grades\n    for i = 1:length(grades)\n        # Check what grade a student earned\n\
    \        if grades[i] >= 4.0\n            # If a student earned an A+, append\
    \ to vector\n            push!(lettered_grades, \"A+\")\n        elseif grades[i]\
    \ >= 3.7\n            # If a student earned an A, append to vector\n         \
    \   push!(lettered_grades, \"A\")\n        elseif grades[i] >= 3.3\n         \
    \   # If a student earned an A-, append to vector\n            push!(lettered_grades,\
    \ \"A-\")\n        elseif grades[i] >= 3.0\n            # If a student earned\
    \ an B+, append to vector\n            push!(lettered_grades, \"B+\")\n      \
    \  elseif grades[i] >= 2.7\n            # If a student earned an B, append to\
    \ vector\n            push!(lettered_grades, \"B\")\n        elseif grades[i]\
    \ >= 2.3\n            # If a student earned an B-, append to vector\n        \
    \    push!(lettered_grades, \"B-\")\n        elseif grades[i] >= 2.0\n       \
    \     # If a student earned an C+, append to vector\n            push!(lettered_grades,\
    \ \"C+\")\n        elseif grades[i] >= 1.7\n            # If a student earned\
    \ an C, append to vector\n            push!(lettered_grades, \"C\")\n        elseif\
    \ grades[i] >= 1.3\n            # If a student earned an C-, append to vector\n\
    \            push!(lettered_grades, \"C-\")\n        elseif grades[i] >= 1.0\n\
    \            # If a student earned an D+, append to vector\n            push!(lettered_grades,\
    \ \"D+\")\n        elseif grades[i] >= 0.7\n            # If a student earned\
    \ an D, append to vector\n            push!(lettered_grades, \"D\")\n        elseif\
    \ grades[i] >= 0.0\n            # If a student earned an D-, append to vector\n\
    \            push!(lettered_grades, \"D-\")\n       ", "    grade = [\"A+\", \"\
    A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"\
    , \"E\"]\n    grade_limits = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0,\
    \ 0.7, 0.0, 0.0]\n    grades_compare = repeat(grade_limits, outer=length(grades))\n\
    \    grades_transpose = repeat(grades, length(grade_limits))\n    final_grade\
    \ = map(x->x>y ? x : y, grades_compare, grades_transpose)\n    return grade[sum(final_grade,\
    \ dims=1)[2,:]]", "    grade = []\n    for x in grades\n        if x >= 4.0\n\
    \            push!(grade, \"A+\")\n        elseif x >= 3.7\n            push!(grade,\
    \ \"A\")\n        elseif x >= 3.3\n            push!(grade, \"A-\")\n        elseif\
    \ x >= 3.0\n            push!(grade, \"B+\")\n        elseif x >= 2.7\n      \
    \      push!(grade, \"B\")\n        elseif x >= 2.3\n            push!(grade,\
    \ \"B-\")\n        elseif x >= 2.0\n            push!(grade, \"C+\")\n       \
    \ elseif x >= 1.7\n            push!(grade, \"C\")\n        elseif x >= 1.3\n\
    \            push!(grade, \"C-\")\n        elseif x >= 1.0\n            push!(grade,\
    \ \"D+\")\n        elseif x >= 0.7\n            push!(grade, \"D\")\n        elseif\
    \ x >= 0.0\n            push!(grade, \"D-\")\n        else\n            push!(grade,\
    \ \"E\")\n        end\n    end\n    return grade\nend", "    \n    # create a\
    \ vector of letters\n    letters = String[]\n    \n    # iterate through the grades\
    \ vector\n    for grade in grades\n        # push a letter onto the end of the\
    \ letters vector based on the \n        # corresponding grade\n        if grade\
    \ == 4.0\n            push!(letters, \"A+\")\n        elseif grade > 3.7\n   \
    \         push!(letters, \"A\")\n        elseif grade > 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(letters, \"B+\")\n  \
    \      elseif grade > 2.7\n            push!(letters, \"B\")\n        elseif grade\
    \ > 2.3\n            push!(letters, \"B-\")\n        elseif grade > 2.0\n    \
    \        push!(letters, \"C+\")\n        elseif grade > 1.7\n            push!(letters,\
    \ \"C\")\n        elseif grade > 1.3\n            push!(letters, \"C-\")\n   \
    \     elseif grade > 1.0\n            push!(letters, \"D+\")\n        elseif grade\
    \ > 0.7\n            push!(letters, \"D\")\n        elseif grade > 0.0\n     \
    \       push!(letters, \"D-\")\n        else\n            push!(letters, \"E\"\
    )\n        end\n    end\n    return letters\nend", "    # p.s. there are better\
    \ ways to implement this like \n    #       numerical_letter_grade(grades) = map(grade\
    \ -> get(grades_to_letter, grade, \"E\"), grades)\n    #       but I tried to\
    \ keep it simple for this problem\n    grades_to_letter = Dict(4.0 => \"A+\",\
    \ 3.7 => \"A\", 3.3 => \"A-\", 3.0 => \"B+\", 2.7 => \"B\", 2.3 => \"B-\", 2.0\
    \ => \"C+\", 1.7 => \"C\", 1.3 => \"C-\", 1.0 => \"D+\", 0.7 => \"D\", 0.0 =>\
    \ \"D-\")\n    letter_grades = Vector{String}(undef, length(grades))\n    for\
    \ (i, grade) in enumerate(grades)\n        letter_grades[i] = grades_to_letter[floor(grade*10)/10]\
    \ == nothing ? \"E\" : grades_to_letter[floor(grade*10)/10]\n    end\n    return\
    \ letter_grades\nend", "    letter_grades = [0 for x in 1:length(grades)]\n  \
    \  for x in 1:length(grades)\n        if grades[x] >= 4.0\n            letter_grades[x]\
    \ = \"A+\"\n        elseif grades[x] >= 3.7\n            letter_grades[x] = \"\
    A\"\n        elseif grades[x] >= 3.3\n            letter_grades[x] = \"A-\"\n\
    \        elseif grades[x] >= 3.0\n            letter_grades[x] = \"B+\"\n    \
    \    elseif grades[x] >= 2.7\n            letter_grades[x] = \"B\"\n        elseif\
    \ grades[x] >= 2.3\n            letter_grades[x] = \"B-\"\n        elseif grades[x]\
    \ >= 2.0\n            letter_grades[x] = \"C+\"\n        elseif grades[x] >= 1.7\n\
    \            letter_grades[x] = \"C\"\n        elseif grades[x] >= 1.3\n     \
    \       letter_grades[x] = \"C-\"\n        elseif grades[x] >= 1.0\n         \
    \   letter_grades[x] = \"D+\"\n        elseif grades[x] >= 0.7\n            letter_grades[x]\
    \ = \"D\"\n        elseif grades[x] >= 0.0\n            letter_grades[x] = \"\
    D-\"\n        elseif grades[x] >= 0.0\n            letter_grades[x] = \"E\"\n\
    \        end\n    end\n    \n    return letter_grades\nend", "    grade_array\
    \ = []\n    for gpas in grades\n        if gpas >= 4.0\n            push!(grade_array,\
    \ \"A+\")\n        elseif gpas >= 3.7\n            push!(grade_array, \"A\")\n\
    \        elseif gpas >= 3.3\n            push!(grade_array, \"A-\")\n        elseif\
    \ gpas >= 3.0\n            push!(grade_array, \"B+\")\n        elseif gpas >=\
    \ 2.7\n            push!(grade_array, \"B\")\n        elseif gpas >= 2.3\n   \
    \         push!(grade_array, \"B-\")\n        elseif gpas >= 2.0\n           \
    \ push!(grade_array, \"C+\")\n        elseif gpas >= 1.7\n            push!(grade_array,\
    \ \"C\")\n        elseif gpas >= 1.3\n            push!(grade_array, \"C-\")\n\
    \        elseif gpas >= 1.0\n            push!(grade_array, \"D+\")\n        elseif\
    \ gpas >= 0.7\n            push!(grade_array, \"D\")\n        elseif gpas >= 0.0\n\
    \            push!(grade_array, \"D-\")\n        elseif gpas == 0.0\n        \
    \    push!(grade_array, \"E\")\n        end\n    end\n    return grade_array\n\
    end", "    letter_grades = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\"\
    , \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"] \n    numerical_grades = [4.0,\
    \ 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    letter_grades_return\
    \ = []\n    n = length(grades)\n    k = length(numerical_grades)\n    for i in\
    \ 1:n\n        for j in 1:k \n            if grades[i] >= numerical_grades[j]\n\
    \                push!(letter_grades_return, letter_grades[j])\n             \
    \   break\n            end\n        end\n    end\n    return letter_grades_return\n\
    end", "    # Define variables\n    new_grades = []\n    letter_grades = [\"A+\"\
    , \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\",\
    \ \"D-\", \"E\"]\n    grade_ranges = [(4.0,3.7), (3.7,3.3), (3.3,3.0), (3.0,2.7),\
    \ (2.7,2.3), (2.3,2.0), (2.0,1.7), (1.7,1.3), (1.3,1.0), (1.0,0.7), (0.7,0.0),\
    \ (0.0,0.0)]", "    letter_grades = []\n    for i in grades\n        if i == 4.0\n\
    \            push!(letter_grades, \"A+\")\n        elseif i > 3.7\n          \
    \  push!(letter_grades, \"A\")\n        elseif i > 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif i > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif i > 2.7\n            push!(letter_grades, \"B\")\n        elseif\
    \ i > 2.3\n            push!(letter_grades, \"B-\")\n        elseif i > 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif i > 1.7\n          \
    \  push!(letter_grades, \"C\")\n        elseif i > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif i > 1.0\n            push!(letter_grades, \"D+\")\n\
    \        elseif i > 0.7\n            push!(letter_grades, \"D\")\n        elseif\
    \ i > 0.0\n            push!(letter_grades, \"D-\")\n        else\n          \
    \  push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    # your code goes here\n    return output\nend", "    grade=[\"A+\"\
    ,\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\",\"E\"\
    ]\n    grade_dict= Dict(4.0=>\"A+\", 3.7=>\"A\", 3.3=>\"A-\", 3.0=>\"B+\", 2.7=>\"\
    B\", 2.3=>\"B-\", 2.0=>\"C+\", 1.7=>\"C\", 1.3=>\"C-\", 1.0=>\"D+\", 0.7=>\"D\"\
    , 0.0=>\"D-\", 0.0=>\"E\")\n    grades_num=[]\n    for grade in grades\n     \
    \   push!(grades_num, grade_dict[grade])\n    end\n    return grades_num\nend",
  "    grades = [4.0, 3, 1.7, 2, 3.5]\n    @assert 3 in grades \n    @assert 1.7 in\
    \ grades\n    @assert 4.0 in grades\n    @assert 2 in grades\n    @assert 3.5\
    \ in grades\n    @assert typeof(grades) == Vector{Float64}\n    @assert length(grades)\
    \ > 0\n    letter_grade = []\n    for i in grades\n        if i == 4.0\n     \
    \       push!(letter_grade, \"A+\")\n        elseif i > 3.7\n            push!(letter_grade,\
    \ \"A\")\n        elseif i > 3.3\n            push!(letter_grade, \"A-\")\n  \
    \      elseif i > 3.0\n            push!(letter_grade, \"B+\")\n        elseif\
    \ i > 2.7\n            push!(letter_grade, \"B\")\n        elseif i > 2.3\n  \
    \          push!(letter_grade, \"B-\")\n        elseif i > 2.0\n            push!(letter_grade,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(letter_grade, \"C\")\n  \
    \      elseif i > 1.3\n            push!(letter_grade, \"C-\")\n        elseif\
    \ i > 1.0\n            push!(letter_grade, \"D+\")\n        elseif i > 0.7\n \
    \           push!(letter_grade, \"D\")\n        elseif i > 0.0\n            push!(letter_grade,\
    \ \"D-\")\n        else\n            push!(letter_grade, \"E\")\n        end\n\
    \    end\n    return letter_grade\nend", "    # Define the function \n    string_grades\
    \ = []\n    for grade in grades\n        if grade >= 4.0\n            push!(string_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(string_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(string_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(string_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(string_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(string_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(string_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(string_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(string_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(string_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(string_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(string_grades, \"D-\")\n   \
    \     else\n            push!(string_grades, \"E\")\n        end\n    end\n  \
    \  return string_grades\nend", "    \n    #make new vector of strings\n    new_grades\
    \ = []\n    \n    #loop through elements\n    for i in 1:length(grades)\n    \
    \    if grades[i] >= 4.0\n            push!(new_grades, \"A+\")\n        elseif\
    \ grades[i] > 3.7\n            push!(new_grades, \"A\")\n        elseif grades[i]\
    \ > 3.3\n            push!(new_grades, \"A-\")\n        elseif grades[i] > 3.0\n\
    \            push!(new_grades, \"B+\")\n        elseif grades[i] > 2.7\n     \
    \       push!(new_grades, \"B\")\n        elseif grades[i] > 2.3\n           \
    \ push!(new_grades, \"B-\")\n        elseif grades[i] > 2.0\n            push!(new_grades,\
    \ \"C+\")\n        elseif grades[i] > 1.7\n            push!(new_grades, \"C\"\
    )\n        elseif grades[i] > 1.3\n            push!(new_grades, \"C-\")\n   \
    \     elseif grades[i] > 1.0\n            push!(new_grades, \"D+\")\n        elseif\
    \ grades[i] > 0.7\n            push!(new_grades, \"D\")\n        elseif grades[i]\
    \ > 0.0\n            push!(new_grades, \"D-\")\n        elseif grades[i] == 0.0\n\
    \            push!(new_grades, \"E\")\n        end\n    end\n    \n    return\
    \ new_grades\nend", "    letter_grades = [\"A+\", \"A\", \"A-\", \"B+\", \"B\"\
    , \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    numeric_grade\
    \ = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    new_grades\
    \ = Vector{String}(undef, length(grades))\n    for i in 1:length(grades)\n   \
    \     for j in 1:length(numeric_grade)\n            if grades[i] >= numeric_grade[j]\n\
    \                new_grades[i] = letter_grades[j]\n                break\n   \
    \         end\n        end\n    end\n    return new_grades\nend", "    \n    function\
    \ assign_letter_grade(grade::Float64)::String\n        if grade < 0.7\n      \
    \      return \"E\"\n        elseif grade < 1.0\n            return \"D-\"\n \
    \       elseif grade < 1.3\n            return \"D\"\n        elseif grade < 1.7\n\
    \            return \"D+\"\n        elseif grade < 2.0\n            return \"\
    C-\"\n        elseif grade < 2.3\n            return \"C\"\n        elseif grade\
    \ < 2.7\n            return \"C+\"\n        elseif grade < 3.0\n            return\
    \ \"B-\"\n        elseif grade < 3.3\n            return \"B\"\n        elseif\
    \ grade < 3.7\n            return \"B+\"\n        elseif grade < 4.0\n       \
    \     return \"A-\"\n        else\n            return \"A+\"\n        end\n  \
    \  end\n    \n    return [assign_letter_grade(x) for x in grades]\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    for i in 1:length(grades)\n        if grades[i] == 4.0\n\
    \            grades[i] = \"A+\"\n        elseif grades[i] > 3.7\n            grades[i]\
    \ = \"A\"\n        elseif grades[i] > 3.3\n            grades[i] = \"A-\"\n  \
    \      elseif grades[i] > 3.0\n            grades[i] = \"B+\"\n        elseif\
    \ grades[i] > 2.7\n            grades[i] = \"B\"\n        elseif grades[i] > 2.3\n\
    \            grades[i] = \"B-\"\n        elseif grades[i] > 2.0\n            grades[i]\
    \ = \"C+\"\n        elseif grades[i] > 1.7\n            grades[i] = \"C\"\n  \
    \      elseif grades[i] > 1.3\n            grades[i] = \"C-\"\n        elseif\
    \ grades[i] > 1.0\n            grades[i] = \"D+\"\n        elseif grades[i] >\
    \ 0.7\n            grades[i] = \"D\"\n        elseif grades[i] > 0.0\n       \
    \     grades[i] = \"D-\"\n        elseif grades[i] == 0.0\n            grades[i]\
    \ = \"E\"\n        end\n    end\n    return grades\nend", "    output = []\n \
    \   for i in grades\n        if i == 4.0\n            push!(output, \"A+\")\n\
    \        elseif i > 3.7 && i < 4.0\n            push!(output, \"A\")\n       \
    \ elseif i > 3.3 && i < 3.7\n            push!(output, \"A-\")\n        elseif\
    \ i > 3.0 && i < 3.3\n            push!(output, \"B+\")\n        elseif i > 2.7\
    \ && i < 3.0\n            push!(output, \"B\")\n        elseif i > 2.3 && i <\
    \ 2.7\n            push!(output, \"B-\")\n        elseif i > 2.0 && i < 2.3\n\
    \            push!(output, \"C+\")\n        elseif i > 1.7 && i < 2.0\n      \
    \      push!(output, \"C\")\n        elseif i > 1.3 && i < 1.7\n            push!(output,\
    \ \"C-\")\n        elseif i > 1.0 && i < 1.3\n            push!(output, \"D+\"\
    )\n        elseif i > 0.7 && i < 1.0\n            push!(output, \"D\")\n     \
    \   elseif i > 0.0 && i < 0.7\n            push!(output, \"D-\")\n        else\n\
    \            push!(output, \"E\")\n        end\n    end\n    return output\nend",
  "    letter_grades = []\n    push!(letter_grades, \"E\")\n    for i in grades\n\
    \        if i >= 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ i >= 3.7\n            push!(letter_grades, \"A\")\n        elseif i >= 3.3\n\
    \            push!(letter_grades, \"A-\")\n        elseif i >= 3.0\n         \
    \   push!(letter_grades, \"B+\")\n        elseif i >= 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif i >= 2.3\n            push!(letter_grades, \"B-\")\n\
    \        elseif i >= 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ i >= 1.7\n            push!(letter_grades, \"C\")\n        elseif i >= 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif i >= 1.0\n         \
    \   push!(letter_grades, \"D+\")\n        elseif i >= 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif i >= 0.0\n            push!(letter_grades, \"D-\")\n\
    \        elseif i >= 0.0\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    \"\"\"It is the last week of the\
    \ semester and the teacher has to give the grades\n    to students. The teacher\
    \ has been making her own algorithm for grading.\n    The only problem is, she\
    \ has lost the code she used for grading.\n    She has given you a vector of GPAs\
    \ for some students and you have to write \n    a function that can output a vector\
    \ of letter grades using the following table:\n             GPA       |    Letter\
    \ grade\n              4.0                A+\n            > 3.7              \
    \  A \n            > 3.3                A- \n            > 3.0               \
    \ B+\n            > 2.7                B \n            > 2.3                B-\n\
    \            > 2.0                C+\n            > 1.7                C\n   \
    \         > 1.3                C-\n            > 1.0                D+ \n    \
    \        > 0.7                D \n            > 0.0                D-\n      \
    \        0.0                E\n    ", "    lettered_grades = []\n    for i in\
    \ 1:length(grades)\n        if grades[i] >= 4.0\n            push!(lettered_grades,\
    \ \"A+\")\n        elseif grades[i] >= 3.7\n            push!(lettered_grades,\
    \ \"A\")\n        elseif grades[i] >= 3.3\n            push!(lettered_grades,\
    \ \"A-\")\n        elseif grades[i] >= 3.0\n            push!(lettered_grades,\
    \ \"B+\")\n        elseif grades[i] >= 2.7\n            push!(lettered_grades,\
    \ \"B\")\n        elseif grades[i] >= 2.3\n            push!(lettered_grades,\
    \ \"B-\")\n        elseif grades[i] >= 2.0\n            push!(lettered_grades,\
    \ \"C+\")\n        elseif grades[i] >= 1.7\n            push!(lettered_grades,\
    \ \"C\")\n        elseif grades[i] >= 1.3\n            push!(lettered_grades,\
    \ \"C-\")\n        elseif grades[i] >= 1.0\n            push!(lettered_grades,\
    \ \"D+\")\n        elseif grades[i] >= 0.7\n            push!(lettered_grades,\
    \ \"D\")\n        elseif grades[i] >= 0.0\n            push!(lettered_grades,\
    \ \"D-\")\n        else\n            push!(lettered_grades, \"E\")\n        end\n\
    \    end\n    return lettered_grades\nend", "    letter_grades = []\n    for grade\
    \ in grades\n        if grade >= 4.0\n            push!(letter_grades, \"A+\"\
    )\n        elseif grade >= 3.7 && grade < 4.0\n            push!(letter_grades,\
    \ \"A\")\n        elseif grade >= 3.3 && grade < 3.7\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grade >= 3.0 && grade < 3.3\n            push!(letter_grades,\
    \ \"B+\")\n        elseif grade >= 2.7 && grade < 3.0\n            push!(letter_grades,\
    \ \"B\")\n        elseif grade >= 2.3 && grade < 2.7\n            push!(letter_grades,\
    \ \"B-\")\n        elseif grade >= 2.0 && grade < 2.3\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grade >= 1.7 && grade < 2.0\n            push!(letter_grades,\
    \ \"C\")\n        elseif grade >= 1.3 && grade < 1.7\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade >= 1.0 && grade < 1.3\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7 && grade < 1.0\n            push!(letter_grades,\
    \ \"D\")\n        elseif grade >= 0.0 && grade < 0.7\n            push!(letter_grades,\
    \ \"D-\")\n        elseif grade == 0.0\n            push!(letter_grades, \"E\"\
    )\n        end\n    end\n    return letter_grades\nend", "    grades_letters =\
    \ []\n    for (i,g) in enumerate(grades)\n        if g >= 4.0\n            push!(grades_letters,\
    \ \"A+\")\n        elseif g >= 3.7\n            push!(grades_letters, \"A\")\n\
    \        elseif g >= 3.3\n            push!(grades_letters, \"A-\")\n        elseif\
    \ g >= 3.0\n            push!(grades_letters, \"B+\")\n        elseif g >= 2.7\n\
    \            push!(grades_letters, \"B\")\n        elseif g >= 2.3\n         \
    \   push!(grades_letters, \"B-\")\n        elseif g >= 2.0\n            push!(grades_letters,\
    \ \"C+\")\n        elseif g >= 1.7\n            push!(grades_letters, \"C\")\n\
    \        elseif g >= 1.3\n            push!(grades_letters, \"C-\")\n        elseif\
    \ g >= 1.0\n            push!(grades_letters, \"D+\")\n        elseif g >= 0.7\n\
    \            push!(grades_letters, \"D\")\n        elseif g >= 0.0\n         \
    \   push!(grades_letters, \"D-\")\n        elseif g == 0.0\n            push!(grades_letters,\
    \ \"E\")\n        end\n    end\n    return grades_letters\nend", "    ## write\
    \ code here\n    ## hint: to get the length of a vector you can use length(grades)\n\
    \    ## hint: to get the first element of a vector you can use grades[1]\n   \
    \ ## hint: you can use a for loop to go over the vector\nend", "    letter_grades\
    \ = []\n    for i in grades\n        if i == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif i >= 3.7\n            push!(letter_grades, \"A\")\n\
    \        elseif i >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ i >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif i >= 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif i >= 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif i >= 1.7\n            push!(letter_grades, \"C\")\n\
    \        elseif i >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ i >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif i > 0.0\n           \
    \ push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    letter_grades\
    \ = Vector{String}(undef, length(grades))\n    for i in 1:length(grades)\n   \
    \     if grades[i] > 4.0 \n            letter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] > 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            letter_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] > 2.7\n     \
    \       letter_grades[i] = \"B\"\n        elseif grades[i] > 2.3\n           \
    \ letter_grades[i] = \"B-\"\n        elseif grades[i] > 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] > 1.7\n            letter_grades[i] = \"\
    C\"\n        elseif grades[i] > 1.3\n            letter_grades[i] = \"C-\"\n \
    \       elseif grades[i] > 1.0\n            letter_grades[i] = \"D+\"\n      \
    \  elseif grades[i] > 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grades[i] > 0.0\n            letter_grades[i] = \"D-\"\n        else\n     \
    \       letter_grades[i] = \"E\"\n        end\n    end\n    return letter_grades\n\
    end", "    \"\"\"\n    Inputs a vector of grades and outputs a vector of grades\n\
    \    \"\"\"\n    A_plus = [4.0]\n    A = [x for x in 3.7:0.3:3.0]\n    A_minus\
    \ = [x for x in 3.0:0.3:2.7]\n    B_plus = [x for x in 2.7:0.3:2.3]\n    B = [x\
    \ for x in 2.3:0.3:2.0]\n    B_minus = [x for x in 2.0:0.3:1.7]\n    C_plus =\
    \ [x for x in 1.7:0.3:1.3]\n    C = [x for x in 1.3:0.3:1.0]\n    C_minus = [x\
    \ for x in 1.0:0.3:0.7]\n    D_plus = [x for x in 0.7:0.3:0.0]\n    D = [x for\
    \ x in 0.0:0.3:-0.7]\n    D_minus = [-0.7:-0.3:-1.0]\n    E = [-1.0:-0.3:-4.0]\n\
    \    grades_list = []\n    for x in grades\n        if x in A_plus\n         \
    \   push!(grades_list, \"A+\")\n        elseif x in A\n            push!(grades_list,\
    \ \"A\")\n        elseif x in A_minus\n            push!(grades_list, \"A-\")\n\
    \        elseif x in B_plus\n            push!(grades_list, \"B+\")\n        elseif\
    \ x in B\n            push!(grades_list, \"B\")\n        elseif x in B_minus\n\
    \            push!(grades_list, \"B-\")\n        elseif x in C_plus\n        \
    \    push!(grades_list, \"C+\")\n        elseif x in C\n            push!(grades_list,\
    \ \"C\")\n        elseif x in C_minus\n            push!(grades_list, \"C-\")\n\
    \        elseif x in D_plus\n            push!(grades_list, \"D+\")", "    letter_grades\
    \ = []\n    for i in grades\n        if i > 4.0\n            letter_grades = push!(letter_grades,\
    \ \"A+\")\n        elseif i > 3.7\n            letter_grades = push!(letter_grades,\
    \ \"A\")\n        elseif i > 3.3\n            letter_grades = push!(letter_grades,\
    \ \"A-\")\n        elseif i > 3.0\n            letter_grades = push!(letter_grades,\
    \ \"B+\")\n        elseif i > 2.7\n            letter_grades = push!(letter_grades,\
    \ \"B\")\n        elseif i > 2.3\n            letter_grades = push!(letter_grades,\
    \ \"B-\")\n        elseif i > 2.0\n            letter_grades = push!(letter_grades,\
    \ \"C+\")\n        elseif i > 1.7\n            letter_grades = push!(letter_grades,\
    \ \"C\")\n        elseif i > 1.3\n            letter_grades = push!(letter_grades,\
    \ \"C-\")\n        elseif i > 1.0\n            letter_grades = push!(letter_grades,\
    \ \"D+\")\n        elseif i > 0.7\n            letter_grades = push!(letter_grades,\
    \ \"D\")\n        elseif i > 0.0\n            letter_grades = push!(letter_grades,\
    \ \"D-\")\n        else\n            letter_grades = push!(letter_grades, \"E\"\
    )\n        end\n    end\n    return letter_grades\nend", "    return [ifelse(g\
    \ >= 4.0, \"A+\", ifelse(g >= 3.7, \"A\", ifelse(g >= 3.3, \"A-\", \n        \
    \                   ifelse(g >= 3.0, \"B+\", ifelse(g >= 2.7, \"B\", ifelse(g\
    \ >= 2.3, \"B-\", \n                           ifelse(g >= 2.0, \"C+\", ifelse(g\
    \ >= 1.7, \"C\", ifelse(g >= 1.3, \"C-\", \n                           ifelse(g\
    \ >= 1.0, \"D+\", ifelse(g >= 0.7, \"D\", ifelse(g >= 0.0, \"D-\", \"E\")))))))))))))\
    \ for g in grades]\nend", "    output = []\n    for grade in grades\n        if\
    \ grade >= 4.0\n            push!(output, \"A+\")\n        elseif grade >= 3.7\n\
    \            push!(output, \"A\")\n        elseif grade >= 3.3\n            push!(output,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(output, \"B+\")\n  \
    \      elseif grade >= 2.7\n            push!(output, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(output, \"B-\")\n        elseif grade >= 2.0\n   \
    \         push!(output, \"C+\")\n        elseif grade >= 1.7\n            push!(output,\
    \ \"C\")\n        elseif grade >= 1.3\n            push!(output, \"C-\")\n   \
    \     elseif grade >= 1.0\n            push!(output, \"D+\")\n        elseif grade\
    \ >= 0.7\n            push!(output, \"D\")\n        elseif grade >= 0.0\n    \
    \        push!(output, \"D-\")\n        elseif grade == 0.0\n            push!(output,\
    \ \"E\")\n        end\n    end\n    return output\nend", "    # initialize a vector\
    \ of letter grades.\n    letter_grades = Vector{String}(undef, length(grades))\n\
    \    # iterate over the grades and assign letter grades.\n    for (i, grade) in\
    \ enumerate(grades)\n        if grade >= 4.0\n            letter_grades[i] = \"\
    A+\"\n        elseif grade >= 3.7\n            letter_grades[i] = \"A\"\n    \
    \    elseif grade >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif\
    \ grade >= 3.0\n            letter_grades[i] = \"B+\"\n        elseif grade >=\
    \ 2.7\n            letter_grades[i] = \"B\"\n        elseif grade >= 2.3\n   \
    \         letter_grades[i] = \"B-\"\n        elseif grade >= 2.0\n           \
    \ letter_grades[i] = \"C+\"\n        elseif grade >= 1.7\n            letter_grades[i]\
    \ = \"C\"\n        elseif grade >= 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grade >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif\
    \ grade >= 0.7\n            letter_grades[i] = \"D\"\n        elseif grade >=\
    \ 0.0\n            letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    grade_letters\
    \ = []\n    for i in grades\n        if i == 4.0\n            push!(grade_letters,\
    \ \"A+\")\n        elseif i > 3.7\n            push!(grade_letters, \"A\")\n \
    \       elseif i > 3.3\n            push!(grade_letters, \"A-\")\n        elseif\
    \ i > 3.0\n            push!(grade_letters, \"B+\")\n        elseif i > 2.7\n\
    \            push!(grade_letters, \"B\")\n        elseif i > 2.3\n           \
    \ push!(grade_letters, \"B-\")\n        elseif i > 2.0\n            push!(grade_letters,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(grade_letters, \"C\")\n \
    \       elseif i > 1.3\n            push!(grade_letters, \"C-\")\n        elseif\
    \ i > 1.0\n            push!(grade_letters, \"D+\")\n        elseif i > 0.7\n\
    \            push!(grade_letters, \"D\")\n        elseif i > 0.0\n           \
    \ push!(grade_letters, \"D-\")\n        elseif i == 0.0\n            push!(grade_letters,\
    \ \"E\")\n        end\n    end\n    return grade_letters\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    new_grades = Array{String}(undef, length(grades))\n\
    \    for i in eachindex(grades)\n        if grades[i] >= 4.0\n            new_grades[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            new_grades[i] = \"A\"\
    \n        elseif grades[i] >= 3.3\n            new_grades[i] = \"A-\"\n      \
    \  elseif grades[i] >= 3.0\n            new_grades[i] = \"B+\"\n        elseif\
    \ grades[i] >= 2.7\n            new_grades[i] = \"B\"\n        elseif grades[i]\
    \ >= 2.3\n            new_grades[i] = \"B-\"\n        elseif grades[i] >= 2.0\n\
    \            new_grades[i] = \"C+\"\n        elseif grades[i] >= 1.7\n       \
    \     new_grades[i] = \"C\"\n        elseif grades[i] >= 1.3\n            new_grades[i]\
    \ = \"C-\"\n        elseif grades[i] >= 1.0\n            new_grades[i] = \"D+\"\
    \n        elseif grades[i] >= 0.7\n            new_grades[i] = \"D\"\n       \
    \ elseif grades[i] >= 0.0\n            new_grades[i] = \"D-\"\n        elseif\
    \ grades[i] == 0.0\n            new_grades[i] = \"E\"\n        end\n    end\n\
    \    return new_grades\nend", "    \"\"\"\n    Takes a vector of GPA values and\
    \ outputs a vector of letter grades.\n    \"\"\"\n    grade_list = []\n    for\
    \ grade in grades\n        if grade == 4.0\n            grade_list.append(\"A+\"\
    )\n        elseif grade > 3.7\n            grade_list.append(\"A\")\n        elseif\
    \ grade > 3.3\n            grade_list.append(\"A-\")\n        elseif grade > 3.0\n\
    \            grade_list.append(\"B+\")\n        elseif grade > 2.7\n         \
    \   grade_list.append(\"B\")\n        elseif grade > 2.3\n            grade_list.append(\"\
    B-\")\n        elseif grade > 2.0\n            grade_list.append(\"C+\")\n   \
    \     elseif grade > 1.7\n            grade_list.append(\"C\")\n        elseif\
    \ grade > 1.3\n            grade_list.append(\"C-\")\n        elseif grade > 1.0\n\
    \            grade_list.append(\"D+\")\n        elseif grade > 0.7\n         \
    \   grade_list.append(\"D\")\n        elseif grade > 0.0\n            grade_list.append(\"\
    D-\")\n        else\n            grade_list.append(\"E\")\n        end\n    end\n\
    \    return grade_list\nend", "    # Create a dictionary for the numerical scores\
    \ to letters\n    score_letter = Dict(\"4.0\" => \"A+\", \"3.7\" => \"A\", \"\
    3.3\" => \"A-\", \"3.0\" => \"B+\",\n        \"2.7\" => \"B\", \"2.3\" => \"B-\"\
    , \"2.0\" => \"C+\", \"1.7\" => \"C\", \"1.3\" => \"C-\",\n        \"1.0\" =>\
    \ \"D+\", \"0.7\" => \"D\", \"0.0\" => \"D-\", \"-0.0\" => \"E\")\n    \n    #\
    \ Create a list to store the grades to return\n    letter_grades = []\n    \n\
    \    # Loop through the numerical grades and find their letter grade\n    for\
    \ n in grades\n        # If the grade is 4.0, then append \"A+\" to the letter_grades\
    \ list\n        if n == 4.0\n            push!(letter_grades, \"A+\")\n      \
    \  # If the grade is 3.7 or greater, then append \"A\" to the letter_grades list\n\
    \        elseif n >= 3.7\n            push!(letter_grades, \"A\")\n        # If\
    \ the grade is 3.3 or greater, then append \"A-\" to the letter_grades list\n\
    \        elseif n >= 3.3\n            push!(letter_grades, \"A-\")\n        #\
    \ If the grade is 3.0 or greater, then append \"B+\" to the letter_grades list\n\
    \        elseif n >= 3.0\n            push!(letter_grades, \"B+\")\n        #\
    \ If the grade is 2.7 or greater, then append \"B\" to the letter_grades list\n\
    \        elseif n >= 2.7\n            push!(letter_grades, \"B\")\n        # If\
    \ the grade is 2.3 or greater, then append \"B-\" to the letter_grades list\n\
    \        elseif n >= 2.3\n            push!(letter_grades, \"B-\")\n        #\
    \ If the grade is 2.0 or greater, then append \"C+\" to the letter_grades list\n\
    \        elseif n >= 2.0\n            push!(letter_grades, \"C+\")\n", "    array_of_letters\
    \ = []\n    for grade in grades\n        if grade >= 4.0\n            push!(array_of_letters,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(array_of_letters, \"\
    A\")\n        elseif grade >= 3.3\n            push!(array_of_letters, \"A-\"\
    )\n        elseif grade >= 3.0\n            push!(array_of_letters, \"B+\")\n\
    \        elseif grade >= 2.7\n            push!(array_of_letters, \"B\")\n   \
    \     elseif grade >= 2.3\n            push!(array_of_letters, \"B-\")\n     \
    \   elseif grade >= 2.0\n            push!(array_of_letters, \"C+\")\n       \
    \ elseif grade >= 1.7\n            push!(array_of_letters, \"C\")\n        elseif\
    \ grade >= 1.3\n            push!(array_of_letters, \"C-\")\n        elseif grade\
    \ >= 1.0\n            push!(array_of_letters, \"D+\")\n        elseif grade >=\
    \ 0.7\n            push!(array_of_letters, \"D\")\n        elseif grade >= 0.0\n\
    \            push!(array_of_letters, \"D-\")\n        elseif grade == 0.0\n  \
    \          push!(array_of_letters, \"E\")\n        end\n    end\n    return array_of_letters\n\
    end", "    output_grades = []\n    for x in grades \n        if x == 4.0 \n  \
    \          output_grades = push!(output_grades, \"A+\")\n        elseif x > 3.7\
    \ \n            output_grades = push!(output_grades, \"A\")\n        elseif x\
    \ > 3.3 \n            output_grades = push!(output_grades, \"A-\")\n        elseif\
    \ x > 3.0 \n            output_grades = push!(output_grades, \"B+\")\n       \
    \ elseif x > 2.7 \n            output_grades = push!(output_grades, \"B\")\n \
    \       elseif x > 2.3 \n            output_grades = push!(output_grades, \"B-\"\
    )\n        elseif x > 2.0 \n            output_grades = push!(output_grades, \"\
    C+\")\n        elseif x > 1.7 \n            output_grades = push!(output_grades,\
    \ \"C\")\n        elseif x > 1.3 \n            output_grades = push!(output_grades,\
    \ \"C-\")\n        elseif x > 1.0 \n            output_grades = push!(output_grades,\
    \ \"D+\")\n        elseif x > 0.7 \n            output_grades = push!(output_grades,\
    \ \"D\")\n        elseif x > 0.0 \n            output_grades = push!(output_grades,\
    \ \"D-\")\n        elseif x >= 0.0 \n            output_grades = push!(output_grades,\
    \ \"E\")\n        end\n    end\n    return output_grades\nend", "    letter_grades\
    \ = []\n    for i in grades\n        if i >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif i >= 3.7\n            push!(letter_grades, \"A\")\n\
    \        elseif i >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ i >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif i >= 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif i >= 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif i >= 1.7\n            push!(letter_grades, \"C\")\n\
    \        elseif i >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ i >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif i >= 0.0\n          \
    \  push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    #Create container\
    \ for letter grades \n    letter_grades::Vector{String} = []\n    #Loop through\
    \ the grades and append the correct letter grade to the container\n    for i in\
    \ 1:length(grades)\n        if grades[i] >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    s = []\n\
    \    for grade in grades\n        if grade < 0.7\n            append!(s, \"E\"\
    )\n        elseif grade < 1.0\n            append!(s, \"D-\")\n        elseif\
    \ grade < 1.3\n            append!(s, \"D\")\n        elseif grade < 1.7\n   \
    \         append!(s, \"D+\")\n        elseif grade < 2.0\n            append!(s,\
    \ \"C-\")\n        elseif grade < 2.3\n            append!(s, \"C\")\n       \
    \ elseif grade < 2.7\n            append!(s, \"C+\")\n        elseif grade < 3.0\n\
    \            append!(s, \"B-\")\n        elseif grade < 3.3\n            append!(s,\
    \ \"B\")\n        elseif grade < 3.7\n            append!(s, \"B+\")\n       \
    \ elseif grade < 4.0\n            append!(s, \"A-\")\n        else\n         \
    \   append!(s, \"A+\")\n        end\n    end\n    return s\nend", "    grades_letter\
    \ = []\n    for i in 1:length(grades)\n        if grades[i] == 4.0\n         \
    \   push!(grades_letter, \"A+\")\n        elseif grades[i] > 3.7\n           \
    \ push!(grades_letter, \"A\")\n        elseif grades[i] > 3.3\n            push!(grades_letter,\
    \ \"A-\")\n        elseif grades[i] > 3.0\n            push!(grades_letter, \"\
    B+\")\n        elseif grades[i] > 2.7\n            push!(grades_letter, \"B\"\
    )\n        elseif grades[i] > 2.3\n            push!(grades_letter, \"B-\")\n\
    \        elseif grades[i] > 2.0\n            push!(grades_letter, \"C+\")\n  \
    \      elseif grades[i] > 1.7\n            push!(grades_letter, \"C\")\n     \
    \   elseif grades[i] > 1.3\n            push!(grades_letter, \"C-\")\n       \
    \ elseif grades[i] > 1.0\n            push!(grades_letter, \"D+\")\n        elseif\
    \ grades[i] > 0.7\n            push!(grades_letter, \"D\")\n        elseif grades[i]\
    \ > 0.0\n            push!(grades_letter, \"D-\")\n        elseif grades[i] >=\
    \ 0.0\n            push!(grades_letter, \"E\")\n        end\n    end\n    return\
    \ grades_letter\nend\n ", "    \"\"\"\n    This is the logic equation of our numerical\
    \ grades.\n    It returns a vector with letter grades instead of numerical grades.\n\
    \    \"\"\"\n    letter_grades = []\n    for grade in grades\n        if grade\
    \ == 4.0\n            push!(letter_grades, \"A+\")\n        elseif grade > 3.7\n\
    \            push!(letter_grades, \"A\")\n        elseif grade > 3.3\n       \
    \     push!(letter_grades, \"A-\")\n        elseif grade > 3.0\n            push!(letter_grades,\
    \ \"B+\")\n        elseif grade > 2.7\n            push!(letter_grades, \"B\"\
    )\n        elseif grade > 2.3\n            push!(letter_grades, \"B-\")\n    \
    \    elseif grade > 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ grade > 1.7\n            push!(letter_grades, \"C\")\n        elseif grade >\
    \ 1.3\n            push!(letter_grades, \"C-\")\n        elseif grade > 1.0\n\
    \            push!(letter_grades, \"D+\")\n        elseif grade > 0.7\n      \
    \      push!(letter_grades, \"D\")\n        elseif grade > 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        elseif grade == 0.0\n            push!(letter_grades, \"E\"\
    )\n        end\n    end\n    return letter_grades\nend", "    i = 0\n    newgrades\
    \ = []\n    while i < length(grades)\n        if grades[i] == 4.0\n          \
    \  push!(newgrades, \"A+\")\n        elseif grades[i] >= 3.7\n            push!(newgrades,\
    \ \"A\")\n        elseif grades[i] >= 3.3\n            push!(newgrades, \"A-\"\
    )\n        elseif grades[i] >= 3.0\n            push!(newgrades, \"B+\")\n   \
    \     elseif grades[i] >= 2.7\n            push!(newgrades, \"B\")\n        elseif\
    \ grades[i] >= 2.3\n            push!(newgrades, \"B-\")\n        elseif grades[i]\
    \ >= 2.0\n            push!(newgrades, \"C+\")\n        elseif grades[i] >= 1.7\n\
    \            push!(newgrades, \"C\")\n        elseif grades[i] >= 1.3\n      \
    \      push!(newgrades, \"C-\")\n        elseif grades[i] >= 1.0\n           \
    \ push!(newgrades, \"D+\")\n        elseif grades[i] >= 0.7\n            push!(newgrades,\
    \ \"D\")\n        elseif grades[i] >= 0.0\n            push!(newgrades, \"D-\"\
    )\n        else\n            push!(newgrades, \"E\")\n        end\n        i +=\
    \ 1\n    end\n    return newgrades\nend", "    output = Vector{String}(undef,\
    \ length(grades))\n    for i in eachindex(grades)\n        if grades[i] >= 4.0\n\
    \            output[i] = \"A+\"\n        elseif grades[i] >= 3.7\n           \
    \ output[i] = \"A\"\n        elseif grades[i] >= 3.3\n            output[i] =\
    \ \"A-\"\n        elseif grades[i] >= 3.0\n            output[i] = \"B+\"\n  \
    \      elseif grades[i] >= 2.7\n            output[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            output[i] = \"B-\"\n        elseif grades[i] >=\
    \ 2.0\n            output[i] = \"C+\"\n        elseif grades[i] >= 1.7\n     \
    \       output[i] = \"C\"\n        elseif grades[i] >= 1.3\n            output[i]\
    \ = \"C-\"\n        elseif grades[i] >= 1.0\n            output[i] = \"D+\"\n\
    \        elseif grades[i] >= 0.7\n            output[i] = \"D\"\n        elseif\
    \ grades[i] >= 0.0\n            output[i] = \"D-\"\n        else\n           \
    \ output[i] = \"E\"\n        end\n    end\n    return output\nend", "    c = []\n\
    \    for i in grades\n        if i>=4.0\n            push!(c, \"A+\")\n      \
    \  elseif 3.7 <= i < 4.0\n            push!(c, \"A\")\n        elseif 3.3 <= i\
    \ < 3.7\n            push!(c, \"A-\")\n        elseif 3.0 <= i < 3.3\n       \
    \     push!(c, \"B+\")\n        elseif 2.7 <= i < 3.0\n            push!(c, \"\
    B\")\n        elseif 2.3 <= i < 2.7\n            push!(c, \"B-\")\n        elseif\
    \ 2.0 <= i < 2.3\n            push!(c, \"C+\")\n        elseif 1.7 <= i < 2.0\n\
    \            push!(c, \"C\")\n        elseif 1.3 <= i < 1.7\n            push!(c,\
    \ \"C-\")\n        elseif 1.0 <= i < 1.3\n            push!(c, \"D+\")\n     \
    \   elseif 0.7 <= i < 1.0\n            push!(c, \"D\")\n        elseif 0.0 <=\
    \ i < 0.7\n            push!(c, \"D-\")\n        else\n            push!(c, \"\
    E\")\n        end\n    end\n    return c\nend", "    letter_grades = Vector{String}(length(grades))\n\
    \    for (i, grade) in enumerate(grades)\n        if grade == 4.0\n          \
    \  letter_grades[i] = \"A+\"\n        elseif grade > 3.7\n            letter_grades[i]\
    \ = \"A\"\n        elseif grade > 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grade > 3.0\n            letter_grades[i] = \"B+\"\n        elseif\
    \ grade > 2.7\n            letter_grades[i] = \"B\"\n        elseif grade > 2.3\n\
    \            letter_grades[i] = \"B-\"\n        elseif grade > 2.0\n         \
    \   letter_grades[i] = \"C+\"\n        elseif grade > 1.7\n            letter_grades[i]\
    \ = \"C\"\n        elseif grade > 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grade > 1.0\n            letter_grades[i] = \"D+\"\n        elseif\
    \ grade > 0.7\n            letter_grades[i] = \"D\"\n        elseif grade > 0.0\n\
    \            letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    letter_grades\
    \ = Array{String}(undef, size(grades)[1])\n    for i = 1:size(grades)[1]\n   \
    \     if grades[i] < 0\n            letter_grades[i] = \"E\"\n        elseif grades[i]\
    \ < 0.7\n            letter_grades[i] = \"D-\"\n        elseif grades[i] < 1.0\n\
    \            letter_grades[i] = \"D+\"\n        elseif grades[i] < 1.3\n     \
    \       letter_grades[i] = \"C-\"\n        elseif grades[i] < 1.7\n          \
    \  letter_grades[i] = \"C\"\n        elseif grades[i] < 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] < 2.3\n            letter_grades[i] = \"\
    B-\"\n        elseif grades[i] < 2.7\n            letter_grades[i] = \"B\"\n \
    \       elseif grades[i] < 3.0\n            letter_grades[i] = \"B+\"\n      \
    \  elseif grades[i] < 3.3\n            letter_grades[i] = \"A-\"\n        elseif\
    \ grades[i] < 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ <= 4.0\n            letter_grades[i] = \"A+\"\n        end\n    end\n    return\
    \ letter_grades\nend", "    grades_converted = []\n    for i in grades\n     \
    \   if i == 4.0\n            push!(grades_converted, \"A+\")\n        elseif i\
    \ > 3.7 && i < 4.0\n            push!(grades_converted, \"A\")\n        elseif\
    \ i > 3.3 && i < 3.7\n            push!(grades_converted, \"A-\")\n        elseif\
    \ i > 3.0 && i < 3.3\n            push!(grades_converted, \"B+\")\n        elseif\
    \ i > 2.7 && i < 3.0\n            push!(grades_converted, \"B\")\n        elseif\
    \ i > 2.3 && i < 2.7\n            push!(grades_converted, \"B-\")\n        elseif\
    \ i > 2.0 && i < 2.3\n            push!(grades_converted, \"C+\")\n        elseif\
    \ i > 1.7 && i < 2.0\n            push!(grades_converted, \"C\")\n        elseif\
    \ i > 1.3 && i < 1.7\n            push!(grades_converted, \"C-\")\n        elseif\
    \ i > 1.0 && i < 1.3\n            push!(grades_converted, \"D+\")\n        elseif\
    \ i > 0.7 && i < 1.0\n            push!(grades_converted, \"D\")\n        elseif\
    \ i > 0.0 && i < 0.7\n            push!(grades_converted, \"D-\")\n        elseif\
    \ i == 0.0\n            push!(grades_converted, \"E\")\n        end\n    end\n\
    \    return grades_converted\nend", " \n    letter_grades = []\n    \n    for\
    \ i = 1:length(grades)\n        \n        if grades[i] == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grades[i] == 0.0\n \
    \           push!(letter_grades, \"E\")\n        end\n        \n    end\n    \n\
    \    return letter_grades\n    \nend", "    \n    grade_equation = Dict(\"A+\"\
    \ => 4.0,\n                          \"A\" => 3.7,\n                         \
    \ \"A-\" => 3.3,\n                          \"B+\" => 3.0,\n                 \
    \         \"B\" => 2.7,\n                          \"B-\" => 2.3,\n          \
    \                \"C+\" => 2.0,\n                          \"C\" => 1.7,\n   \
    \                       \"C-\" => 1.3,\n                          \"D+\" => 1.0,\n\
    \                          \"D\" => 0.7,\n                          \"D-\" =>\
    \ 0.0,\n                          \"E\" => 0.0\n                          )\n\
    \        \n    grades_table = sort(collect(keys(grade_equation)), by = x -> grade_equation[x])\n\
    \    letter_grades = []\n    \n    for num in grades\n        if num == 0.0\n\
    \            push!(letter_grades, \"E\")\n        else\n            for (i, grade)\
    \ in enumerate(grades_table)\n                if num > grade_equation[grade]\n\
    \                    push!(letter_grades, grade)\n                    break\n\
    \                end\n            end\n        end\n    end\n    \n    return\
    \ letter_grades\nend", "    output = Vector{String}() \n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            push!(output, \"A+\")\n        elseif\
    \ grades[i] < 4.0 && grades[i] >= 3.7\n            push!(output, \"A\")\n    \
    \    elseif grades[i] < 3.7 && grades[i] >= 3.3\n            push!(output, \"\
    A-\")\n        elseif grades[i] < 3.3 && grades[i] >= 3.0\n            push!(output,\
    \ \"B+\")\n        elseif grades[i] < 3.0 && grades[i] >= 2.7\n            push!(output,\
    \ \"B\")\n        elseif grades[i] < 2.7 && grades[i] >= 2.3\n            push!(output,\
    \ \"B-\")\n        elseif grades[i] < 2.3 && grades[i] >= 2.0\n            push!(output,\
    \ \"C+\")\n        elseif grades[i] < 2.0 && grades[i] >= 1.7\n            push!(output,\
    \ \"C\")\n        elseif grades[i] < 1.7 && grades[i] >= 1.3\n            push!(output,\
    \ \"C-\")\n        elseif grades[i] < 1.3 && grades[i] >= 1.0\n            push!(output,\
    \ \"D+\")\n        elseif grades[i] < 1.0 && grades[i] >= 0.7\n            push!(output,\
    \ \"D\")\n        elseif grades[i] < 0.7 && grades[i] >= 0.0\n            push!(output,\
    \ \"D-\")\n        elseif grades[i] < 0.0 && grades[i] >= 0.0\n            push!(output,\
    \ \"E\")\n        end\n    end\n    return output\nend", "    \"\"\"This function\
    \ outputs a vector of letter grades based on the student's \n        GPA, formatted\
    \ according to the above table. \n    \"\"\"\n    letter_grades = Vector{String}(undef,\
    \ length(grades))\n    for i in 1:length(grades)\n        if grades[i] >= 4.0\n\
    \            letter_grades[i] = \"A+\"\n        elseif grades[i] >= 3.7\n    \
    \        letter_grades[i] = \"A\"\n        elseif grades[i] >= 3.3\n         \
    \   letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n            letter_grades[i]\
    \ = \"B+\"\n        elseif grades[i] >= 2.7\n            letter_grades[i] = \"\
    B\"\n        elseif grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n\
    \        elseif grades[i] >= 2.0\n            letter_grades[i] = \"C+\"\n    \
    \    elseif grades[i] >= 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n        elseif grades[i]\
    \ >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n\
    \            letter_grades[i] = \"D\"\n        elseif grades[i] >= 0.0\n     \
    \       letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    # grades\
    \ = Vector of Float64s\n    # returns = Vector of letter grades\n    m = length(grades)\n\
    \    letter_grades = zeros(String, m)\n    for i in 1:m\n        gpa = grades[i]\n\
    \        if gpa >= 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ gpa >= 3.7\n            letter_grades[i] = \"A\"\n        elseif gpa >= 3.3\n\
    \            letter_grades[i] = \"A-\"\n        elseif gpa >= 3.0\n          \
    \  letter_grades[i] = \"B+\"\n        elseif gpa >= 2.7\n            letter_grades[i]\
    \ = \"B\"\n        elseif gpa >= 2.3\n            letter_grades[i] = \"B-\"\n\
    \        elseif gpa >= 2.0\n            letter_grades[i] = \"C+\"\n        elseif\
    \ gpa >= 1.7\n            letter_grades[i] = \"C\"\n        elseif gpa >= 1.3\n\
    \            letter_grades[i] = \"C-\"\n        elseif gpa >= 1.0\n          \
    \  letter_grades[i] = \"D+\"\n        elseif gpa >= 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif gpa >= 0.0\n            letter_grades[i] = \"D-\"\n\
    \        else\n            letter_grades[i] = \"E\"\n        end\n    end\n  \
    \  return letter_grades\nend", "   \n    letter_grades = zeros(String,length(grades))\n\
    \    \n    for i in 1:length(grades)\n    \n     if grades[i] >= 4.0\n       \
    \ letter_grades[i] = \"A+\"\n     elseif grades[i] >= 3.7\n        letter_grades[i]\
    \ = \"A\"\n     elseif grades[i] >= 3.3\n        letter_grades[i] = \"A-\"\n \
    \    elseif grades[i] >= 3.0\n        letter_grades[i] = \"B+\"\n     elseif grades[i]\
    \ >= 2.7\n        letter_grades[i] = \"B\"\n     elseif grades[i] >= 2.3\n   \
    \     letter_grades[i] = \"B-\"\n     elseif grades[i] >= 2.0\n        letter_grades[i]\
    \ = \"C+\"\n     elseif grades[i] >= 1.7\n        letter_grades[i] = \"C\"\n \
    \    elseif grades[i] >= 1.3\n        letter_grades[i] = \"C-\"\n     elseif grades[i]\
    \ >= 1.0\n        letter_grades[i] = \"D+\"\n     elseif grades[i] >= 0.7\n  \
    \      letter_grades[i] = \"D\"\n     elseif grades[i] >= 0.0\n        letter_grades[i]\
    \ = \"D-\"\n     elseif grades[i] >= 0.0\n        letter_grades[i] = \"E\"\n \
    \    end\n     \n    end\nreturn letter_grades\n    \nend", "    # Define a function\
    \ that takes a vector of numerical grades and outputs a vector\n    # of string\
    \ letter grades\n    # Use an if-elseif-else loop\n    # You can access each element\
    \ of the vector by using grades[1], grades[2], ...\n    # e.g. grades[1]\n   \
    \ # You can add an element to an existing vector by using push!(grades, \"A+\"\
    )\n    # or you can create a new vector using push!(grades_new, \"A+\")\n    for\
    \ (index, grade) in enumerate(grades)\n        if grade == 4.0\n            grades[index]\
    \ = \"A+\"\n        elseif grade > 3.7\n            grades[index] = \"A\"\n  \
    \      elseif grade > 3.3\n            grades[index] = \"A-\"\n        elseif\
    \ grade > 3.0\n            grades[index] = \"B+\"\n        elseif grade > 2.7\n\
    \            grades[index] = \"B\"\n        elseif grade > 2.3\n            grades[index]\
    \ = \"B-\"\n        elseif grade > 2.0\n            grades[index] = \"C+\"\n \
    \       elseif grade > 1.7\n            grades[index] = \"C\"\n        elseif\
    \ grade > 1.3\n            grades[index] = \"C-\"\n        elseif grade > 1.0\n\
    \            grades[index] = \"D+\"\n        elseif grade > 0.7\n            grades[index]\
    \ = \"D\"\n        elseif grade > 0.0\n            grades[index] = \"D-\"\n  \
    \      else\n            grades[index] = \"E\"\n        end\n    end\n    return\
    \ grades\nend", "    # the numerical grades must be Float64 type\n    letter_grades\
    \ = Array{String}(length(grades))\n    for i = 1:length(grades)\n        if grades[i]\
    \ == 4.0\n            letter_grades[i] = \"A+\"\n        elseif grades[i] > 3.7\n\
    \            letter_grades[i] = \"A\"\n        elseif grades[i] > 3.3\n      \
    \      letter_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n           \
    \ letter_grades[i] = \"B+\"\n        elseif grades[i] > 2.7\n            letter_grades[i]\
    \ = \"B\"\n        elseif grades[i] > 2.3\n            letter_grades[i] = \"B-\"\
    \n        elseif grades[i] > 2.0\n            letter_grades[i] = \"C+\"\n    \
    \    elseif grades[i] > 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ grades[i] > 1.3\n            letter_grades[i] = \"C-\"\n        elseif grades[i]\
    \ > 1.0\n            letter_grades[i] = \"D+\"\n        elseif grades[i] > 0.7\n\
    \            letter_grades[i] = \"D\"\n        elseif grades[i] > 0.0\n      \
    \      letter_grades[i] = \"D-\"\n        else\n            letter_grades[i] =\
    \ \"E\"\n        end\n    end\n    return letter_grades\nend", "    # declare\
    \ the empty vector of strings\n    string_grades = String[]\n    # iterate through\
    \ the grades vector\n    for i in grades\n        # give a conditional for each\
    \ letter grade\n        if i == 4.0\n            push!(string_grades, \"A+\")\n\
    \        elseif i >= 3.7\n            push!(string_grades, \"A\")\n        elseif\
    \ i >= 3.3\n            push!(string_grades, \"A-\")\n        elseif i >= 3.0\n\
    \            push!(string_grades, \"B+\")\n        elseif i >= 2.7\n         \
    \   push!(string_grades, \"B\")\n        elseif i >= 2.3\n            push!(string_grades,\
    \ \"B-\")\n        elseif i >= 2.0\n            push!(string_grades, \"C+\")\n\
    \        elseif i >= 1.7\n            push!(string_grades, \"C\")\n        elseif\
    \ i >= 1.3\n            push!(string_grades, \"C-\")\n        elseif i >= 1.0\n\
    \            push!(string_grades, \"D+\")\n        elseif i >= 0.7\n         \
    \   push!(string_grades, \"D\")\n        elseif i >= 0.0\n            push!(string_grades,\
    \ \"D-\")\n        else\n            push!(string_grades, \"E\")\n        end\n\
    \    end\n    # return the grades vector\n    return string_grades\nend\n \n#\
    \ test the function\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])", "    letter_grades\
    \ = []\n    for i = 1:length(grades)\n        if grades[i] >= 4.0\n          \
    \  push!(letter_grades, \"A+\")\n        elseif grades[i] >= 3.7\n           \
    \ push!(letter_grades, \"A\")\n        elseif grades[i] >= 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grades[i] >= 3.0\n            push!(letter_grades, \"\
    B+\")\n        elseif grades[i] >= 2.7\n            push!(letter_grades, \"B\"\
    )\n        elseif grades[i] >= 2.3\n            push!(letter_grades, \"B-\")\n\
    \        elseif grades[i] >= 2.0\n            push!(letter_grades, \"C+\")\n \
    \       elseif grades[i] >= 1.7\n            push!(letter_grades, \"C\")\n   \
    \     elseif grades[i] >= 1.3\n            push!(letter_grades, \"C-\")\n    \
    \    elseif grades[i] >= 1.0\n            push!(letter_grades, \"D+\")\n     \
    \   elseif grades[i] >= 0.7\n            push!(letter_grades, \"D\")\n       \
    \ elseif grades[i] >= 0.0\n            push!(letter_grades, \"D-\")\n        else\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    for grade in grades\n        if grade == 4.0 \n            return \"\
    A+\"\n        elseif grade > 3.7\n            return \"A\"\n        elseif grade\
    \ > 3.3\n            return \"A-\"\n        elseif grade > 3.0\n            return\
    \ \"B+\"\n        elseif grade > 2.7\n            return \"B\"\n        elseif\
    \ grade > 2.3\n            return \"B-\"\n        elseif grade > 2.0\n       \
    \     return \"C+\"\n        elseif grade > 1.7\n            return \"C\"\n  \
    \      elseif grade > 1.3\n            return \"C-\"\n        elseif grade > 1.0\n\
    \            return \"D+\"\n        elseif grade > 0.7\n            return \"\
    D\"\n        elseif grade > 0.0\n            return \"D-\"\n        else\n   \
    \         return \"E\"\n        end\n    end\nend\ngrades = [4.0, 3, 1.7, 2, 3.5]\n\
    println(numerical_letter_grade(grades))", "    \"\"\"\"\"\"\n    len = length(grades)\n\
    \    grade_vec = Vector{String}(len)\n    for i in 1:len\n        val = grades[i]\n\
    \        if val > 4.0\n            grade_vec[i] = \"A+\"\n        elseif val >\
    \ 3.7\n            grade_vec[i] = \"A\"\n        elseif val > 3.3\n          \
    \  grade_vec[i] = \"A-\"\n        elseif val > 3.0\n            grade_vec[i] =\
    \ \"B+\"\n        elseif val > 2.7\n            grade_vec[i] = \"B\"\n       \
    \ elseif val > 2.3\n            grade_vec[i] = \"B-\"\n        elseif val > 2.0\n\
    \            grade_vec[i] = \"C+\"\n        elseif val > 1.7\n            grade_vec[i]\
    \ = \"C\"\n        elseif val > 1.3\n            grade_vec[i] = \"C-\"\n     \
    \   elseif val > 1.0\n            grade_vec[i] = \"D+\"\n        elseif val >\
    \ 0.7\n            grade_vec[i] = \"D\"\n        elseif val > 0.0\n          \
    \  grade_vec[i] = \"D-\"\n        else\n            grade_vec[i] = \"E\"\n   \
    \     end\n    end\n    return grade_vec\nend", "    output = Array{String}(length(grades))\n\
    \    for i in eachindex(grades)\n        x = grades[i]\n        if x == 4.0\n\
    \            output[i] = \"A+\"\n        elseif x >= 3.7\n            output[i]\
    \ = \"A\"\n        elseif x >= 3.3\n            output[i] = \"A-\"\n        elseif\
    \ x >= 3.0\n            output[i] = \"B+\"\n        elseif x >= 2.7\n        \
    \    output[i] = \"B\"\n        elseif x >= 2.3\n            output[i] = \"B-\"\
    \n        elseif x >= 2.0\n            output[i] = \"C+\"\n        elseif x >=\
    \ 1.7\n            output[i] = \"C\"\n        elseif x >= 1.3\n            output[i]\
    \ = \"C-\"\n        elseif x >= 1.0\n            output[i] = \"D+\"\n        elseif\
    \ x >= 0.7\n            output[i] = \"D\"\n        elseif x > 0.0\n          \
    \  output[i] = \"D-\"\n        else\n            output[i] = \"E\"\n        end\n\
    \    end\n    return output\nend", "    \"\"\"\n    It returns a vector of String\
    \ with the letter grades.\n    \"\"\"\n    letter_grades = String[]\n    for i\
    \ in 1:length(grades)\n        if grades[i] == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grades[i] == 0.0\n \
    \           push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    result = []\n    for num in grades\n        if num == 4.0\n       \
    \     push!(result, \"A+\")\n        elseif num >= 3.7\n            push!(result,\
    \ \"A\")\n        elseif num >= 3.3\n            push!(result, \"A-\")\n     \
    \   elseif num >= 3.0\n            push!(result, \"B+\")\n        elseif num >=\
    \ 2.7\n            push!(result, \"B\")\n        elseif num >= 2.3\n         \
    \   push!(result, \"B-\")\n        elseif num >= 2.0\n            push!(result,\
    \ \"C+\")\n        elseif num >= 1.7\n            push!(result, \"C\")\n     \
    \   elseif num >= 1.3\n            push!(result, \"C-\")\n        elseif num >=\
    \ 1.0\n            push!(result, \"D+\")\n        elseif num >= 0.7\n        \
    \    push!(result, \"D\")\n        elseif num >= 0.0\n            push!(result,\
    \ \"D-\")\n        else\n            push!(result, \"E\")\n        end\n    end\n\
    \    return result\nend", "  \n  letter_grade = [\"A+\", \"A\", \"A-\", \"B+\"\
    , \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n  numerical_grade\
    \ = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n  \n  grade_output\
    \ = []\n  \n  for i = 1:length(grades)\n    j = 1\n    if grades[i] >= numerical_grade[j]\n\
    \      push!(grade_output, letter_grade[j])\n    else\n      for j = 2:length(numerical_grade)\n\
    \        if grades[i] >= numerical_grade[j]\n          push!(grade_output, letter_grade[j])\n\
    \          break\n        end\n      end\n    end\n  end\n  \n  return grade_output\n\
    end", "    final_grades = []\n    for g in grades\n        if g == 4.0\n     \
    \       final_grades = [final_grades; \"A+\"]\n        elseif g > 3.7\n      \
    \      final_grades = [final_grades; \"A\"]\n        elseif g > 3.3\n        \
    \    final_grades = [final_grades; \"A-\"]\n        elseif g > 3.0\n         \
    \   final_grades = [final_grades; \"B+\"]\n        elseif g > 2.7\n          \
    \  final_grades = [final_grades; \"B\"]\n        elseif g > 2.3\n            final_grades\
    \ = [final_grades; \"B-\"]\n        elseif g > 2.0\n            final_grades =\
    \ [final_grades; \"C+\"]\n        elseif g > 1.7\n            final_grades = [final_grades;\
    \ \"C\"]\n        elseif g > 1.3\n            final_grades = [final_grades; \"\
    C-\"]\n        elseif g > 1.0\n            final_grades = [final_grades; \"D+\"\
    ]\n        elseif g > 0.7\n            final_grades = [final_grades; \"D\"]\n\
    \        elseif g > 0.0\n            final_grades = [final_grades; \"D-\"]\n \
    \       elseif g == 0.0\n            final_grades = [final_grades; \"E\"]\n  \
    \      end\n    end\n    return final_grades\nend", "    Aplus_grades = grades\
    \ .>= 4.0\n    A_grades = grades .>= 3.7\n    Aminus_grades = grades .>= 3.3\n\
    \    Bplus_grades = grades .>= 3.0\n    B_grades = grades .>= 2.7\n    Bminus_grades\
    \ = grades .>= 2.3\n    Cplus_grades = grades .>= 2.0\n    C_grades = grades .>=\
    \ 1.7\n    Cminus_grades = grades .>= 1.3\n    Dplus_grades = grades .>= 1.0\n\
    \    D_grades = grades .>= 0.7\n    Dminus_grades = grades .>= 0.0\n    E_grades\
    \ = grades .>= 0.0\n    \n    letter_grades = []\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            append!(letter_grades, \"A+\")\n   \
    \     elseif grades[i] >= 3.7\n            append!(letter_grades, \"A\")\n   \
    \     elseif grades[i] >= 3.3\n            append!(letter_grades, \"A-\")\n  \
    \      elseif grades[i] >= 3.0\n            append!(letter_grades, \"B+\")\n \
    \       elseif grades[i] >= 2.7\n            append!(letter_grades, \"B\")\n \
    \       elseif grades[i] >= 2.3\n            append!(letter_grades, \"B-\")\n\
    \        elseif grades[i] >= 2.0\n            append!(letter_grades, \"C+\")\n\
    \        elseif grades[i] >= 1.7\n            append!(letter_grades, \"C\")\n\
    \        elseif grades[i] >= 1.3\n            append!(letter_grades, \"C-\")\n\
    \        elseif grades[i] >= 1.0\n            append!(letter_grades, \"D+\")\n\
    \        elseif grades[i] >= 0.7\n            append!(letter_grades, \"D\")\n\
    \        elseif grades[i] >= 0.0\n            append!(letter_grades, \"D-\")\n\
    \        elseif grades[i] >= 0.0\n            append!(letter_grades", "    letter_grades\
    \ = []\n    for g in grades\n        if g == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif g > 3.7\n            push!(letter_grades, \"A\")\n \
    \       elseif g > 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ g > 3.0\n            push!(letter_grades, \"B+\")\n        elseif g > 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif g > 2.3\n           \
    \ push!(letter_grades, \"B-\")\n        elseif g > 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif g > 1.7\n            push!(letter_grades, \"C\")\n \
    \       elseif g > 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ g > 1.0\n            push!(letter_grades, \"D+\")\n        elseif g > 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif g > 0.0\n           \
    \ push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    \n    lettergrades\
    \ = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\"\
    , \"D\", \"D-\", \"E\"]\n    n = length(grades)\n    numericalgrades = [10.0,\
    \ 9.7, 9.3, 9.0, 8.7, 8.3, 8.0, 7.7, 7.3, 7.0, 6.7, 6.3, 6.0, 5.7, 5.3, 5.0, 4.7,\
    \ 4.3, 4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0]\n    ret =\
    \ [\"\" for _ in 1:n]\n    \n    for i in 1:n\n        for j in 1:length(numericalgrades)\n\
    \            if grades[i] >= numericalgrades[j]\n                ret[i] = lettergrades[j]\n\
    \                break\n            end\n        end\n    end\n    \n    return\
    \ ret\nend", "    letters = []\n    for grade in grades\n        if(grade >= 4.0)\n\
    \            push!(letters, \"A+\")\n        elseif(grade >= 3.7)\n          \
    \  push!(letters, \"A\")\n        elseif(grade >= 3.3)\n            push!(letters,\
    \ \"A-\")\n        elseif(grade >= 3.0)\n            push!(letters, \"B+\")\n\
    \        elseif(grade >= 2.7)\n            push!(letters, \"B\")\n        elseif(grade\
    \ >= 2.3)\n            push!(letters, \"B-\")\n        elseif(grade >= 2.0)\n\
    \            push!(letters, \"C+\")\n        elseif(grade >= 1.7)\n          \
    \  push!(letters, \"C\")\n        elseif(grade >= 1.3)\n            push!(letters,\
    \ \"C-\")\n        elseif(grade >= 1.0)\n            push!(letters, \"D+\")\n\
    \        elseif(grade >= 0.7)\n            push!(letters, \"D\")\n        elseif(grade\
    \ >= 0.0)\n            push!(letters, \"D-\")\n        elseif(grade == 0.0)\n\
    \            push!(letters, \"E\")\n        end\n    end\n    return letters\n\
    end", "    letter_grades = Array{ASCIIString}(length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] >= 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] >= 2.7\n    \
    \        letter_grades[i] = \"B\"\n        elseif grades[i] >= 2.3\n         \
    \   letter_grades[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            letter_grades[i] = \"\
    C\"\n        elseif grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grades[i] >= 1.0\n            letter_grades[i] = \"D+\"\n    \
    \    elseif grades[i] >= 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grades[i] >= 0.0\n            letter_grades[i] = \"D-\"\n        elseif grades[i]\
    \ < 0.0\n            letter_grades[i] = \"E\"\n        end\n    end\n    return\
    \ letter_grades\nend", "    grades_let = String[]\n    grades_num = Float64[]\n\
    \    for i = 1:length(grades)\n        if grades[i] >= 4.0\n            push!(grades_let,\
    \ \"A+\")\n            push!(grades_num, 100.0)\n        elseif grades[i] >= 3.7\n\
    \            push!(grades_let, \"A\")\n            push!(grades_num, 99.0)\n \
    \       elseif grades[i] >= 3.3\n            push!(grades_let, \"A-\")\n     \
    \       push!(grades_num, 98.0)\n        elseif grades[i] >= 3.0\n           \
    \ push!(grades_let, \"B+\")\n            push!(grades_num, 97.0)\n        elseif\
    \ grades[i] >= 2.7\n            push!(grades_let, \"B\")\n            push!(grades_num,\
    \ 96.0)\n        elseif grades[i] >= 2.3\n            push!(grades_let, \"B-\"\
    )\n            push!(grades_num, 95.0)\n        elseif grades[i] >= 2.0\n    \
    \        push!(grades_let, \"C+\")\n            push!(grades_num, 94.0)\n    \
    \    elseif grades[i] >= 1.7\n            push!(grades_let, \"C\")\n         \
    \   push!(grades_num, 93.0)\n        elseif grades[i] >= 1.3\n            push!(grades_let,\
    \ \"C-\")\n            push!(grades_num, 92.0)\n        elseif grades[i] >= 1.0\n\
    \            push!(grades_let, \"D+\")\n            push!(grades_num, 91.0)\n\
    \        elseif grades[i] >= 0.7\n            push!(grades_let, \"D\")\n     \
    \       push!(grades_num, 90.0)\n        elseif grades[i] >= 0.0\n           \
    \ push!(grades_let, \"D-\")\n            push!(grades_num, 89.0)\n        else\n\
    \            push!(grades_let, \"E\")\n            push!(grades_num, 0.0)\n  \
    \      end\n   ", "    lettergrades = []\n    n = length(grades)\n    for i in\
    \ 1:n\n        if grades[i] == 4.0\n            append!(lettergrades, \"A+\")\n\
    \        elseif grades[i] > 3.7\n            append!(lettergrades, \"A\")\n  \
    \      elseif grades[i] > 3.3\n            append!(lettergrades, \"A-\")\n   \
    \     elseif grades[i] > 3.0\n            append!(lettergrades, \"B+\")\n    \
    \    elseif grades[i] > 2.7\n            append!(lettergrades, \"B\")\n      \
    \  elseif grades[i] > 2.3\n            append!(lettergrades, \"B-\")\n       \
    \ elseif grades[i] > 2.0\n            append!(lettergrades, \"C+\")\n        elseif\
    \ grades[i] > 1.7\n            append!(lettergrades, \"C\")\n        elseif grades[i]\
    \ > 1.3\n            append!(lettergrades, \"C-\")\n        elseif grades[i] >\
    \ 1.0\n            append!(lettergrades, \"D+\")\n        elseif grades[i] > 0.7\n\
    \            append!(lettergrades, \"D\")\n        elseif grades[i] > 0.0\n  \
    \          append!(lettergrades, \"D-\")\n        else\n            append!(lettergrades,\
    \ \"E\")\n        end\n    end\n    return lettergrades\nend", "    #change the\
    \ type to Vector{String}\n    letter_grade = []\n    for i in grades\n       \
    \ if i == 4.0\n            push!(letter_grade, \"A+\")\n        elseif i > 3.7\n\
    \            push!(letter_grade, \"A\")\n        elseif i > 3.3\n            push!(letter_grade,\
    \ \"A-\")\n        elseif i > 3.0\n            push!(letter_grade, \"B+\")\n \
    \       elseif i > 2.7\n            push!(letter_grade, \"B\")\n        elseif\
    \ i > 2.3\n            push!(letter_grade, \"B-\")\n        elseif i > 2.0\n \
    \           push!(letter_grade, \"C+\")\n        elseif i > 1.7\n            push!(letter_grade,\
    \ \"C\")\n        elseif i > 1.3\n            push!(letter_grade, \"C-\")\n  \
    \      elseif i > 1.0\n            push!(letter_grade, \"D+\")\n        elseif\
    \ i > 0.7\n            push!(letter_grade, \"D\")\n        elseif i > 0.0\n  \
    \          push!(letter_grade, \"D-\")\n        elseif i == 0.0\n            push!(letter_grade,\
    \ \"E\")\n        end\n    end\n    return letter_grade\nend", '    """Returns
    the letter grade of a numerical grade', "    # YOUR CODE HERE\n    return []\n\
    end", "    letter_grades = Vector{String}(length(grades))\n    for i in 1:length(grades)\n\
    \        gpa = grades[i]\n        if gpa == 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif gpa > 3.7\n            letter_grades[i] = \"A\"\n \
    \       elseif gpa > 3.3\n            letter_grades[i] = \"A-\"\n        elseif\
    \ gpa > 3.0\n            letter_grades[i] = \"B+\"\n        elseif gpa > 2.7\n\
    \            letter_grades[i] = \"B\"\n        elseif gpa > 2.3\n            letter_grades[i]\
    \ = \"B-\"\n        elseif gpa > 2.0\n            letter_grades[i] = \"C+\"\n\
    \        elseif gpa > 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ gpa > 1.3\n            letter_grades[i] = \"C-\"\n        elseif gpa > 1.0\n\
    \            letter_grades[i] = \"D+\"\n        elseif gpa > 0.7\n           \
    \ letter_grades[i] = \"D\"\n        elseif gpa > 0.0\n            letter_grades[i]\
    \ = \"D-\"\n        else\n            letter_grades[i] = \"E\"\n        end\n\
    \    end\n    return letter_grades\nend", "    lg = Vector{String}(length(grades))\n\
    \    for i in 1:length(grades)\n        if grades[i] == 4.0\n            lg[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            lg[i] = \"A\"\n     \
    \   elseif grades[i] >= 3.3\n            lg[i] = \"A-\"\n        elseif grades[i]\
    \ >= 3.0\n            lg[i] = \"B+\"\n        elseif grades[i] >= 2.7\n      \
    \      lg[i] = \"B\"\n        elseif grades[i] >= 2.3\n            lg[i] = \"\
    B-\"\n        elseif grades[i] >= 2.0\n            lg[i] = \"C+\"\n        elseif\
    \ grades[i] >= 1.7\n            lg[i] = \"C\"\n        elseif grades[i] >= 1.3\n\
    \            lg[i] = \"C-\"\n        elseif grades[i] >= 1.0\n            lg[i]\
    \ = \"D+\"\n        elseif grades[i] >= 0.7\n            lg[i] = \"D\"\n     \
    \   elseif grades[i] >= 0.0\n            lg[i] = \"D-\"\n        elseif grades[i]\
    \ == 0.0\n            lg[i] = \"E\"\n        end\n    end\n    return lg\nend",
  "    grades_num = [\"4.0\", \"3.7\", \"3.3\", \"3.0\", \"2.7\", \"2.3\", \"2.0\"\
    , \"1.7\", \"1.3\", \"1.0\", \"0.7\", \"0.0\"]\n    grades_letter = [\"A+\", \"\
    A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"\
    ]\n    new_grades = []\n    for i = 1:length(grades)\n        for j = 1:length(grades_num)\n\
    \            if grades[i] >= parse(Float64, grades_num[j])\n                push!(new_grades,\
    \ grades_letter[j])\n                break\n            end\n        end\n   \
    \ end\n    return new_grades\nend", "    \"\"\"\n    This function returns a vector\
    \ of letter grades\n    \"\"\"\n    letter_grades = [] # creates an empty vector\
    \ of letter grades\n    for i in grades # iterates through each student's grade\n\
    \        if i == 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ i > 3.7\n            push!(letter_grades, \"A\")\n        elseif i > 3.3\n \
    \           push!(letter_grades, \"A-\")\n        elseif i > 3.0\n           \
    \ push!(letter_grades, \"B+\")\n        elseif i > 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif i > 2.3\n            push!(letter_grades, \"B-\")\n \
    \       elseif i > 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ i > 1.7\n            push!(letter_grades, \"C\")\n        elseif i > 1.3\n \
    \           push!(letter_grades, \"C-\")\n        elseif i > 1.0\n           \
    \ push!(letter_grades, \"D+\")\n        elseif i > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif i > 0.0\n            push!(letter_grades, \"D-\")\n \
    \       else\n            push!(letter_grades, \"E\")\n        end\n    end\n\
    \    return letter_grades\nend", "    n = length(grades)\n    output = fill(\"\
    \", n)\n    for i in 1:n\n        if grades[i] >= 4.0\n            output[i] =\
    \ \"A+\"\n        elseif grades[i] >= 3.7\n            output[i] = \"A\"\n   \
    \     elseif grades[i] >= 3.3\n            output[i] = \"A-\"\n        elseif\
    \ grades[i] >= 3.0\n            output[i] = \"B+\"\n        elseif grades[i] >=\
    \ 2.7\n            output[i] = \"B\"\n        elseif grades[i] >= 2.3\n      \
    \      output[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            output[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            output[i] = \"C\"\n \
    \       elseif grades[i] >= 1.3\n            output[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            output[i] = \"D+\"\n        elseif grades[i] >=\
    \ 0.7\n            output[i] = \"D\"\n        elseif grades[i] >= 0.0\n      \
    \      output[i] = \"D-\"\n        else\n            output[i] = \"E\"\n     \
    \   end\n    end\n    return output\nend", "    letter_grades = []\n    for g\
    \ in grades\n        if g >= 4.0\n            push!(letter_grades, \"A+\")\n \
    \       elseif g >= 3.7\n            push!(letter_grades, \"A\")\n        elseif\
    \ g >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif g >= 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif g >= 2.7\n         \
    \   push!(letter_grades, \"B\")\n        elseif g >= 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        elseif g >= 2.0\n            push!(letter_grades, \"C+\")\n\
    \        elseif g >= 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ g >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif g >= 1.0\n\
    \            push!(letter_grades, \"D+\")\n        elseif g >= 0.7\n         \
    \   push!(letter_grades, \"D\")\n        elseif g >= 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        elseif g >= 0.0\n            push!(letter_grades, \"E\")\n\
    \        end\n    end\n    return letter_grades\nend", "    answers = []\n   \
    \ for g in grades\n        if g < 0.7\n            push!(answers, \"E\")\n   \
    \     elseif g < 1.0\n            push!(answers, \"D-\")\n        elseif g < 1.3\n\
    \            push!(answers, \"D+\")\n        elseif g < 1.7\n            push!(answers,\
    \ \"D\")\n        elseif g < 2.0\n            push!(answers, \"C-\")\n       \
    \ elseif g < 2.3\n            push!(answers, \"C+\")\n        elseif g < 2.7\n\
    \            push!(answers, \"C\")\n        elseif g < 3.0\n            push!(answers,\
    \ \"B-\")\n        elseif g < 3.3\n            push!(answers, \"B+\")\n      \
    \  elseif g < 3.7\n            push!(answers, \"B\")\n        elseif g < 4.0\n\
    \            push!(answers, \"A-\")\n        elseif g == 4.0\n            push!(answers,\
    \ \"A+\")\n        end\n    end\n    return answers\nend", "    @assert isapprox(sum(grades),length(grades),rtol=1e-2)\
    \ #checks if grades add up to the length of the grades array\n    letter_grades\
    \ = []\n    for i in 1:length(grades)\n        if grades[i] == 4.0\n         \
    \   push!(letter_grades, \"A+\")\n        elseif grades[i] > 3.7\n           \
    \ push!(letter_grades, \"A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"\
    B+\")\n        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\"\
    )\n        elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n\
    \        elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n  \
    \      elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n     \
    \   elseif grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n       \
    \ elseif grades[i] > 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ grades[i] > 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i]\
    \ > 0.0\n            push!(letter_grades, \"D-\")\n        elseif grades[i] ==\
    \ 0.0\n            push!(letter_grades, \"E\")\n        end\n    end\n    return\
    \ letter_grades\nend", "    \n    temp_vector = []\n    for i in grades\n    \
    \    if i > 3.7\n            push!(temp_vector, \"A\")\n        elseif i > 3.3\n\
    \            push!(temp_vector, \"A-\")\n        elseif i > 3.0\n            push!(temp_vector,\
    \ \"B+\")\n        elseif i > 2.7\n            push!(temp_vector, \"B\")\n   \
    \     elseif i > 2.3\n            push!(temp_vector, \"B-\")\n        elseif i\
    \ > 2.0\n            push!(temp_vector, \"C+\")\n        elseif i > 1.7\n    \
    \        push!(temp_vector, \"C\")\n        elseif i > 1.3\n            push!(temp_vector,\
    \ \"C-\")\n        elseif i > 1.0\n            push!(temp_vector, \"D+\")\n  \
    \      elseif i > 0.7\n            push!(temp_vector, \"D\")\n        elseif i\
    \ > 0.0\n            push!(temp_vector, \"D-\")\n        else\n            push!(temp_vector,\
    \ \"E\")\n        end\n    end\n    return temp_vector\nend", "    answer = String[]\n\
    \    for i in grades\n        if i >= 4.0\n            push!(answer, \"A+\")\n\
    \        elseif i >= 3.7\n            push!(answer, \"A\")\n        elseif i >=\
    \ 3.3\n            push!(answer, \"A-\")\n        elseif i >= 3.0\n          \
    \  push!(answer, \"B+\")\n        elseif i >= 2.7\n            push!(answer, \"\
    B\")\n        elseif i >= 2.3\n            push!(answer, \"B-\")\n        elseif\
    \ i >= 2.0\n            push!(answer, \"C+\")\n        elseif i >= 1.7\n     \
    \       push!(answer, \"C\")\n        elseif i >= 1.3\n            push!(answer,\
    \ \"C-\")\n        elseif i >= 1.0\n            push!(answer, \"D+\")\n      \
    \  elseif i >= 0.7\n            push!(answer, \"D\")\n        elseif i >= 0.0\n\
    \            push!(answer, \"D-\")\n        else\n            push!(answer, \"\
    E\")\n        end\n    end\n    return answer\nend", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \"\"\"\n    @inproceedings{DBLP:conf/icml/CollobertR08,\n   \
    \   author    = {Ronan Collobert and\n                   Jason Weston},\n    \
    \  title     = {A Unified Architecture for Natural Language Processing: Deep Neural\n\
    \                   Networks with Multitask Learning},\n      booktitle = {Proceedings\
    \ of the 25th International Conference on Machine Learning,\n                \
    \   {ICML} 2008, Helsinki, Finland, July 5-9, 2008},\n      pages     = {160--167},\n\
    \      year      = {2008},\n      crossref  = {DBLP:conf/icml/2008},\n      url\
    \       = {http://dl.acm.org/citation.cfm?id=1390197.1390208},\n      timestamp\
    \ = {Tue, 28 Oct 2014 17:47:46 +0100},\n      biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icml/CollobertR08},\n\
    \      bibsource = {dblp computer science bibliography, http://dblp.org}\n   \
    \ }\n    \n    @proceedings{DBLP:conf/icml/2008,\n      editor    = {Samuel Kaski\
    \ and\n                   Juho Rousu},\n      title     = {Proceedings of the\
    \ 25th International Conference on Machine Learning,\n                   {ICML}\
    \ 2008, Helsinki, Finland, July 5-9, 2008},\n      publisher = {Omnipress},\n\
    \      year      = {2008},\n      url       = {http://dl.acm.org/citation.cfm?id=1390197},\n\
    \      timestamp = {Tue, 28 Oct 2014 17:47:46 +0100},\n      biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icml/2008},\n\
    \      bibsource = {dblp computer science bibliography, http://dblp.org}\n   \
    \ }\n    \n    @article{Collobert:2011:NLP:1953048", "    output = Array{String}(undef,\
    \ length(grades))\n    for (i, e) in enumerate(grades)\n        if e == 4.0\n\
    \            output[i] = \"A+\"\n        elseif e > 3.7\n            output[i]\
    \ = \"A\"\n        elseif e > 3.3\n            output[i] = \"A-\"\n        elseif\
    \ e > 3.0\n            output[i] = \"B+\"\n        elseif e > 2.7\n          \
    \  output[i] = \"B\"\n        elseif e > 2.3\n            output[i] = \"B-\"\n\
    \        elseif e > 2.0\n            output[i] = \"C+\"\n        elseif e > 1.7\n\
    \            output[i] = \"C\"\n        elseif e > 1.3\n            output[i]\
    \ = \"C-\"\n        elseif e > 1.0\n            output[i] = \"D+\"\n        elseif\
    \ e > 0.7\n            output[i] = \"D\"\n        elseif e > 0.0\n           \
    \ output[i] = \"D-\"\n        else\n            output[i] = \"E\"\n        end\n\
    \    end\n    return output\nend", "    \"\"\"Returns a vector of letter grades\
    \ using the grading scheme above.\n    \n    Input: grades::Vector{Float64} \n\
    \    Output: vec_letter_grades::Vector{String}\n    \"\"\"\n    list_grades =\
    \ []\n    if grades == []:\n        list_grades = []\n    else\n        for i\
    \ in 1:length(grades)\n            if grades[i] > 4.0\n                push!(list_grades,\
    \ \"A+\")\n            elseif grades[i] > 3.7\n                push!(list_grades,\
    \ \"A\")\n            elseif grades[i] > 3.3\n                push!(list_grades,\
    \ \"A-\")\n            elseif grades[i] > 3.0\n                push!(list_grades,\
    \ \"B+\")\n            elseif grades[i] > 2.7\n                push!(list_grades,\
    \ \"B\")\n            elseif grades[i] > 2.3\n                push!(list_grades,\
    \ \"B-\")\n            elseif grades[i] > 2.0\n                push!(list_grades,\
    \ \"C+\")\n            elseif grades[i] > 1.7\n                push!(list_grades,\
    \ \"C\")\n            elseif grades[i] > 1.3\n                push!(list_grades,\
    \ \"C-\")\n            elseif grades[i] > 1.0\n                push!(list_grades,\
    \ \"D+\")\n            elseif grades[i] > 0.7\n                push!(list_grades,\
    \ \"D\")\n            elseif grades[i] > 0.0\n                push!(list_grades,\
    \ \"D-\")\n            elseif grades[i] == 0.0\n                push!(list_grades,\
    \ \"E\")\n            end\n        end\n    end\n    return list_grades\nend\n\
    print(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))", "        # Initialize the\
    \ array that we are going to use to store the output\n    let grades_output =\
    \ fill(\"\", length(grades))", "    letter_grade = []\n    for grade in grades\n\
    \        push!(letter_grade, ifelse(grade==4.0, \"A+\",\n            ifelse(grade>3.7,\
    \ \"A\",\n            ifelse(grade>3.3, \"A-\",\n            ifelse(grade>3.0,\
    \ \"B+\",\n            ifelse(grade>2.7, \"B\",\n            ifelse(grade>2.3,\
    \ \"B-\",\n            ifelse(grade>2.0, \"C+\",\n            ifelse(grade>1.7,\
    \ \"C\",\n            ifelse(grade>1.3, \"C-\",\n            ifelse(grade>1.0,\
    \ \"D+\",\n            ifelse(grade>0.7, \"D\",\n            ifelse(grade>0.0,\
    \ \"D-\", \"E\"))))))))))))))", "    \"\"\"This function takes in a vector of\
    \ GPAs as input and returns a \n        vector of letter grades\"\"\"\n    letter_grade_array\
    \ = []\n    for i in 1:length(grades)\n        if grades[i] > 3.7\n          \
    \  push!(letter_grade_array, \"A\")\n        elseif grades[i] > 3.3\n        \
    \    push!(letter_grade_array, \"A-\")\n        elseif grades[i] > 3.0\n     \
    \       push!(letter_grade_array, \"B+\")\n        elseif grades[i] > 2.7\n  \
    \          push!(letter_grade_array, \"B\")\n        elseif grades[i] > 2.3\n\
    \            push!(letter_grade_array, \"B-\")\n        elseif grades[i] > 2.0\n\
    \            push!(letter_grade_array, \"C+\")\n        elseif grades[i] > 1.7\n\
    \            push!(letter_grade_array, \"C\")\n        elseif grades[i] > 1.3\n\
    \            push!(letter_grade_array, \"C-\")\n        elseif grades[i] > 1.0\n\
    \            push!(letter_grade_array, \"D+\")\n        elseif grades[i] > 0.7\n\
    \            push!(letter_grade_array, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grade_array, \"D-\")\n        elseif grades[i] == 0.0\n\
    \            push!(letter_grade_array, \"E\")\n        end\n    end\n    return\
    \ letter_grade_array\nend", "    \"\"\"\n    Parameters: \n        grades : A\
    \ vector of grades represented as numbers between 0 and 4.\n    Returns:\n   \
    \     A vector of string letter grades corresponding to the input grades.\n  \
    \  \"\"\"\n    letter_grades = [\"E\"] # initialize the letter grades vector to\
    \ a single E\n    # loop through all of the grades\n    for g in grades\n    \
    \    # depending on the value of the grade, update the letter grade\n        if\
    \ g == 4.0\n            append!(letter_grades, \"A+\")\n        elseif g > 3.7\n\
    \            append!(letter_grades, \"A\")\n        elseif g > 3.3\n         \
    \   append!(letter_grades, \"A-\")\n        elseif g > 3.0\n            append!(letter_grades,\
    \ \"B+\")\n        elseif g > 2.7\n            append!(letter_grades, \"B\")\n\
    \        elseif g > 2.3\n            append!(letter_grades, \"B-\")\n        elseif\
    \ g > 2.0\n            append!(letter_grades, \"C+\")\n        elseif g > 1.7\n\
    \            append!(letter_grades, \"C\")\n        elseif g > 1.3\n         \
    \   append!(letter_grades, \"C-\")\n        elseif g > 1.0\n            append!(letter_grades,\
    \ \"D+\")\n        elseif g > 0.7\n            append!(letter_grades, \"D\")\n\
    \        elseif g > 0.0\n            append!(letter_grades, \"D-\")\n        else\n\
    \            append!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "        #Creates a vector to store the letter grades\n        output_vector\
    \ = []\n        #Loops through the GPAs to assign the corresponding letter grade\n\
    \        for i = 1:length(grades)\n            if grades[i] == 4.0\n         \
    \       push!(output_vector, \"A+\")\n            elseif grades[i] >= 3.7\n  \
    \              push!(output_vector, \"A\")\n            elseif grades[i] >= 3.3\n\
    \                push!(output_vector, \"A-\")\n            elseif grades[i] >=\
    \ 3.0\n                push!(output_vector, \"B+\")\n            elseif grades[i]\
    \ >= 2.7\n                push!(output_vector, \"B\")\n            elseif grades[i]\
    \ >= 2.3\n                push!(output_vector, \"B-\")\n            elseif grades[i]\
    \ >= 2.0\n                push!(output_vector, \"C+\")\n            elseif grades[i]\
    \ >= 1.7\n                push!(output_vector, \"C\")\n            elseif grades[i]\
    \ >= 1.3\n                push!(output_vector, \"C-\")\n            elseif grades[i]\
    \ >= 1.0\n                push!(output_vector, \"D+\")\n            elseif grades[i]\
    \ >= 0.7\n                push!(output_vector, \"D\")\n            elseif grades[i]\
    \ >= 0.0\n                push!(output_vector, \"D-\")\n            else\n   \
    \             push!(output_vector, \"E\")\n            end\n        end\n    \
    \    return output_vector\n    end\nend\n \n ", "    #output vector\n    output\
    \ = String[]\n    for i in 1:length(grades)\n        \n        if grades[i] ==\
    \ 4.0\n            push!(output, \"A+\")\n        elseif grades[i] > 3.7\n   \
    \         push!(output, \"A\")\n        elseif grades[i] > 3.3\n            push!(output,\
    \ \"A-\")\n        elseif grades[i] > 3.0\n            push!(output, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(output, \"B\")\n        elseif\
    \ grades[i] > 2.3\n            push!(output, \"B-\")\n        elseif grades[i]\
    \ > 2.0\n            push!(output, \"C+\")\n        elseif grades[i] > 1.7\n \
    \           push!(output, \"C\")\n        elseif grades[i] > 1.3\n           \
    \ push!(output, \"C-\")\n        elseif grades[i] > 1.0\n            push!(output,\
    \ \"D+\")\n        elseif grades[i] > 0.7\n            push!(output, \"D\")\n\
    \        elseif grades[i] > 0.0\n            push!(output, \"D-\")\n        elseif\
    \ grades[i] == 0.0\n            push!(output, \"E\")\n        end\n        \n\
    \    end\n    return output\nend", "    grades_letters = [\"E\", \"D-\", \"D\"\
    , \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"\
    ]\n    return [grades_letters[floor(1.3*x)] for x in grades]\nend", "    # YOUR\
    \ CODE HERE\n    # hint: you can use the string keyword \"in\" to check for membership\
    \ in a set\nend", "    results = []\n    for g in grades \n        if g == 4.0\
    \ \n            push!(results, \"A+\")\n        elseif g > 3.7\n            push!(results,\
    \ \"A\")\n        elseif g > 3.3\n            push!(results, \"A-\")\n       \
    \ elseif g > 3.0\n            push!(results, \"B+\")\n        elseif g > 2.7\n\
    \            push!(results, \"B\")\n        elseif g > 2.3\n            push!(results,\
    \ \"B-\")\n        elseif g > 2.0\n            push!(results, \"C+\")\n      \
    \  elseif g > 1.7\n            push!(results, \"C\")\n        elseif g > 1.3\n\
    \            push!(results, \"C-\")\n        elseif g > 1.0\n            push!(results,\
    \ \"D+\")\n        elseif g > 0.7\n            push!(results, \"D\")\n       \
    \ elseif g > 0.0\n            push!(results, \"D-\")\n        else\n         \
    \   push!(results, \"E\")\n        end\n    end\n    return results\nend", " \
    \   \"Return a list of letter grades from an array of GPAs\"\n    letter_grade\
    \ = Vector{String}(length(grades))\n    for i in 1:length(grades)\n        if\
    \ grades[i] >= 4.0\n            letter_grade[i] = \"A+\"\n        elseif grades[i]\
    \ >= 3.7\n            letter_grade[i] = \"A\"\n        elseif grades[i] >= 3.3\n\
    \            letter_grade[i] = \"A-\"\n        elseif grades[i] >= 3.0\n     \
    \       letter_grade[i] = \"B+\"\n        elseif grades[i] >= 2.7\n          \
    \  letter_grade[i] = \"B\"\n        elseif grades[i] >= 2.3\n            letter_grade[i]\
    \ = \"B-\"\n        elseif grades[i] >= 2.0\n            letter_grade[i] = \"\
    C+\"\n        elseif grades[i] >= 1.7\n            letter_grade[i] = \"C\"\n \
    \       elseif grades[i] >= 1.3\n            letter_grade[i] = \"C-\"\n      \
    \  elseif grades[i] >= 1.0\n            letter_grade[i] = \"D+\"\n        elseif\
    \ grades[i] >= 0.7\n            letter_grade[i] = \"D\"\n        elseif grades[i]\
    \ >= 0.0\n            letter_grade[i] = \"D-\"\n        else\n            letter_grade[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grade\nend", "    \n    function\
    \ assign_letter_grade(num_grade::Float64)::String\n        if num_grade == 4.0\n\
    \            return \"A+\"\n        elseif num_grade > 3.7\n            return\
    \ \"A\"\n        elseif num_grade > 3.3\n            return \"A-\"\n        elseif\
    \ num_grade > 3.0\n            return \"B+\"\n        elseif num_grade > 2.7\n\
    \            return \"B\"\n        elseif num_grade > 2.3\n            return\
    \ \"B-\"\n        elseif num_grade > 2.0\n            return \"C+\"\n        elseif\
    \ num_grade > 1.7\n            return \"C\"\n        elseif num_grade > 1.3\n\
    \            return \"C-\"\n        elseif num_grade > 1.0\n            return\
    \ \"D+\"\n        elseif num_grade > 0.7\n            return \"D\"\n        elseif\
    \ num_grade > 0.0\n            return \"D-\"\n        else\n            return\
    \ \"E\"\n        end\n    end\n    \n    return map(assign_letter_grade, grades)\n\
    end", "    \"\"\"\n    This function takes a vector of floats and returns a vector\
    \ of strings.\n    \"\"\"\n    letter_grade = []\n    # We now create a for loop\
    \ that will iterate over all elements of the vector grades.\n    for element in\
    \ grades\n        # Now we use if else statements to determine the letter grades.\n\
    \        if element == 4.0\n            push!(letter_grade, \"A+\")\n        elseif\
    \ element > 3.7\n            push!(letter_grade, \"A\")\n        elseif element\
    \ > 3.3\n            push!(letter_grade, \"A-\")\n        elseif element > 3.0\n\
    \            push!(letter_grade, \"B+\")\n        elseif element > 2.7\n     \
    \       push!(letter_grade, \"B\")\n        elseif element > 2.3\n           \
    \ push!(letter_grade, \"B-\")\n        elseif element > 2.0\n            push!(letter_grade,\
    \ \"C+\")\n        elseif element > 1.7\n            push!(letter_grade, \"C\"\
    )\n        elseif element > 1.3\n            push!(letter_grade, \"C-\")\n   \
    \     elseif element > 1.0\n            push!(letter_grade, \"D+\")\n        elseif\
    \ element > 0.7\n            push!(letter_grade, \"D\")\n        elseif element\
    \ >= 0.0\n            push!(letter_grade, \"D-\")\n        else\n            push!(letter_grade,\
    \ \"E\")\n        end\n    end\n    return letter_grade\nend", "    grade_list\
    \ = Array{String}(undef, length(grades))\n    for i in 1:length(grades)\n    \
    \    if grades[i] >= 4.0\n            grade_list[i] = \"A+\"\n        elseif grades[i]\
    \ >= 3.7\n            grade_list[i] = \"A\"\n        elseif grades[i] >= 3.3\n\
    \            grade_list[i] = \"A-\"\n        elseif grades[i] >= 3.0\n       \
    \     grade_list[i] = \"B+\"\n        elseif grades[i] >= 2.7\n            grade_list[i]\
    \ = \"B\"\n        elseif grades[i] >= 2.3\n            grade_list[i] = \"B-\"\
    \n        elseif grades[i] >= 2.0\n            grade_list[i] = \"C+\"\n      \
    \  elseif grades[i] >= 1.7\n            grade_list[i] = \"C\"\n        elseif\
    \ grades[i] >= 1.3\n            grade_list[i] = \"C-\"\n        elseif grades[i]\
    \ >= 1.0\n            grade_list[i] = \"D+\"\n        elseif grades[i] >= 0.7\n\
    \            grade_list[i] = \"D\"\n        elseif grades[i] >= 0.0\n        \
    \    grade_list[i] = \"D-\"\n        else\n            grade_list[i] = \"E\"\n\
    \        end\n    end\n    return grade_list\nend", "    \"\"\"This is a method\
    \ docstring.\n    \"\"\"\n    letter_grades = String[]\n    for x in grades \n\
    \        if x == 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ x >= 3.7\n            push!(letter_grades, \"A\")\n        elseif x >= 3.3\n\
    \            push!(letter_grades, \"A-\")\n        elseif x >= 3.0\n         \
    \   push!(letter_grades, \"B+\")\n        elseif x >= 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif x >= 2.3\n            push!(letter_grades, \"B-\")\n\
    \        elseif x >= 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ x >= 1.7\n            push!(letter_grades, \"C\")\n        elseif x >= 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif x >= 1.0\n         \
    \   push!(letter_grades, \"D+\")\n        elseif x >= 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif x > 0.0\n            push!(letter_grades, \"D-\")\n \
    \       elseif x == 0.0\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend\n        \nprintln(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    for i in eachindex(grades)\n        #Define letter\
    \ grades as strings that will be put in a vector\n        ap = \"A+\"\n      \
    \  a = \"A\"\n        am = \"A-\"\n        bp = \"B+\"\n        b = \"B\"\n  \
    \      bm = \"B-\"\n        cp = \"C+\"\n        c = \"C\"\n        cm = \"C-\"\
    \n        dp = \"D+\"\n        d = \"D\"\n        dm = \"D-\"\n        e = \"\
    E\"\n        if grades[i] == 4.0\n            grades[i] = ap\n        elseif grades[i]\
    \ > 3.7\n            grades[i] = a\n        elseif grades[i] > 3.3\n         \
    \   grades[i] = am\n        elseif grades[i] > 3.0\n            grades[i] = bp\n\
    \        elseif grades[i] > 2.7\n            grades[i] = b\n        elseif grades[i]\
    \ > 2.3\n            grades[i] = bm\n        elseif grades[i] > 2.0\n        \
    \    grades[i] = cp\n        elseif grades[i] > 1.7\n            grades[i] = c\n\
    \        elseif grades[i] > 1.3\n            grades[i] = cm\n        elseif grades[i]\
    \ > 1.0\n            grades[i] = dp\n        elseif grades[i] > 0.7\n        \
    \    grades[i] = d\n        elseif grades[i] > 0.0\n            grades[i] = dm\n\
    \        else\n            grades[i] = e\n        end\n    end\n    return grades\n\
    end", "    grades_letters = Vector{String}()\n    for i in 1:length(grades)\n\
    \        grade = grades[i]\n        if grade >= 4.0\n            push!(grades_letters,\
    \ \"A+\")\n        elseif 3.7 < grade < 4.0\n            push!(grades_letters,\
    \ \"A\")\n        elseif 3.3 < grade < 3.7\n            push!(grades_letters,\
    \ \"A-\")\n        elseif 3.0 < grade < 3.3\n            push!(grades_letters,\
    \ \"B+\")\n        elseif 2.7 < grade < 3.0\n            push!(grades_letters,\
    \ \"B\")\n        elseif 2.3 < grade < 2.7\n            push!(grades_letters,\
    \ \"B-\")\n        elseif 2.0 < grade < 2.3\n            push!(grades_letters,\
    \ \"C+\")\n        elseif 1.7 < grade < 2.0\n            push!(grades_letters,\
    \ \"C\")\n        elseif 1.3 < grade < 1.7\n            push!(grades_letters,\
    \ \"C-\")\n        elseif 1.0 < grade < 1.3\n            push!(grades_letters,\
    \ \"D+\")\n        elseif 0.7 < grade < 1.0\n            push!(grades_letters,\
    \ \"D\")\n        elseif 0.0 < grade < 0.7\n            push!(grades_letters,\
    \ \"D-\")\n        else\n            push!(grades_letters, \"E\")\n        end\n\
    \    end\n    return grades_letters\nend", "    grades = grades.>3.7 \n    grades\
    \ = grades.* \"A\"\n    grades = grades.+ ~grades.>3.7\n    grades = grades.+\
    \ ~grades.>3.3\n    grades = grades.+ ~grades.>3.0\n    grades = grades.+ ~grades.>2.7\n\
    \    grades = grades.+ ~grades.>2.3\n    grades = grades.+ ~grades.>2.0\n    grades\
    \ = grades.+ ~grades.>1.7\n    grades = grades.+ ~grades.>1.3\n    grades = grades.+\
    \ ~grades.>1.0\n    grades = grades.+ ~grades.>0.7\n    grades = grades.+ ~grades.>0.0\n\
    \    grades = grades.+ ~grades.>0.0\n    grades = grades.+ ~grades.>0.0\n    return\
    \ grades\nend", "    letter_grade = Vector{String}(length(grades))\n    for i\
    \ in 1:length(grades)\n        if grades[i] >= 4.0\n            letter_grade[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            letter_grade[i] = \"\
    A\"\n        elseif grades[i] >= 3.3\n            letter_grade[i] = \"A-\"\n \
    \       elseif grades[i] >= 3.0\n            letter_grade[i] = \"B+\"\n      \
    \  elseif grades[i] >= 2.7\n            letter_grade[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            letter_grade[i] = \"B-\"\n        elseif grades[i]\
    \ >= 2.0\n            letter_grade[i] = \"C+\"\n        elseif grades[i] >= 1.7\n\
    \            letter_grade[i] = \"C\"\n        elseif grades[i] >= 1.3\n      \
    \      letter_grade[i] = \"C-\"\n        elseif grades[i] >= 1.0\n           \
    \ letter_grade[i] = \"D+\"\n        elseif grades[i] >= 0.7\n            letter_grade[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0\n            letter_grade[i] = \"D-\"\
    \n        elseif grades[i] == 0.0\n            letter_grade[i] = \"E\"\n     \
    \   end\n    end\n    return letter_grade\nend", "    output = []\n    for i in\
    \ grades\n        if i >= 4.0\n            push!(output, \"A+\")\n        elseif\
    \ i >= 3.7\n            push!(output, \"A\")\n        elseif i >= 3.3\n      \
    \      push!(output, \"A-\")\n        elseif i >= 3.0\n            push!(output,\
    \ \"B+\")\n        elseif i >= 2.7\n            push!(output, \"B\")\n       \
    \ elseif i >= 2.3\n            push!(output, \"B-\")\n        elseif i >= 2.0\n\
    \            push!(output, \"C+\")\n        elseif i >= 1.7\n            push!(output,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(output, \"C-\")\n       \
    \ elseif i >= 1.0\n            push!(output, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(output, \"D\")\n        elseif i >= 0.0\n            push!(output,\
    \ \"D-\")\n        else\n            push!(output, \"E\")\n        end\n    end\n\
    \    return output\nend", "    grades_letter = []\n    for i in grades\n     \
    \   if i>4.0\n            push!(grades_letter, \"A+\")\n        elseif i>3.7\n\
    \            push!(grades_letter, \"A\")\n        elseif i>3.3\n            push!(grades_letter,\
    \ \"A-\")\n        elseif i>3.0\n            push!(grades_letter, \"B+\")\n  \
    \      elseif i>2.7\n            push!(grades_letter, \"B\")\n        elseif i>2.3\n\
    \            push!(grades_letter, \"B-\")\n        elseif i>2.0\n            push!(grades_letter,\
    \ \"C+\")\n        elseif i>1.7\n            push!(grades_letter, \"C\")\n   \
    \     elseif i>1.3\n            push!(grades_letter, \"C-\")\n        elseif i>1.0\n\
    \            push!(grades_letter, \"D+\")\n        elseif i>0.7\n            push!(grades_letter,\
    \ \"D\")\n        elseif i>0.0\n            push!(grades_letter, \"D-\")\n   \
    \     elseif i==0.0\n            push!(grades_letter, \"E\")\n        end\n  \
    \  end\n    return grades_letter\nend", "    new_grades = []\n    for i in grades\n\
    \        if i == 4.0\n            push!(new_grades, \"A+\")\n        elseif i\
    \ > 3.7\n            push!(new_grades, \"A\")\n        elseif i > 3.3\n      \
    \      push!(new_grades, \"A-\")\n        elseif i > 3.0\n            push!(new_grades,\
    \ \"B+\")\n        elseif i > 2.7\n            push!(new_grades, \"B\")\n    \
    \    elseif i > 2.3\n            push!(new_grades, \"B-\")\n        elseif i >\
    \ 2.0\n            push!(new_grades, \"C+\")\n        elseif i > 1.7\n       \
    \     push!(new_grades, \"C\")\n        elseif i > 1.3\n            push!(new_grades,\
    \ \"C-\")\n        elseif i > 1.0\n            push!(new_grades, \"D+\")\n   \
    \     elseif i > 0.7\n            push!(new_grades, \"D\")\n        elseif i >\
    \ 0.0\n            push!(new_grades, \"D-\")\n        else\n            push!(new_grades,\
    \ \"E\")\n        end\n    end\n    return new_grades\nend", "        # Initialize\
    \ an empty array of strings\n        letters = []\n        \n        # Iterate\
    \ over each element of the input vector\n        for grade in grades\n       \
    \     # Check the value of the grade\n            if grade == 4.0\n          \
    \      # Append the letter grade to the output array\n                push!(letters,\
    \ \"A+\")\n            elseif grade > 3.7\n                push!(letters, \"A\"\
    )\n            elseif grade > 3.3\n                push!(letters, \"A-\")\n  \
    \          elseif grade > 3.0\n                push!(letters, \"B+\")\n      \
    \      elseif grade > 2.7\n                push!(letters, \"B\")\n           \
    \ elseif grade > 2.3\n                push!(letters, \"B-\")\n            elseif\
    \ grade > 2.0\n                push!(letters, \"C+\")\n            elseif grade\
    \ > 1.7\n                push!(letters, \"C\")\n            elseif grade > 1.3\n\
    \                push!(letters, \"C-\")\n            elseif grade > 1.0\n    \
    \            push!(letters, \"D+\")\n            elseif grade > 0.7\n        \
    \        push!(letters, \"D\")\n            elseif grade > 0.0\n             \
    \   push!(letters, \"D-\")\n            else\n                push!(letters, \"\
    E\")\n            end\n        end\n        \n        # Return the output vector\
    \ of letter grades\n        return letters\n    end", "    output = []\n    for\
    \ i in 1:length(grades)\n        if grades[i] >= 4.0\n            push!(output,\
    \ \"A+\")\n        elseif grades[i] >= 3.7\n            push!(output, \"A\")\n\
    \        elseif grades[i] >= 3.3\n            push!(output, \"A-\")\n        elseif\
    \ grades[i] >= 3.0\n            push!(output, \"B+\")\n        elseif grades[i]\
    \ >= 2.7\n            push!(output, \"B\")\n        elseif grades[i] >= 2.3\n\
    \            push!(output, \"B-\")\n        elseif grades[i] >= 2.0\n        \
    \    push!(output, \"C+\")\n        elseif grades[i] >= 1.7\n            push!(output,\
    \ \"C\")\n        elseif grades[i] >= 1.3\n            push!(output, \"C-\")\n\
    \        elseif grades[i] >= 1.0\n            push!(output, \"D+\")\n        elseif\
    \ grades[i] >= 0.7\n            push!(output, \"D\")\n        elseif grades[i]\
    \ >= 0.0\n            push!(output, \"D-\")\n        else\n            push!(output,\
    \ \"E\")\n        end\n    end\n    return output\nend\n    \n    \n    \n    ",
  "    \n    letter_grades = []\n    \n    for i in 1:length(grades)\n        if grades[i]\
    \ > 4.0\n            push!(letter_grades, \"A+\")\n        elseif grades[i] >\
    \ 3.7\n            push!(letter_grades, \"A\")\n        elseif grades[i] > 3.3\n\
    \            push!(letter_grades, \"A-\")\n        elseif grades[i] > 3.0\n  \
    \          push!(letter_grades, \"B+\")\n        elseif grades[i] > 2.7\n    \
    \        push!(letter_grades, \"B\")\n        elseif grades[i] > 2.3\n       \
    \     push!(letter_grades, \"B-\")\n        elseif grades[i] > 2.0\n         \
    \   push!(letter_grades, \"C+\")\n        elseif grades[i] > 1.7\n           \
    \ push!(letter_grades, \"C\")\n        elseif grades[i] > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grades[i] > 1.0\n            push!(letter_grades, \"\
    D+\")\n        elseif grades[i] > 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grades[i] > 0.0\n            push!(letter_grades, \"D-\")\n\
    \        elseif grades[i] == 0.0\n            push!(letter_grades, \"E\")\n  \
    \      end\n    end\n    \n    return letter_grades\nend", "    \"\"\"Returns\
    \ a vector of letter grades using numerical grades\"\"\"\n    letters = []\n \
    \   for g in grades\n        if (g == 4.0)\n            push!(letters, \"A+\"\
    )\n        elseif (g > 3.7)\n            push!(letters, \"A\")\n        elseif\
    \ (g > 3.3)\n            push!(letters, \"A-\")\n        elseif (g > 3.0)\n  \
    \          push!(letters, \"B+\")\n        elseif (g > 2.7)\n            push!(letters,\
    \ \"B\")\n        elseif (g > 2.3)\n            push!(letters, \"B-\")\n     \
    \   elseif (g > 2.0)\n            push!(letters, \"C+\")\n        elseif (g >\
    \ 1.7)\n            push!(letters, \"C\")\n        elseif (g > 1.3)\n        \
    \    push!(letters, \"C-\")\n        elseif (g > 1.0)\n            push!(letters,\
    \ \"D+\")\n        elseif (g > 0.7)\n            push!(letters, \"D\")\n     \
    \   elseif (g > 0.0)\n            push!(letters, \"D-\")\n        else\n     \
    \       push!(letters, \"E\")\n        end\n    end\n    return letters\nend",
  "    \n    function letter(grade)::String\n        if grade >= 4.0\n           \
    \ return \"A+\"\n        elseif grade >= 3.7\n            return \"A\"\n     \
    \   elseif grade >= 3.3\n            return \"A-\"\n        elseif grade >= 3.0\n\
    \            return \"B+\"\n        elseif grade >= 2.7\n            return \"\
    B\"\n        elseif grade >= 2.3\n            return \"B-\"\n        elseif grade\
    \ >= 2.0\n            return \"C+\"\n        elseif grade >= 1.7\n           \
    \ return \"C\"\n        elseif grade >= 1.3\n            return \"C-\"\n     \
    \   elseif grade >= 1.0\n            return \"D+\"\n        elseif grade >= 0.7\n\
    \            return \"D\"\n        elseif grade >= 0.0\n            return \"\
    D-\"\n        else\n            return \"E\"\n        end\n    end\n    \n   \
    \ return map(grade -> letter(grade), grades)\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    \"\"\"\n        Determines letter grade based on GPA.\n\
    \    \"\"\"\n    # Create empty vector for letter grades\n    letter_grades =\
    \ Vector{String}(undef, length(grades))\n    \n    # Loop over the vector of GPAs\n\
    \    for i in eachindex(grades)\n        gpa = grades[i]\n        # Decide letter\
    \ grade based on GPA\n        if gpa >= 4.0\n            letter_grades[i] = \"\
    A+\"\n        elseif gpa >= 3.7\n            letter_grades[i] = \"A\"\n      \
    \  elseif gpa >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif gpa\
    \ >= 3.0\n            letter_grades[i] = \"B+\"\n        elseif gpa >= 2.7\n \
    \           letter_grades[i] = \"B\"\n        elseif gpa >= 2.3\n            letter_grades[i]\
    \ = \"B-\"\n        elseif gpa >= 2.0\n            letter_grades[i] = \"C+\"\n\
    \        elseif gpa >= 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ gpa >= 1.3\n            letter_grades[i] = \"C-\"\n        elseif gpa >= 1.0\n\
    \            letter_grades[i] = \"D+\"\n        elseif gpa >= 0.7\n          \
    \  letter_grades[i] = \"D\"\n        elseif gpa >= 0.0\n            letter_grades[i]\
    \ = \"D-\"\n        else\n            letter_grades[i] = \"E\"\n        end\n\
    \    end\n    return letter_grades\nend", "    r = similar(grades)\n    for i\
    \ in 1:length(grades)\n        g = grades[i]\n        if      g == 4.0\n     \
    \       r[i] = \"A+\"\n        elseif  g > 3.7\n            r[i] = \"A\"\n   \
    \     elseif  g > 3.3\n            r[i] = \"A-\"\n        elseif  g > 3.0\n  \
    \          r[i] = \"B+\"\n        elseif  g > 2.7\n            r[i] = \"B\"\n\
    \        elseif  g > 2.3\n            r[i] = \"B-\"\n        elseif  g > 2.0\n\
    \            r[i] = \"C+\"\n        elseif  g > 1.7\n            r[i] = \"C\"\n\
    \        elseif  g > 1.3\n            r[i] = \"C-\"\n        elseif  g > 1.0\n\
    \            r[i] = \"D+\"\n        elseif  g > 0.7\n            r[i] = \"D\"\n\
    \        elseif  g > 0.0\n            r[i] = \"D-\"\n        elseif  g == 0.0\n\
    \            r[i] = \"E\"\n        end\n    end\n    return r\nend", "    output\
    \ = []\n    for i in grades\n        if i == 4.0\n            push!(output, \"\
    A+\")\n        elseif i > 3.7\n            push!(output, \"A\")\n        elseif\
    \ i > 3.3\n            push!(output, \"A-\")\n        elseif i > 3.0\n       \
    \     push!(output, \"B+\")\n        elseif i > 2.7\n            push!(output,\
    \ \"B\")\n        elseif i > 2.3\n            push!(output, \"B-\")\n        elseif\
    \ i > 2.0\n            push!(output, \"C+\")\n        elseif i > 1.7\n       \
    \     push!(output, \"C\")\n        elseif i > 1.3\n            push!(output,\
    \ \"C-\")\n        elseif i > 1.0\n            push!(output, \"D+\")\n       \
    \ elseif i > 0.7\n            push!(output, \"D\")\n        elseif i > 0.0\n \
    \           push!(output, \"D-\")\n        elseif i == 0.0\n            push!(output,\
    \ \"E\")\n        end\n    end\n    return output\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    #Initialize the letter grades vector\n    let_grades\
    \ = [\"\" for i in 1:length(grades)]\n    #Loops through the grades vector\n \
    \   for i in 1:length(grades)\n        #See if the grades are correct and then\
    \ give the appropiate letter grade\n        if grades[i] >= 4.0\n            let_grades[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            let_grades[i] = \"A\"\n\
    \        elseif grades[i] > 3.3\n            let_grades[i] = \"A-\"\n        elseif\
    \ grades[i] > 3.0\n            let_grades[i] = \"B+\"\n        elseif grades[i]\
    \ > 2.7\n            let_grades[i] = \"B\"\n        elseif grades[i] > 2.3\n \
    \           let_grades[i] = \"B-\"\n        elseif grades[i] > 2.0\n         \
    \   let_grades[i] = \"C+\"\n        elseif grades[i] > 1.7\n            let_grades[i]\
    \ = \"C\"\n        elseif grades[i] > 1.3\n            let_grades[i] = \"C-\"\n\
    \        elseif grades[i] > 1.0\n            let_grades[i] = \"D+\"\n        elseif\
    \ grades[i] > 0.7\n            let_grades[i] = \"D\"\n        elseif grades[i]\
    \ > 0.0\n            let_grades[i] = \"D-\"\n        else\n            let_grades[i]\
    \ = \"E\"\n        end\n    end\n    return let_grades\nend\n        ", "    #\
    \ Can your function handle length zero vectors?\n    if length(grades) == 0\n\
    \        return []\n    end\n    # Can your function handle vectors of length\
    \ 1?\n    if length(grades) == 1\n        if grades[1] >= 4.0\n            return\
    \ [\"A+\"]\n        elseif grades[1] >= 3.7\n            return [\"A\"]\n    \
    \    elseif grades[1] >= 3.3\n            return [\"A-\"]\n        elseif grades[1]\
    \ >= 3.0\n            return [\"B+\"]\n        elseif grades[1] >= 2.7\n     \
    \       return [\"B\"]\n        elseif grades[1] >= 2.3\n            return [\"\
    B-\"]\n        elseif grades[1] >= 2.0\n            return [\"C+\"]\n        elseif\
    \ grades[1] >= 1.7\n            return [\"C\"]\n        elseif grades[1] >= 1.3\n\
    \            return [\"C-\"]\n        elseif grades[1] >= 1.0\n            return\
    \ [\"D+\"]\n        elseif grades[1] >= 0.7\n            return [\"D\"]\n    \
    \    elseif grades[1] >= 0.0\n            return [\"D-\"]\n        else\n    \
    \        return [\"E\"]\n        end\n    end\n    # How about for vectors of\
    \ length 2?\n    if length(grades) == 2\n        if grades[1] >= 4.0\n       \
    \     first = \"A+\"\n        elseif grades[1] >= 3.7\n            first = \"\
    A\"\n        elseif grades[1] >= 3.3\n            first = \"A-\"\n        elseif\
    \ grades[1] >= 3.0\n            first = \"B+\"\n        elseif grades[1] >= 2.7\n\
    \            first = \"B\"\n        elseif grades[1] >= 2.3\n            first\
    \ = \"B-\"\n        elseif grades[1] >= 2.0\n            first = \"C+\"\n    \
    \    elseif grades[1] >= 1.7\n            first = \"C\"\n        elseif grades[1]\
    \ >= 1.3\n            first = \"C-\"\n        elseif grades[1] >= 1.0\n      \
    \      first = \"D+\"\n        elseif grades[1] >= 0.7\n", "    \"\"\"Converts\
    \ numerical grades to letter grades\n    \n    Arguments:\n    ----------\n  \
    \  grades: Vector{Float64} -- the list of numerical grades to be converted\n \
    \   \n    Returns:\n    --------\n    Vector{String} -- the letter grades\n  \
    \  \"\"\"\n    # Create two empty arrays to store numerical and letter grades\n\
    \    grades_numerical = []\n    grades_letter = []\n    \n    # Loops through\
    \ numerical grades\n    for grade in grades\n        # If the numerical grade\
    \ is greater than 3.3\n        if grade > 3.3\n            # then the letter grade\
    \ is A+\n            grade_letter = \"A+\"\n        # If the numerical grade is\
    \ greater than 3.0\n        elseif grade > 3.0\n            # then the letter\
    \ grade is A\n            grade_letter = \"A\"\n        # If the numerical grade\
    \ is greater than 2.7\n        elseif grade > 2.7\n            # then the letter\
    \ grade is A-\n            grade_letter = \"A-\"\n        # If the numerical grade\
    \ is greater than 2.3\n        elseif grade > 2.3\n            # then the letter\
    \ grade is B+\n            grade_letter = \"B+\"\n        # If the numerical grade\
    \ is greater than 2.0\n        elseif grade > 2.0\n            # then the letter\
    \ grade is B\n            grade_letter = \"B\"\n        # If the numerical grade\
    \ is greater than 1.7\n        elseif grade > 1.7\n            # then the letter\
    \ grade is B-\n            grade_letter = \"B-\"\n        # If the numerical grade\
    \ is greater than 1.3\n        elseif grade > 1.3\n            # then the letter\
    \ grade is C+\n            grade_letter = \"C+\"\n        # If the numerical grade\
    \ is greater than 1.0\n        elseif grade > 1.0\n            # then the letter\
    \ grade is C\n            grade_letter = \"C\"\n        # If the numerical grade\
    \ is greater than 0.7\n        elseif grade > 0.7\n            # then the letter\
    \ grade is C-\n            grade_letter = \"C-\"\n        # If the numerical grade\
    \ is greater than 0.0\n        elseif grade > 0.0\n            # then the letter\
    \ grade is D+\n            grade_letter =", "    if grades >=4.0\n        return\
    \ \"A+\"\n    elseif grades >=3.7\n        return \"A\"\n    elseif grades >=3.3\n\
    \        return \"A-\"\n    elseif grades >=3.0\n        return \"B+\"\n    elseif\
    \ grades >=2.7\n        return \"B\"\n    elseif grades >=2.3\n        return\
    \ \"B-\"\n    elseif grades >=2.0\n        return \"C+\"\n    elseif grades >=1.7\n\
    \        return \"C\"\n    elseif grades >=1.3\n        return \"C-\"\n    elseif\
    \ grades >=1.0\n        return \"D+\"\n    elseif grades >=0.7\n        return\
    \ \"D\"\n    elseif grades >=0.0\n        return \"D-\"\n    else\n        return\
    \ \"E\"\n    end\nend\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])", "    letters\
    \ = Vector{\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\"\
    , \"D+\", \"D\", \"D-\", \"E\"}\n    letter_grades = Vector{String}()\n    for\
    \ grade in grades\n        if grade == 4.0\n            push!(letter_grades, \"\
    A+\")\n        elseif grade > 3.7\n            push!(letter_grades, \"A\")\n \
    \       elseif grade > 3.3\n            push!(letter_grades, \"A-\")\n       \
    \ elseif grade > 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade > 2.7\n            push!(letter_grades, \"B\")\n        elseif grade >\
    \ 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade > 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade > 1.7\n      \
    \      push!(letter_grades, \"C\")\n        elseif grade > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade > 1.0\n            push!(letter_grades, \"D+\"\
    )\n        elseif grade > 0.7\n            push!(letter_grades, \"D\")\n     \
    \   elseif grade > 0.0\n            push!(letter_grades, \"D-\")\n        else\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    grades = [int(x) for x in grades]\n    if grades[i] >= 0 && grades[i]\
    \ < 1\n        return [\"F\" for x in grades]\n    elseif grades[i] >= 1 && grades[i]\
    \ < 2\n        return [\"D\" for x in grades]\n    elseif grades[i] >= 2 && grades[i]\
    \ < 3\n        return [\"C\" for x in grades]\n    elseif grades[i] >= 3 && grades[i]\
    \ < 4\n        return [\"B\" for x in grades]\n    elseif grades[i] >= 4 && grades[i]\
    \ < 5\n        return [\"A\" for x in grades]\nend", "    letter_grades = []\n\
    \    for grade in grades\n        if grade == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade > 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade > 3.3\n            push!(letter_grades, \"A-\")\n    \
    \    elseif grade > 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade > 2.7\n            push!(letter_grades, \"B\")\n        elseif grade >\
    \ 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade > 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade > 1.7\n      \
    \      push!(letter_grades, \"C\")\n        elseif grade > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade > 1.0\n            push!(letter_grades, \"D+\"\
    )\n        elseif grade > 0.7\n            push!(letter_grades, \"D\")\n     \
    \   elseif grade > 0.0\n            push!(letter_grades, \"D-\")\n        else\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    grades = round.(grades, digits=1)\n    letter = [\"E\" for i in 1:length(grades)]\n\
    \    for i in 1:length(grades)\n        if grades[i] > 4.0\n            letter[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter[i] = \"A\"\n  \
    \      elseif grades[i] > 3.3\n            letter[i] = \"A-\"\n        elseif\
    \ grades[i] > 3.0\n            letter[i] = \"B+\"\n        elseif grades[i] >\
    \ 2.7\n            letter[i] = \"B\"\n        elseif grades[i] > 2.3\n       \
    \     letter[i] = \"B-\"\n        elseif grades[i] > 2.0\n            letter[i]\
    \ = \"C+\"\n        elseif grades[i] > 1.7\n            letter[i] = \"C\"\n  \
    \      elseif grades[i] > 1.3\n            letter[i] = \"C-\"\n        elseif\
    \ grades[i] > 1.0\n            letter[i] = \"D+\"\n        elseif grades[i] >\
    \ 0.7\n            letter[i] = \"D\"\n        elseif grades[i] > 0.0\n       \
    \     letter[i] = \"D-\"\n        elseif grades[i] == 0.0\n            letter[i]\
    \ = \"E\"\n        end\n    end\n    return letter\nend", "    \n    letter_grade=[\"\
    A+\",\"A\",\"A-\",\"B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\"\
    ,\"E\"]\n    numerical_cutoff=[4.0,3.7,3.3,3.0,2.7,2.3,2.0,1.7,1.3,1.0,0.7,0.0,0.0]\n\
    \    \n    function helper(grade,i=1):\n        if(grade<numerical_cutoff[1]):\n\
    \            return letter_grade[end]\n        elseif(grade>=numerical_cutoff[end-1]):\n\
    \            return letter_grade[1]\n        elseif(grade>=numerical_cutoff[i]):\n\
    \            return letter_grade[i]\n        else\n            return helper(grade,i+1)\n\
    \        end\n    end\n    \n    return [helper(i) for i in grades]\nend", " \
    \   let grades_length = length(grades)\n    let answer = fill(\"\", grades_length)\n\
    \    \n    for i = 1:grades_length\n        if grades[i] == 4.0\n            answer[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            answer[i] = \"A\"\n  \
    \      elseif grades[i] > 3.3\n            answer[i] = \"A-\"\n        elseif\
    \ grades[i] > 3.0\n            answer[i] = \"B+\"\n        elseif grades[i] >\
    \ 2.7\n            answer[i] = \"B\"\n        elseif grades[i] > 2.3\n       \
    \     answer[i] = \"B-\"\n        elseif grades[i] > 2.0\n            answer[i]\
    \ = \"C+\"\n        elseif grades[i] > 1.7\n            answer[i] = \"C\"\n  \
    \      elseif grades[i] > 1.3\n            answer[i] = \"C-\"\n        elseif\
    \ grades[i] > 1.0\n            answer[i] = \"D+\"\n        elseif grades[i] >\
    \ 0.7\n            answer[i] = \"D\"\n        elseif grades[i] > 0.0\n       \
    \     answer[i] = \"D-\"\n        else\n            answer[i] = \"E\"\n      \
    \  end\n    end\n    return answer\nend", "    \"\"\"You have to use the numerical\
    \ grade to get the letter grade\"\"\"\n    output = Vector{String}(undef, length(grades))\n\
    \    for i = 1:length(grades)\n        if grades[i] >= 4.0\n            output[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            output[i] = \"A\"\n \
    \       elseif grades[i] >= 3.3\n            output[i] = \"A-\"\n        elseif\
    \ grades[i] >= 3.0\n            output[i] = \"B+\"\n        elseif grades[i] >=\
    \ 2.7\n            output[i] = \"B\"\n        elseif grades[i] >= 2.3\n      \
    \      output[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            output[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            output[i] = \"C\"\n \
    \       elseif grades[i] >= 1.3\n            output[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            output[i] = \"D+\"\n        elseif grades[i] >=\
    \ 0.7\n            output[i] = \"D\"\n        elseif grades[i] >= 0.0\n      \
    \      output[i] = \"D-\"\n        else\n            output[i] = \"E\"\n     \
    \   end\n    end\n    return output\nend", "    letter_grades = []\n    for grade\
    \ in grades\n        if grade > 4.0\n            letter_grades = [letter_grades;\
    \ \"A+\"]\n        elseif grade > 3.7\n            letter_grades = [letter_grades;\
    \ \"A\"]\n        elseif grade > 3.3\n            letter_grades = [letter_grades;\
    \ \"A-\"]\n        elseif grade > 3.0\n            letter_grades = [letter_grades;\
    \ \"B+\"]\n        elseif grade > 2.7\n            letter_grades = [letter_grades;\
    \ \"B\"]\n        elseif grade > 2.3\n            letter_grades = [letter_grades;\
    \ \"B-\"]\n        elseif grade > 2.0\n            letter_grades = [letter_grades;\
    \ \"C+\"]\n        elseif grade > 1.7\n            letter_grades = [letter_grades;\
    \ \"C\"]\n        elseif grade > 1.3\n            letter_grades = [letter_grades;\
    \ \"C-\"]\n        elseif grade > 1.0\n            letter_grades = [letter_grades;\
    \ \"D+\"]\n        elseif grade > 0.7\n            letter_grades = [letter_grades;\
    \ \"D\"]\n        elseif grade > 0.0\n            letter_grades = [letter_grades;\
    \ \"D-\"]\n        else\n            letter_grades = [letter_grades; \"E\"]\n\
    \        end\n    end\n    return letter_grades\nend", "    letter_grades = Vector{String}()\n\
    \    for i in 1:length(grades)\n        if grades[i] > 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grades[i] == 0.0\n \
    \           push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "  \n  i = 0\n  grade_code = zeros(Int,length(grades))\n  for g in grades\n\
    \    if g >= 4.0\n      grade_code[i] = 9\n    elseif g >= 3.7\n      grade_code[i]\
    \ = 8\n    elseif g >= 3.3\n      grade_code[i] = 7\n    elseif g >= 3.0\n   \
    \   grade_code[i] = 6\n    elseif g >= 2.7\n      grade_code[i] = 5\n    elseif\
    \ g >= 2.3\n      grade_code[i] = 4\n    elseif g >= 2.0\n      grade_code[i]\
    \ = 3\n    elseif g >= 1.7\n      grade_code[i] = 2\n    elseif g >= 1.3\n   \
    \   grade_code[i] = 1\n    elseif g >= 1.0\n      grade_code[i] = 0\n    elseif\
    \ g >= 0.7\n      grade_code[i] = -1\n    elseif g >= 0.0\n      grade_code[i]\
    \ = -2\n    elseif g == 0.0\n      grade_code[i] = -3\n    end\n      \n    i\
    \ += 1\n  end\n  \n  letter_grades = String[]\n  for i in grade_code\n    if i\
    \ == 9\n      push!(letter_grades, \"A+\")\n    elseif i == 8\n      push!(letter_grades,\
    \ \"A\")\n    elseif i == 7\n      push!(letter_grades, \"A-\")\n    elseif i\
    \ == 6\n      push!(letter_grades, \"B+\")\n    elseif i == 5\n      push!(letter_grades,\
    \ \"B\")\n    elseif i == 4\n      push!(letter_grades, \"B-\")\n    elseif i\
    \ == 3\n      push!(letter_grades, \"C+\")\n    elseif i == 2\n      push!(letter_grades,\
    \ \"C\")\n    elseif i == 1\n      push!(letter_grades, \"C-\")\n    elseif i\
    \ == 0\n      push!(letter_grades, \"D+\")\n    elseif i == -1", "    let_grades\
    \ = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\"\
    , \"D\", \"D-\", \"E\"]\n    return [let_grades[div(Int,(grade - 1) * 4, 4)] for\
    \ grade in grades]\nend", "    letter_grades = Vector{String}(undef, length(grades))\n\
    \    for i = 1:length(grades)\n        if grades[i] == 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] > 3.3\n            letter_grades[i] = \"A-\"\n \
    \       elseif grades[i] > 3.0\n            letter_grades[i] = \"B+\"\n      \
    \  elseif grades[i] > 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] > 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ > 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] > 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] > 1.3\n      \
    \      letter_grades[i] = \"C-\"\n        elseif grades[i] > 1.0\n           \
    \ letter_grades[i] = \"D+\"\n        elseif grades[i] > 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] > 0.0\n            letter_grades[i] = \"D-\"\
    \n        elseif grades[i] == 0.0\n            letter_grades[i] = \"E\"\n    \
    \    end\n    end\n    return letter_grades\nend", "    letter_grade = Vector{String}(undef,length(grades))\
    \ \n    for i in 1:length(grades)\n        if grades[i] == 4.0\n            letter_grade[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter_grade[i] = \"A\"\
    \n        elseif grades[i] > 3.3\n            letter_grade[i] = \"A-\"\n     \
    \   elseif grades[i] > 3.0\n            letter_grade[i] = \"B+\"\n        elseif\
    \ grades[i] > 2.7\n            letter_grade[i] = \"B\"\n        elseif grades[i]\
    \ > 2.3\n            letter_grade[i] = \"B-\"\n        elseif grades[i] > 2.0\n\
    \            letter_grade[i] = \"C+\"\n        elseif grades[i] > 1.7\n      \
    \      letter_grade[i] = \"C\"\n        elseif grades[i] > 1.3\n            letter_grade[i]\
    \ = \"C-\"\n        elseif grades[i] > 1.0\n            letter_grade[i] = \"D+\"\
    \n        elseif grades[i] > 0.7\n            letter_grade[i] = \"D\"\n      \
    \  elseif grades[i] > 0.0\n            letter_grade[i] = \"D-\"\n        else\n\
    \            letter_grade[i] = \"E\"\n        end\n    end\n    return letter_grade\n\
    end\n \nprintln(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))", "    letter_grade\
    \ = Array{String}(undef,length(grades))\n    for i in 1:length(grades)\n     \
    \   gpa = grades[i]\n        if gpa >= 4.0\n            letter_grade[i] = \"A+\"\
    \n        elseif gpa >= 3.7\n            letter_grade[i] = \"A\"\n        elseif\
    \ gpa >= 3.3\n            letter_grade[i] = \"A-\"\n        elseif gpa >= 3.0\n\
    \            letter_grade[i] = \"B+\"\n        elseif gpa >= 2.7\n           \
    \ letter_grade[i] = \"B\"\n        elseif gpa >= 2.3\n            letter_grade[i]\
    \ = \"B-\"\n        elseif gpa >= 2.0\n            letter_grade[i] = \"C+\"\n\
    \        elseif gpa >= 1.7\n            letter_grade[i] = \"C\"\n        elseif\
    \ gpa >= 1.3\n            letter_grade[i] = \"C-\"\n        elseif gpa >= 1.0\n\
    \            letter_grade[i] = \"D+\"\n        elseif gpa >= 0.7\n           \
    \ letter_grade[i] = \"D\"\n        elseif gpa >= 0.0\n            letter_grade[i]\
    \ = \"D-\"\n        else\n            letter_grade[i] = \"E\"\n        end\n \
    \   end\n    return letter_grade\nend", "    a = []\n    for i in grades\n   \
    \     if i > 3.7 \n            append!(a, \"A\")\n        elseif i > 3.3\n   \
    \         append!(a, \"A-\")\n        elseif i > 3.0\n            append!(a, \"\
    B+\")\n        elseif i > 2.7\n            append!(a, \"B\")\n        elseif i\
    \ > 2.3\n            append!(a, \"B-\")\n        elseif i > 2.0\n            append!(a,\
    \ \"C+\")\n        elseif i > 1.7\n            append!(a, \"C\")\n        elseif\
    \ i > 1.3\n            append!(a, \"C-\")\n        elseif i > 1.0\n          \
    \  append!(a, \"D+\")\n        elseif i > 0.7\n            append!(a, \"D\")\n\
    \        elseif i > 0.0\n            append!(a, \"D-\")\n        elseif i > 0.0\n\
    \            append!(a, \"E\")\n        end\n    end\n    return a\nend", "  \
    \  \"\"\"This function uses the if-elseif-else blocks to determine the letter\
    \ grade\n        based on the numerical grade. It returns a vector of string for\
    \ the letter grades\n        for a given numerical grade.\n        \"\"\"\n  \
    \  letter_grades = Array{String}(undef, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] >= 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] >= 2.7\n    \
    \        letter_grades[i] = \"B\"\n        elseif grades[i] >= 2.3\n         \
    \   letter_grades[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            letter_grades[i] = \"\
    C\"\n        elseif grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grades[i] >= 1.0\n            letter_grades[i] = \"D+\"\n    \
    \    elseif grades[i] >= 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grades[i] >= 0.0\n            letter_grades[i] = \"D-\"\n        elseif grades[i]\
    \ == 0.0\n            letter_grades[i] = \"E\"\n        end\n    end\n    return\
    \ letter_grades\nend", "    grades = map(x -> round(x, 1), grades)\n    grades\
    \ = map(x -> ifelse(x > 4.0, 4.0, x), grades)\n    grades = map(x -> ifelse(x\
    \ < 0.0, 0.0, x), grades)\n    letters = [\"E\", \"D-\", \"D\", \"D+\", \"C-\"\
    , \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    grades_dict\
    \ = Dict(0.0 => 0, 0.7 => 1, 1.0 => 2, 1.3 => 3, 1.7 => 4, 2.0 => 5, 2.3 => 6,\
    \ 2.7 => 7, 3.0 => 8, 3.3 => 9, 3.7 => 10, 4.0 => 11)\n    for i in 1:length(grades)\n\
    \        for j in 2:length(letters)\n            if grades[i] < grades_dict[j\
    \ - 1] && grades[i] >= grades_dict[j]\n                grades[i] = letters[j]\n\
    \            end\n        end\n    end\n    return grades\nend", "    grade_list\
    \ = [\"E\", \"D-\", \"D\", \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\"\
    , \"A-\", \"A\", \"A+\"]\n    grade_matrix = [0, 0.7, 1.0, 1.3, 1.7, 2.0, 2.3,\
    \ 2.7, 3.0, 3.3, 3.7, 4.0]\n    grade_length = length(grade_matrix)\n    grades_length\
    \ = length(grades)\n    letter_grades = []\n    for i = 1:grades_length\n    \
    \    j = 1\n        while (grades[i] > grade_matrix[j]) && (j < grade_length)\n\
    \            j += 1\n        end\n        letter_grades = [letter_grades; grade_list[j]]\n\
    \    end\n    return letter_grades\nend", "    \n    letter_grade = []\n    \n\
    \    for g in grades\n        if g == 4.0\n            append!(letter_grade, \"\
    A+\")\n        elseif g > 3.7\n            append!(letter_grade, \"A\")\n    \
    \    elseif g > 3.3\n            append!(letter_grade, \"A-\")\n        elseif\
    \ g > 3.0\n            append!(letter_grade, \"B+\")\n        elseif g > 2.7\n\
    \            append!(letter_grade, \"B\")\n        elseif g > 2.3\n          \
    \  append!(letter_grade, \"B-\")\n        elseif g > 2.0\n            append!(letter_grade,\
    \ \"C+\")\n        elseif g > 1.7\n            append!(letter_grade, \"C\")\n\
    \        elseif g > 1.3\n            append!(letter_grade, \"C-\")\n        elseif\
    \ g > 1.0\n            append!(letter_grade, \"D+\")\n        elseif g > 0.7\n\
    \            append!(letter_grade, \"D\")\n        elseif g > 0.0\n          \
    \  append!(letter_grade, \"D-\")\n        elseif g == 0.0\n            append!(letter_grade,\
    \ \"E\")\n        end\n    end\n    return letter_grade\nend", "    \"\"\"returns\
    \ letter grades for each numberic grade in the input vector grades\n    \"\"\"\
    \n    # TODO: Write a function that returns a vector of letter grades \n    #\
    \       using the above table.\n    \n    letter_grades = [\"E\"]  # initialize\
    \ output vector\n    for i = 1:length(grades)\n        if grades[i] >= 4.0\n \
    \           push!(letter_grades, \"A+\")\n        elseif grades[i] >= 3.7\n  \
    \          push!(letter_grades, \"A\")\n        elseif grades[i] >= 3.3\n    \
    \        push!(letter_grades, \"A-\")\n        elseif grades[i] >= 3.0\n     \
    \       push!(letter_grades, \"B+\")\n        elseif grades[i] >= 2.7\n      \
    \      push!(letter_grades, \"B\")\n        elseif grades[i] >= 2.3\n        \
    \    push!(letter_grades, \"B-\")\n        elseif grades[i] >= 2.0\n         \
    \   push!(letter_grades, \"C+\")\n        elseif grades[i] >= 1.7\n          \
    \  push!(letter_grades, \"C\")\n        elseif grades[i] >= 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grades[i] >= 1.0\n            push!(letter_grades, \"\
    D+\")\n        elseif grades[i] >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grades[i] >= 0.0\n            push!(letter_grades, \"D-\")\n\
    \        elseif grades[i] >= 0.0\n            push!(letter_grades, \"E\")\n  \
    \      end\n    end\n    return letter_grades\nend", "    if typeof(grades) !=\
    \ Array{Float64,1}\n        error(\"grades must be a vector of floats\")\n   \
    \ end\n    if length(grades) == 0\n        error(\"grades must be a non-empty\
    \ vector\")\n    end\n    letternums = [\"F\", \"D-\", \"D\", \"D+\", \"C-\",\
    \ \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    letter_grades\
    \ = []\n    for num in grades\n        if num < 0 || num > 4\n            error(\"\
    Some of your grades are not in the range [0,4]\")\n        end\n        index\
    \ = Int(round(2*num))\n        push!(letter_grades, letternums[index+1])\n   \
    \ end\n    return letter_grades\nend", "    \n    grades_to_letters = [\"E\",\
    \ \"D-\", \"D\", \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\"\
    , \"A\", \"A+\"]\n    thresholds = [0, 0.7, 1.0, 1.3, 1.7, 2.0, 2.3, 2.7, 3.0,\
    \ 3.3, 3.7, 4.0]\n    letter_grades = []\n    \n    for grade in grades\n    \
    \    for i in 1:length(thresholds)\n            if grade >= thresholds[i]\n  \
    \              push!(letter_grades, grades_to_letters[i])\n                break\n\
    \            end\n        end\n    end\n    return letter_grades\nend", "    grades_letter\
    \ = []\n    for i = 1:length(grades)\n        if grades[i] == 4.0\n          \
    \  push!(grades_letter, \"A+\")\n        elseif grades[i] > 3.7\n            push!(grades_letter,\
    \ \"A\")\n        elseif grades[i] > 3.3\n            push!(grades_letter, \"\
    A-\")\n        elseif grades[i] > 3.0\n            push!(grades_letter, \"B+\"\
    )\n        elseif grades[i] > 2.7\n            push!(grades_letter, \"B\")\n \
    \       elseif grades[i] > 2.3\n            push!(grades_letter, \"B-\")\n   \
    \     elseif grades[i] > 2.0\n            push!(grades_letter, \"C+\")\n     \
    \   elseif grades[i] > 1.7\n            push!(grades_letter, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(grades_letter, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(grades_letter, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(grades_letter, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(grades_letter, \"D-\")\n        else\n            push!(grades_letter,\
    \ \"E\")\n        end\n    end\n    return grades_letter\nend", "    grades_letters\
    \ = []\n    for g in grades\n        if g >= 4.0\n            push!(grades_letters,\
    \ \"A+\")\n        elseif g >= 3.7\n            push!(grades_letters, \"A\")\n\
    \        elseif g >= 3.3\n            push!(grades_letters, \"A-\")\n        elseif\
    \ g >= 3.0\n            push!(grades_letters, \"B+\")\n        elseif g >= 2.7\n\
    \            push!(grades_letters, \"B\")\n        elseif g >= 2.3\n         \
    \   push!(grades_letters, \"B-\")\n        elseif g >= 2.0\n            push!(grades_letters,\
    \ \"C+\")\n        elseif g >= 1.7\n            push!(grades_letters, \"C\")\n\
    \        elseif g >= 1.3\n            push!(grades_letters, \"C-\")\n        elseif\
    \ g >= 1.0\n            push!(grades_letters, \"D+\")\n        elseif g >= 0.7\n\
    \            push!(grades_letters, \"D\")\n        elseif g >= 0.0\n         \
    \   push!(grades_letters, \"D-\")\n        else\n            push!(grades_letters,\
    \ \"E\")\n        end\n    end\n    return grades_letters\nend\nprintln(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "  # write code here\n  grade = []\n  for i in grades\n\
    \    if i == 4.0\n      push!(grade, \"A+\")\n    elseif i > 3.7\n      push!(grade,\
    \ \"A\")\n    elseif i > 3.3\n      push!(grade, \"A-\")\n    elseif i > 3.0\n\
    \      push!(grade, \"B+\")\n    elseif i > 2.7\n      push!(grade, \"B\")\n \
    \   elseif i > 2.3\n      push!(grade, \"B-\")\n    elseif i > 2.0\n      push!(grade,\
    \ \"C+\")\n    elseif i > 1.7\n      push!(grade, \"C\")\n    elseif i > 1.3\n\
    \      push!(grade, \"C-\")\n    elseif i > 1.0\n      push!(grade, \"D+\")\n\
    \    elseif i > 0.7\n      push!(grade, \"D\")\n    elseif i > 0.0\n      push!(grade,\
    \ \"D-\")\n    elseif i == 0.0\n      push!(grade, \"E\")\n    end\n  end\n  return\
    \ grade\nend\ngrade_equation([4.0, 3, 1.7, 2, 3.5])", "    \n    #This is the\
    \ dictionary that is used to convert numerical grade to letter grade\n    d =\
    \ Dict(\"4.0\" => \"A+\", \"3.7\" => \"A\", \"3.3\" => \"A-\", \"3.0\" => \"B+\"\
    , \n    \"2.7\" => \"B\", \"2.3\" => \"B-\", \"2.0\" => \"C+\", \"1.7\" => \"\
    C\", \"1.3\" => \"C-\", \n    \"1.0\" => \"D+\", \"0.7\" => \"D\", \"0.0\" =>\
    \ \"D-\", \"-1.0\" => \"E\")\n    \n    #This is the numerical grade cutoffs for\
    \ the letter grades\n    cutoffs = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3,\
    \ 1.0, 0.7, 0.0, -1.0]\n    \n    #This is the list of letter grades that will\
    \ be returned\n    letter_grades = []\n    \n    #This is the loop that iterates\
    \ through the numerical grades and adds the corresponding letter grades to a list.\n\
    \    for g in grades\n        for i in eachindex(cutoffs)\n            if g >=\
    \ cutoffs[i]\n                push!(letter_grades, d[string(cutoffs[i])])\n  \
    \              break\n            end\n        end\n    end\n    \n    #The list\
    \ of letter grades is returned\n    return letter_grades\n    \nend", "    letter_grades\
    \ = []\n    for grade in grades\n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  return letter_grades\nend", "    letter_grades = []\n    for i in grades\n\
    \        if i >= 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ i > 3.7\n            push!(letter_grades, \"A\")\n        elseif i > 3.3\n \
    \           push!(letter_grades, \"A-\")\n        elseif i > 3.0\n           \
    \ push!(letter_grades, \"B+\")\n        elseif i > 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif i > 2.3\n            push!(letter_grades, \"B-\")\n \
    \       elseif i > 2.0\n            push!(letter_grades, \"C+\")\n        elseif\
    \ i > 1.7\n            push!(letter_grades, \"C\")\n        elseif i > 1.3\n \
    \           push!(letter_grades, \"C-\")\n        elseif i > 1.0\n           \
    \ push!(letter_grades, \"D+\")\n        elseif i > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif i > 0.0\n            push!(letter_grades, \"D-\")\n \
    \       elseif i == 0.0\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    \"\"\" Input: grades: Vector of\
    \ numerical grades \n        \n        Output: Vector of letter grades\"\"\"\n\
    \    letter_grades = []\n    for grade in grades\n        if grade >= 4.0\n  \
    \          append!(letter_grades, \"A+\")\n        elseif grade >= 3.7\n     \
    \       append!(letter_grades, \"A\")\n        elseif grade >= 3.3\n         \
    \   append!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n            append!(letter_grades,\
    \ \"B+\")\n        elseif grade >= 2.7\n            append!(letter_grades, \"\
    B\")\n        elseif grade >= 2.3\n            append!(letter_grades, \"B-\")\n\
    \        elseif grade >= 2.0\n            append!(letter_grades, \"C+\")\n   \
    \     elseif grade >= 1.7\n            append!(letter_grades, \"C\")\n       \
    \ elseif grade >= 1.3\n            append!(letter_grades, \"C-\")\n        elseif\
    \ grade >= 1.0\n            append!(letter_grades, \"D+\")\n        elseif grade\
    \ >= 0.7\n            append!(letter_grades, \"D\")\n        elseif grade >= 0.0\n\
    \            append!(letter_grades, \"D-\")\n        else\n            append!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    # create\
    \ an empty vector of string\n    letter_grades = Vector{String}(undef, length(grades))\n\
    \    # iterate through each value in the vector\n    for i in 1:length(grades)\n\
    \        # check if the values are in the range\n        if grades[i] >= 4.0\n\
    \            letter_grades[i] = \"A+\"\n        elseif grades[i] >= 3.7\n    \
    \        letter_grades[i] = \"A\"\n        elseif grades[i] >= 3.3\n         \
    \   letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n            letter_grades[i]\
    \ = \"B+\"\n        elseif grades[i] >= 2.7\n            letter_grades[i] = \"\
    B\"\n        elseif grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n\
    \        elseif grades[i] >= 2.0\n            letter_grades[i] = \"C+\"\n    \
    \    elseif grades[i] >= 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n        elseif grades[i]\
    \ >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n\
    \            letter_grades[i] = \"D\"\n        elseif grades[i] >= 0.0\n     \
    \       letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    letter_grade\
    \ = Vector{String}(length(grades))\n    for i in eachindex(grades)\n        if\
    \ grades[i] == 4.0\n            letter_grade[i] = \"A+\"\n        elseif grades[i]\
    \ > 3.7\n            letter_grade[i] = \"A\"\n        elseif grades[i] > 3.3\n\
    \            letter_grade[i] = \"A-\"\n        elseif grades[i] > 3.0\n      \
    \      letter_grade[i] = \"B+\"\n        elseif grades[i] > 2.7\n            letter_grade[i]\
    \ = \"B\"\n        elseif grades[i] > 2.3\n            letter_grade[i] = \"B-\"\
    \n        elseif grades[i] > 2.0\n            letter_grade[i] = \"C+\"\n     \
    \   elseif grades[i] > 1.7\n            letter_grade[i] = \"C\"\n        elseif\
    \ grades[i] > 1.3\n            letter_grade[i] = \"C-\"\n        elseif grades[i]\
    \ > 1.0\n            letter_grade[i] = \"D+\"\n        elseif grades[i] > 0.7\n\
    \            letter_grade[i] = \"D\"\n        elseif grades[i] > 0.0\n       \
    \     letter_grade[i] = \"D-\"\n        else\n            letter_grade[i] = \"\
    E\"\n        end\n    end\n    return letter_grade\nend", "    grades = [\"\"\
    \ for i in 1:length(grades)]\n    for i in 1:length(grades)\n        if grades[i]\
    \ >= 4.0\n            grades[i] = \"A+\"\n        elseif grades[i] > 3.7\n   \
    \         grades[i] = \"A\"\n        elseif grades[i] > 3.3\n            grades[i]\
    \ = \"A-\"\n        elseif grades[i] > 3.0\n            grades[i] = \"B+\"\n \
    \       elseif grades[i] > 2.7\n            grades[i] = \"B\"\n        elseif\
    \ grades[i] > 2.3\n            grades[i] = \"B-\"\n        elseif grades[i] >\
    \ 2.0\n            grades[i] = \"C+\"\n        elseif grades[i] > 1.7\n      \
    \      grades[i] = \"C\"\n        elseif grades[i] > 1.3\n            grades[i]\
    \ = \"C-\"\n        elseif grades[i] > 1.0\n            grades[i] = \"D+\"\n \
    \       elseif grades[i] > 0.7\n            grades[i] = \"D\"\n        elseif\
    \ grades[i] > 0.0\n            grades[i] = \"D-\"\n        else\n            grades[i]\
    \ = \"E\"\n        end\n    end\n    return grades\nend", "    let letter_grades\
    \ = []\n    for i = 1:length(grades)\n        if grades[i] == 4.0\n          \
    \  push!(letter_grades, \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades,\
    \ \"A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"\
    A-\")\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\"\
    )\n        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n \
    \       elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n   \
    \     elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n     \
    \   elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grades[i] == 0.0\n \
    \           push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    \"\"\"\n    Returns the letter grade of each student based on their\
    \ GPA.\n    \"\"\"\n    letter_grades = []\n    for i in grades \n        if i\
    \ == 4.0 \n            push!(letter_grades, \"A+\")\n        elseif i > 3.7 \n\
    \            push!(letter_grades, \"A\")\n        elseif i > 3.3 \n          \
    \  push!(letter_grades, \"A-\")\n        elseif i > 3.0 \n            push!(letter_grades,\
    \ \"B+\")\n        elseif i > 2.7 \n            push!(letter_grades, \"B\")\n\
    \        elseif i > 2.3 \n            push!(letter_grades, \"B-\")\n        elseif\
    \ i > 2.0 \n            push!(letter_grades, \"C+\")\n        elseif i > 1.7 \n\
    \            push!(letter_grades, \"C\")\n        elseif i > 1.3 \n          \
    \  push!(letter_grades, \"C-\")\n        elseif i > 1.0 \n            push!(letter_grades,\
    \ \"D+\")\n        elseif i > 0.7 \n            push!(letter_grades, \"D\")\n\
    \        elseif i > 0.0 \n            push!(letter_grades, \"D-\")\n        elseif\
    \ i == 0.0 \n            push!(letter_grades, \"E\")\n        end\n    end\n \
    \   return letter_grades\nend", "    t = []\n    for grade in grades\n       \
    \ if grade == 4.0\n            push!(t, \"A+\")\n        elseif grade > 3.7\n\
    \            push!(t, \"A\")\n        elseif grade > 3.3\n            push!(t,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(t, \"B+\")\n        elseif\
    \ grade > 2.7\n            push!(t, \"B\")\n        elseif grade > 2.3\n     \
    \       push!(t, \"B-\")\n        elseif grade > 2.0\n            push!(t, \"\
    C+\")\n        elseif grade > 1.7\n            push!(t, \"C\")\n        elseif\
    \ grade > 1.3\n            push!(t, \"C-\")\n        elseif grade > 1.0\n    \
    \        push!(t, \"D+\")\n        elseif grade > 0.7\n            push!(t, \"\
    D\")\n        elseif grade > 0.0\n            push!(t, \"D-\")\n        elseif\
    \ grade == 0.0\n            push!(t, \"E\")\n        end\n    end\n    return\
    \ t\nend", "    len = length(grades)\n    output = Vector{String}(len)\n    for\
    \ i in 1:len\n        if grades[i] < 0\n            println(\"Negative grade!\"\
    )\n            output[i] = \"E\"\n        elseif grades[i] >= 4.0\n          \
    \  output[i] = \"A+\"\n        elseif grades[i] >= 3.7\n            output[i]\
    \ = \"A\"\n        elseif grades[i] >= 3.3\n            output[i] = \"A-\"\n \
    \       elseif grades[i] >= 3.0\n            output[i] = \"B+\"\n        elseif\
    \ grades[i] >= 2.7\n            output[i] = \"B\"\n        elseif grades[i] >=\
    \ 2.3\n            output[i] = \"B-\"\n        elseif grades[i] >= 2.0\n     \
    \       output[i] = \"C+\"\n        elseif grades[i] >= 1.7\n            output[i]\
    \ = \"C\"\n        elseif grades[i] >= 1.3\n            output[i] = \"C-\"\n \
    \       elseif grades[i] >= 1.0\n            output[i] = \"D+\"\n        elseif\
    \ grades[i] >= 0.7\n            output[i] = \"D\"\n        elseif grades[i] >=\
    \ 0.0\n            output[i] = \"D-\"\n        elseif grades[i] == 0.0\n     \
    \       output[i] = \"E\"\n        end\n    end\n    return output\nend", "  \
    \  letters = []\n    for grade in grades\n        if grade < 0 || grade > 4\n\
    \            return \"Error: Invalid grade\"\n        end\n        if grade >=\
    \ 4.0\n            push!(letters, \"A+\")\n        elseif grade >= 3.7\n     \
    \       push!(letters, \"A\")\n        elseif grade >= 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(letters, \"B+\")\n \
    \       elseif grade >= 2.7\n            push!(letters, \"B\")\n        elseif\
    \ grade >= 2.3\n            push!(letters, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letters, \"C+\")\n        elseif grade >= 1.7\n           \
    \ push!(letters, \"C\")\n        elseif grade >= 1.3\n            push!(letters,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letters, \"D+\")\n \
    \       elseif grade >= 0.7\n            push!(letters, \"D\")\n        elseif\
    \ grade >= 0.0\n            push!(letters, \"D-\")\n        else\n           \
    \ push!(letters, \"E\")\n        end\n    end\n    return letters\nend", "   \
    \ grade_table = Dict(\"A+\" => 4.0, \"A\" => 3.7, \"A-\" => 3.3, \"B+\" => 3.0,\
    \ \"B\" => 2.7, \"B-\" => 2.3, \"C+\" => 2.0, \"C\" => 1.7, \"C-\" => 1.3, \"\
    D+\" => 1.0, \"D\" => 0.7, \"D-\" => 0.0, \"E\" => 0.0)\n    grade_array = []\n\
    \    for i in grades\n        if i == 4.0\n            push!(grade_array, \"A+\"\
    )\n        elseif i > 3.7\n            push!(grade_array, \"A\")\n        elseif\
    \ i > 3.3\n            push!(grade_array, \"A-\")\n        elseif i > 3.0\n  \
    \          push!(grade_array, \"B+\")\n        elseif i > 2.7\n            push!(grade_array,\
    \ \"B\")\n        elseif i > 2.3\n            push!(grade_array, \"B-\")\n   \
    \     elseif i > 2.0\n            push!(grade_array, \"C+\")\n        elseif i\
    \ > 1.7\n            push!(grade_array, \"C\")\n        elseif i > 1.3\n     \
    \       push!(grade_array, \"C-\")\n        elseif i > 1.0\n            push!(grade_array,\
    \ \"D+\")\n        elseif i > 0.7\n            push!(grade_array, \"D\")\n   \
    \     elseif i > 0.0\n            push!(grade_array, \"D-\")\n        else\n \
    \           push!(grade_array, \"E\")\n        end\n    end\n    return grade_array\n\
    end", "    letter_grades = String[]\n    for i in grades\n        if i == 4.0\n\
    \            push!(letter_grades, \"A+\")\n        elseif i >= 3.7\n         \
    \   push!(letter_grades, \"A\")\n        elseif i >= 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif i >= 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif i >= 2.7\n            push!(letter_grades, \"B\")\n        elseif\
    \ i >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif i >= 1.7\n         \
    \   push!(letter_grades, \"C\")\n        elseif i >= 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif i >= 1.0\n            push!(letter_grades, \"D+\")\n\
    \        elseif i >= 0.7\n            push!(letter_grades, \"D\")\n        elseif\
    \ i > 0.0\n            push!(letter_grades, \"D-\")\n        elseif i == 0.0\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    grades = map(x -> round(x;digits=1), grades)\n    grades = map(x ->\
    \ round(x;digits=1), grades)\n    letter_grades = []\n    for x in grades\n  \
    \      if x == 4.0\n            push!(letter_grades, \"A+\")\n        elseif x\
    \ > 3.7\n            push!(letter_grades, \"A\")\n        elseif x > 3.3\n   \
    \         push!(letter_grades, \"A-\")\n        elseif x > 3.0\n            push!(letter_grades,\
    \ \"B+\")\n        elseif x > 2.7\n            push!(letter_grades, \"B\")\n \
    \       elseif x > 2.3\n            push!(letter_grades, \"B-\")\n        elseif\
    \ x > 2.0\n            push!(letter_grades, \"C+\")\n        elseif x > 1.7\n\
    \            push!(letter_grades, \"C\")\n        elseif x > 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif x > 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif x > 0.7\n            push!(letter_grades, \"D\")\n \
    \       elseif x > 0.0\n            push!(letter_grades, \"D-\")\n        else\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    letter_grades = Array{String}(length(grades))\n    i = 1\n    while\
    \ i <= length(grades)\n        if grades[i] == 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] > 3.3\n            letter_grades[i] = \"A-\"\n \
    \       elseif grades[i] > 3.0\n            letter_grades[i] = \"B+\"\n      \
    \  elseif grades[i] > 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] > 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ > 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] > 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] > 1.3\n      \
    \      letter_grades[i] = \"C-\"\n        elseif grades[i] > 1.0\n           \
    \ letter_grades[i] = \"D+\"\n        elseif grades[i] > 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] > 0.0\n            letter_grades[i] = \"D-\"\
    \n        else\n            letter_grades[i] = \"E\"\n        end\n        i =\
    \ i + 1\n    end\n    return letter_grades\nend", "    let_grades = []\n    for\
    \ i in grades\n        if i == 4.0\n            push!(let_grades, \"A+\")\n  \
    \      elseif i > 3.7\n            push!(let_grades, \"A\")\n        elseif i\
    \ > 3.3\n            push!(let_grades, \"A-\")\n        elseif i > 3.0\n     \
    \       push!(let_grades, \"B+\")\n        elseif i > 2.7\n            push!(let_grades,\
    \ \"B\")\n        elseif i > 2.3\n            push!(let_grades, \"B-\")\n    \
    \    elseif i > 2.0\n            push!(let_grades, \"C+\")\n        elseif i >\
    \ 1.7\n            push!(let_grades, \"C\")\n        elseif i > 1.3\n        \
    \    push!(let_grades, \"C-\")\n        elseif i > 1.0\n            push!(let_grades,\
    \ \"D+\")\n        elseif i > 0.7\n            push!(let_grades, \"D\")\n    \
    \    elseif i > 0.0\n            push!(let_grades, \"D-\")\n        else\n   \
    \         push!(let_grades, \"E\")\n        end\n    end\n    return let_grades\n\
    end", "    \"\"\" Takes a vector of GPAs and returns a vector of letter grades.\
    \ \"\"\"\n    grade_vector = []\n    for i in 1:length(grades)\n        if grades[i]\
    \ == 4.0\n            push!(grade_vector, \"A+\")\n        elseif grades[i] >\
    \ 3.7\n            push!(grade_vector, \"A\")\n        elseif grades[i] > 3.3\n\
    \            push!(grade_vector, \"A-\")\n        elseif grades[i] > 3.0\n   \
    \         push!(grade_vector, \"B+\")\n        elseif grades[i] > 2.7\n      \
    \      push!(grade_vector, \"B\")\n        elseif grades[i] > 2.3\n          \
    \  push!(grade_vector, \"B-\")\n        elseif grades[i] > 2.0\n            push!(grade_vector,\
    \ \"C+\")\n        elseif grades[i] > 1.7\n            push!(grade_vector, \"\
    C\")\n        elseif grades[i] > 1.3\n            push!(grade_vector, \"C-\")\n\
    \        elseif grades[i] > 1.0\n            push!(grade_vector, \"D+\")\n   \
    \     elseif grades[i] > 0.7\n            push!(grade_vector, \"D\")\n       \
    \ elseif grades[i] > 0.0\n            push!(grade_vector, \"D-\")\n        else\n\
    \            push!(grade_vector, \"E\")\n        end\n    end\n    return grade_vector\n\
    end", "    letter_grade_array = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\"\
    , \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    upper_bound = [4.0,\
    \ 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    num_grade_array\
    \ = zeros(Float64, length(grades))\n    letter_grade_array_final = zeros(String,\
    \ length(grades))\n    #take each grade and assign to a category\n    for grade\
    \ in enumerate(grades)\n        num_grade_array[grade[1]] = grade[2]\n    end\n\
    \    #assign each category a letter grade\n    for i in enumerate(num_grade_array)\n\
    \        for j in enumerate(upper_bound)\n            if i[2] >= j[2]\n      \
    \          letter_grade_array_final[i[1]] = letter_grade_array[j[1]]\n       \
    \         break\n            end\n        end\n    end\n    return letter_grade_array_final\n\
    end", "    grade_list = []\n    for grade in grades\n        if grade >= 4.0\n\
    \            push!(grade_list, \"A+\")\n        elseif grade >= 3.7\n        \
    \    push!(grade_list, \"A\")\n        elseif grade >= 3.3\n            push!(grade_list,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(grade_list, \"B+\")\n\
    \        elseif grade >= 2.7\n            push!(grade_list, \"B\")\n        elseif\
    \ grade >= 2.3\n            push!(grade_list, \"B-\")\n        elseif grade >=\
    \ 2.0\n            push!(grade_list, \"C+\")\n        elseif grade >= 1.7\n  \
    \          push!(grade_list, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(grade_list, \"C-\")\n        elseif grade >= 1.0\n            push!(grade_list,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(grade_list, \"D\")\n\
    \        elseif grade >= 0.0\n            push!(grade_list, \"D-\")\n        else\n\
    \            push!(grade_list, \"E\")\n        end\n    end\n    return grade_list\n\
    end", "    n = length(grades)\n    letter_grades = Array{String}(n)\n    for i\
    \ in 1:n\n        grade = grades[i]\n        if grade >= 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grade >= 3.7\n            letter_grades[i] = \"A\"\n\
    \        elseif grade >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif\
    \ grade >= 3.0\n            letter_grades[i] = \"B+\"\n        elseif grade >=\
    \ 2.7\n            letter_grades[i] = \"B\"\n        elseif grade >= 2.3\n   \
    \         letter_grades[i] = \"B-\"\n        elseif grade >= 2.0\n           \
    \ letter_grades[i] = \"C+\"\n        elseif grade >= 1.7\n            letter_grades[i]\
    \ = \"C\"\n        elseif grade >= 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grade >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif\
    \ grade >= 0.7\n            letter_grades[i] = \"D\"\n        elseif grade >=\
    \ 0.0\n            letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    for i in\
    \ length(grades)\n        if grades[i] == 4.0\n            print(\"A+\")\n   \
    \     elseif grades[i] >= 3.7 && grades[i] < 4.0\n            print(\"A\")\n \
    \       elseif grades[i] >= 3.3 && grades[i] < 3.7\n            print(\"A-\")\n\
    \        elseif grades[i] >= 3.0 && grades[i] < 3.3\n            print(\"B+\"\
    )\n        elseif grades[i] >= 2.7 && grades[i] < 3.0\n            print(\"B\"\
    )\n        elseif grades[i] >= 2.3 && grades[i] < 2.7\n            print(\"B-\"\
    )\n        elseif grades[i] >= 2.0 && grades[i] < 2.3\n            print(\"C+\"\
    )\n        elseif grades[i] >= 1.7 && grades[i] < 2.0\n            print(\"C\"\
    )\n        elseif grades[i] >= 1.3 && grades[i] < 1.7\n            print(\"C-\"\
    )\n        elseif grades[i] >= 1.0 && grades[i] < 1.3\n            print(\"D+\"\
    )\n        elseif grades[i] >= 0.7 && grades[i] < 1.0\n            print(\"D\"\
    )\n        elseif grades[i] >= 0.0 && grades[i] < 0.7\n            print(\"D-\"\
    )\n        elseif grades[i] == 0.0\n            print(\"E\")\n        end\n  \
    \  end\nend", "    grades_letter = Vector{String}()\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            push!(grades_letter, \"A+\")\n     \
    \   elseif grades[i] > 3.7\n            push!(grades_letter, \"A\")\n        elseif\
    \ grades[i] > 3.3\n            push!(grades_letter, \"A-\")\n        elseif grades[i]\
    \ > 3.0\n            push!(grades_letter, \"B+\")\n        elseif grades[i] >\
    \ 2.7\n            push!(grades_letter, \"B\")\n        elseif grades[i] > 2.3\n\
    \            push!(grades_letter, \"B-\")\n        elseif grades[i] > 2.0\n  \
    \          push!(grades_letter, \"C+\")\n        elseif grades[i] > 1.7\n    \
    \        push!(grades_letter, \"C\")\n        elseif grades[i] > 1.3\n       \
    \     push!(grades_letter, \"C-\")\n        elseif grades[i] > 1.0\n         \
    \   push!(grades_letter, \"D+\")\n        elseif grades[i] > 0.7\n           \
    \ push!(grades_letter, \"D\")\n        elseif grades[i] > 0.0\n            push!(grades_letter,\
    \ \"D-\")\n        elseif grades[i] == 0.0\n            push!(grades_letter, \"\
    E\")\n        end\n    end\n    return grades_letter\nend", "    \n    letter_grades\
    \ = []\n    \n    for i = 1:length(grades)\n        \n        if grades[i] ==\
    \ 4.0\n            push!(letter_grades, \"A+\")\n        elseif grades[i] > 3.7\n\
    \            push!(letter_grades, \"A\")\n        elseif grades[i] > 3.3\n   \
    \         push!(letter_grades, \"A-\")\n        elseif grades[i] > 3.0\n     \
    \       push!(letter_grades, \"B+\")\n        elseif grades[i] > 2.7\n       \
    \     push!(letter_grades, \"B\")\n        elseif grades[i] > 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif grades[i] > 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grades[i] > 1.7\n            push!(letter_grades, \"\
    C\")\n        elseif grades[i] > 1.3\n            push!(letter_grades, \"C-\"\
    )\n        elseif grades[i] > 1.0\n            push!(letter_grades, \"D+\")\n\
    \        elseif grades[i] > 0.7\n            push!(letter_grades, \"D\")\n   \
    \     elseif grades[i] > 0.0\n            push!(letter_grades, \"D-\")\n     \
    \   else\n            push!(letter_grades, \"E\")\n        end\n    end\n    return\
    \ letter_grades\nend", "    \"\"\"\n    Maps numerical grades to letter grades.\n\
    \    \"\"\"\n    letters = zeros(String, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] < 0\n            letters[i] = \"E\"\n        elseif grades[i]\
    \ == 0\n            letters[i] = \"D-\"\n        elseif grades[i] < 1\n      \
    \      letters[i] = \"D\"\n        elseif grades[i] < 1.3\n            letters[i]\
    \ = \"D+\"\n        elseif grades[i] < 1.7\n            letters[i] = \"C-\"\n\
    \        elseif grades[i] < 2\n            letters[i] = \"C\"\n        elseif\
    \ grades[i] < 2.3\n            letters[i] = \"C+\"\n        elseif grades[i] <\
    \ 2.7\n            letters[i] = \"B-\"\n        elseif grades[i] < 3\n       \
    \     letters[i] = \"B\"\n        elseif grades[i] < 3.3\n            letters[i]\
    \ = \"B+\"\n        elseif grades[i] < 3.7\n            letters[i] = \"A-\"\n\
    \        else\n            letters[i] = \"A\"\n        end\n    end\n    return\
    \ letters\nend", "    n = length(grades)\n    grade_out = Array{String}(n)\n \
    \   for i in 1:n\n        if grades[i] >= 4.0\n            grade_out[i] = \"A+\"\
    \n        elseif grades[i] >= 3.7\n            grade_out[i] = \"A\"\n        elseif\
    \ grades[i] >= 3.3\n            grade_out[i] = \"A-\"\n        elseif grades[i]\
    \ >= 3.0\n            grade_out[i] = \"B+\"\n        elseif grades[i] >= 2.7\n\
    \            grade_out[i] = \"B\"\n        elseif grades[i] >= 2.3\n         \
    \   grade_out[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            grade_out[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            grade_out[i] = \"C\"\n\
    \        elseif grades[i] >= 1.3\n            grade_out[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            grade_out[i] = \"D+\"\n        elseif grades[i]\
    \ >= 0.7\n            grade_out[i] = \"D\"\n        elseif grades[i] >= 0.0\n\
    \            grade_out[i] = \"D-\"\n        else\n            grade_out[i] = \"\
    E\"\n        end\n    end\n    return grade_out\nend", "    \n    grades_equation\
    \ = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0]\n    grades_letter\
    \ = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\"\
    , \"D\", \"D-\"]\n    grades_numerical = []\n    \n    for grade in grades\n \
    \       if grade == 4.0\n            append!(grades_numerical, \"A+\")\n     \
    \   elseif grade < 4.0 && grade >= 3.7\n            append!(grades_numerical,\
    \ \"A\")\n        elseif grade < 3.7 && grade >= 3.3\n            append!(grades_numerical,\
    \ \"A-\")\n        elseif grade < 3.3 && grade >= 3.0\n            append!(grades_numerical,\
    \ \"B+\")\n        elseif grade < 3.0 && grade >= 2.7\n            append!(grades_numerical,\
    \ \"B\")\n        elseif grade < 2.7 && grade >= 2.3\n            append!(grades_numerical,\
    \ \"B-\")\n        elseif grade < 2.3 && grade >= 2.0\n            append!(grades_numerical,\
    \ \"C+\")\n        elseif grade < 2.0 && grade >= 1.7\n            append!(grades_numerical,\
    \ \"C\")\n        elseif grade < 1.7 && grade >= 1.3\n            append!(grades_numerical,\
    \ \"C-\")\n        elseif grade < 1.3 && grade >= 1.0\n            append!(grades_numerical,\
    \ \"D+\")\n        elseif grade < 1.0 && grade >= 0.7\n            append!(grades_numerical,\
    \ \"D\")\n        elseif grade < 0.7 && grade >= 0.0\n            append!(grades_numerical,\
    \ \"D-\")\n        elseif grade < 0.0 && grade >= 0.0\n            append!(grades_numerical,\
    \ \"E\")\n        end\n    end\n    return", "    letter = String[]\n    for i\
    \ in grades\n        if i >= 4.0\n            push!(letter, \"A+\")\n        elseif\
    \ i >= 3.7\n            push!(letter, \"A\")\n        elseif i >= 3.3\n      \
    \      push!(letter, \"A-\")\n        elseif i >= 3.0\n            push!(letter,\
    \ \"B+\")\n        elseif i >= 2.7\n            push!(letter, \"B\")\n       \
    \ elseif i >= 2.3\n            push!(letter, \"B-\")\n        elseif i >= 2.0\n\
    \            push!(letter, \"C+\")\n        elseif i >= 1.7\n            push!(letter,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(letter, \"C-\")\n       \
    \ elseif i >= 1.0\n            push!(letter, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(letter, \"D\")\n        elseif i >= 0.0\n            push!(letter,\
    \ \"D-\")\n        elseif i >= 0.0\n            push!(letter, \"E\")\n       \
    \ end\n    end\n    return letter\nend", "    \"\"\"\n    In this function we\
    \ create a dictionary in which we have the numerical values\n    assigned to the\
    \ corresponding letter grades. Then we initialize an array of\n    strings (vec\
    \ of strings) that corresponds to the grades. Then we use the \n    numerical\
    \ values of the GPAs to get the corresponding letter grades by looking\n    into\
    \ the dictionary. Finally we return the vec of strings. \n    \"\"\"\n    numerical_grade\
    \ = Dict(4.0 => \"A+\", 3.7 => \"A\", 3.3 => \"A-\", 3.0 => \"B+\", 2.7 => \"\
    B\", 2.3 => \"B-\", 2.0 => \"C+\", 1.7 => \"C\", 1.3 => \"C-\", 1.0 => \"D+\"\
    , 0.7 => \"D\", 0.0 => \"D-\", 0.0 => \"E\")\n    vec_of_strings = []\n    for\
    \ i in grades\n        if i > 4.0\n            push!(vec_of_strings, \"Invalid\
    \ GPA\")\n        else\n            for k in keys(numerical_grade)\n         \
    \       if i == k\n                    push!(vec_of_strings, numerical_grade[k])\n\
    \                end\n            end\n        end\n    end\n    return vec_of_strings\n\
    end", "    \"\"\"\n    INPUT:\n    grades ---  Vector{Float64} -- GPAs for students",
  "    letter_grades = [] \n    for i in grades\n        if i >= 4.0\n           \
    \ push!(letter_grades, \"A+\")\n        elseif i >= 3.7\n            push!(letter_grades,\
    \ \"A\")\n        elseif i >= 3.3\n            push!(letter_grades, \"A-\")\n\
    \        elseif i >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ i >= 2.7\n            push!(letter_grades, \"B\")\n        elseif i >= 2.3\n\
    \            push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n         \
    \   push!(letter_grades, \"C+\")\n        elseif i >= 1.7\n            push!(letter_grades,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(letter_grades, \"C-\")\n\
    \        elseif i >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ i >= 0.7\n            push!(letter_grades, \"D\")\n        elseif i >= 0.0\n\
    \            push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    grades_letter\
    \ = []\n    if grades == 4.0\n        return \"A+\"\n    elseif grades > 3.7\n\
    \        return \"A\"\n    elseif grades > 3.3\n        return \"A-\"\n    elseif\
    \ grades > 3.0\n        return \"B+\"\n    elseif grades > 2.7\n        return\
    \ \"B\"\n    elseif grades > 2.3\n        return \"B-\"\n    elseif grades > 2.0\n\
    \        return \"C+\"\n    elseif grades > 1.7\n        return \"C\"\n    elseif\
    \ grades > 1.3\n        return \"C-\"\n    elseif grades > 1.0\n        return\
    \ \"D+\"\n    elseif grades > 0.7\n        return \"D\"\n    elseif grades > 0.0\n\
    \        return \"D-\"\n    elseif grades == 0.0\n        return \"E\"\n    end\n\
    end", "    new_grades = Vector{String}(undef, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            new_grades[i] = \"A+\"\n        elseif\
    \ grades[i] > 3.7\n            new_grades[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            new_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n\
    \            new_grades[i] = \"B+\"\n        elseif grades[i] > 2.7\n        \
    \    new_grades[i] = \"B\"\n        elseif grades[i] > 2.3\n            new_grades[i]\
    \ = \"B-\"\n        elseif grades[i] > 2.0\n            new_grades[i] = \"C+\"\
    \n        elseif grades[i] > 1.7\n            new_grades[i] = \"C\"\n        elseif\
    \ grades[i] > 1.3\n            new_grades[i] = \"C-\"\n        elseif grades[i]\
    \ > 1.0\n            new_grades[i] = \"D+\"\n        elseif grades[i] > 0.7\n\
    \            new_grades[i] = \"D\"\n        elseif grades[i] > 0.0\n         \
    \   new_grades[i] = \"D-\"\n        else\n            new_grades[i] = \"E\"\n\
    \        end\n    end\n    return new_grades\nend\n \nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    letters = [\"E\", \"D-\", \"D\", \"D+\", \"C-\", \"\
    C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    results = Vector{String}(undef,\
    \ length(grades))\n    for (j, grade) in enumerate(grades)\n        for (i, letter)\
    \ in enumerate(letters)\n            if grade >= i-5 && grade < i-4\n        \
    \        results[j] = letter\n            end\n        end\n    end\n    return\
    \ results\nend", "    \n    letter_grades = []\n    \n    for g in grades \n \
    \       \n        if g == 4.0\n            append!(letter_grades, \"A+\")\n  \
    \      elseif g > 3.7\n            append!(letter_grades, \"A\")\n        elseif\
    \ g > 3.3\n            append!(letter_grades, \"A-\")\n        elseif g > 3.0\n\
    \            append!(letter_grades, \"B+\")\n        elseif g > 2.7\n        \
    \    append!(letter_grades, \"B\")\n        elseif g > 2.3\n            append!(letter_grades,\
    \ \"B-\")\n        elseif g > 2.0\n            append!(letter_grades, \"C+\")\n\
    \        elseif g > 1.7\n            append!(letter_grades, \"C\")\n        elseif\
    \ g > 1.3\n            append!(letter_grades, \"C-\")\n        elseif g > 1.0\n\
    \            append!(letter_grades, \"D+\")\n        elseif g > 0.7\n        \
    \    append!(letter_grades, \"D\")\n        elseif g > 0.0\n            append!(letter_grades,\
    \ \"D-\")\n        elseif g == 0.0\n            append!(letter_grades, \"E\")\n\
    \        end\n    end\n    \n    return letter_grades\n    \nend", "  to_return\
    \ = []\n  for i in grades\n    if i >= 4.0\n      push!(to_return, \"A+\")\n \
    \   elseif i >= 3.7\n      push!(to_return, \"A\")\n    elseif i >= 3.3\n    \
    \  push!(to_return, \"A-\")\n    elseif i >= 3.0\n      push!(to_return, \"B+\"\
    )\n    elseif i >= 2.7\n      push!(to_return, \"B\")\n    elseif i >= 2.3\n \
    \     push!(to_return, \"B-\")\n    elseif i >= 2.0\n      push!(to_return, \"\
    C+\")\n    elseif i >= 1.7\n      push!(to_return, \"C\")\n    elseif i >= 1.3\n\
    \      push!(to_return, \"C-\")\n    elseif i >= 1.0\n      push!(to_return, \"\
    D+\")\n    elseif i >= 0.7\n      push!(to_return, \"D\")\n    elseif i >= 0.0\n\
    \      push!(to_return, \"D-\")\n    elseif i == 0.0\n      push!(to_return, \"\
    E\")\n    end\n  end\n  return to_return\nend", "    for i in 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            println(\"A+\")\n        elseif grades[i]\
    \ > 3.7\n            println(\"A\")\n        elseif grades[i] > 3.3\n        \
    \    println(\"A-\")\n        elseif grades[i] > 3.0\n            println(\"B+\"\
    )\n        elseif grades[i] > 2.7\n            println(\"B\")\n        elseif\
    \ grades[i] > 2.3\n            println(\"B-\")\n        elseif grades[i] > 2.0\n\
    \            println(\"C+\")\n        elseif grades[i] > 1.7\n            println(\"\
    C\")\n        elseif grades[i] > 1.3\n            println(\"C-\")\n        elseif\
    \ grades[i] > 1.0\n            println(\"D+\")\n        elseif grades[i] > 0.7\n\
    \            println(\"D\")\n        elseif grades[i] > 0.0\n            println(\"\
    D-\")\n        elseif grades[i] == 0.0\n            println(\"E\")\n        end\n\
    \    end\nend", "    grades_in_letters = []\n    for grade in grades\n       \
    \ if grade >= 4.0\n            push!(grades_in_letters, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(grades_in_letters, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(grades_in_letters, \"A-\")\n        elseif grade >=\
    \ 3.0\n            push!(grades_in_letters, \"B+\")\n        elseif grade >= 2.7\n\
    \            push!(grades_in_letters, \"B\")\n        elseif grade >= 2.3\n  \
    \          push!(grades_in_letters, \"B-\")\n        elseif grade >= 2.0\n   \
    \         push!(grades_in_letters, \"C+\")\n        elseif grade >= 1.7\n    \
    \        push!(grades_in_letters, \"C\")\n        elseif grade >= 1.3\n      \
    \      push!(grades_in_letters, \"C-\")\n        elseif grade >= 1.0\n       \
    \     push!(grades_in_letters, \"D+\")\n        elseif grade >= 0.7\n        \
    \    push!(grades_in_letters, \"D\")\n        elseif grade >= 0.0\n          \
    \  push!(grades_in_letters, \"D-\")\n        elseif grade < 0.0\n            push!(grades_in_letters,\
    \ \"E\")\n        end\n    end\n    return grades_in_letters\nend", "    grades_letters\
    \ = Vector{String}(undef,length(grades))\n    #this will make the corresponding\
    \ list of letter grades\n    for i in 1:length(grades)\n        if grades[i] >=\
    \ 4.0\n            grades_letters[i] = \"A+\"\n        elseif grades[i] >= 3.7\
    \ && grades[i] < 4.0\n            grades_letters[i] = \"A\"\n        elseif grades[i]\
    \ >= 3.3 && grades[i] < 3.7\n            grades_letters[i] = \"A-\"\n        elseif\
    \ grades[i] >= 3.0 && grades[i] < 3.3\n            grades_letters[i] = \"B+\"\n\
    \        elseif grades[i] >= 2.7 && grades[i] < 3.0\n            grades_letters[i]\
    \ = \"B\"\n        elseif grades[i] >= 2.3 && grades[i] < 2.7\n            grades_letters[i]\
    \ = \"B-\"\n        elseif grades[i] >= 2.0 && grades[i] < 2.3\n            grades_letters[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7 && grades[i] < 2.0\n            grades_letters[i]\
    \ = \"C\"\n        elseif grades[i] >= 1.3 && grades[i] < 1.7\n            grades_letters[i]\
    \ = \"C-\"\n        elseif grades[i] >= 1.0 && grades[i] < 1.3\n            grades_letters[i]\
    \ = \"D+\"\n        elseif grades[i] >= 0.7 && grades[i] < 1.0\n            grades_letters[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0 && grades[i] < 0.7\n            grades_letters[i]\
    \ = \"D-\"\n        elseif grades[i] == 0.0\n            grades_letters[i] = \"\
    E\"\n        end\n    end\n    grades_letters\nend", "    output = []\n    for\
    \ grade in grades\n        if grade == 4.0\n            push!(output, \"A+\")\n\
    \        elseif grade > 3.7\n            push!(output, \"A\")\n        elseif\
    \ grade > 3.3\n            push!(output, \"A-\")\n        elseif grade > 3.0\n\
    \            push!(output, \"B+\")\n        elseif grade > 2.7\n            push!(output,\
    \ \"B\")\n        elseif grade > 2.3\n            push!(output, \"B-\")\n    \
    \    elseif grade > 2.0\n            push!(output, \"C+\")\n        elseif grade\
    \ > 1.7\n            push!(output, \"C\")\n        elseif grade > 1.3\n      \
    \      push!(output, \"C-\")\n        elseif grade > 1.0\n            push!(output,\
    \ \"D+\")\n        elseif grade > 0.7\n            push!(output, \"D\")\n    \
    \    elseif grade > 0.0\n            push!(output, \"D-\")\n        else\n   \
    \         push!(output, \"E\")\n        end\n    end\n    return output\nend",
  "    output = String[]\n    for grade in grades\n        if grade == 4.0\n     \
    \       push!(output, \"A+\")\n        elseif grade >= 3.7\n            push!(output,\
    \ \"A\")\n        elseif grade >= 3.3\n            push!(output, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(output, \"B+\")\n        elseif grade\
    \ >= 2.7\n            push!(output, \"B\")\n        elseif grade >= 2.3\n    \
    \        push!(output, \"B-\")\n        elseif grade >= 2.0\n            push!(output,\
    \ \"C+\")\n        elseif grade >= 1.7\n            push!(output, \"C\")\n   \
    \     elseif grade >= 1.3\n            push!(output, \"C-\")\n        elseif grade\
    \ >= 1.0\n            push!(output, \"D+\")\n        elseif grade >= 0.7\n   \
    \         push!(output, \"D\")\n        elseif grade > 0.0\n            push!(output,\
    \ \"D-\")\n        else\n            push!(output, \"E\")\n        end\n    end\n\
    \    return output\nend", "    \"\"\" Converts grades from numerical to letter\
    \ grades\n    \n    \"\"\"\n    i = 1\n    letter_grade = Array{String}(undef,0)\n\
    \    # Append to letter_grade array for each GPA\n    for g in grades\n      \
    \  if g > 4.0\n            append!(letter_grade, \"A+\")\n        elseif g > 3.7\n\
    \            append!(letter_grade, \"A\")\n        elseif g > 3.3\n          \
    \  append!(letter_grade, \"A-\")\n        elseif g > 3.0\n            append!(letter_grade,\
    \ \"B+\")\n        elseif g > 2.7\n            append!(letter_grade, \"B\")\n\
    \        elseif g > 2.3\n            append!(letter_grade, \"B-\")\n        elseif\
    \ g > 2.0\n            append!(letter_grade, \"C+\")\n        elseif g > 1.7\n\
    \            append!(letter_grade, \"C\")\n        elseif g > 1.3\n          \
    \  append!(letter_grade, \"C-\")\n        elseif g > 1.0\n            append!(letter_grade,\
    \ \"D+\")\n        elseif g > 0.7\n            append!(letter_grade, \"D\")\n\
    \        elseif g > 0.0\n            append!(letter_grade, \"D-\")\n        elseif\
    \ g == 0.0\n            append!(letter_grade, \"E\")\n        end\n    end\n \
    \   return letter_grade\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

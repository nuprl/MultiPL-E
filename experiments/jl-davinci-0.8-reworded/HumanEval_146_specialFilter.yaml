name: HumanEval_146_specialFilter
language: jl
prompt: "\"\"\"Write a function that takes a vector of numbers as input and returns\
  \ \n    the number of elements in the vector that are greater than 10 and both \n\
  \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
  \ -3, 45, 21, 109])\n    2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
  \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
  \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
  \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
  \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
completions: ["    count = 0\n    for i = 1:length(nums)\n        if (nums[i] > 10)\
    \ && (nums[i] % 2 != 0) && ((div(nums[i], 10) % 2 != 0) || (nums[i] % 10 != 0))\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    n\
    \ = length(nums)\n    count = 0\n    for i in 1:n\n        if nums[i] > 10 &&\
    \ (nums[i]%10 == 1 || nums[i]%10 == 3 || nums[i]%10 == 5 || nums[i]%10 == 7 ||\
    \ nums[i]%10 == 9) && nums[i] >=10\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    cnt = 0\n    for n in nums\n        first, last\
    \ = divrem(n, 10)\n        if n > 10 && first % 2 != 0 && last % 2 != 0\n    \
    \        cnt += 1\n        end\n    end\n    return cnt\nend", "    \n    a =\
    \ filter(x -> x > 10, nums)\n    b = filter(x -> x%2 != 0, a)\n    c = filter(x\
    \ -> abs(x)%10%2 != 0, b)\n    \n    return length(c)\nend", "    total::Int64\
    \ = 0\n    for i = 1:length(nums)\n        num = nums[i]\n        if num > 10\
    \ && num%2 == 1 && num%10 == 1 || num%10 == 3 || num%10 == 5 || num%10 == 7 ||\
    \ num%10 == 9\n            total += 1\n        end\n    end\n    return total\n\
    end", "    count = 0 \n    for i in nums \n        if i > 10 \n            i2\
    \ = convert(Int64, string(i)[1])\n            i3 = convert(Int64, string(i)[end])\n\
    \            if i2 % 2 != 0 \n                if i3 % 2 != 0 \n              \
    \      count += 1 \n                end \n            end \n        end \n   \
    \ end \n    return count \nend ", "    \"\"\"Function that takes a vector of numbers\
    \ as input and returns \n    the number of elements in the vector that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    \"\"\"\n    nums_count = 0\n    for num in nums\n        num_count\
    \ = 0\n        num_count += Int64(num > 10)\n        if (num % 10 % 2 != 0) &&\
    \ (num % 10^2 % 2 != 0)\n            num_count += 1\n        end\n        nums_count\
    \ += num_count\n    end\n    return nums_count\nend", "    # YOUR CODE HERE\n\
    end", "    return filter(x -> x > 10 && isodd(first(digits(x))) && isodd(last(digits(x))),\
    \ nums) |> length\nend", "    first_digit(num::Int64) = (num % 10)\n    last_digit(num::Int64)\
    \ = (num \xF7 10) % 10\n    output = 0\n    for num in nums\n        if (num >\
    \ 10) && (first_digit(num) % 2 != 0) && (last_digit(num) % 2 != 0)\n         \
    \   output += 1\n        end\n    end\n    return output\nend", "    count = 0\n\
    \    for n in nums\n        first = div(n, div(n, 10))\n        last = n - first*div(n,\
    \ 10)\n        if (first in [1, 3, 5, 7, 9]) && (last in [1, 3, 5, 7, 9]) && (n\
    \ > 10)\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for n in nums\n        @inbounds firstDigit = n % 10\n     \
    \   @inbounds lastDigit = floor(n/10^(ceil(log10(n))))\n        if 10 < n < 100\n\
    \            lastDigit = firstDigit\n        end\n        if (10 < n) && (firstDigit\
    \ % 2 != 0) && (lastDigit % 2 != 0)\n            count += 1\n        end\n   \
    \ end\n    return count\nend", "    total = 0\n    for n in nums\n        if n\
    \ > 10 && isodd(firstdigit(n)) && isodd(lastdigit(n))\n            total += 1\n\
    \        end\n    end\n    return total\nend", "    count = 0\n    for i in nums\n\
    \        if i>10 && i%2 != 0 && i/10%2 != 0 && i%10 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    for i in\
    \ nums\n        if (i > 10) && (i % 2 != 0) && ((i % 10) % 2 != 0)\n         \
    \   count += 1\n        end\n    end\n    return count\nend", "    n = 0\n   \
    \ for x in nums\n        if x > 10 && (x % 10 != 0) && (x % 10 != 2) && (x % 10\
    \ != 4) && (x % 10 != 6) && (x % 10 != 8)\n            x = div(x, 10)\n      \
    \      if (x % 10 != 0) && (x % 10 != 2) && (x % 10 != 4) && (x % 10 != 6) &&\
    \ (x % 10 != 8)\n                n += 1\n            end\n        end\n    end\n\
    \    return n\nend", "    total = 0\n    @show total\n    for i in nums\n    \
    \    @show i\n        @show total\n        if i > 10\n            @show i\n  \
    \          @show i % 10\n            @show i // 10\n            if i % 10 != 0\n\
    \                if i % 10 % 2 != 0\n                    if i // 10 % 2 != 0\n\
    \                        total += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return total\nend", "    count\
    \ = 0\n    for num in nums\n        if (num > 10) && (num % 2 != 0) && (num %\
    \ 10 != 0) && (num % 100 != 0) && (num % 1000 != 0)\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    n = length(nums)\n    result\
    \ = 0\n    for i in 1:n\n        if nums[i] > 10\n            if (nums[i]%10 !=\
    \ 0 && nums[i]%10 != 2 && nums[i]%10 != 4 && nums[i]%10 != 6 && nums[i]%10 !=\
    \ 8) && (div(nums[i],10)%10 != 0 && div(nums[i],10)%10 != 2 && div(nums[i],10)%10\
    \ != 4 && div(nums[i],10)%10 != 6 && div(nums[i],10)%10 != 8)\n              \
    \  result += 1\n            end\n        end\n    end\n    return result\nend",
  "    n::Int64 = 0 \n    for i in nums \n        if i >= 10 && (firstDigit(i) % 2\
    \ != 0) && (lastDigit(i) % 2 != 0)\n            n += 1\n        end\n    end\n\
    \    return n\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

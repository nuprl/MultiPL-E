name: HumanEval_124_valid_date
language: jl
prompt: "\"\"\"You have to write a function which validates a given date string and\n\
  \    returns true if the date is valid otherwise false.\n    The date is valid if\
  \ all of the following rules are satisfied:\n    1. The date string is not empty.\n\
  \    2. The number of days is not less than 1 or higher than 31 days for months\
  \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days\
  \ for months 4,6,9,11. And, the number of days is not less than 1 or higher than\
  \ 29 for the month 2.\n    3. The months should not be less than 1 or higher than\
  \ 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    >>> valid_date(\"\
  03-11-2000\")\n    true\n\n    >>> valid_date(\"15-01-2012\")\n    false\n\n   \
  \ >>> valid_date(\"04-0-2040\")\n    false\n\n    >>> valid_date(\"06-04-2020\"\
  )\n    true\n\n    >>> valid_date(\"06/04/2020\")\n    false\n    \"\"\"\nfunction\
  \ valid_date(date::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = valid_date;\n\t@test(candidate(\"\
  03-11-2000\") == true)\n\t@test(candidate(\"15-01-2012\") == false)\n\t@test(candidate(\"\
  04-0-2040\") == false)\n\t@test(candidate(\"06-04-2020\") == true)\n\t@test(candidate(\"\
  01-01-2007\") == true)\n\t@test(candidate(\"03-32-2011\") == false)\n\t@test(candidate(\"\
  \") == false)\n\t@test(candidate(\"04-31-3000\") == false)\n\t@test(candidate(\"\
  06-06-2005\") == true)\n\t@test(candidate(\"21-31-2000\") == false)\n\t@test(candidate(\"\
  04-12-2003\") == true)\n\t@test(candidate(\"04122003\") == false)\n\t@test(candidate(\"\
  20030412\") == false)\n\t@test(candidate(\"2003-04\") == false)\n\t@test(candidate(\"\
  2003-04-12\") == false)\n\t@test(candidate(\"04-2003\") == false)\nend\n"
completions: ["    # To split the string into three parts, based on the delimiter\
    \ \"-\"\n    date_arr = split(date, \"-\")\n    month = parse(Int, date_arr[1])\n\
    \    day = parse(Int, date_arr[2])\n    year = parse(Int, date_arr[3])\n    #\
    \ To check if the month, day and year are all valid or not.\n    if month in [1,3,5,7,8,10,12]\
    \ && day in 1:31\n        println(\"Valid date\")\n        return true\n    elseif\
    \ month in [4,6,9,11] && day in 1:30\n        println(\"Valid date\")\n      \
    \  return true\n    elseif month == 2 && day in 1:29\n        println(\"Valid\
    \ date\")\n        return true\n    else\n        println(\"Invalid date\")\n\
    \        return false\n    end\nend", "    date_array = split(date, \"-\")\n \
    \   date_array_size = length(date_array)\n    day = parse(Int, date_array[2])\n\
    \    month = parse(Int, date_array[1])\n    year = parse(Int, date_array[3])\n\
    \    # if date_array_size != 3\n    #   return false\n    if day > 31 || day <\
    \ 1\n      return false\n    end\n    if month > 12 || month < 1\n      return\
    \ false\n    end\n    if month in [1,3,5,7,8,10,12] && day > 31\n      return\
    \ false\n    end\n    if month in [4,6,9,11] && day > 30\n      return false\n\
    \    end\n    if month == 2 && day > 29\n      return false\n    end\n    if year\
    \ < 1900 || year > 3000\n      return false\n    end\n    return true\nend", " \
    \   date_list = split(date, '-')\n    size(date_list) == 3 || throw(ArgumentError(\"\
    Invalid number of arguments in date string\"))\n    parse(Int, date_list[2]) <\
    \ 1 || parse(Int, date_list[2]) > 31 || throw(ArgumentError(\"Invalid number of\
    \ days\"))\n    parse(Int, date_list[1]) < 1 || parse(Int, date_list[1]) > 12\
    \ || throw(ArgumentError(\"Invalid number of months\"))\n    parse(Int, date_list[3])\
    \ < 1970 || throw(ArgumentError(\"Invalide year\"))\n    true\nend", "    parts\
    \ = split(date, r\"-\")\n    day = parse(Int, parts[1])\n    month = parse(Int,\
    \ parts[2])\n    year = parse(Int, parts[3])\n    if day >= 1 && day <= 31\n \
    \       if month >= 1 && month <= 12\n            if year >= 0\n             \
    \   return true\n            end\n        end\n    end\n    return false\nend",
  "    if (date == \"\") \n        return false\n    end\n    if (length(date) !=\
    \ 10) \n        return false\n    end\n    if (date[3] != \"-\" || date[6] !=\
    \ \"-\") \n        return false\n    end\n    (m,d,y) = (parse(Int, date[1:2]),\
    \ parse(Int, date[4:5]), parse(Int, date[7:10]))\n    if (m < 1 || m > 12) \n\
    \        return false\n    end\n    if (m \u2208 [1,3,5,7,8,10,12] && (d < 1 ||\
    \ d > 31)) \n        return false\n    end\n    if (m \u2208 [4,6,9,11] && (d\
    \ < 1 || d > 30)) \n        return false\n    end\n    if (m == 2 && (d < 1 ||\
    \ d > 29)) \n        return false\n    end\n    return true\nend", "    if isempty(date)\n\
    \        return false\n    end\n    if contains(date, \"/\") || contains(date,\
    \ \" \")\n        return false\n    end\n    if contains(date, \".\")\n      \
    \  return false\n    end\n    if length(date) != 10\n        return false\n  \
    \  end\n    if !occursin(\"-\", date)\n        return false\n    end\n    if !occursin(\"\
    -\", date)\n        return false\n    end\n    if !occursin(\"-\", date)\n   \
    \     return false\n    end\n    date_array = split(date, \"-\")\n    year = date_array[3]\n\
    \    month = date_array[1]\n    day = date_array[2]\n    if length(month) != 2\n\
    \        return false\n    end\n    if length(day) != 2\n        return false\n\
    \    end\n    if length(year) != 4\n        return false\n    end\n    if !(all(occursin(\"\
    0123456789\", val) for val in month))\n        return false\n    end\n    if !(all(occursin(\"\
    0123456789\", val) for val in day))\n        return false\n    end\n    if !(all(occursin(\"\
    0123456789\", val) for val in year))\n        return false\n    end\n    # validate\
    \ day\n    if month == \"01\" || month == \"03\" || month == \"05\" || month ==\
    \ \"07\" || month == \"08\" || month == \"10\" || month == \"12\"\n        if\
    \ day == \"31\"\n            return true\n        elseif day == \"30\"\n     \
    \       return false\n        elseif day == \"29\"\n            return false\n\
    \        elseif day == \"28\"\n            return true\n        elseif day <=\
    \ \"27\"\n            return true\n        elseif day >= \"32\"\n            return\
    \ false\n        end\n    elseif month == \"04\" || month == \"06\" || month ==\
    \ \"09\" || month == \"11\"\n        if day == \"31\"\n            return false\n\
    \        elseif day == \"30\"\n            return true\n        elseif day ==\
    \ \"29\"\n            return false\n        elseif day == \"", "    dateArray\
    \ = split(date, '-')\n    if length(dateArray) != 3\n        return false\n  \
    \  end\n    if parse(Int, dateArray[1]) < 1 || parse(Int, dateArray[1]) > 12\n\
    \        return false\n    end\n    if isequal(dateArray[1], \"1\") || isequal(dateArray[1],\
    \ \"3\") || isequal(dateArray[1], \"5\") || isequal(dateArray[1], \"7\") || isequal(dateArray[1],\
    \ \"8\") || isequal(dateArray[1], \"10\") || isequal(dateArray[1], \"12\")\n \
    \       if parse(Int, dateArray[2]) < 1 || parse(Int, dateArray[2]) > 31\n   \
    \         return false\n        end\n    elseif isequal(dateArray[1], \"4\") ||\
    \ isequal(dateArray[1], \"6\") || isequal(dateArray[1], \"9\") || isequal(dateArray[1],\
    \ \"11\")\n        if parse(Int, dateArray[2]) < 1 || parse(Int, dateArray[2])\
    \ > 30\n            return false\n        end\n    elseif isequal(dateArray[1],\
    \ \"2\")\n        if parse(Int, dateArray[2]) < 1 || parse(Int, dateArray[2])\
    \ > 29\n            return false\n        end\n    end\n    return true\nend",
  "    return false\nend\n\"\"\"", "    s = r\"([01]?[0-9]|2[0-3])-([0-2]?[0-9]|3[0-1])-\\\
    d{4}\"\n    if (match(s, date) == nothing)\n        return false\n    else\n \
    \       return true\n    end\nend", "    str = split(date, \"-\")\n    if (length(str)\
    \ != 3) || any(ch->!isdigit(ch), date) || (length(str[1]) != 2) || (length(str[2])\
    \ != 2) || (length(str[3]) != 4)\n        return false\n    end\n    if (parse(Int,\
    \ str[1]) > 12) || (parse(Int, str[1]) < 1)\n        return false\n    end\n \
    \   if (parse(Int, str[2]) > 31) || (parse(Int, str[2]) < 1)\n        return false\n\
    \    end\n    if (parse(Int, str[1]) % 2 == 0) && (parse(Int, str[1]) != 2) &&\
    \ (parse(Int, str[2]) > 30)\n        return false\n    end\n    if (parse(Int,\
    \ str[1]) % 2 != 0) && (parse(Int, str[2]) > 31)\n        return false\n    end\n\
    \    if (parse(Int, str[1]) == 2) && (parse(Int, str[2]) > 29)\n        return\
    \ false\n    end\n    return true\nend", "    months = [\"01\", \"02\", \"03\"\
    , \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n  \
    \  days = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"\
    09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\",\
    \ \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"\
    , \"29\", \"30\", \"31\"]\n    days30 = days[1:30]\n    days31 = days[1:31]\n\
    \    days29 = days[1:29]\n    # check emptyness\n    if isempty(date)\n      \
    \  return false\n    end\n    # check format\n    if !occursin(r\"-\", date)\n\
    \        return false\n    end\n    # check month\n    date = split(date, \"-\"\
    )\n    if !(date[1] in months)\n        return false\n    end\n    # check day\n\
    \    if length(date) == 3\n        if !(date[2] in days)\n            return false\n\
    \        end\n        if (date[1] == \"02\") && !(date[2] in days29)\n       \
    \     return false\n        end\n        if (date[1] in [\"04\", \"06\", \"09\"\
    , \"11\"]) && !(date[2] in days30)\n            return false\n        end\n  \
    \      if (date[1] in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"\
    ]) && !(date[2] in days31)\n            return false\n        end\n    end\n \
    \   # check year\n    if length(date) == 3\n        if !(length(date[3]) == 4)\n\
    \            return false\n        end\n    end\n    return true\nend", "    day,\
    \ month, year = parse_date(date)\n    if day == 0 || month == 0 || year == 0\n\
    \        return false\n    end\n    if !is_valid_date(day, month, year)\n    \
    \    return false\n    end\n    return true\nend", "    if length(date)==0\n \
    \       return false\n    end\n    if length(date) != 10\n        return false\n\
    \    end\n    if !isequal(date[3], '-') || !isequal(date[6], '-')\n        return\
    \ false\n    end\n    mm = parse(Int, date[1:2])\n    dd = parse(Int, date[4:5])\n\
    \    yyyy = parse(Int, date[7:10])\n    if mm<1 || mm>12\n        return false\n\
    \    end\n    if dd<1\n        return false\n    end\n    if mm==2\n        if\
    \ dd>29\n            return false\n        end\n    elseif mm==4 || mm==6 || mm==9\
    \ || mm==11\n        if dd>30\n            return false\n        end\n    else\n\
    \        if dd>31\n            return false\n        end\n    end\n    return\
    \ true\nend", "    # You code goes here\nend\nprintln(valid_date(\"03-11-2000\"\
    ))\nprintln(valid_date(\"15-01-2012\"))\nprintln(valid_date(\"04-0-2040\"))\n\
    println(valid_date(\"06-04-2020\"))\nprintln(valid_date(\"06/04/2020\"))\n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n", "    # Check that format is yyyy-mm-dd\n    # Check\
    \ that mm and dd are both integers\n    # Check that mm is between 1 and 12\n\
    \    # Check that dd is between 1 and 31\n    # Check that dd is correct for a\
    \ given mm\n    # if all cases pass:\n    # return true", "    m::Int\n    d::Int\n\
    \    y::Int\n    try\n        m,d,y = map(x->parse(Int,x),split(date,\"-\"))\n\
    \    catch\n        return false\n    end\n    if !(length(date) == 10)\n    \
    \    return false\n    end\n    if !(m <= 12 && m >= 1)\n        return false\n\
    \    end\n    if (m == 2)\n        if (y % 4 == 0)\n            if !(d <= 29 &&\
    \ d >= 1)\n                return false\n            end\n        else\n     \
    \       if !(d <= 28 && d >= 1)\n                return false\n            end\n\
    \        end\n    elseif (m == 4 || m == 6 || m == 9 || m == 11)\n        if !(d\
    \ <= 30 && d >= 1)\n            return false\n        end\n    else\n        if\
    \ !(d <= 31 && d >= 1)\n            return false\n        end\n    end\n    return\
    \ true\nend", "    date_list = split(date, \"-\")\n    if length(date_list) !=\
    \ 3\n        return false\n    end\n    month = parse(Int, date_list[1])\n   \
    \ day = parse(Int, date_list[2])\n    year = parse(Int, date_list[3])\n    if\
    \ length(date_list[1]) == 2 && length(date_list[2]) == 2 && length(date_list[3])\
    \ == 4\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) && (day >= 1 && day <= 31)\n           \
    \ return true\n        elseif (month == 4 || month == 6 || month == 9 || month\
    \ == 11) && (day >= 1 && day <= 30)\n            return true\n        elseif month\
    \ == 2 && ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) && (day >= 1\
    \ && day <= 29)\n            return true\n        elseif month == 2 && (day >=\
    \ 1 && day <= 28)\n            return true\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "    dates = split(date,\
    \ \"-\")\n    if length(dates) != 3\n        return false\n    end\n    months\
    \ = parse(Int, dates[1])\n    days = parse(Int, dates[2])\n    years = parse(Int,\
    \ dates[3])\n    if months > 12 || months < 1\n        return false\n    end\n\
    \    if in(months, [1,3,5,7,8,10,12]) && (days > 31 || days < 1)\n        return\
    \ false\n    end\n    if in(months, [4,6,9,11]) && (days > 30 || days < 1)\n \
    \       return false\n    end\n    if months == 2 && days > 29\n        return\
    \ false\n    end\n    return true\nend", "    for i in date\n        if i == '-'\n\
    \            return true\n        else \n            return false\n        end\n\
    \    end\nend", "    if length(date) == 0 \n        return false\n    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

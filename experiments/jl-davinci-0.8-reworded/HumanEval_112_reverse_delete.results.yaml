name: HumanEval_112_reverse_delete
language: jl
results:
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s=filter(!(c->contains(c,c)), s)\n    return (s, isequal(s, reverse(s)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") ==\
    \ (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\"\
    , true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"\
    a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8cllxybh.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching contains(::Char, ::Char)\n  Closest candidates are:\n   \
    \ contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\n\
    \    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main /tmp/tmp8cllxybh.jl:15\n\
    \   [2] (::Base.var\"#84#85\"{var\"#1#2\"})(x::Char)\n     @ Base ./operators.jl:1117\n\
    \   [3] filter(f::Base.var\"#84#85\"{var\"#1#2\"}, s::String)\n     @ Base ./strings/substring.jl:246\n\
    \   [4] reverse_delete(s::String, c::String)\n     @ Main /tmp/tmp8cllxybh.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8cllxybh.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8cllxybh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8cllxybh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching contains(::Char, ::Char)\n  Closest candidates are:\n    contains(!Matched::AbstractString,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\n\
    \    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main /tmp/tmp8cllxybh.jl:15\n\
    \   [2] (::Base.var\"#84#85\"{var\"#1#2\"})(x::Char)\n     @ Base ./operators.jl:1117\n\
    \   [3] filter(f::Base.var\"#84#85\"{var\"#1#2\"}, s::String)\n     @ Base ./strings/substring.jl:246\n\
    \   [4] reverse_delete(s::String, c::String)\n     @ Main /tmp/tmp8cllxybh.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8cllxybh.jl:24 [inlined]\n\
    \   [7] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8cllxybh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s = replace(s, r\"[\"*c*\"]\", \"\")\n    return s, ispalindrome(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") ==\
    \ (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\"\
    , true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"\
    a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: PCRE compilation error: missing terminating ] for character\
    \ class at offset 1\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n\
    \  [2] compile(pattern::String, options::UInt32)\n    @ Base.PCRE ./pcre.jl:155\n\
    \  [3] compile(regex::Regex)\n    @ Base ./regex.jl:82\n  [4] Regex(pattern::String,\
    \ compile_options::UInt32, match_options::UInt32)\n    @ Base ./regex.jl:47\n\
    \  [5] Regex(pattern::String)\n    @ Base ./regex.jl:70\n  [6] var\"@r_str\"(__source__::LineNumberNode,\
    \ __module__::Module, pattern::Any, flags::Vararg{Any})\n    @ Base ./regex.jl:119\n\
    \  [7] #macroexpand#51\n    @ ./expr.jl:115 [inlined]\n  [8] macroexpand\n   \
    \ @ ./expr.jl:114 [inlined]\n  [9] docm(source::LineNumberNode, mod::Module, meta::Any,\
    \ ex::Any, define::Bool) (repeats 2 times)\n    @ Base.Docs ./docs/Docs.jl:537\n\
    \ [10] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n    @\
    \ Core ./boot.jl:517\nin expression starting at /tmp/tmpgm_x7nd8.jl:1\nin expression\
    \ starting at /tmp/tmpgm_x7nd8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    \n    # YOUR CODE HERE\n    \n    # return(\"\",false) # replace\
    \ this line\n    filtered_s = \"\"\n    for char in s\n        contains = false\n\
    \        for char2 in c\n            if char == char2\n                contains\
    \ = true\n            end\n        end\n        if !contains\n            filtered_s\
    \ = filtered_s * char\n        end\n    end\n    left = 1\n    right = length(filtered_s)\n\
    \    for i in 1:length(filtered_s)\n        if left >= right\n            break\n\
    \        end\n        if filtered_s[left] != filtered_s[right]\n            return\
    \ (filtered_s, false)\n        end\n        left += 1\n        right -= 1\n  \
    \  end\n    return (filtered_s, true)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\
    \t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    # Define your function here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\"\
    , false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx_2lviwx.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Tuple{String,\
    \ Bool}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpx_2lviwx.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx_2lviwx.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx_2lviwx.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpx_2lviwx.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Tuple{String, Bool}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpx_2lviwx.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx_2lviwx.jl:23 [inlined]\n\
    \   [4] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_2lviwx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    \n    result = String[]\n    for i in s\n        if i \u2209 c\n\
    \            push!(result, i)\n        end\n    end\n    println(result)\n   \
    \ # Check if the string is Palindrome\n    # Save the string result to \"s\"\n\
    \    # Return Tuple\n    return (\"s\", true)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\"\
    , false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpahwmk1xt.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\\\
    n  MethodError: Cannot `convert` an object of type Char to an object of type String\\\
    n  Closest candidates are:\\n    convert(::Type{String}, !Matched::String) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] reverse_delete(s::String, c::String)\\n     @\
    \ Main /tmp/tmpahwmk1xt.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpahwmk1xt.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpahwmk1xt.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpahwmk1xt.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] reverse_delete(s::String, c::String)\\n     @\
    \ Main /tmp/tmpahwmk1xt.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/juli"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    @assert isempty(setdiff(unique(c), unique(s))) \"Charsets are not\
    \ equal\"\n    for i in c\n        s = replace(s, i => \"\")\n    end\n    return\
    \ (s, is_palindrome(s))\nend\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\
    \t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"\
    abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\"\
    ) == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\
    \t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\", \"v\") ==\
    \ (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\
    \t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplo5pb96_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  UndefVarError:\
    \ is_palindrome not defined\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n\
    \     @ Main /tmp/tmplo5pb96_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo5pb96_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo5pb96_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmplo5pb96_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n  \
    \   @ Main /tmp/tmplo5pb96_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo5pb96_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo5pb96_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmplo5pb96_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdedcba\", \"ab\") == (\"cdedc\", true)\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n  \
    \   @ Main /tmp/tmplo5pb96_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo5pb96_.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo5pb96_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmplo5pb96_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"dwik\", \"w\") == (\"dik\", false)\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] revers"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplo5pb96_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s = replace(s, c, \"\")\n    return (s, is_palindrome(s))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") ==\
    \ (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\"\
    , true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"\
    a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiba76tzy.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\n  Closest candidates\
    \ are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpiba76tzy.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiba76tzy.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiba76tzy.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpiba76tzy.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpiba76tzy.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiba76tzy.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiba76tzy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    \n    string = s\n    char = c\n    \n    for i in 1:length(char)\n\
    \        x = char[i]\n        string = replace(string, x => \"\")\n    end\n \
    \   string == reverse(string) ? (string, true) : (string, false)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\",\
    \ \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\"\
    , false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t\
    @test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"a\"\
    , \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s = s[s .!= c]\n    s = s[s .!= reverse(s)]\n    return (s, isequal(s,\
    \ reverse(s)))\nend\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\
    \t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"\
    abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\"\
    ) == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\
    \t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\", \"v\") ==\
    \ (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\
    \t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwbujhmqj.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching reverse(::Char)\n  Closest candidates are:\n    reverse(!Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\n\
    \    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpwbujhmqj.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbujhmqj.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbujhmqj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwbujhmqj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching reverse(::Char)\n  Closest candidates are:\n    reverse(!Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\n\
    \    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmpwbujhmqj.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbujhmqj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbujhmqj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwbujhmqj.jl:26\n  Test threw exception\n  Expressio"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwbujhmqj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    \n    # Delete characters in s that are equal to c\n    t = s\n\
    \    for i in s\n        if i in c\n            delete!(t,i)\n        end\n  \
    \  end\n    \n    # Check if t is palindrome.\n    check_palindrome = (t == reverse(t))\n\
    \    \n    return t, check_palindrome\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\
    \t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppl_v4pbf.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching delete!(::String, ::Char)\n  Closest candidates are:\n  \
    \  delete!(!Matched::IdDict{K}, ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/iddict.jl:130\n\
    \    delete!(!Matched::Base.IdSet, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/idset.jl:23\n\
    \    delete!(!Matched::Dict, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:661\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmppl_v4pbf.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppl_v4pbf.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppl_v4pbf.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppl_v4pbf.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching delete!(::String, ::Char)\n  Closest candidates are:\n    delete!(!Matched::IdDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/iddict.jl:130\n\
    \    delete!(!Matched::Base.IdSet, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/idset.jl:23\n\
    \    delete!(!Matched::Dict, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:661\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmppl_v4pbf.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppl_v4pbf.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppl_v4pbf.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppl_v4pbf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppl_v4pbf.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    return s*s, false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\
    \t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptmd_nxog.jl:22\n  Expression: candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false)\n   Evaluated: (\"abcdeabcde\", false) ==\
    \ (\"bcd\", false)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmd_nxog.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmd_nxog.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptmd_nxog.jl:23\n  Expression: candidate(\"abcdef\", \"b\"\
    ) == (\"acdef\", false)\n   Evaluated: (\"abcdefabcdef\", false) == (\"acdef\"\
    , false)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmd_nxog.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmd_nxog.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptmd_nxog.jl:24\n  Expression: candidate(\"abcdedcba\", \"\
    ab\") == (\"cdedc\", true)\n   Evaluated: (\"abcdedcbaabcdedcba\", false) == (\"\
    cdedc\", true)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmd_nxog.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmd_nxog.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptmd_nxog.jl:25\n  Expression: candidate(\"dwik\", \"w\") ==\
    \ (\"dik\", false)\n   Evaluated: (\"dwikdwik\", false) == (\"dik\", false)\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmd_nxog.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmd_nxog.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptmd_nxo"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptmd_nxog.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    n = size(s, 1)\n    i = 1\n    while i <= n\n        if s[i] in\
    \ c\n            deleteat!(s, i)\n            n -= 1\n        else\n         \
    \   i += 1\n        end\n    end\n    r = copy(s)\n    reverse!(r)\n    return\
    \ (s, s == r)\nend\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\
    \t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"\
    abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\"\
    ) == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\
    \t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\", \"v\") ==\
    \ (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\
    \t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5scv_lk3.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmp5scv_lk3.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5scv_lk3.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5scv_lk3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5scv_lk3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5scv_lk3.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    # your code here\n    return nothing, nothing\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\",\
    \ \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\"\
    , false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t\
    @test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"a\"\
    , \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpodb48p1a.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] cvt1\n     @ ./essentials.jl:343 [inlined]\n \
    \  [2] ntuple\n     @ ./ntuple.jl:49 [inlined]\n   [3] convert(#unused#::Type{Tuple{String,\
    \ Bool}}, x::Tuple{Nothing, Nothing})\n     @ Base ./essentials.jl:344\n   [4]\
    \ reverse_delete(s::String, c::String)\n     @ Main /tmp/tmpodb48p1a.jl:16\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpodb48p1a.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpodb48p1a.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpodb48p1a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] cvt1\n     @ ./essentials.jl:343 [inlined]\n \
    \  [2] ntuple\n     @ ./ntuple.jl:49 [inlined]\n   [3] convert(#unus"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpodb48p1a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s = reverse(s)\n    for c_ in c\n        s = replace(s, c_, \"\"\
    )\n    end\n    return (s, s == reverse(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\"\
    , false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2kh6126r.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ no method matching replace(::String, ::Char, ::String)\n  Closest candidates\
    \ are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmp2kh6126r.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2kh6126r.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2kh6126r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2kh6126r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: no method\
    \ matching replace(::String, ::Char, ::String)\n  Closest candidates are:\n  \
    \  replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmp2kh6126r.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2kh6126r.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kh6126r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    t = Set(c)\n    ss = \"\"\n    for i in s\n        if i in t\n \
    \           continue\n        end\n        ss *= i\n    end\n    ss == reverse(ss)\
    \ ? (ss, true) : (ss, false)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\
    \t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    for c_letter in c\n        s = replace(s, c_letter => \"\")\n  \
    \  end\n    return s, s == reverse(s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = reverse_delete;\n\t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\
    \t@test(candidate(\"abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"\
    abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\"\
    ) == (\"dik\", false))\n\t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"\
    abcdedcba\", \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"v\") == (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"\
    abba\", true))\n\t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    all_char = Set(c)\n    new_string = String(collect(s) .* in(all_char))\n\
    \    return (new_string, isequal(new_string, reverse(new_string)))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") ==\
    \ (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\"\
    , true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"\
    a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpddd3e1q_.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\\\
    n  MethodError: no method matching *(::Char, ::Base.Fix2{typeof(in), Set{Char}})\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:183\\\
    n    ...\\n  Stacktrace:\\n    [1] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670\
    \ [inlined]\\n    [2] _broadcast_getindex\\n      @ ./broadcast.jl:643 [inlined]\\\
    n    [3] getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [4] copy\\n   \
    \   @ ./broadcast.jl:899 [inlined]\\n    [5] materialize\\n      @ ./broadcast.jl:860\
    \ [inlined]\\n    [6] reverse_delete(s::String, c::String)\\n      @ Main /tmp/tmpddd3e1q_.jl:16\\\
    n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpddd3e1q_.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpddd3e1q_.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    s_new = String(filter(s->!(s in c), s))\n    return s_new, s_new\
    \ == reverse(s_new)\nend\nreverse_delete(\"abcdedcba\", \"ab\")\nusing Test\n\n\
    @testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"abcde\", \"\
    ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") == (\"acdef\"\
    , false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\", true))\n\t\
    @test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"a\"\
    , \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\
    \t@test(candidate(\"abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"\
    abcdef\", \"b\") == (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\"\
    ) == (\"cdedc\", true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\
    \t@test(candidate(\"a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\"\
    , \"\") == (\"abcdedcba\", true))\n\t@test(candidate(\"abcdedcba\", \"v\") ==\
    \ (\"abcdedcba\", true))\n\t@test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\
    \t@test(candidate(\"mamma\", \"mia\") == (\"\", true))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7818ayff.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\", \"ae\") == (\"bcd\", false)\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Tuple{String,\
    \ Bool}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmp7818ayff.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7818ayff.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7818ayff.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7818ayff.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdef\", \"b\") == (\"acdef\", false)\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Tuple{String, Bool}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] reverse_delete(s::String, c::String)\n     @ Main\
    \ /tmp/tmp7818ayff.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7818ayff.jl:23 [inlined]\n\
    \   [4] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7818ayff.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Task\n    We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n    then check\
    \ if the result string is palindrome.\n    A string is called palindrome if it\
    \ reads the same backward as forward.\n    You should return a tuple containing\
    \ the result string and true/false for the check.\n    Example\n    >>> reverse_delete(\"\
    abcde\", \"ae\")\n    (\"bcd\", false)\n    >>> reverse_delete(\"abcdef\", \"\
    b\")\n    (\"acdef\", false)\n    >>> reverse_delete(\"abcdedcba\", \"ab\")\n\
    \    (\"cdedc\", true)\n    \"\"\"\nfunction reverse_delete(s::String, c::String)::Tuple{String,\
    \ Bool} \n \n  \n    if s == reverse(s)\n        println(\"a\")\n        return\
    \ s, true\n    else\n        println(\"b\")\n        return s, false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = reverse_delete;\n\t@test(candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false))\n\t@test(candidate(\"abcdef\", \"b\") ==\
    \ (\"acdef\", false))\n\t@test(candidate(\"abcdedcba\", \"ab\") == (\"cdedc\"\
    , true))\n\t@test(candidate(\"dwik\", \"w\") == (\"dik\", false))\n\t@test(candidate(\"\
    a\", \"a\") == (\"\", true))\n\t@test(candidate(\"abcdedcba\", \"\") == (\"abcdedcba\"\
    , true))\n\t@test(candidate(\"abcdedcba\", \"v\") == (\"abcdedcba\", true))\n\t\
    @test(candidate(\"vabba\", \"v\") == (\"abba\", true))\n\t@test(candidate(\"mamma\"\
    , \"mia\") == (\"\", true))\nend\n"
  stdout: "b\ntest set: Test Failed at /tmp/tmpia418bno.jl:30\n  Expression: candidate(\"\
    abcde\", \"ae\") == (\"bcd\", false)\n   Evaluated: (\"abcde\", false) == (\"\
    bcd\", false)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia418bno.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia418bno.jl:29\nb\ntest set: Test\
    \ Failed at /tmp/tmpia418bno.jl:31\n  Expression: candidate(\"abcdef\", \"b\"\
    ) == (\"acdef\", false)\n   Evaluated: (\"abcdef\", false) == (\"acdef\", false)\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia418bno.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia418bno.jl:29\na\ntest set: Test\
    \ Failed at /tmp/tmpia418bno.jl:32\n  Expression: candidate(\"abcdedcba\", \"\
    ab\") == (\"cdedc\", true)\n   Evaluated: (\"abcdedcba\", true) == (\"cdedc\"\
    , true)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia418bno.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia418bno.jl:29\nb\ntest set: Test\
    \ Failed at /tmp/tmpia418bno.jl:33\n  Expression: candidate(\"dwik\", \"w\") ==\
    \ (\"dik\", false)\n   Evaluated: (\"dwik\", false) == (\"dik\", false)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia418bno.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia418bno.jl:29\na\ntest set: Test\
    \ Failed at /tmp/tmpia418bno.jl:34\n  Expre"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpia418bno.jl:27\n"
  exit_code: 1
  status: SyntaxError

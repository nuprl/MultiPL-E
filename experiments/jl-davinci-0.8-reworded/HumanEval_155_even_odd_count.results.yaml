language: jl
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    while num != 0\n        digit\
    \ = num % 10\n        if digit % 2 == 0\n            evencount += 1\n        else\n\
    \            oddcount += 1\n        end\n        num = num \xF7 10\n    end\n\
    \    return (evencount, oddcount)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph6ixaqyv.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmph6ixaqyv.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph6ixaqyv.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph6ixaqyv.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_string = string(num)\n    even_count = 0\n    odd_count = 0\n\
    \    for i in 1:length(num_string)\n        if parse(Int64, num_string[i]) % 2\
    \ == 0\n            even_count += 1\n        else\n            odd_count += 1\n\
    \        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd5tmv7uq.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd5tmv7uq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd5tmv7uq.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd5tmv7uq.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd5tmv7uq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd5tmv7uq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd5tmv7uq.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd5tmv7uq.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd5tmv7uq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd5tmv7uq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd5tmv7uq.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd5tmv7uq.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   ["
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_count = 0\n    odd_count = 0\n    \n    if num < 0\n\
    \        num = -num\n    end\n    while num > 0\n        x = num % 10\n      \
    \  if x % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n        num = num \xF7 10\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr5ywfq_9.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpr5ywfq_9.jl:40\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5ywfq_9.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5ywfq_9.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    while num != 0\n        if rem(num, 2) ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1wfuw6vk.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp1wfuw6vk.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wfuw6vk.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wfuw6vk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in abs(num)\n    \
    \    if i % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo9ie4s1b.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo9ie4s1b.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9ie4s1b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9ie4s1b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9ie4s1b.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9ie4s1b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9ie4s1b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9ie4s1b.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9ie4s1b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9ie4s1b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9ie4s1b.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9ie4s1b.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9ie4s1b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9ie4s1b.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    for i in num:\n        if\
    \ i % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacpssiaq.jl:13\nin expression starting at\
    \ /tmp/tmpacpssiaq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens, odds = 0, 0\n    for i in abs(num)\n        if i % 2 ==\
    \ 0\n            evens += 1\n        else\n            odds += 1\n        end\n\
    \    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3rwh7xol.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp3rwh7xol.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3rwh7xol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3rwh7xol.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp3rwh7xol.jl:27\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3rwh7xol.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3rwh7xol.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp3rwh7xol.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3rwh7xol.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3rwh7xol.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp3rwh7xol.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3rwh7xol.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3rwh7xol.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp3rwh7xol.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in digits(num)\n        if iseven(i)\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    # evens = 0, odds = 0\n    count_evens = 0\n    count_odds\
    \ = 0\n    \n    # convert to string and check every digit\n    num_str = string(num)\n\
    \    for i in num_str\n        # check if even and increment counter\n       \
    \ if parse(Int64, i) % 2 == 0\n            count_evens += 1\n        else # else\
    \ the digit is odd\n            count_odds += 1\n        end\n    end\n    \n\
    \    # return tuple with even and odd digit counts\n    return (count_evens, count_odds)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp58wgwvdx.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp58wgwvdx.jl:35\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp58wgwvdx.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp58wgwvdx.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp58wgwvdx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp58wgwvdx.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp58wgwvdx.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp58wgwvdx.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp58wgwvdx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp58wgwvdx.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp58wgwvdx.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp58wgwvdx.jl:39 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   ["
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in digits(num)\n       \
    \ if digit % 2 == 0\n            evens += 1\n        else\n            odds +=\
    \ 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_num, odd_num = 0, 0\n    if num >= 0\n        while num !=\
    \ 0\n            if num % 2 == 0\n                even_num += 1\n            else\n\
    \                odd_num += 1\n            end\n            num = num \xF7 10\n\
    \        end\n    else\n        while num != 0\n            if num % 2 == 0\n\
    \                even_num += 1\n            else\n                odd_num += 1\n\
    \            end\n            num = num \xF7 10\n        end\n    end\n    return\
    \ even_num, odd_num\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2wqdct_u.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp2wqdct_u.jl:44\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wqdct_u.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wqdct_u.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    if num < 0\n        num = -num\n    end\n\
    \    while num > 0\n        if num % 2 == 0\n            even += 1\n        else\n\
    \            odd += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdw3wux0h.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpdw3wux0h.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdw3wux0h.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdw3wux0h.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  # TODO\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptv507uut.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmptv507uut.jl:17\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Tuple{Int64, Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptv507uut.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptv507uut.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptv507uut.jl:16\ntest set:\
    \ Error During Test at /tmp/tmptv507uut.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Tuple{Int64, Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:336\n\
    \    convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:337\n    convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at /shared/centos7/julia/1.7.3/share/julia/base/multidimensional.jl:137\n\
    \    ...\n  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptv507uut.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptv507uut.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for d in digits(num)\n        if d %\
    \ 2 == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i%2\
    \ == 0\n            evens = evens + 1\n        else\n            odds = odds +\
    \ 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in num:\n        if\
    \ i % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo3agdibh.jl:13\nin expression starting at\
    \ /tmp/tmpo3agdibh.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in 1:digits(num)\n        if num[i]\
    \ == 0 || num[i] == 2 || num[i] == 4 || num[i] == 6 || num[i] == 8\n         \
    \   even += 1\n        else\n            odd += 1\n        end\n    end\n    return\
    \ (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpcqmuazle.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpcqmuazle.jl:26\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  MethodError: no method matching (::Colon)(::Int64,\
    \ ::Vector{Int64})\n  Closest candidates are:\n    (::Colon)(::T, ::Any, !Matched::T)\
    \ where T<:Real at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:41\n\
    \    (::Colon)(::A, ::Any, !Matched::C) where {A<:Real, C<:Real} at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:10\n\
    \    (::Colon)(::T, ::Any, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:40\n\
    \    ...\n  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpcqmuazle.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcqmuazle.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcqmuazle.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcqmuazle.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  MethodError: no method matching (::Colon)(::Int64,\
    \ ::Vector{Int64})\n  Closest candidates are:\n    (::Colon)(::T, ::Any, !Matched::T)\
    \ where T<:Real at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:41\n\
    \    (::Colon)(::A, ::Any, !Matched::C) where {A<:Real, C<:Real} at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:10\n\
    \    (::Colon)(::T, ::Any, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:40\n\
    \    ...\n  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpcqmuazle.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcqmuazle.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcqmuazle.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcqmuazle.jl:28\n  Test threw exc"
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        if iseven(digit)\n            even_count += 1\n        else\n       \
    \     odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    num = abs(num)\n    while num > 0\n\
    \        if num % 2 == 0\n            evens += 1\n        else\n            odds\
    \ += 1\n        end\n        num = floor(num/10)\n    end\n    return (evens,\
    \ odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp471g1r4c.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp471g1r4c.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp471g1r4c.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp471g1r4c.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"Returns the number of even and odd digits in a number\"\"\
    \"\n    even_count = 0\n    odd_count = 0\n    for d in digits(num)\n        if\
    \ d % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num > 0\n        val = num % 10\n\
    \        if val % 2 == 0\n            even += 1\n        else\n            odd\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmkop9j62.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpmkop9j62.jl:29\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmkop9j62.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmkop9j62.jl:27\ntest set: Test Failed at /tmp/tmpmkop9j62.jl:32\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkop9j62.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkop9j62.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpmkop9j62.jl:33\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkop9j62.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkop9j62.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpmkop9j62.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkop9j62.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkop9j62.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpmkop9j62.jl:35\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0 \n        num = abs(num)\n    end\n    even_num = 0\n\
    \    odd_num = 0\n    while num > 0\n        if num % 2 == 0\n            even_num\
    \ += 1\n        else\n            odd_num += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_num, odd_num)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpik04h562.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpik04h562.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpik04h562.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpik04h562.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014590
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_cnt, odd_cnt = 0, 0\n    for i in 1:length(digits(num))\n\
    \        if digits(num)[i] % 2 == 0\n            even_cnt += 1\n        else\n\
    \            odd_cnt += 1\n        end\n    end\n    return even_cnt, odd_cnt\n\
    end\neven_odd_count(-12)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014588
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \nend\neven_odd_count(1223)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Tuple{Int64, Int64}\nClosest candidates are:\n  convert(::Type{T},\
    \ !Matched::T) where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:336\n\
    \  convert(::Type{T}, !Matched::Tuple{Vararg{Any, N}}) where {N, T<:Tuple} at\
    \ ~/.conda/envs/polyglot/share/julia/base/essentials.jl:337\n  convert(::Type{T},\
    \ !Matched::CartesianIndex) where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/multidimensional.jl:137\n\
    \  ...\nStacktrace:\n [1] even_odd_count(num::"
  stdout: ''
  timestamp: 1660014592
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while num != 0\n       \
    \ last_digit = num % 10\n        if last_digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = num\
    \ \xF7 10\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyejskxs5.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpyejskxs5.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyejskxs5.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyejskxs5.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014590
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for digit in collect(digits(num))\n\
    \        if iseven(digit)\n            even_count += 1\n        else\n       \
    \     odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014588
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_cnt = 0\n    even_cnt = 0\n    for i in num:\n        if i\
    \ % 2 == 0:\n            even_cnt += 1\n        else:\n            odd_cnt +=\
    \ 1\n    return even_cnt, odd_cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdiqb917p.jl:13\nin expression starting at\
    \ /tmp/tmpdiqb917p.jl:13\n"
  stdout: ''
  timestamp: 1660014589
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num < 0\n        num = -num\n \
    \   end\n    while num > 0\n        if (num % 10) % 2 == 0\n            evens\
    \ += 1\n        else\n            odds += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkjuo9jki.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpkjuo9jki.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkjuo9jki.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkjuo9jki.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for x in digits(num)\n \
    \       if iseven(x)\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\n\"\"\"\n\
    A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9\
    \ such that each row, column, and both diagonals all have the same sum.\nGiven\
    \ an grid of integers, how many 3 x 3 \"magic square\" subgrids are there?  (Each\
    \ subgrid is contiguous).\n     Example:\n    >>> numMagicSquaresInside([[4,3,8,4],\n\
    \    [9,5,1,9],\n    [2,7,6,2]])\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpoa8j8qv4.jl:21\nin expression starting at /tmp/tmpoa8j8qv4.jl:21\n"
  stdout: ''
  timestamp: 1660014589
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd, even = 0, 0\n    for i = abs(num)\n        if i%2 == 0\n \
    \           even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfusccywd.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpfusccywd.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfusccywd.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfusccywd.jl:24\ntest set: Test Failed at /tmp/tmpfusccywd.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfusccywd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfusccywd.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfusccywd.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfusccywd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfusccywd.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfusccywd.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfusccywd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfusccywd.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfusccywd.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    while num > 0\n      \
    \  if rem(num, 10)%2 == 0\n            even += 1\n        else\n            odd\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp83cd_o2o.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp83cd_o2o.jl:28\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp83cd_o2o.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp83cd_o2o.jl:26\ntest set: Test Failed at /tmp/tmp83cd_o2o.jl:31\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83cd_o2o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83cd_o2o.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp83cd_o2o.jl:32\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83cd_o2o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83cd_o2o.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp83cd_o2o.jl:33\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83cd_o2o.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83cd_o2o.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp83cd_o2o.jl:34\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num < 0\n        num = abs(num)\n\
    \    end\n    while num > 0\n        if num % 2 == 0\n            evens += 1\n\
    \        else\n            odds += 1\n        end\n        num = num \xF7 10\n\
    \    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp98rc6rm0.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp98rc6rm0.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp98rc6rm0.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp98rc6rm0.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    count_odd = 0\n    count_even = 0\n    \n    for i = 1:abs(num)\n\
    \        if abs(i) % 2 == 0\n            count_even += 1\n        else\n     \
    \       count_odd += 1\n        end\n    end\n    return count_even, count_odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp4ah7204.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpp4ah7204.jl:28\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (3, 4) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp4ah7204.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpp4ah7204.jl:27\ntest set: Test Failed at /tmp/tmpp4ah7204.jl:29\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (39, 39) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4ah7204.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4ah7204.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpp4ah7204.jl:30\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1726, 1726) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp4ah7204.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpp4ah7204.jl:27\ntest set: Test Failed at /tmp/tmpp4ah7204.jl:31\n\
    \  Expression: candidate(346211) == (3, 3)\n   Evaluated: (173105, 173106) ==\
    \ (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4ah7204.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4ah7204.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpp4ah7204.jl:32\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (172910, 172911) == (3, 3)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [i"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_even = 0\n    count_odd = 0\n    for i in 1:len(string(num))\n\
    \        if(parse(Int64, split(string(num), \"\")[i]) % 2 == 0)\n            count_even\
    \ += 1\n        else\n            count_odd += 1\n        end\n    end\n    return\
    \ (count_even, count_odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpxtmgub_9.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpxtmgub_9.jl:26\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxtmgub_9.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtmgub_9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtmgub_9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxtmgub_9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxtmgub_9.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtmgub_9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtmgub_9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxtmgub_9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxtmgub_9.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtmgub_9.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtmgub_9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxtmgub_9.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxtmgub_9.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macr"
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while num > 0\n        digit\
    \ = num % 10\n        if digit % 2 == 0\n            even_count += 1\n       \
    \ else\n            odd_count += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph799x2qr.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmph799x2qr.jl:29\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph799x2qr.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph799x2qr.jl:27\ntest set: Test Failed at /tmp/tmph799x2qr.jl:32\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph799x2qr.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph799x2qr.jl:27\ntest set: Test\
    \ Failed at /tmp/tmph799x2qr.jl:33\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph799x2qr.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph799x2qr.jl:27\ntest set: Test\
    \ Failed at /tmp/tmph799x2qr.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph799x2qr.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph799x2qr.jl:27\ntest set: Test\
    \ Failed at /tmp/tmph799x2qr.jl:35\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014590
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0; odd = 0\n    for i in collect(digits(num, base=10))\n\
    \        if i % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014588
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        digit = num % 10\n        if digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = num\
    \ / 10\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpovasl1r4.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpovasl1r4.jl:29\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpovasl1r4.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpovasl1r4.jl:28\ntest set: Test Failed at /tmp/tmpovasl1r4.jl:30\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpovasl1r4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpovasl1r4.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpovasl1r4.jl:31\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpovasl1r4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpovasl1r4.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpovasl1r4.jl:32\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpovasl1r4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpovasl1r4.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpovasl1r4.jl:33\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens, odds = 0, 0\n    for n in num \n        if n % 2 == 0\n\
    \            evens += 1\n        else\n            odds += 1\n        end\n  \
    \  end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn7omqllg.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpn7omqllg.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpn7omqllg.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpn7omqllg.jl:24\ntest set: Test Failed at /tmp/tmpn7omqllg.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7omqllg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7omqllg.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn7omqllg.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7omqllg.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7omqllg.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn7omqllg.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7omqllg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7omqllg.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn7omqllg.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_even = 0\n    count_odd = 0\n    num = abs(num)\n    while\
    \ num > 0\n        r = num % 10\n        if r % 2 == 0\n            count_even\
    \ += 1\n        else\n            count_odd += 1\n        end\n        num = num\
    \ // 10\n    end\n    return count_even, count_odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_9y9h3yd.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp_9y9h3yd.jl:29\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp_9y9h3yd.jl:14\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_9y9h3yd.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_9y9h3yd.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_9y9h3yd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp_9y9h3yd.jl:14\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_9y9h3yd.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_9y9h3yd.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_9y9h3yd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main"
  timestamp: 1660014592
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    #Tuple is immutable\n    evens = 0\n    odds = 0\n    for i in\
    \ string(num)\n        if (parse(Int64, i) % 2 == 0)\n            evens += 1\n\
    \        else\n            odds += 1\n        end\n    end\n    return (evens,\
    \ odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_y0t4wda.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp_y0t4wda.jl:28\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp_y0t4wda.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_y0t4wda.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_y0t4wda.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp_y0t4wda.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp_y0t4wda.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_y0t4wda.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_y0t4wda.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp_y0t4wda.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp_y0t4wda.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_y0t4wda.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    while num != 0\n     \
    \   if num % 2 == 0\n            even += 1\n        else\n            odd += 1\n\
    \        end\n        num = div(num, 10)\n    end\n    return (even, odd)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr8szfpd8.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpr8szfpd8.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpr8szfpd8.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpr8szfpd8.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014590
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digits = 0\n    odd_digits = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_digits += 1\n        else\n     \
    \       odd_digits += 1\n        end\n    end\n    return even_digits, odd_digits\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014588
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_s = string(num)\n    even = 0\n    odd = 0\n    for i in num_s\n\
    \        if (i == '-') && (even == 0)\n            continue\n        elseif parse(Int64,\
    \ i) % 2 == 0\n            even += 1\n        else\n            odd += 1\n   \
    \     end\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014588
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_cnt = even_cnt = 0\n    for i in num\n        if i % 2 == 0\n\
    \            even_cnt += 1\n        else\n            odd_cnt += 1\n        end\n\
    \    end\n    return (even_cnt, odd_cnt)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnye4gjlz.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpnye4gjlz.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnye4gjlz.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnye4gjlz.jl:24\ntest set: Test Failed at /tmp/tmpnye4gjlz.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnye4gjlz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnye4gjlz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnye4gjlz.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnye4gjlz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnye4gjlz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnye4gjlz.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnye4gjlz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnye4gjlz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnye4gjlz.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    even_count = 0\n    odd_count = 0\n    while\
    \ num > 0\n        if rem(num, 10) % 2 == 0\n            even_count += 1\n   \
    \     else\n            odd_count += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf26qbcd4.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpf26qbcd4.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf26qbcd4.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf26qbcd4.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014591
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in digits(num)\n       \
    \ if digit % 2 == 0\n            evens += 1\n        else\n            odds +=\
    \ 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n   \
    \ end\n    for i in split(string(num))\n        if i == \"0\" || i == \"2\" ||\
    \ i == \"4\" || i == \"6\" || i == \"8\"\n            even += 1\n        else\n\
    \            odd += 1\n        end\n    end\n    return (even, odd)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1gfo2zpz.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1gfo2zpz.jl:30\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 1) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1gfo2zpz.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1gfo2zpz.jl:28\ntest set: Test Failed at /tmp/tmp1gfo2zpz.jl:31\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (0, 1) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gfo2zpz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gfo2zpz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1gfo2zpz.jl:32\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gfo2zpz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gfo2zpz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1gfo2zpz.jl:33\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gfo2zpz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gfo2zpz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1gfo2zpz.jl:35\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    c = 0 # c = even numbers\n    d = 0 # d = odd numbers\n    for\
    \ i in collect(num)\n        if (i % 2 == 0)\n            c += 1\n        else\n\
    \            d += 1\n        end\n    end\n    return (c, d)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3_yirkak.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3_yirkak.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3_yirkak.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3_yirkak.jl:25\ntest set: Test Failed at /tmp/tmp3_yirkak.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_yirkak.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_yirkak.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3_yirkak.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_yirkak.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_yirkak.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3_yirkak.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_yirkak.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_yirkak.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3_yirkak.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014591
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014589
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in 1:length(string(num))\n   \
    \     if parse(Int64, string(num)[i]) % 2 == 0\n            even += 1\n      \
    \  else\n            odd += 1\n        end\n    end\n    (even, odd)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptaddapki.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmptaddapki.jl:27\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmptaddapki.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptaddapki.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmptaddapki.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptaddapki.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmptaddapki.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptaddapki.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmptaddapki.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptaddapki.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmptaddapki.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptaddapki.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    s = abs(num)\n    while s > 0\n    \
    \    t = s % 10\n        if t % 2 == 0\n            even += 1\n        else\n\
    \            odd += 1\n        end\n        s = (s - t) / 10\n    end\n    return\
    \ (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9x_ri9xp.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp9x_ri9xp.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9x_ri9xp.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9x_ri9xp.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014592
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in 1:length(digits(num))\n   \
    \     if  digits(num)[i] % 2 == 0\n            even += 1\n        else\n     \
    \       odd += 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014590
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for digit in digits(num)\n        if\
    \ digit % 2 == 0\n            even += 1\n        else\n            odd += 1\n\
    \        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for a in num\n        if a % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt0efndhi.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpt0efndhi.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt0efndhi.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt0efndhi.jl:25\ntest set: Test Failed at /tmp/tmpt0efndhi.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0efndhi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0efndhi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt0efndhi.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0efndhi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0efndhi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt0efndhi.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0efndhi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0efndhi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt0efndhi.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    even, odd = 0, 0\n    while num > 0\n     \
    \   digit = num % 10\n        if digit % 2 == 0\n            even += 1\n     \
    \   else\n            odd += 1\n        end\n        num = num / 10\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4n8ewuss.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp4n8ewuss.jl:28\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4n8ewuss.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4n8ewuss.jl:27\ntest set: Test Failed at /tmp/tmp4n8ewuss.jl:29\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4n8ewuss.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4n8ewuss.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4n8ewuss.jl:30\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4n8ewuss.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4n8ewuss.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4n8ewuss.jl:31\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4n8ewuss.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4n8ewuss.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4n8ewuss.jl:32\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014593
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even_num = 0\n\
    \    odd_num = 0\n    while num != 0\n        if num % 2 == 0\n            even_num\
    \ += 1\n        else\n            odd_num += 1\n        end\n        num = num\
    \ \xF7 10\n    end\n    return (even_num, odd_num)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014590
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    a = 0\n    b = 0\n    for i in 1:floor(log10(abs(num)))+1\n   \
    \     c = num%10\n        if c%2 == 0\n            a += 1\n        else\n    \
    \        b += 1\n        end\n        num = div(num,10)\n    end\n    return a,b\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5ada6c9n.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp5ada6c9n.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5ada6c9n.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5ada6c9n.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    nums = []\n    if num < 0\n        num = -num\n    end\n    while\
    \ num > 0\n        push!(nums, num % 10)\n        num = num \xF7 10\n    end\n\
    \    even_count = 0\n    odd_count = 0\n    for i in nums\n        if mod(i, 2)\
    \ == 0\n            even_count += 1\n        else\n            odd_count += 1\n\
    \        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppe_4tt6n.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmppe_4tt6n.jl:41\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppe_4tt6n.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppe_4tt6n.jl:33\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014593
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in digits(num)\n      \
    \  if i % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # your code here\nend\n@test even_odd_count(-12) == (1, 1)\n@test\
    \ even_odd_count(123) == (1, 2)\n \n \n \n@testset \"remove_duplicates\" begin\n\
    \    \"\"\"Given a list of numbers return a list with unique elements.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpndqkyk5z.jl:12

    in expression starting at /tmp/tmpndqkyk5z.jl:12

    '
  stdout: ''
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  even_count = 0\n  odd_count = 0\n  for i in abs(num)\n    x = i %\
    \ 2 == 0 ? even_count += 1 : odd_count += 1\n  end\n  return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxyjtc7ey.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpxyjtc7ey.jl:23\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxyjtc7ey.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxyjtc7ey.jl:21\ntest set: Test Failed at /tmp/tmpxyjtc7ey.jl:24\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxyjtc7ey.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxyjtc7ey.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxyjtc7ey.jl:25\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxyjtc7ey.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxyjtc7ey.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxyjtc7ey.jl:26\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxyjtc7ey.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxyjtc7ey.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxyjtc7ey.jl:28\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014593
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014589
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # TODO: complete this function\n    odd_count = 0\n    even_count\
    \ = 0\n    num_str = string(num)\n    for i in num_str\n        # print(i)\n \
    \       if i == \"-\"\n            continue\n        end\n        if parse(Int64,\
    \ i) % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4ttvlbjt.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp4ttvlbjt.jl:33\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp4ttvlbjt.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4ttvlbjt.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4ttvlbjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4ttvlbjt.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp4ttvlbjt.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4ttvlbjt.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4ttvlbjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4ttvlbjt.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp4ttvlbjt.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4ttvlbjt.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num > 0\n        for i in num\n \
    \           if i % 2 == 0\n                even += 1\n            else\n     \
    \           odd += 1\n            end\n        end\n    else\n        for i in\
    \ -num\n            if i % 2 == 0\n                even += 1\n            else\n\
    \                odd += 1\n            end\n        end\n    end\n    return (even,\
    \ odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6m3m9i49.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp6m3m9i49.jl:37\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6m3m9i49.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6m3m9i49.jl:35\ntest set: Test Failed at /tmp/tmp6m3m9i49.jl:38\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6m3m9i49.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6m3m9i49.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6m3m9i49.jl:39\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6m3m9i49.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6m3m9i49.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6m3m9i49.jl:40\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6m3m9i49.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6m3m9i49.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6m3m9i49.jl:42\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for d in digits(num)\n \
    \       if d % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    \ \n@testset \"even_odd_count\" begin\n    @test even_odd_count(-12) == (1, 1)\n\
    \    @test even_odd_count(123) == (1, 2)\nend\n    \n    \n\"\"\"Given a lower\
    \ and upper integer. return all the numbers between them (including the upper\
    \ and lower bounds).\nThe numbers should be in their string representations\n\
    Note that the lower bound is inclusive and the upper bound is exclusive.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmp4ooisdz2.jl:22

    in expression starting at /tmp/tmp4ooisdz2.jl:22

    '
  stdout: ''
  timestamp: 1660014592
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # compute the number of even numbers\n    even_count = 0\n    #\
    \ compute the number of odd numbers\n    odd_count = 0\n    # iterate through\
    \ each digit in a given number\n    for digit in digits(num)\n        # check\
    \ if digit is even or odd\n        if digit % 2 == 0\n            # increment\
    \ even_count if digit is even\n            even_count += 1\n        else\n   \
    \         # increment odd_count if digit is odd\n            odd_count += 1\n\
    \        end\n    end\n    # return tuple of even_count and odd_count\n    return\
    \ (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014591
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        if num % 2 == 0\n            even_count += 1\n        else\n\
    \            odd_count += 1\n        end\n        num = div(num, 10)\n    end\n\
    \    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk3n8xwwr.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpk3n8xwwr.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk3n8xwwr.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk3n8xwwr.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014593
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0; odd = 0;\n    while num != 0\n        if num % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    \
    \    num = floor(num/10)\n    end\n    return (even, odd)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while num > 0\n        temp\
    \ = mod(num, 10)\n        if mod(temp, 2) == 0\n            even_count += 1\n\
    \        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphpw61tbl.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmphpw61tbl.jl:29\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphpw61tbl.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphpw61tbl.jl:27\ntest set: Test Failed at /tmp/tmphpw61tbl.jl:32\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpw61tbl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpw61tbl.jl:27\ntest set: Test\
    \ Failed at /tmp/tmphpw61tbl.jl:33\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpw61tbl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpw61tbl.jl:27\ntest set: Test\
    \ Failed at /tmp/tmphpw61tbl.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpw61tbl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpw61tbl.jl:27\ntest set: Test\
    \ Failed at /tmp/tmphpw61tbl.jl:35\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (positive(num), negative(num))\nend \nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpo0t1vooc.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpo0t1vooc.jl:17\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: positive not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpo0t1vooc.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0t1vooc.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0t1vooc.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpo0t1vooc.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: positive not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpo0t1vooc.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0t1vooc.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0t1vooc.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpo0t1vooc.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: positive not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpo0t1vooc.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0t1vooc.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0t1vooc.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpo0t1vooc.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: positive not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpo0t1vooc.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ ["
  timestamp: 1660014595
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if i ==\
    \ '-'\n            continue\n        end\n        if isodd(Int64(i))\n       \
    \     odd += 1\n        else\n            even += 1\n        end\n    end\n  \
    \  (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014591
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num >= 0\n        return (sum([num % 10 % 2 == 0 for num in\
    \ collect(digits(num))]), sum([num % 10 % 2 != 0 for num in collect(digits(num))]))\n\
    \    else\n        num *= -1\n        return (sum([num % 10 % 2 == 0 for num in\
    \ collect(digits(num))]), sum([num % 10 % 2 != 0 for num in collect(digits(num))]))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014592
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n   \
    \ end\n    while num != 0\n        if mod(num, 2) == 0\n            even += 1\n\
    \        else\n            odd += 1\n        end\n        num = num \xF7 10\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzjxjl7kp.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpzjxjl7kp.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzjxjl7kp.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzjxjl7kp.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:length(num)\n\
    \        if(num[i]%2 == 0)\n            even_count = even_count + 1\n        else\n\
    \            odd_count = odd_count + 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4gwumhf2.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp4gwumhf2.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4gwumhf2.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4gwumhf2.jl:25\ntest set: Test Failed at /tmp/tmp4gwumhf2.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gwumhf2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gwumhf2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4gwumhf2.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gwumhf2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gwumhf2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4gwumhf2.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4gwumhf2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4gwumhf2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4gwumhf2.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in eachindex(digits(num))\n  \
    \      if mod(num[i], 2) == 0\n            even += 1\n        else\n         \
    \   odd += 1\n        end\n    end\n    return even, odd\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpkkt10sk6.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpkkt10sk6.jl:27\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  BoundsError\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./number.jl:98 [inlined]\n   [2] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpkkt10sk6.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkkt10sk6.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkkt10sk6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkkt10sk6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  BoundsError\n  Stacktrace:\n   [1] getindex\n \
    \    @ ./number.jl:98 [inlined]\n   [2] even_odd_count(num::Int64)\n     @ Main\
    \ /tmp/tmpkkt10sk6.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkkt10sk6.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkkt10sk6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkkt10sk6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  BoundsError\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./number.jl:98 [inlined]\n   [2] even_odd_count(num::Int64)\n     @ Main\
    \ /tmp/tmpkkt10sk6.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkkt10sk6.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkkt10sk6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkkt10sk6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  BoundsError\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./number.jl:98 [inlined]\n   [2] even_odd_count(num::Int64)\n     @ Main\
    \ /tmp/tmpkkt10sk6.jl:"
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    if num == 0\n        return (1,\
    \ 0)\n    end\n    if num < 0\n        num = abs(num)\n    end\n    while num\
    \ > 0\n        digit = num % 10\n        if digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = num\
    \ / 10\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6j3v8f_0.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp6j3v8f_0.jl:33\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6j3v8f_0.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6j3v8f_0.jl:32\ntest set: Test Failed at /tmp/tmp6j3v8f_0.jl:34\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j3v8f_0.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j3v8f_0.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6j3v8f_0.jl:35\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j3v8f_0.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j3v8f_0.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6j3v8f_0.jl:36\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j3v8f_0.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j3v8f_0.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6j3v8f_0.jl:37\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (even_digits, odd_digits) = (0, 0)\n    if num < 0\n        num\
    \ = -num\n    end\n    while num > 0\n        digit = num % 10\n        if digit\
    \ % 2 == 0\n            even_digits += 1\n        else\n            odd_digits\
    \ += 1\n        end\n        num = trunc(Int64, num / 10)\n    end\n    return\
    \ (even_digits, odd_digits)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3bg8j07j.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp3bg8j07j.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3bg8j07j.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3bg8j07j.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014594
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    n_even = 0\n    n_odd = 0\n    for d in digits(num)\n        if\
    \ mod(d, 2) == 0\n            n_even += 1\n        else\n            n_odd +=\
    \ 1\n        end\n    end\n    return (n_even, n_odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014592
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n   \
    \ end\n    while num != 0\n        if num % 2 == 0\n            even += 1\n  \
    \      else\n            odd += 1\n        end\n        num = num // 10\n    end\n\
    \    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm_1yaxi2.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpm_1yaxi2.jl:30\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] //(x::Rational{Int64}, y::Int64)\n\
    \     @ Base ./rational.jl:66\n   [4] even_odd_count(num::Int64)\n     @ Main\
    \ /tmp/tmpm_1yaxi2.jl:21\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpm_1yaxi2.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpm_1yaxi2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm_1yaxi2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 2 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmpm_1yaxi2.jl:16\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpm_1yaxi2.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpm_1yaxi2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm_1yaxi2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] //(x::Rational{Int64}, y::Int64)\n\
    \     @ Base ./rational.jl:66\n"
  timestamp: 1660014596
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = -num\n    end\n    even_count = 0\n \
    \   odd_count = 0\n    for i in digits(num)\n        if i % 2 == 0\n         \
    \   even_count += 1\n        else\n            odd_count += 1\n        end\n \
    \   end\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014592
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    abs_num = abs(num)\n   \
    \ while abs_num > 0\n        remainder = abs_num % 10\n        if remainder %\
    \ 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        abs_num = abs_num \xF7 10\n    end\n    return (even_count,\
    \ odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4dzbj6wi.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp4dzbj6wi.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4dzbj6wi.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4dzbj6wi.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014595
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even = 0\n    odd = 0\n    \n    for i in digits(num)\n \
    \       if iseven(i)\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    \n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even = 0\n   \
    \ odd = 0\n    while num != 0\n        if (num % 10) % 2 == 0\n            even\
    \ += 1\n        else\n            odd += 1\n        end\n        num = num / 10\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_i03hx1h.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp_i03hx1h.jl:30\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_i03hx1h.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_i03hx1h.jl:29\ntest set: Test Failed at /tmp/tmp_i03hx1h.jl:31\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i03hx1h.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i03hx1h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_i03hx1h.jl:32\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i03hx1h.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i03hx1h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_i03hx1h.jl:33\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i03hx1h.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i03hx1h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_i03hx1h.jl:34\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    while num > 0\n        dig = num %\
    \ 10\n        if dig % 2 == 0\n            evens += 1\n        else\n        \
    \    odds += 1\n        end\n        num = div(num, 10)\n    end\n    return (evens,\
    \ odds)\nend\n \n \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx2tbx_vt.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpx2tbx_vt.jl:31\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx2tbx_vt.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx2tbx_vt.jl:29\ntest set: Test Failed at /tmp/tmpx2tbx_vt.jl:34\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx2tbx_vt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx2tbx_vt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx2tbx_vt.jl:35\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx2tbx_vt.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx2tbx_vt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx2tbx_vt.jl:36\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx2tbx_vt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx2tbx_vt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx2tbx_vt.jl:37\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in num:\n        if\
    \ i % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp34ki4364.jl:13\nin expression starting at\
    \ /tmp/tmp34ki4364.jl:13\n"
  stdout: ''
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_copy = num\n    even = 0\n    odd = 0\n    if num < 0\n   \
    \     num = -num\n    end\n    while num != 0\n        if num % 2 == 0\n     \
    \       even += 1\n        else\n            odd += 1\n        end\n        num\
    \ = div(num, 10)\n    end\n    if num_copy < 0\n        odd += 1\n    end\n  \
    \  return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp48qdzvw2.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp48qdzvw2.jl:35\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 2) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp48qdzvw2.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp48qdzvw2.jl:33\ntest set: Test Failed at /tmp/tmp48qdzvw2.jl:38\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (3, 4) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48qdzvw2.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48qdzvw2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp48qdzvw2.jl:39\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (1, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48qdzvw2.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48qdzvw2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp48qdzvw2.jl:40\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (2, 4) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48qdzvw2.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48qdzvw2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp48qdzvw2.jl:41\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014595
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = odd = 0\n    for i in 1:length(digits(num))\n        if\
    \ digits(num)[i] % 2 == 0\n            even += 1\n        else\n            odd\
    \ += 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return length( filter( x -> x%2 == 0, num2digits(num))),\n    \
    \       length( filter( x -> x%2 == 1, num2digits(num)))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpm9m6qgfa.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpm9m6qgfa.jl:18\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: num2digits not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpm9m6qgfa.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm9m6qgfa.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm9m6qgfa.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpm9m6qgfa.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: num2digits not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpm9m6qgfa.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm9m6qgfa.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm9m6qgfa.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpm9m6qgfa.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: num2digits not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpm9m6qgfa.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm9m6qgfa.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm9m6qgfa.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpm9m6qgfa.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: num2digits not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpm9m6qgfa.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test."
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num < 0\n        num\
    \ = abs(num)\n    end\n    while num > 0\n        if num % 2 == 0\n          \
    \  even_count += 1\n        else\n            odd_count += 1\n        end\n  \
    \      num = div(num, 10)\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_9hyq_mp.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp_9hyq_mp.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_9hyq_mp.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_9hyq_mp.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in 1:length(num)\n        if\
    \ mod(num[i], 2) == 0\n            evens += 1\n        else\n            odds\
    \ += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1ecs1c3_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp1ecs1c3_.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1ecs1c3_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1ecs1c3_.jl:25\ntest set: Test Failed at /tmp/tmp1ecs1c3_.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ecs1c3_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ecs1c3_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ecs1c3_.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ecs1c3_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ecs1c3_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ecs1c3_.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ecs1c3_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ecs1c3_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ecs1c3_.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014595
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 1:length(digits(num))\n\
    \        if digits(num)[i] % 2 == 0\n            even_count += 1\n        else\n\
    \            odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014593
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for ch in string(num)\n        if isnumber(ch)\n\
    \            if parse(Int64, ch) % 2 == 0\n                even += 1\n       \
    \     else\n                odd += 1\n            end\n        end\n    end\n\
    \    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpxrzan0wc.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpxrzan0wc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: isnumber not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxrzan0wc.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrzan0wc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrzan0wc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxrzan0wc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: isnumber not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxrzan0wc.jl:13\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrzan0wc.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrzan0wc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxrzan0wc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: isnumber not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxrzan0wc.jl:13\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrzan0wc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrzan0wc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxrzan0wc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: isnumber not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpxrzan0wc.jl:13\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ ["
  timestamp: 1660014596
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in digits(num)\n       \
    \ digit % 2 == 0 ? evens += 1 : odds += 1\n    end\n    return (evens, odds)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014594
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0 \n        num = abs(num)\n    end \n    even_count =\
    \ 0\n    odd_count = 0\n    while num > 0 \n        if rem(num, 10) % 2 == 0 \n\
    \            even_count += 1\n        else \n            odd_count += 1\n    \
    \    end \n        num = div(num, 10)\n    end \n    return (even_count, odd_count)\n\
    end \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphm4gom2t.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmphm4gom2t.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphm4gom2t.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphm4gom2t.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in num:abs:to_string\n     \
    \   if i % 2 == 0\n            evens += 1\n        else\n            odds += 1\n\
    \        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp93v710hl.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp93v710hl.jl:26\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: to_string not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp93v710hl.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp93v710hl.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp93v710hl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp93v710hl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: to_string not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp93v710hl.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp93v710hl.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp93v710hl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp93v710hl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: to_string not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp93v710hl.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp93v710hl.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp93v710hl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp93v710hl.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: to_string not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp93v710hl.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:4"
  timestamp: 1660014597
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n     even_count = 0\n     odd_count = 0\n     num = abs(num)\n    \
    \ while num > 0\n         digit = num % 10\n         if digit % 2 == 0\n     \
    \        even_count += 1\n         else\n             odd_count += 1\n       \
    \  end\n         num = div(num, 10)\n     end\n     return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx9idego5.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpx9idego5.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx9idego5.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx9idego5.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for x in num:\n        if x % 2 ==\
    \ 0:\n            evens += 1\n        else:\n            odds += 1\n    return\
    \ (evens, odds)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeky_5rua.jl:13\nin expression starting at\
    \ /tmp/tmpeky_5rua.jl:13\n"
  stdout: ''
  timestamp: 1660014595
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014594
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_num = 0\n    odd_num = 0\n    while num != 0\n        if num\
    \ % 2 == 0\n            even_num += 1\n        else\n            odd_num += 1\n\
    \        end\n        num = floor(num / 10)\n    end\n    return (even_num, odd_num)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in num\n        if i%2 == 0\n     \
    \       even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nprintln(even_odd_count(-12))\nprintln(even_odd_count(123))\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbayr0h2i.jl:24

    '
  stdout: "(1, 0)\n(0, 1)\ntest set: Test Failed at /tmp/tmpbayr0h2i.jl:28\n  Expression:\
    \ candidate(-78) == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbayr0h2i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbayr0h2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbayr0h2i.jl:29\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbayr0h2i.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbayr0h2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbayr0h2i.jl:30\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbayr0h2i.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbayr0h2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbayr0h2i.jl:31\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbayr0h2i.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbayr0h2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbayr0h2i.jl:33\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1660014597
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  # your code here\n  end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp6dypay1.jl:12\nin expression starting at /tmp/tmpp6dypay1.jl:12\n"
  stdout: ''
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n        Args:\n            num: the number to\
    \ count\n        Returns:\n            a tuple that has the number of even and\
    \ odd digits respectively.\n        \"\"\"\n    even_digit_count = 0\n    odd_digit_count\
    \ = 0\n    for i in num\n        if i % 2 == 0\n            even_digit_count +=\
    \ 1\n        else\n            odd_digit_count += 1\n        end\n    end\n  \
    \  return even_digit_count, odd_digit_count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpco1lvrhg.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpco1lvrhg.jl:33\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpco1lvrhg.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpco1lvrhg.jl:31\ntest set: Test Failed at /tmp/tmpco1lvrhg.jl:34\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpco1lvrhg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpco1lvrhg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpco1lvrhg.jl:35\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpco1lvrhg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpco1lvrhg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpco1lvrhg.jl:36\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpco1lvrhg.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpco1lvrhg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpco1lvrhg.jl:38\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014597
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digits = odd_digits = 0\n    if num < 0\n        num = -num\n\
    \    end\n    while num > 0\n        current_digit = num % 10\n        if current_digit\
    \ % 2 == 0\n            even_digits += 1\n        else\n            odd_digits\
    \ += 1\n        end\n        num = num // 10\n    end\n    (even_digits, odd_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpeftv2e_c.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpeftv2e_c.jl:30\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmpeftv2e_c.jl:15\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpeftv2e_c.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpeftv2e_c.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpeftv2e_c.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmpeftv2e_c.jl:15\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpeftv2e_c.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpeftv2e_c.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpeftv2e_c.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main"
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    (num < 0) && (num = -num)\n    while\
    \ num > 0\n        last_digit = num % 10\n        if last_digit % 2 == 0\n   \
    \         even += 1\n        else\n            odd += 1\n        end\n       \
    \ num = div(num, 10)\n    end\n    return (even, odd)\nend\neven_odd_count(-12)\n\
    even_odd_count(123)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp56073rpo.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp56073rpo.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp56073rpo.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp56073rpo.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014597
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digits = even_count(num)\n    odd_digits = odd_count(num)\n\
    \    return even_digits, odd_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpx193_73v.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpx193_73v.jl:19\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: even_count not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpx193_73v.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx193_73v.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx193_73v.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx193_73v.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: even_count not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpx193_73v.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx193_73v.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx193_73v.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx193_73v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: even_count not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpx193_73v.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx193_73v.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx193_73v.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx193_73v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: even_count not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpx193_73v.jl:10\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test."
  timestamp: 1660014598
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0 \n    while num > 0\n        r = num % 10\n  \
    \      if r % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n        num = num / 10\n    end\n    return even, odd\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6erqdn54.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp6erqdn54.jl:27\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6erqdn54.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6erqdn54.jl:26\ntest set: Test Failed at /tmp/tmp6erqdn54.jl:28\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6erqdn54.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6erqdn54.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6erqdn54.jl:29\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6erqdn54.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6erqdn54.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6erqdn54.jl:30\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6erqdn54.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6erqdn54.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6erqdn54.jl:31\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  timestamp: 1660014598
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for digit in digits(num)\n  \
    \      if digit % 2 == 0\n            even_count += 1\n        else\n        \
    \    odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    str_num = string(num)\n\
    \    for i in 1:length(str_num)\n        if(parse(Int64, str_num[i]) % 2 == 0)\n\
    \            even_count += 1\n        else\n            odd_count += 1\n     \
    \   end\n    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd1n3yury.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd1n3yury.jl:28\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd1n3yury.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd1n3yury.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd1n3yury.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd1n3yury.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd1n3yury.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd1n3yury.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd1n3yury.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd1n3yury.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpd1n3yury.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd1n3yury.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in num\n        if (i%2 == 0)\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8o4_950v.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp8o4_950v.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8o4_950v.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8o4_950v.jl:25\ntest set: Test Failed at /tmp/tmp8o4_950v.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8o4_950v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8o4_950v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8o4_950v.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8o4_950v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8o4_950v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8o4_950v.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8o4_950v.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8o4_950v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8o4_950v.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        last_digit = num % 10\n        if last_digit % 2 == 0\n   \
    \         even_count += 1\n        else\n            odd_count += 1\n        end\n\
    \        num = num \xF7 10\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsfntqrd6.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpsfntqrd6.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsfntqrd6.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsfntqrd6.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    if num >= 0\n        while\
    \ num != 0\n            x = num % 10\n            if x % 2 == 0\n            \
    \    evencount += 1\n            else\n                oddcount += 1\n       \
    \     end\n            num = num \xF7 10\n        end\n    else\n        num =\
    \ -num\n        while num != 0\n            x = num % 10\n            if x % 2\
    \ == 0\n                evencount += 1\n            else\n                oddcount\
    \ += 1\n            end\n            num = num \xF7 10\n        end\n    end\n\
    \    return (evencount, oddcount)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgj_3jwv5.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpgj_3jwv5.jl:48\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgj_3jwv5.jl:48 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgj_3jwv5.jl:40\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_cnt, odd_cnt = 0, 0\n    for c in string(num)\n        if(isdigit(c))\n\
    \            if(parse(Int64, c) % 2 == 0)\n                even_cnt += 1\n   \
    \         else\n                odd_cnt += 1\n            end\n        end\n \
    \   end\n    return even_cnt, odd_cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (positive_even_count, positive_odd_count) = (0, 0)\n    pos_num\
    \ = abs(num)\n    while pos_num > 0\n        if (pos_num % 10) % 2 == 0\n    \
    \        positive_even_count += 1\n        else\n            positive_odd_count\
    \ += 1\n        end\n        pos_num = pos_num \xF7 10\n    end\n    (positive_even_count,\
    \ positive_odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4_r7ghyb.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp4_r7ghyb.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4_r7ghyb.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4_r7ghyb.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = -num\n    end\n    digits = Int64[]\n\
    \    while num > 0\n        push!(digits, num % 10)\n        num = num \xF7 10\n\
    \    end\n    even_digits_count = sum([digit % 2 == 0 ? 1 : 0 for digit in digits])\n\
    \    odd_digits_count = sum([digit % 2 == 1 ? 1 : 0 for digit in digits])\n  \
    \  return (even_digits_count, odd_digits_count)\nend\neven_odd_count(-12)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdtsaty5v.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpdtsaty5v.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdtsaty5v.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdtsaty5v.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    e = 0\n    o = 0\n    num = abs(num)\n    while num > 0\n     \
    \   r = rem(num, 10)\n        if r % 2 == 0\n            e += 1\n        else\n\
    \            o += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (e, o)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprjozvrco.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmprjozvrco.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprjozvrco.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprjozvrco.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_counter = 0\n    odd_counter = 0\n    while num != 0\n   \
    \     last_digit = mod(num, 10)\n        if last_digit % 2 == 0\n            even_counter\
    \ += 1\n        else\n            odd_counter += 1\n        end\n        num =\
    \ div(num, 10)\n    end\n    return (even_counter, odd_counter)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe0fgohx_.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpe0fgohx_.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe0fgohx_.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpe0fgohx_.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014598
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num == 0\n        return (1, 0)\n\
    \    end\n    if num < 0\n        num = -num\n    end\n    while num != 0\n  \
    \      if (num % 10) % 2 == 0\n            evens += 1\n        else\n        \
    \    odds += 1\n        end\n        num = num \xF7 10\n    end\n    return (evens,\
    \ odds)\nend\neven_odd_count(-12)\neven_odd_count(123)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014596
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  evens = 0\n  odds = 0\n  for i = abs(num)\n    if i%2 == 0\n    \
    \  evens += 1\n    else\n      odds += 1\n    end\n  end\n  return evens, odds\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg8_dofyw.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpg8_dofyw.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg8_dofyw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg8_dofyw.jl:25\ntest set: Test Failed at /tmp/tmpg8_dofyw.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8_dofyw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8_dofyw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg8_dofyw.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8_dofyw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8_dofyw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg8_dofyw.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8_dofyw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8_dofyw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg8_dofyw.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (evens, odds) = (0, 0)\n    while num != 0\n        digit = num\
    \ % 10\n        if digit % 2 == 0\n            evens += 1\n        else\n    \
    \        odds += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuwqlw64r.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpuwqlw64r.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuwqlw64r.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuwqlw64r.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num >= 0\n        for i in 0:Int64(log10(num))\n\
    \            curr = num % 10\n            if curr % 2 == 0\n                evens\
    \ += 1\n            else\n                odds += 1\n            end\n       \
    \     num = num \xF7 10\n        end\n    else\n        for i in 0:Int64(log10(-num))\n\
    \            curr = num % 10\n            if curr % 2 == 0\n                evens\
    \ += 1\n            else\n                odds += 1\n            end\n       \
    \     num = num \xF7 10\n        end\n    end\n    return (evens, odds)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmppdsvxjzv.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmppdsvxjzv.jl:40\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  InexactError: Int64(0.8450980400142568)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmppdsvxjzv.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppdsvxjzv.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppdsvxjzv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmppdsvxjzv.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  InexactError: Int64(1.8920946026904804)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmppdsvxjzv.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppdsvxjzv.jl:41 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppdsvxjzv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmppdsvxjzv.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  InexactError: Int64(3.538070787043172)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmppdsvxjzv.jl:13\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppdsvxjzv.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppdsvxjzv.jl:39\ntest set:\
    \ Error During Test at /tmp/tmppdsvxjzv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  InexactError: Int64(5.539340862393817)\n  Stacktrace:\n\
    \   [1] Int64\n     @"
  timestamp: 1660014600
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in str(num)\n        if\
    \ i == \".\"\n            continue\n        end\n        if(Int(i) % 2 == 0)\n\
    \            even_count += 1\n        else\n            odd_count += 1\n     \
    \   end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpvdfctxc3.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpvdfctxc3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpvdfctxc3.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdfctxc3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdfctxc3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvdfctxc3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpvdfctxc3.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdfctxc3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdfctxc3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvdfctxc3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpvdfctxc3.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdfctxc3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdfctxc3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvdfctxc3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpvdfctxc3.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macr"
  timestamp: 1660014600
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        if rem(num,10) % 2 == 0\n            even_count += 1\n    \
    \    else\n            odd_count += 1\n        end\n        num = num // 10\n\
    \    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: Timeout
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5opok47h.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5opok47h.jl:28\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp5opok47h.jl:14\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5opok47h.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5opok47h.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5opok47h.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp5opok47h.jl:14\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5opok47h.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5opok47h.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5opok47h.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main"
  timestamp: 1660014601
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    digits_list = digits(num)\n    even_count = 0\n    odd_count =\
    \ 0\n    for i in digits_list\n        if iseven(i)\n            even_count +=\
    \ 1\n        else\n            odd_count += 1\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014597
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd, even = 0, 0\n    for x in string(num)\n        if x != '-'\n\
    \            x = parse(Int64, x)\n            if x % 2 == 0\n                even\
    \ += 1\n            else\n                odd += 1\n            end\n        end\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014597
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i = 1:length(num)\n        if\
    \ num[i] % 2 == 0\n            evens = evens + 1\n        else\n            odds\
    \ = odds + 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph7tbax4l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmph7tbax4l.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph7tbax4l.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph7tbax4l.jl:25\ntest set: Test Failed at /tmp/tmph7tbax4l.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph7tbax4l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph7tbax4l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph7tbax4l.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph7tbax4l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph7tbax4l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph7tbax4l.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph7tbax4l.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph7tbax4l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph7tbax4l.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014600
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = -num\n    end\n    even = 0\n    odd\
    \ = 0\n    for i in num \n        if i % 2 == 0\n            even += 1\n     \
    \   else\n            odd += 1\n        end\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1q5dxv4z.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1q5dxv4z.jl:30\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1q5dxv4z.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1q5dxv4z.jl:28\ntest set: Test Failed at /tmp/tmp1q5dxv4z.jl:31\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5dxv4z.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5dxv4z.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1q5dxv4z.jl:32\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5dxv4z.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5dxv4z.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1q5dxv4z.jl:33\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5dxv4z.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5dxv4z.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1q5dxv4z.jl:35\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014600
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    is_even(x) = x % 2 == 0\n    even_count = sum(is_even, digits(num))\n\
    \    odd_count = length(digits(num)) - even_count\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014598
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_even = 0\n    count_odd = 0\n    while num != 0\n       \
    \ if num % 2 == 0\n            count_even += 1\n        else\n            count_odd\
    \ += 1\n        end\n        num = trunc(Int64, num / 10)\n    end\n    return\
    \ count_even, count_odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnla5vpvu.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpnla5vpvu.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnla5vpvu.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnla5vpvu.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014600
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    n_odd = 0\n    n_even = 0\n    while num != 0\n        if mod(num,\
    \ 10) % 2 == 0\n            n_even += 1\n        else\n            n_odd += 1\n\
    \        end\n        num = div(num, 10)\n    end\n    return (n_even, n_odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0kbeqokh.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp0kbeqokh.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0kbeqokh.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0kbeqokh.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014600
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for x in abs(num)\n        if x % 2\
    \ == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplvp1tz3s.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmplvp1tz3s.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplvp1tz3s.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplvp1tz3s.jl:25\ntest set: Test Failed at /tmp/tmplvp1tz3s.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvp1tz3s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvp1tz3s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplvp1tz3s.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvp1tz3s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvp1tz3s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplvp1tz3s.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvp1tz3s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvp1tz3s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplvp1tz3s.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014600
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_digit_count = 0\n    odd_digit_count = 0\n    \n   \
    \ while num != 0\n        last_digit = mod(num, 10)\n        if last_digit % 2\
    \ == 0\n            even_digit_count += 1\n        else\n            odd_digit_count\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    \n    return (even_digit_count,\
    \ odd_digit_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpevovtthp.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpevovtthp.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpevovtthp.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpevovtthp.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014600
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num == 0\n        return\
    \ (1, 0)\n    end\n    if num < 0\n        num = abs(num)\n    end\n    for digit\
    \ in digits(num)\n        if (digit % 2) == 0\n            even_count += 1\n \
    \       else\n            odd_count += 1\n        end\n    end\n    return (even_count,\
    \ odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = count(x -> iseven(x), num)\n    odds = count(x -> !iseven(x),\
    \ num)\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxx86owse.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpxx86owse.jl:20\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxx86owse.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxx86owse.jl:18\ntest set: Test Failed at /tmp/tmpxx86owse.jl:21\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx86owse.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx86owse.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxx86owse.jl:22\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx86owse.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx86owse.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxx86owse.jl:23\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx86owse.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx86owse.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxx86owse.jl:25\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num > 0\n        while\
    \ num > 0\n            x = mod(num, 10)\n            if mod(x, 2) == 0\n     \
    \           even_count += 1\n            else\n                odd_count += 1\n\
    \            end\n            num = div(num, 10)\n        end\n    elseif num\
    \ < 0\n        num = -num\n        while num > 0\n            x = mod(num, 10)\n\
    \            if mod(x, 2) == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n            num = div(num, 10)\n\
    \        end\n    else\n        return (0, 0)\n    end\n    return (even_count,\
    \ odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplu4081ho.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmplu4081ho.jl:50\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplu4081ho.jl:50 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplu4081ho.jl:42\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for d in num\n        if iseven(d)\n    \
    \        even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnj6u0nqk.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpnj6u0nqk.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnj6u0nqk.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnj6u0nqk.jl:24\ntest set: Test Failed at /tmp/tmpnj6u0nqk.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnj6u0nqk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnj6u0nqk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnj6u0nqk.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnj6u0nqk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnj6u0nqk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnj6u0nqk.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnj6u0nqk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnj6u0nqk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnj6u0nqk.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num_as_string = string(num)\n\
    \    for i in 1:length(num_as_string)\n        if(parse(Int64, num_as_string[i])\
    \ % 2 == 0)\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpqfyppx42.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpqfyppx42.jl:28\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpqfyppx42.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqfyppx42.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqfyppx42.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqfyppx42.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpqfyppx42.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqfyppx42.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqfyppx42.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqfyppx42.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpqfyppx42.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqfyppx42.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd = 0\n    even = 0\n    if num == 0\n        return (0, 0)\n\
    \    end\n    while num != 0\n        if num%2 == 0\n            even += 1\n \
    \       else\n            odd += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4zon14x3.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp4zon14x3.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4zon14x3.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4zon14x3.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    evens = 0\n    odds = 0\n    while num > 0\n\
    \        if num % 2 == 0\n            evens += 1\n        else\n            odds\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return evens, odds\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf303hd2y.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpf303hd2y.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf303hd2y.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf303hd2y.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in string(num)\n       \
    \ if isodd(parse(Int64, digit))\n            odds += 1\n        else\n       \
    \     evens += 1\n        end\n    end\n    (evens, odds)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpm899951p.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpm899951p.jl:27\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpm899951p.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm899951p.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm899951p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm899951p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpm899951p.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm899951p.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm899951p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm899951p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpm899951p.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm899951p.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in abs(num) \n        if (i %\
    \ 2 == 0) \n            even += 1\n        else\n            odd += 1\n      \
    \  end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpevawrpg_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpevawrpg_.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpevawrpg_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpevawrpg_.jl:25\ntest set: Test Failed at /tmp/tmpevawrpg_.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevawrpg_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevawrpg_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevawrpg_.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevawrpg_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevawrpg_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevawrpg_.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevawrpg_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevawrpg_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevawrpg_.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014601
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        digit % 2 == 0 ? even_count += 1 : odd_count += 1\n    end\n    return\
    \ (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014599
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    # Iterate through the digits of the\
    \ number\n    while num != 0\n        # If it's even, add 1 to even count\n  \
    \      if num % 2 == 0\n            even += 1\n        # Else it's odd\n     \
    \   else\n            odd += 1\n        end\n        # Get the next digit\n  \
    \      num = div(num, 10)\n    end\n    return (even, odd)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzjqxk6jh.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpzjqxk6jh.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzjqxk6jh.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzjqxk6jh.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    a = 0\n    b = 0\n    while num > 0 \n        rem = num % 10\n\
    \        if rem % 2 == 0\n            a += 1\n        else\n            b += 1\n\
    \        end\n        num = div(num, 10)\n    end\n    return a, b\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr276ygon.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpr276ygon.jl:29\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpr276ygon.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpr276ygon.jl:27\ntest set: Test Failed at /tmp/tmpr276ygon.jl:32\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr276ygon.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr276ygon.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpr276ygon.jl:33\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr276ygon.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr276ygon.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpr276ygon.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr276ygon.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr276ygon.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpr276ygon.jl:35\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for char in num2str(num)\n\
    \        if parse(Int64, char) % 2 == 0\n            even_count += 1\n       \
    \ else\n            odd_count += 1\n        end\n    end\n    return (even_count,\
    \ odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpsp19gdtu.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpsp19gdtu.jl:26\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: num2str not defined\n\
    \  Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpsp19gdtu.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsp19gdtu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsp19gdtu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpsp19gdtu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: num2str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpsp19gdtu.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsp19gdtu.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsp19gdtu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpsp19gdtu.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: num2str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpsp19gdtu.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsp19gdtu.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsp19gdtu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpsp19gdtu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: num2str not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpsp19gdtu.jl:12\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inli"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for char in string(num)\n        if\
    \ parse(Int, char) % 2 == 0\n            evens += 1\n        else\n          \
    \  odds += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpazwsdsmb.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpazwsdsmb.jl:27\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpazwsdsmb.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpazwsdsmb.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpazwsdsmb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpazwsdsmb.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpazwsdsmb.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpazwsdsmb.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpazwsdsmb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpazwsdsmb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpazwsdsmb.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpazwsdsmb.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in num\n        if\
    \ i % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeywm19en.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpeywm19en.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeywm19en.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeywm19en.jl:25\ntest set: Test Failed at /tmp/tmpeywm19en.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeywm19en.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeywm19en.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeywm19en.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeywm19en.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeywm19en.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeywm19en.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeywm19en.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeywm19en.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeywm19en.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    num > 0 ? sign = 1 : sign = -1\n \
    \   num = abs(num)\n    while num != 0\n        digit = num % 10\n        digit\
    \ % 2 == 0 ? evens += 1 : odds += 1\n        num = num / 10\n    end\n    return\
    \ (evens, odds)\nend\n@test even_odd_count(-12) == (1, 1)\n@test even_odd_count(123)\
    \ == (1, 2)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmptieiumwj.jl:21

    in expression starting at /tmp/tmptieiumwj.jl:21

    '
  stdout: ''
  timestamp: 1660014601
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_str = string(num)\n    num_str_list = list(num_str)\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0\n        num_str_list = num_str_list[2:end]\n\
    \    end\n    for i in num_str_list\n        num = parse(Int64, i)\n        if\
    \ num % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp0_ev2jng.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp0_ev2jng.jl:32\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: list not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0_ev2jng.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_ev2jng.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_ev2jng.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp0_ev2jng.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: list not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0_ev2jng.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_ev2jng.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_ev2jng.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp0_ev2jng.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: list not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0_ev2jng.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_ev2jng.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_ev2jng.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp0_ev2jng.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: list not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0_ev2jng.jl:11\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] "
  timestamp: 1660014604
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  \"\"\" Solution using pattern matching and list comprehension.\n\
    \  \"\"\"\n  digits = map(x -> string(x), abs(num))\n  evens = length([x for x\
    \ in digits if x % 2 == 0])\n  odds = length([x for x in digits if x % 2 != 0])\n\
    \  return (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmp61dyaxjj.jl:22\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#5\")(x::Char)\n      @ Main ./none:0\n\
    \    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n    \
    \  @ ./generator.jl:44 [inlined]\n    [4] grow_to!\n      @ ./array.jl:797 [inlined]\n\
    \    [5] collect(itr::Base.Generator{Base.Iterators.Filter{var\"#2#5\", String},\
    \ typeof(identity)})\n      @ Base ./array.jl:721\n    [6] even_odd_count(num::Int64)\n\
    \      @ Main /tmp/tmp61dyaxjj.jl:13\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp61dyaxjj.jl:22 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp61dyaxjj.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp61dyaxjj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#5\")(x::Char)\n      @ Main ./none:0\n\
    \    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n    \
    \  @ ./generator.jl:44 [inlined]\n    [4] grow_to!\n      @ ./array.jl:797 [inlined]\n\
    \    [5] collect(itr::Ba"
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in num\n        if i % 2 == 0\n   \
    \         even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2z5dk6e3.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp2z5dk6e3.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2z5dk6e3.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2z5dk6e3.jl:24\ntest set: Test Failed at /tmp/tmp2z5dk6e3.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2z5dk6e3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2z5dk6e3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2z5dk6e3.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2z5dk6e3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2z5dk6e3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2z5dk6e3.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2z5dk6e3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2z5dk6e3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2z5dk6e3.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for x in num\n        if x % 2 == 0\n   \
    \         even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu4i0y2xe.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpu4i0y2xe.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu4i0y2xe.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu4i0y2xe.jl:24\ntest set: Test Failed at /tmp/tmpu4i0y2xe.jl:27\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4i0y2xe.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4i0y2xe.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpu4i0y2xe.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4i0y2xe.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4i0y2xe.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpu4i0y2xe.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4i0y2xe.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4i0y2xe.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpu4i0y2xe.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    even, odd = 0, 0\n    while num > 0\n     \
    \   if num % 2 == 0\n            even += 1\n        else\n            odd += 1\n\
    \        end\n        num = div(num, 10)\n    end\n    return even, odd\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqw1wrcoa.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpqw1wrcoa.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqw1wrcoa.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqw1wrcoa.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in num\n        if i % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0hhrvsl1.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp0hhrvsl1.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0hhrvsl1.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0hhrvsl1.jl:25\ntest set: Test Failed at /tmp/tmp0hhrvsl1.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hhrvsl1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hhrvsl1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0hhrvsl1.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hhrvsl1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hhrvsl1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0hhrvsl1.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hhrvsl1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hhrvsl1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0hhrvsl1.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    if num < 0\n        num =\
    \ -num\n    end\n    while num > 0\n        if num % 2 == 0\n            evencount\
    \ += 1\n        else\n            oddcount += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (evencount, oddcount)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdp3y2v57.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpdp3y2v57.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdp3y2v57.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdp3y2v57.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in num |> string |> collect\n\
    \        is_even = parse(Int64, digit) % 2 == 0\n        is_odd = parse(Int64,\
    \ digit) % 2 == 1\n        is_even && (evens += 1)\n        is_odd && (odds +=\
    \ 1)\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpohjym8np.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpohjym8np.jl:26\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpohjym8np.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpohjym8np.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpohjym8np.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpohjym8np.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpohjym8np.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpohjym8np.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpohjym8np.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpohjym8np.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpohjym8np.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpohjym8np.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014604
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    # Your code goes here.\n    return\
    \ (evens, odds)\nend\n \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj9_5t_mv.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpj9_5t_mv.jl:21\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 0) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj9_5t_mv.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj9_5t_mv.jl:20\ntest set: Test Failed at /tmp/tmpj9_5t_mv.jl:22\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9_5t_mv.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9_5t_mv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj9_5t_mv.jl:23\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (0, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9_5t_mv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9_5t_mv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj9_5t_mv.jl:24\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9_5t_mv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9_5t_mv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj9_5t_mv.jl:25\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in string(num)\n        if i\
    \ == \"0\" || i == \"2\" || i == \"4\" || i == \"6\" || i == \"8\"\n         \
    \   evens += 1\n        elseif i == \"1\" || i == \"3\" || i == \"5\" || i ==\
    \ \"7\" || i == \"9\"\n            odds += 1\n        end\n    end\n    return\
    \ (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_cskrj8c.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_cskrj8c.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 0) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_cskrj8c.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_cskrj8c.jl:25\ntest set: Test Failed at /tmp/tmp_cskrj8c.jl:27\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cskrj8c.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cskrj8c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_cskrj8c.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (0, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cskrj8c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cskrj8c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_cskrj8c.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cskrj8c.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cskrj8c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_cskrj8c.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion"
  timestamp: 1660014603
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_count = 0;\n    odd_count = 0;\n    \n    # update the\
    \ count using while loop\n    while num != 0\n        digit = num % 10;\n    \
    \    if digit % 2 == 0\n            even_count += 1;\n        else\n         \
    \   odd_count += 1;\n        end\n        num = div(num, 10);\n    end\n    \n\
    \    return (even_count, odd_count);\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_vw8b18p.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp_vw8b18p.jl:39\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_vw8b18p.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_vw8b18p.jl:31\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014603
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    evens = 0\n    odds = 0\n    \n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            evens += 1\n        else\n           \
    \ odds += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    num = abs(num)\n    while num >= 1\n\
    \        digit = num % 10\n        if digit % 2 == 0\n            evens += 1\n\
    \        else\n            odds += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (evens, odds)\nend\n@assert even_odd_count(-12) == (1, 1)\n\
    @assert even_odd_count(123) == (1, 2)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplfl7nplq.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmplfl7nplq.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplfl7nplq.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplfl7nplq.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014604
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_num_list = []\n    odd_num_list = []\n    \n    while\
    \ num != 0\n        rem = num % 10\n        if rem % 2 == 0\n            push!(even_num_list,\
    \ rem)\n        else\n            push!(odd_num_list, rem)\n        end\n    \
    \    num = num / 10\n    end\n    return (length(even_num_list), length(odd_num_list))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp86nnujfq.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp86nnujfq.jl:30\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp86nnujfq.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp86nnujfq.jl:29\ntest set: Test Failed at /tmp/tmp86nnujfq.jl:31\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp86nnujfq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp86nnujfq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp86nnujfq.jl:32\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp86nnujfq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp86nnujfq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp86nnujfq.jl:33\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp86nnujfq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp86nnujfq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp86nnujfq.jl:34\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014604
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digits, odd_digits = 0, 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_digits += 1\n        else\n     \
    \       odd_digits += 1\n        end\n    end\n    return even_digits, odd_digits\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014602
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num < 0\n        num\
    \ = -num\n    end\n    while num != 0\n        if num % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpguijgd71.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpguijgd71.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpguijgd71.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpguijgd71.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014604
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return 0,0\n    end\n    even, odd = 0, 0\n\
    \    if num < 0\n        num = -num\n    end\n    while num > 0\n        remainder\
    \ = num % 10\n        if remainder % 2 == 0\n            even += 1\n        else\n\
    \            odd += 1\n        end\n        num = num % 10\n    end\n    return\
    \ even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660014607
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    new_num = abs(num)\n    even_count = 0\n    odd_count = 0\n   \
    \ while new_num > 0\n        digit = new_num % 10\n        if digit % 2 == 0\n\
    \            even_count += 1\n        else\n            odd_count += 1\n     \
    \   end\n        new_num = new_num \xF7 10\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzz6ews8g.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzz6ews8g.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzz6ews8g.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzz6ews8g.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014604
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num < 0\n        num\
    \ = -num\n    end\n    while num > 0\n        if num % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp985uohm7.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp985uohm7.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp985uohm7.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp985uohm7.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014604
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = odds = 0\n    while num != 0\n        if num % 2 == 0\n\
    \            evens += 1\n        else\n            odds += 1\n        end\n  \
    \      num /= 10\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqz9ilk4_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpqz9ilk4_.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqz9ilk4_.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqz9ilk4_.jl:25\ntest set: Test Failed at /tmp/tmpqz9ilk4_.jl:27\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqz9ilk4_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqz9ilk4_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqz9ilk4_.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqz9ilk4_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqz9ilk4_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqz9ilk4_.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqz9ilk4_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqz9ilk4_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqz9ilk4_.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_odd = 0\n    count_even = 0\n    for x in num\n        if\
    \ x % 2 == 0\n            count_even += 1\n        else \n            count_odd\
    \ += 1\n        end\n    end\n    return (count_even, count_odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpblev2yjz.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpblev2yjz.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpblev2yjz.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpblev2yjz.jl:25\ntest set: Test Failed at /tmp/tmpblev2yjz.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpblev2yjz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpblev2yjz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpblev2yjz.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpblev2yjz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpblev2yjz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpblev2yjz.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpblev2yjz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpblev2yjz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpblev2yjz.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        digit = num\
    \ % 10\n        if digit % 2 == 0\n            even += 1\n        else\n     \
    \       odd += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxsaeixgc.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpxsaeixgc.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxsaeixgc.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxsaeixgc.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014604
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if i ==\
    \ '-'\n            next\n        end\n        if i == '0'\n            even +=\
    \ 1\n        elseif i == '2'\n            even += 1\n        elseif i == '4'\n\
    \            even += 1\n        elseif i == '6'\n            even += 1\n     \
    \   elseif i == '8'\n            even += 1\n        else\n            odd += 1\n\
    \        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmptpwy8egg.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmptpwy8egg.jl:38\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  UndefVarError: next not defined\n \
    \ Stacktrace:\n   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptpwy8egg.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptpwy8egg.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptpwy8egg.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptpwy8egg.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptpwy8egg.jl:14\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptpwy8egg.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptpwy8egg.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptpwy8egg.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptpwy8egg.jl:14\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptpwy8egg.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptpwy8egg.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptpwy8egg.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(-45347) == (2, 3)\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmptpwy8egg.jl:14\n   [2]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   "
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even_count = 0\n\
    \    odd_count = 0\n    while num != 0\n        last_digit = num % 10\n      \
    \  if last_digit % 2 == 0\n            even_count += 1\n        else\n       \
    \     odd_count += 1\n        end\n        num = num/10\n    end\n    return (even_count,\
    \ odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_jdt3a1w.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp_jdt3a1w.jl:31\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_jdt3a1w.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_jdt3a1w.jl:30\ntest set: Test Failed at /tmp/tmp_jdt3a1w.jl:32\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jdt3a1w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jdt3a1w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_jdt3a1w.jl:33\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jdt3a1w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jdt3a1w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_jdt3a1w.jl:34\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jdt3a1w.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jdt3a1w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_jdt3a1w.jl:35\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num_abs = abs(num)\n   \
    \ while num_abs != 0\n        last_digit = num_abs % 10\n        if last_digit\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num_abs = num_abs - last_digit\n        num_abs = num_abs\
    \ / 10\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps4xcwezn.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmps4xcwezn.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4xcwezn.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4xcwezn.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_even = 0\n    count_odd = 0\n    str_num = repr(num)\n  \
    \  for i = 1:length(str_num)\n        if parse(Int64, str_num[i]) % 2 == 0\n \
    \           count_even += 1\n        else\n            count_odd += 1\n      \
    \  end\n    end\n    return count_even, count_odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpus0sbjvf.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpus0sbjvf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpus0sbjvf.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpus0sbjvf.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpus0sbjvf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpus0sbjvf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpus0sbjvf.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpus0sbjvf.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpus0sbjvf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpus0sbjvf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpus0sbjvf.jl:14\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpus0sbjvf.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # initialize even and odd counters\n    even_counter = 0\n    odd_counter\
    \ = 0\n    \n    #check if num is negative\n    if num < 0\n        num = -num\n\
    \    end\n    \n    # iterate through the digits of num\n    while num > 0\n \
    \       digit = num % 10\n        if digit % 2 == 0\n            even_counter\
    \ += 1\n        else\n            odd_counter += 1\n        end\n        num =\
    \ num // 10\n    end\n    \n    return (even_counter, odd_counter)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprg1d_d00.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmprg1d_d00.jl:37\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmprg1d_d00.jl:21\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprg1d_d00.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprg1d_d00.jl:36\ntest set:\
    \ Error During Test at /tmp/tmprg1d_d00.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmprg1d_d00.jl:21\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprg1d_d00.jl:38 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprg1d_d00.jl:36\ntest set:\
    \ Error During Test at /tmp/tmprg1d_d00.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main"
  timestamp: 1660014607
- exit_code: -1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if i %\
    \ 2 == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\n \neven_odd_count(-12)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: no method matching rem(::Char, ::Int64)\n\
    Closest candidates are:\n  rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n  rem(::Any, ::Any, !Matched::RoundingMode{:Down})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n  rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n  ...\nStacktrace:\n [1]\
    \ even_odd_count(num::Int64)\n   @ Main /tmp/"
  stdout: ''
  timestamp: 1660014608
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return (ceil(Int64,length(filter(i->(i%2==0),(digits(abs(num)))))/2),ceil(Int64,length(filter(i->(i%2!=0),(digits(abs(num)))))/2))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbnkg2jdm.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpbnkg2jdm.jl:19\n  Expression: candidate(3452)\
    \ == (2, 2)\n   Evaluated: (1, 1) == (2, 2)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbnkg2jdm.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbnkg2jdm.jl:16\ntest set: Test Failed at /tmp/tmpbnkg2jdm.jl:20\n\
    \  Expression: candidate(346211) == (3, 3)\n   Evaluated: (2, 2) == (3, 3)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnkg2jdm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnkg2jdm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbnkg2jdm.jl:21\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (2, 2) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnkg2jdm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnkg2jdm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbnkg2jdm.jl:23\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (1, 2) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnkg2jdm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnkg2jdm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"\n    Given an integer. return a tuple that has the number\
    \ of even and odd digits respectively.\n    \"\"\"\n    str_num = string(num)\n\
    \    even = 0\n    odd = 0\n    for i in str_num\n        if !(i == \"-\" || i\
    \ == \"+\")\n            i = parse(Int64, i)\n            if i%2 == 0\n      \
    \          even += 1\n            else\n                odd += 1\n           \
    \ end\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpelii7ctu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpelii7ctu.jl:34\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpelii7ctu.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpelii7ctu.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpelii7ctu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpelii7ctu.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpelii7ctu.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpelii7ctu.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpelii7ctu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpelii7ctu.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpelii7ctu.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpelii7ctu.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:length(string(num))\n\
    \        if parse(Int64, string(num)[i]) % 2 == 0\n            even_count += 1\n\
    \        else\n            odd_count += 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2ffrpbs8.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp2ffrpbs8.jl:27\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp2ffrpbs8.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2ffrpbs8.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2ffrpbs8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2ffrpbs8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp2ffrpbs8.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2ffrpbs8.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2ffrpbs8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2ffrpbs8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmp2ffrpbs8.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2ffrpbs8.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp"
  timestamp: 1660014607
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014604
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for digit in digits(num)\n  \
    \      if digit % 2 == 0\n            even_count += 1\n        else\n        \
    \    odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014595
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    ############\n    # Your code here \n    ############\n    even\
    \ = odd = 0\n    if num < 0\n        num = -num\n    end\n    while num > 0\n\
    \        digit = num % 10\n        if digit % 2 == 0\n            even += 1\n\
    \        else\n            odd += 1\n        end\n        num = num // 10\n  \
    \  end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0x7apgi4.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp0x7apgi4.jl:33\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  OverflowError: 1000000000000000000 *\
    \ 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0x7apgi4.jl:18\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0x7apgi4.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0x7apgi4.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp0x7apgi4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main /tmp/tmp0x7apgi4.jl:18\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0x7apgi4.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0x7apgi4.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp0x7apgi4.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] even_odd_count(num::Int64)\n     @ Main"
  timestamp: 1660014608
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    abs_num = abs(num)\n    while abs_num > 0\n\
    \        if (abs_num % 10) % 2 == 0\n            even += 1\n        else\n   \
    \         odd += 1\n        end\n        abs_num = div(abs_num, 10)\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu3vl37qj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpu3vl37qj.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu3vl37qj.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu3vl37qj.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return (sum([abs(Int64(char(d))) % 2 == 0 for d in string(num)]),\n\
    \            sum([abs(Int64(char(d))) % 2 == 1 for d in string(num)]))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptso3lmdo.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptso3lmdo.jl:18\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(d::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] even_odd_count(num::Int64)\n    \
    \ @ Main /tmp/tmptso3lmdo.jl:10\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptso3lmdo.jl:18 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptso3lmdo.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptso3lmdo.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(d::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] even_odd_count(num::Int64)\n    \
    \ @ Main /tmp/tmptso3lmdo.jl:10\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptso3lmdo.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptso3lmdo.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptso3lmdo.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(d::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#3\"})\n     @ Base ./array.jl:724\n   [4] even_odd_count(num::Int64)\n    \
    \ @ Main /tmp/tmptso3lmdo.jl:10\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n    "
  timestamp: 1660014607
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    if num < 0\n \
    \       num = -num\n    end\n    even_cnt = 0\n    odd_cnt = 0\n    for i = num\n\
    \        if i % 2 == 0\n            even_cnt += 1\n        else\n            odd_cnt\
    \ += 1\n        end\n    end\n    return (even_cnt, odd_cnt)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9ee9r2nv.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp9ee9r2nv.jl:33\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9ee9r2nv.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9ee9r2nv.jl:31\ntest set: Test Failed at /tmp/tmp9ee9r2nv.jl:34\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ee9r2nv.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ee9r2nv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9ee9r2nv.jl:35\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ee9r2nv.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ee9r2nv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9ee9r2nv.jl:36\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ee9r2nv.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ee9r2nv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9ee9r2nv.jl:38\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd = 0\n    even = 0\n    for i in num\n        if(i % 2 == 0)\n\
    \            even = even + 1\n        else\n            odd = odd + 1\n      \
    \  end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpumdf6a51.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpumdf6a51.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpumdf6a51.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpumdf6a51.jl:25\ntest set: Test Failed at /tmp/tmpumdf6a51.jl:28\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpumdf6a51.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpumdf6a51.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpumdf6a51.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpumdf6a51.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpumdf6a51.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpumdf6a51.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpumdf6a51.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpumdf6a51.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpumdf6a51.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expa"
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_digits = 0\n    even_digits = 0\n    if num < 0\n        num\
    \ = -num\n    end\n    while num > 0\n        digit = num % 10\n        if (digit\
    \ % 2) == 0\n            even_digits += 1\n        else\n            odd_digits\
    \ += 1\n        end\n        num = num / 10\n    end\n    return even_digits,\
    \ odd_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5if7bivx.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp5if7bivx.jl:31\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5if7bivx.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5if7bivx.jl:30\ntest set: Test Failed at /tmp/tmp5if7bivx.jl:32\n\
    \  Expression: candidate(-78) == (1, 1)\n   Evaluated: (1, 325) == (1, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5if7bivx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5if7bivx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5if7bivx.jl:33\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5if7bivx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5if7bivx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5if7bivx.jl:34\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5if7bivx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5if7bivx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5if7bivx.jl:35\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1660014606
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i%2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n      \
    \  \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd = 0\n    even = 0\n    while num != 0\n        if mod(num,\
    \ 2) == 0\n            even += 1\n        else\n            odd += 1\n       \
    \ end\n        num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9war0mhs.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp9war0mhs.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9war0mhs.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9war0mhs.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014607
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (even_count, odd_count) = (0, 0)\n    for digit in digits(num)\n\
    \        if (isodd(digit))\n            odd_count += 1\n        else\n       \
    \     even_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014605
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_counter = 0\n    odd_counter = 0\n    for i in digits(num)\n\
    \        if i % 2 == 0\n            even_counter += 1\n        else\n        \
    \    odd_counter += 1\n        end\n    end\n    return (even_counter, odd_counter)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014605
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        num, rem = divrem(num,\
    \ 10)\n        rem == 0 ? even += 1 : odd += 1\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp55yxg6th.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp55yxg6th.jl:24\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 2) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp55yxg6th.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp55yxg6th.jl:22\ntest set: Test Failed at /tmp/tmp55yxg6th.jl:25\n\
    \  Expression: candidate(3452) == (2, 2)\n   Evaluated: (0, 4) == (2, 2)\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55yxg6th.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55yxg6th.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp55yxg6th.jl:26\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 6) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55yxg6th.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55yxg6th.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp55yxg6th.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 6) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55yxg6th.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55yxg6th.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp55yxg6th.jl:28\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansio"
  timestamp: 1660014607
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64, odd::Int64 = 0, 0\n    while num > 0\n        if mod(num,\
    \ 2) == 0\n            even += 1\n        else\n            odd += 1\n       \
    \ end\n        num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp45cphcs6.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp45cphcs6.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp45cphcs6.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp45cphcs6.jl:25\ntest set: Test Failed at /tmp/tmp45cphcs6.jl:30\n\
    \  Expression: candidate(-345821) == (3, 3)\n   Evaluated: (0, 0) == (3, 3)\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45cphcs6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45cphcs6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45cphcs6.jl:31\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45cphcs6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45cphcs6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45cphcs6.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45cphcs6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45cphcs6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45cphcs6.jl:33\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  timestamp: 1660014607
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014589
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    num = abs(num)\n    while num > 0\n\
    \        if num % 2 == 0\n            even += 1\n        else\n            odd\
    \ += 1\n        end\n        num = floor(num/10)\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg33msp38.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpg33msp38.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg33msp38.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg33msp38.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014607
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    while num != 0\n        if num\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = div(num, 10)\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5u8nqpes.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp5u8nqpes.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5u8nqpes.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5u8nqpes.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014607
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014594
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014589
- exit_code: 0
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = odd = 0\n    for n in digits(num)\n        if n % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660014606
- exit_code: 1
  program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n   \
    \ (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    n = num\n    while n != 0\n        if\
    \ n % 2 == 0\n            even += 1\n        else\n            odd += 1\n    \
    \    end\n        n = n \xF7 10\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu2l0yvor.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpu2l0yvor.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu2l0yvor.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu2l0yvor.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660014607

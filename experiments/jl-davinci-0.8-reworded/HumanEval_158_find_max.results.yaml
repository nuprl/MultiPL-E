name: HumanEval_158_find_max
language: jl
results:
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    # YOUR CODE HERE\n    max_uniqs = 0\n    max_uniq_word = \"\"\n    for\
    \ word in words\n        uniqs = length(unique(word))\n        if uniqs > max_uniqs\n\
    \            max_uniqs = uniqs\n            max_uniq_word = word\n        end\n\
    \    end\n    return max_uniq_word\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\"\
    )\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"\
    aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"\
    ]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"\
    ]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"])\
    \ == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"\
    ]) == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3emgxvbi.jl:32\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3emgxvbi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3emgxvbi.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3emgxvbi.jl:35\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3emgxvbi.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3emgxvbi.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3emgxvbi.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    #initialize max_word with the first word\n    max_word = words[1] \n \
    \   # find the maximum word in the vector of words\n    for i in 2:length(words)\n\
    \        if unique_chars(words[i]) > unique_chars(max_word)\n            max_word\
    \ = words[i]\n        end\n    end\n    return max_word\nend\n    \n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"name\"\
    , \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\",\
    \ \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprtnlsr5r.jl:31\n  Test threw exception\n\
    \  Expression: candidate([\"name\", \"of\", \"string\"]) == \"string\"\n  UndefVarError:\
    \ unique_chars not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n\
    \     @ Main /tmp/tmprtnlsr5r.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprtnlsr5r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprtnlsr5r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprtnlsr5r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([\"name\", \"enam\", \"game\"]) == \"enam\"\n  UndefVarError: unique_chars\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmprtnlsr5r.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprtnlsr5r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprtnlsr5r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprtnlsr5r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\n  UndefVarError: unique_chars\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmprtnlsr5r.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprtnlsr5r.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprtnlsr5r.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprtnlsr5r.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([\"abc\", \"cba\"]) == \"abc\"\n  UndefVarError: unique_chars not\
    \ defined\n  Stacktrace:\n   [1] find_max(words::Vector{St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprtnlsr5r.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    word = \"\"\n    for i in 1:length(words)\n        if length(unique(words[i]))\
    \ > length(unique(word))\n            word = words[i]\n        end\n    end\n\
    \    word\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg6bsuloj.jl:28\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6bsuloj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6bsuloj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpg6bsuloj.jl:31\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6bsuloj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6bsuloj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6bsuloj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    # this is a vector of uniq characters in each word in vector\n    uniq_chars\
    \ = [Set(collect(word)) for word in words]\n    # this is a vector of max uniq\
    \ char for each word\n    max_uniq = [length(uniq_chars[i]) for i in 1:length(uniq_chars)]\n\
    \    # find index of word with max number of uniq characters\n    max_index =\
    \ findall(max_uniq .== maximum(max_uniq))\n    # if more than one index, return\
    \ first of them\n    if length(max_index) == 1\n        return words[max_index[1]]\n\
    \    else\n        # find index of word in lexicographical order\n        # sort\
    \ words and calculate index of first word in sorted list\n        sorted_index\
    \ = findall(sort(words) .== words[max_index[1]])\n        return words[sorted_index[1]]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy2tv7x44.jl:36\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"game\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tv7x44.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tv7x44.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy2tv7x44.jl:39\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"of\" == \"\
    footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tv7x44.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tv7x44.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy2tv7x44.jl:40\n  Expression: candidate([\"we\", \"are\",\
    \ \"gonna\", \"rock\"]) == \"gonna\"\n   Evaluated: \"are\" == \"gonna\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tv7x44.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tv7x44.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy2tv7x44.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max = 0\n    index = 1\n    for i in 1:length(words)\n        if length(unique(words[i]))\
    \ > max\n            max = length(unique(words[i]))\n            index = i\n \
    \       end\n    end\n    return words[index]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) ==\
    \ \"string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\
    \t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"\
    abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\"\
    , \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\"\
    , \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"\
    a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"this\", \"is\"\
    , \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"\
    play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8c6_ab6o.jl:30\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8c6_ab6o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8c6_ab6o.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp8c6_ab6o.jl:33\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8c6_ab6o.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8c6_ab6o.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8c6_ab6o.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max = 0\n    for word in words\n        if length(unique(word)) > max\n\
    \            max = length(unique(word))\n            winner = word\n        end\n\
    \    end\n    return winner\nend\nfind_max([\"name\", \"of\", \"string\"])\nfind_max([\"\
    name\", \"enam\", \"game\"])\nfind_max([\"aaaaaaa\", \"bb\", \"cc\"])\nusing Test\n\
    \n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"name\", \"of\"\
    , \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"\
    ]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\
    )\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\"\
    , \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: winner not defined\nStacktrace:\n [1]\
    \ find_max(words::Vector{String})\n   @ Main /tmp/tmp0l0_hfqy.jl:21\n [2] top-level\
    \ scope\n   @ /tmp/tmp0l0_hfqy.jl:23\nin expression starting at /tmp/tmp0l0_hfqy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_count = count_unique(words[1])\n    max_word = words[1]\n    for i\
    \ = 2:length(words)\n        if count_unique(words[i]) > max_count\n         \
    \   max_count = count_unique(words[i])\n            max_word = words[i]\n    \
    \    end\n    end\n    return max_word\nend\nusing Test\n\n@testset begin\n\n\
    candidate = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) == \"\
    string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\t\
    @test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"\
    abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\"\
    , \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\"\
    , \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"\
    a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"this\", \"is\"\
    , \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"\
    play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfz72tksx.jl:29\n  Test threw exception\n\
    \  Expression: candidate([\"name\", \"of\", \"string\"]) == \"string\"\n  UndefVarError:\
    \ count_unique not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n\
    \     @ Main /tmp/tmpfz72tksx.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfz72tksx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfz72tksx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpfz72tksx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([\"name\", \"enam\", \"game\"]) == \"enam\"\n  UndefVarError: count_unique\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmpfz72tksx.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfz72tksx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfz72tksx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpfz72tksx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\n  UndefVarError: count_unique\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmpfz72tksx.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfz72tksx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfz72tksx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpfz72tksx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([\"abc\", \"cba\"]) == \"abc\"\n  UndefVarError: count_unique not\
    \ defined\n  Stacktrace:\n   [1] find_max(words::Vector{St"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfz72tksx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    maxlen = 0\n    maxword = \"\"\n    for word in words\n        if length(unique(word))\
    \ > maxlen\n            maxlen = length(unique(word))\n            maxword = word\n\
    \        end\n    end\n    return maxword\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) ==\
    \ \"string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\
    \t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"\
    abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\"\
    , \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\"\
    , \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"\
    a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"this\", \"is\"\
    , \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"\
    play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe6f8fbst.jl:30\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6f8fbst.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6f8fbst.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe6f8fbst.jl:33\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6f8fbst.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6f8fbst.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6f8fbst.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_len = length(words[1])\n    max_word = words[1]\n    for i = 2:length(words)\n\
    \        if length(words[i]) > max_len\n            max_len = length(words[i])\n\
    \            max_word = words[i]\n        end\n    end\n    return max_word\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl1yngs5a.jl:30\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1yngs5a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1yngs5a.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1yngs5a.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    # initialising variables\n    max_unique = 0\n    max_unique_word = \"\
    \"\n    # determining max unique chars\n    for word in words\n        unique_char\
    \ = length(unique(word))\n        if unique_char > max_unique\n            max_unique\
    \ = unique_char\n            max_unique_word = word\n        end\n    end\n  \
    \  return max_unique_word\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\
    \t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"\
    bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\"\
    )\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) ==\
    \ \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"]) ==\
    \ \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"])\
    \ == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzavyy2gl.jl:33\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzavyy2gl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzavyy2gl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzavyy2gl.jl:36\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzavyy2gl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzavyy2gl.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzavyy2gl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    # 3\n    for i = length(words):-1:1 \n        for j = 1:i-1 \n       \
    \     if length(words[j]) < length(words[j+1]) \n                words[j], words[j+1]\
    \ = words[j+1], words[j] \n            end \n        end \n    end \n    # 4\n\
    \    for i = 1:length(words) \n        k = 1 \n        while k <= length(words[i])\
    \ \n            j = 1 \n            while j <= length(words[i]) \n           \
    \     if j > k && words[i][k] == words[i][j] \n                    words[i] =\
    \ replace(words[i], j, \"\") \n                end \n                j += 1 \n\
    \            end \n            k += 1 \n        end \n    end \n    # 5\n    res\
    \ = words[1] \n    # 6\n    for i = 2:length(words) \n        if length(words[i])\
    \ == length(res) \n            if words[i] < res \n                res = words[i]\
    \ \n            end \n        elseif length(words[i]) > length(res) \n       \
    \     res = words[i] \n        end \n    end \n    return res \nend \nusing Test\n\
    \n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"name\", \"of\"\
    , \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"\
    ]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\
    )\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\"\
    , \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkh7o0r71.jl:57\\n  Test threw\
    \ exception\\n  Expression: candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\
    \\n  MethodError: no method matching replace(::String, ::Int64, ::String)\\n \
    \ Closest candidates are:\\n    replace(!Matched::Union{Function, Type}, ::Any;\
    \ count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\n    replace(::String,\
    \ !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] find_max(words::Vector{String})\\n     @ Main\
    \ /tmp/tmpkh7o0r71.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkh7o0r71.jl:57 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkh7o0r71.jl:54\\ntest set:\
    \ Error During Test at /tmp/tmpkh7o0r71.jl:59\\n  Test threw exception\\n  Expression:\
    \ candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\"\
    \\n  MethodError: no method matching replace(::String, ::Int64, ::String)\\n \
    \ Closest candidates are:\\n    replace(!Matched::Union{Function, Type}, ::Any;\
    \ count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\n    replace(::String,\
    \ !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] find_max(words::Vector{String})\\n     @ Main\
    \ /tmp/tmpkh7o0r71.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkh7o0r71.jl:59 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    s = sort(words, by=length, rev=true)\n    for i in eachindex(s)\n    \
    \    if (length(unique(s[i])) == length(s[i]))\n            return s[i]\n    \
    \    end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\
    \t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"\
    bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\"\
    )\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) ==\
    \ \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"]) ==\
    \ \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"])\
    \ == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqoeyqyot.jl:27\\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\\n   Evaluated: \"name\" == \"enam\"\\\
    nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpqoeyqyot.jl:27 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpqoeyqyot.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_word = \"\"\n    max_count = 0\n    for word in words\n        count\
    \ = length(unique(word))\n        if count > max_count\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl0ctne00.jl:31\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl0ctne00.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl0ctne00.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl0ctne00.jl:34\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl0ctne00.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl0ctne00.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl0ctne00.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_uniq = []\n    max_val = 0\n    for word in words\n        if max_val\
    \ < length(unique(word))\n            max_val = length(unique(word))\n       \
    \     max_uniq = [word]\n        elseif max_val == length(unique(word))\n    \
    \        push!(max_uniq, word)\n        end\n    end\n    return sort(max_uniq)[1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_word = words[1]\n    max_word_length = length(unique(words[1]))\n\
    \    for i in 1:length(words)\n        current_length = length(unique(words[i]))\n\
    \        if current_length > max_word_length\n            max_word = words[i]\n\
    \            max_word_length = current_length\n        end\n    end\n    return\
    \ max_word\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\t@test(candidate([\"\
    name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"name\", \"enam\"\
    , \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) ==\
    \ \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"\
    play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"\
    we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\"\
    , \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"\
    this\", \"is\", \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) ==\
    \ \"b\")\n\t@test(candidate([\"play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppdplkt74.jl:31\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdplkt74.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdplkt74.jl:29\ntest set: Test\
    \ Failed at /tmp/tmppdplkt74.jl:34\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdplkt74.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdplkt74.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdplkt74.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    \"\"\"\n    >>> find_max([\"name\", \"of\", \"string\"])\n    \"string\"\
    \n    >>> find_max([\"name\", \"enam\", \"game\"])\n    \"enam\"\n    >>> find_max([\"\
    aaaaaaa\", \"bb\", \"cc\"])\n    \"aaaaaaa\"\n    \"\"\"\n    max_len = 0\n  \
    \  max_word = \"\"\n    for word in words\n        if word_len(word) > max_len\n\
    \            max_len = word_len(word)\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\"\
    )\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"\
    aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"\
    ]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"\
    ]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"])\
    \ == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"\
    ]) == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphdcx1gfj.jl:37\n  Test threw exception\n\
    \  Expression: candidate([\"name\", \"of\", \"string\"]) == \"string\"\n  UndefVarError:\
    \ word_len not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n\
    \     @ Main /tmp/tmphdcx1gfj.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdcx1gfj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdcx1gfj.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphdcx1gfj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([\"name\", \"enam\", \"game\"]) == \"enam\"\n  UndefVarError: word_len\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmphdcx1gfj.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdcx1gfj.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdcx1gfj.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphdcx1gfj.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\"\n  UndefVarError: word_len\
    \ not defined\n  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Main\
    \ /tmp/tmphdcx1gfj.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdcx1gfj.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdcx1gfj.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphdcx1gfj.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([\"abc\", \"cba\"]) == \"abc\"\n  UndefVarError: word_len not defined\n\
    \  Stacktrace:\n   [1] find_max(words::Vector{String})\n     @ Ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdcx1gfj.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    temp_dict = Dict{String, Int}()\n    for i in words\n        temp_dict[i]\
    \ = length(unique(i))\n    end\n    max_val = maximum(temp_dict)\n    max_string\
    \ = findall(value -> value == max_val, temp_dict)\n    min_string = findmin(max_string)\n\
    \    return min_string\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\
    \t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"\
    bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\"\
    )\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) ==\
    \ \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"]) ==\
    \ \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"])\
    \ == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzxaos45a.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([\"name\", \"of\", \"string\"]) == \"string\"\
    \\n  ArgumentError: reducing over an empty collection is not allowed\\n  Stacktrace:\\\
    n    [1] _empty_reduce_error()\\n      @ Base ./reduce.jl:301\\n    [2] mapreduce_empty(f::Function,\
    \ op::Base.BottomRF{typeof(Base._rf_findmin)}, T::Type)\\n      @ Base ./reduce.jl:344\\\
    n    [3] reduce_empty(op::Base.MappingRF{Base.var\"#262#263\"{typeof(identity)},\
    \ Base.BottomRF{typeof(Base._rf_findmin)}}, #unused#::Type{Pair{Int64, Union{}}})\\\
    n      @ Base ./reduce.jl:331\\n    [4] reduce_empty_iter\\n      @ ./reduce.jl:357\
    \ [inlined]\\n    [5] reduce_empty_iter\\n      @ ./reduce.jl:356 [inlined]\\\
    n    [6] foldl_impl(op::Base.MappingRF{Base.var\"#262#263\"{typeof(identity)},\
    \ Base.BottomRF{typeof(Base._rf_findmin)}}, nt::Base._InitialValue, itr::Base.Pairs{Int64,\
    \ Union{}, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Union{}}})\\n  \
    \    @ Base ./reduce.jl:49\\n    [7] mapfoldl_impl(f::Base.var\"#262#263\"{typeof(identity)},\
    \ op::typeof(Base._rf_findmin), nt::Base._InitialValue, itr::Base.Pairs{Int64,\
    \ Union{}, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Union{}}})\\n  \
    \    @ Base ./reduce.jl:44\\n    [8] mapfoldl(f::Function, op::Function, itr::Base.Pairs{Int64,\
    \ Union{}, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Union{}}}; init::Base._InitialValue)\\\
    n      @ Base ./reduce.jl:162\\n    [9] mapfoldl(f::Function, op::Function, itr::Base.Pairs{Int64,\
    \ Union{}, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Union{}}})\\n  \
    \    @ Base ./reduce.jl:162\\n   [10] findmin(f::typeof(identity), domain::Vector{Union{}})\\\
    n      @ Base ./reduce.jl:862\\n   [11] _findmin(a::Vector{Union{}}, #unused#::Colon)\\\
    n      @ Base ./reduce.jl:888\\n   [12] findmin(A::Vector{Union{}}; dims::Function)\\\
    n      @ Base ./reducedim.jl:1005\\n   [13] findmin(A::Vector{Union{}})\\n   \
    \   @ Base ./reducedim.jl:1005\\n   [14] find_max(words::Vector{String})\\n  \
    \    @ Main /tmp/tmpzxaos45a.jl:20\\n   [15] macro expansion\\n      @ /shared/"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_word = words[1]\n    max_len = 0\n    for w in words\n        if length(unique(w))\
    \ > max_len\n            max_word = w\n            max_len = length(unique(w))\n\
    \        end\n    end\n    return max_word\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) ==\
    \ \"string\")\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\
    \t@test(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"\
    abc\", \"cba\"]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\"\
    , \"of\", \"footbott\"]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\"\
    , \"gonna\", \"rock\"]) == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"\
    a\", \"mad\", \"nation\"]) == \"nation\")\n\t@test(candidate([\"this\", \"is\"\
    , \"a\", \"prrk\"]) == \"this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"\
    play\", \"play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxfe92n6i.jl:30\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfe92n6i.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfe92n6i.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxfe92n6i.jl:33\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfe92n6i.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfe92n6i.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxfe92n6i.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_idx = 1\n    max_uniq = length(unique(words[1]))\n    for i in 2:length(words)\n\
    \        if length(unique(words[i])) > max_uniq\n            max_idx = i\n   \
    \         max_uniq = length(unique(words[i]))\n        end\n    end\n    return\
    \ words[max_idx]\nend\nusing Test\n\n@testset begin\n\ncandidate = find_max;\n\
    \t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\")\n\t@test(candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"aaaaaaa\", \"\
    bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"]) == \"abc\"\
    )\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) ==\
    \ \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"]) ==\
    \ \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"])\
    \ == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78882doc.jl:30\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78882doc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78882doc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp78882doc.jl:33\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78882doc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78882doc.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78882doc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that accepts a vector of strings.\n    The vector\
    \ contains different words. Return the word with maximum number\n    of unique\
    \ characters. If multiple strings have maximum number of unique\n    characters,\
    \ return the one which comes first in lexicographical order.\n\n    >>> find_max([\"\
    name\", \"of\", \"string\"])\n    \"string\"\n    >>> find_max([\"name\", \"enam\"\
    , \"game\"])\n    \"enam\"\n    >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n\
    \    \"aaaaaaa\"\n    \"\"\"\nfunction find_max(words::Vector{String})::String\
    \ \n    max_length = 0\n    max_word = \"\"\n    for word in words\n        unique_count\
    \ = length(unique(collect(word)))\n        if unique_count > max_length\n    \
    \        max_length = unique_count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = find_max;\n\t@test(candidate([\"name\", \"of\", \"string\"]) == \"string\"\
    )\n\t@test(candidate([\"name\", \"enam\", \"game\"]) == \"enam\")\n\t@test(candidate([\"\
    aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\t@test(candidate([\"abc\", \"cba\"\
    ]) == \"abc\")\n\t@test(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"\
    ]) == \"footbott\")\n\t@test(candidate([\"we\", \"are\", \"gonna\", \"rock\"])\
    \ == \"gonna\")\n\t@test(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"\
    ]) == \"nation\")\n\t@test(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"\
    this\")\n\t@test(candidate([\"b\"]) == \"b\")\n\t@test(candidate([\"play\", \"\
    play\", \"play\"]) == \"play\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3okruwry.jl:31\n  Expression: candidate([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n   Evaluated: \"name\" == \"enam\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3okruwry.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3okruwry.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3okruwry.jl:34\n  Expression: candidate([\"play\", \"this\"\
    , \"game\", \"of\", \"footbott\"]) == \"footbott\"\n   Evaluated: \"play\" ==\
    \ \"footbott\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3okruwry.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3okruwry.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3okruwry.jl:27\n"
  exit_code: 1
  status: SyntaxError

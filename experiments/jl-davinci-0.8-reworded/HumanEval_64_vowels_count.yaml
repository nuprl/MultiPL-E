name: HumanEval_64_vowels_count
language: jl
prompt: "\"\"\"Write a function vowels_count which takes a string representing\n \
  \   a word as input and returns the number of vowels in the string.\n    Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but\
  \ only when it is at the end of the given word.\n\n    Example:\n    >>> vowels_count(\"\
  abcde\")\n    2\n    >>> vowels_count(\"ACEDY\")\n    3\n    \"\"\"\nfunction vowels_count(s::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = vowels_count;\n\t@test(candidate(\"\
  abcde\") == 2)\n\t@test(candidate(\"Alone\") == 3)\n\t@test(candidate(\"key\") ==\
  \ 2)\n\t@test(candidate(\"bye\") == 1)\n\t@test(candidate(\"keY\") == 2)\n\t@test(candidate(\"\
  bYe\") == 1)\n\t@test(candidate(\"ACEDY\") == 3)\nend\n"
completions: ["    s = lowercase(s)\n    n = 0\n    for c in s\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n            n += 1\n     \
    \   end\n    end\n    if (s[end] == 'y')\n        n += 1\n    end\n    return\
    \ n\nend", "    count = 0\n    for c in s\n        if c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u'\n            count += 1\n        end\n    end\n\
    \    if lastindex(s) == 'y'\n        count += 1\n    end\n    return count\nend",
  "    return length(matchall(r\"[aeiouy]\", s))\nend", "    i = 0\n    r = 0\n  \
    \  while i <= length(s)\n        if lowercase(s[i]) in [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n            r += 1\n        end\n        i += 1\n    end\n    return\
    \ r\nend", "    c = 0\n    for i in s\n        if i in [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n            c = c + 1\n        end\n    end\n    return c\nend",
  "    i::Int64 = 0\n    count::Int64 = 0\n    while i < length(s)\n        if s[i]\
    \ in 'aeiou'\n            count += 1\n        end\n        i += 1\n    end\n \
    \   return count\nend", "    const vowels = ['a', 'e', 'i', 'o', 'u']\n    counter\
    \ = 0\n    for i in s\n        for j in vowels\n            if i == j\n      \
    \          counter += 1\n            end\n        end\n    end\n    return counter\n\
    end", "    \"\"\"\n    Count the number of vowels in string s.\n    \"\"\"\n \
    \   n = 0\n    for c in s\n        if c in (\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"y\")\n            n += 1\n        end\n    end\n    return n\nend", "    if\
    \ isempty(s)\n        return 0\n    elseif s[end] == 'y'\n        if isvowel(s[end-1])\n\
    \            return 1 + vowels_count(s[1:end-1])\n        else\n            return\
    \ 1 + vowels_count(s[1:end-1])\n        end\n    elseif isvowel(s[end])\n    \
    \    return 1 + vowels_count(s[1:end-1])\n    else\n        return vowels_count(s[1:end-1])\n\
    \    end\nend", "    count = 0\n    for i = 1:lastindex(s)\n        if s[i] in\
    \ \"aeiouAEIOU\"\n            count += 1\n        end\n    end\n    if s[end]\
    \ in \"aeiouAEIOUyY\"\n        count += 1\n    end\n    return count\nend", " \
    \   vcount = 0\n    for i = 1:length(s)\n        if s[i] in \"aeiouyAEIOUY\"\n\
    \            vcount += 1\n        end\n    end\n    return vcount\nend", "   \
    \ sum = 0\n    for c in s\n        if c in [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n            sum += 1\n        end\n    end\n    return sum\nend", "    s=lowercase(s)\n\
    \    length(s)>1 && s[end]==\"y\" ? length(findall(isvowel,s))+1 : length(findall(isvowel,s))\n\
    end", "    n = 0\n    i = length(s)\n    while i >= 1\n        if s[i] in ['a',\
    \ 'e', 'i', 'o', 'u']\n            n += 1\n        end\n        i -= 1\n    end\n\
    \    return n\nend", "    vowels = ['a', 'e', 'i', 'o', 'u']\n    count = 0\n\
    \    for c in s\n        if c in vowels\n            count += 1\n        end\n\
    \    end\n    if s[end] == 'y'\n        count += 1\n    end\n    return count\n\
    end", "    count = 0\n    for i in 1:length(s)\n        if s[i] in ['a', 'e',\
    \ 'i', 'o', 'u']\n            count = count + 1\n        end\n    end\n    if\
    \ s[end] == 'y'\n        count = count + 1\n    end\n    return count\nend", " \
    \   ctr = 0\n    for i = 1:length(s)\n        if s[i] in ['a', 'e', 'i', 'o',\
    \ 'u']\n            ctr += 1\n        end\n    end\n    if s[end] == 'y'\n   \
    \     ctr += 1\n    end\n    return ctr\nend", "    count = 0\n    for c in s\n\
    \        if isvowel(c)\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    vc::Int64 = 0 # vowel count\n    for c in s\n        if c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y'\n       \
    \     vc += 1\n        end\n    end\n    return vc\nend", "    vowels_count(s::String)::Int64\
    \ = 0\n    for i in 1:length(s)\n        c = s[i]\n        if is_vowel(c)\n  \
    \          vowels_count(s::String)::Int64 += 1\n        end\n    end\n    vowels_count(s::String)::Int64\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_57_monotonic
language: jl
results:
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    v = l[1]\n    for i in 2:length(l)\n\
    \        if v > l[i]\n            v = l[i]\n        elseif v < l[i]\n        \
    \    v = l[i]\n        else\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo3tez7so.jl:29\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3tez7so.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3tez7so.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo3tez7so.jl:31\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3tez7so.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3tez7so.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo3tez7so.jl:32\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3tez7so.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3tez7so.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpo3tez7so.jl:34\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3tez7so.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3tez7so.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo3tez7so.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    is_monotonic = true\n    for i in 2:length(l)\n\
    \        if l[i] < l[i-1]\n            is_monotonic = false\n            break\n\
    \        end\n    end\n    return is_monotonic\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk33yrsll.jl:27\n  Expression: candidate([4,\
    \ 1, 0, -10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk33yrsll.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk33yrsll.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk33yrsll.jl:28\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk33yrsll.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk33yrsll.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk33yrsll.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    diff = l[2:end] - l[1:end-1]\n    if (all(diff .> 0) || all(diff\
    \ .< 0))\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp96gmr_mo.jl:29\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96gmr_mo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96gmr_mo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp96gmr_mo.jl:32\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96gmr_mo.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96gmr_mo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96gmr_mo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    diffs = l[2:end] - l[1:end-1]\n    return\
    \ (all(diffs .>= 0) || all(diffs .<= 0))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return l[1] < l[end] ? isincreasing(l)\
    \ : isdecreasing(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh20u3bl.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: isincreasing\
    \ not defined\n  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvh20u3bl.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh20u3bl.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh20u3bl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpvh20u3bl.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvh20u3bl.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh20u3bl.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh20u3bl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpvh20u3bl.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvh20u3bl.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh20u3bl.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh20u3bl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpvh20u3bl.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: isdecreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvh20u3bl.jl:10\n\
    \   [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh20u3bl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n  n = length(l)\n  for i in 1:n-1\n    if\
    \ l[i] != l[i+1]\n      break\n    end\n  end\n  if i == n-1\n    return true\n\
    \  end\n  diff = sign(l[i+1] - l[i])\n  for i in i+1:n-1\n    if sign(l[i+1] -\
    \ l[i]) != diff\n      return false\n    end\n  end\n  return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeoamtbzb.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: i not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpeoamtbzb.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeoamtbzb.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeoamtbzb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpeoamtbzb.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpeoamtbzb.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeoamtbzb.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeoamtbzb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpeoamtbzb.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpeoamtbzb.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeoamtbzb.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeoamtbzb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpeoamtbzb.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpeoamtbzb.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeoamtbzb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        error(\"Less\
    \ than 2 elements\")\n    end\n    dir = sign(l[2] - l[1])\n    for i in 2:length(l)-1\n\
    \        if sign(l[i+1] - l[i]) != dir\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe95yjmmk.jl:30\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe95yjmmk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe95yjmmk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe95yjmmk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    inc = l[1] < l[2]\n    for i in 2:length(l)-1\n\
    \        if inc\n            if l[i] > l[i+1]\n                return false\n\
    \            end\n        else\n            if l[i] < l[i+1]\n               \
    \ return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return isequal(sort(l), l) || isequal(sort(l,\
    \ rev=true), l)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if isincreasing(l) || isdecreasing(l)\n        return true\n   \
    \ else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk6q58xxs.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: isincreasing\
    \ not defined\n  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpk6q58xxs.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk6q58xxs.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk6q58xxs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk6q58xxs.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpk6q58xxs.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk6q58xxs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk6q58xxs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk6q58xxs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpk6q58xxs.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk6q58xxs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk6q58xxs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk6q58xxs.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpk6q58xxs.jl:13\n\
    \   [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk6q58xxs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    # NOTE: this is not the most efficient\
    \ way to do this, but it is short.\n    return all(l[i] <= l[i+1] for i in 1:length(l)-1)\
    \ ||\n           all(l[i] >= l[i+1] for i in 1:length(l)-1)\nend\nmonotonic([1,\
    \ 2, 4, 20])\nmonotonic([1, 20, 4, 10])\nmonotonic([4, 1, 0, -10])\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return isincreasing(l) || isdecreasing(l)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0pkrgm3u.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: isincreasing\
    \ not defined\n  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0pkrgm3u.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0pkrgm3u.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0pkrgm3u.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0pkrgm3u.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp0pkrgm3u.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0pkrgm3u.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0pkrgm3u.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0pkrgm3u.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp0pkrgm3u.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0pkrgm3u.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0pkrgm3u.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0pkrgm3u.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: isincreasing not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp0pkrgm3u.jl:10\n\
    \   [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0pkrgm3u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    t = Vector{Int64}()\n    for i in 1:length(l)-1\n\
    \        if l[i]<l[i+1]\n            append!(t,1)\n        elseif l[i]>l[i+1]\n\
    \            append!(t,-1)\n        else\n            append!(t,0)\n        end\n\
    \    end\n    if all(t.==1) || all(t.==-1) || all(t.==0)\n        return true\n\
    \    else\n        return false\n    end\nend\n    \n    \n\"\"\"Return false\
    \ if there are duplicate values in list.\n    >>> unique([1, 2, 4, 20])\n    true\n\
    \    >>> unique([1, 20, 4, 10, 20])\n    false\n    >>> unique([4, 1, 0, -10])\n\
    \    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpp1glqn7v.jl:28\nin expression starting at /tmp/tmpp1glqn7v.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n  if length(l) < 2 \n    return true\n \
    \ end\n  if l[2] > l[1] \n    return monotonic_inc(l)\n  else\n    return monotonic_dec(l)\n\
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6rlc_clq.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: monotonic_inc\
    \ not defined\n  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6rlc_clq.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rlc_clq.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rlc_clq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6rlc_clq.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: monotonic_inc not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp6rlc_clq.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rlc_clq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rlc_clq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6rlc_clq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: monotonic_inc not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp6rlc_clq.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rlc_clq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rlc_clq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6rlc_clq.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: monotonic_dec not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp6rlc_clq.jl:16\n\
    \   [2] macro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6rlc_clq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n  diff = Float64[]\n  for i = 1:length(l)-1\n\
    \    push!(diff,l[i+1]-l[i])\n  end\n  #if max(diff) < 0\n  #  return false\n\
    \  #else\n  #  return true\n  #end\n  return all(x -> x >= 0, diff) || all(x ->\
    \ x <= 0, diff)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1 \n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i = 2:length(l)-1\n            if l[i]\
    \ >= l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i = 2:length(l)-1\n            if l[i] <= l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp64ezeg_5.jl:37\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp64ezeg_5.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp64ezeg_5.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64ezeg_5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ <= l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] >= l[i-1]\n \
    \               return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2023wdaw.jl:37\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2023wdaw.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2023wdaw.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2023wdaw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    return (all(x -> x > last(l), l[1:end-1]) || all(x -> x < last(l),\
    \ l[1:end-1]))\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptuwvnamc.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 2, 5, 60]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuwvnamc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuwvnamc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmptuwvnamc.jl:27\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuwvnamc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuwvnamc.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptuwvnamc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    dif = diff(l)\n    return all(dif.<0)\
    \ || all(dif.>0)\nend\n\"\"\"Return true is vector elements are strictly monotonically\
    \ increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    false\n   \
    \ >>> monotonic([1, 20, 4, 10])\n    false\n    >>> monotonic([4, 1, 0, -10])\n\
    \    false\n    >>> monotonic([1, 2, 4, 5])\n    true\n    >>> monotonic([5, 4,\
    \ 3, 1])\n    true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpg4ftn3u0.jl:13\nin expression starting at /tmp/tmpg4ftn3u0.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true is vector elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    true\n    >>> monotonic([1, 20, 4, 10])\n\
    \    false\n    >>> monotonic([4, 1, 0, -10])\n    true\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return (l[1] < l[2]) && all(l[1:end-1]\
    \ .< l[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdwb8pbz.jl:20\n  Expression: candidate([4,\
    \ 1, 0, -10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdwb8pbz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdwb8pbz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgdwb8pbz.jl:21\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdwb8pbz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdwb8pbz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgdwb8pbz.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdwb8pbz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdwb8pbz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdwb8pbz.jl:14\n"
  exit_code: 1
  status: SyntaxError

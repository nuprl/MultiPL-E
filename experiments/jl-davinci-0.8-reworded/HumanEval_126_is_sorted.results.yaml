name: HumanEval_126_is_sorted
language: jl
results:
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    len = length(lst)\n\
    \    if len == 1\n        return true\n    end\n    prev = lst[1]\n    for i =\
    \ 2:len\n        if lst[i] <= prev\n            return false\n        end\n  \
    \      prev = lst[i]\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqtq2_pj3.jl:49\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == true\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] is_sorted(lst::Vector{Int64})\n     @\
    \ Main /tmp/tmpqtq2_pj3.jl:29\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqtq2_pj3.jl:49 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqtq2_pj3.jl:42\ntest set:\
    \ Test Failed at /tmp/tmpqtq2_pj3.jl:54\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtq2_pj3.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtq2_pj3.jl:42\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |   11     1      1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtq2_pj3.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1 \n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1cjvjt6t.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1cjvjt6t.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1cjvjt6t.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1cjvjt6t.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    return all(lst[i]\
    \ <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpee1xbkgg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee1xbkgg.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee1xbkgg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpee1xbkgg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee1xbkgg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee1xbkgg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpee1xbkgg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    @assert length(lst)\
    \ > 0\n    (lst[1] <= lst[end]) || (length(lst) == 1) ? is_sorted(lst[1:end-1])\
    \ : false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5wra4o2g.jl:33\n  Test threw exception\n\
    \  Expression: candidate([5]) == true\n  AssertionError: length(lst) > 0\n  Stacktrace:\n\
    \   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmp5wra4o2g.jl:25\n  \
    \ [2] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmp5wra4o2g.jl:26\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5wra4o2g.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wra4o2g.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5wra4o2g.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\n  AssertionError: length(lst) > 0\n  Stacktrace:\n\
    \   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmp5wra4o2g.jl:25\n  \
    \ [2] is_sorted(lst::Vector{Int64}) (repeats 5 times)\n     @ Main /tmp/tmp5wra4o2g.jl:26\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5wra4o2g.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wra4o2g.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5wra4o2g.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\n  AssertionError: length(lst) > 0\n  Stacktrace:\n\
    \   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmp5wra4o2g.jl:25\n  \
    \ [2] is_sorted(lst::Vector{Int64}) (repeats 5 times)\n     @ Main /tmp/tmp5wra4o2g.jl:26\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5wra4o2g.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wra4o2g.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wra4o2g.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    \n    # empty list\
    \ case\n    if isempty(lst)\n        return true\n    end\n    \n    for i = 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjmw4kjse.jl:54\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmw4kjse.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmw4kjse.jl:42\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmw4kjse.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4uay_ro5.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4uay_ro5.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4uay_ro5.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp4uay_ro5.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4uay_ro5.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4uay_ro5.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4uay_ro5.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    next = lst[1]\n    for i in 2:length(lst)\n\
    \        if next != lst[i]\n            if next < lst[i]\n                next\
    \ = lst[i]\n            else\n                return false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuqrbra4z.jl:53\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == true\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] is_sorted(lst::Vector{Int64})\n     @\
    \ Main /tmp/tmpuqrbra4z.jl:28\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpuqrbra4z.jl:53 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpuqrbra4z.jl:46\ntest set:\
    \ Test Failed at /tmp/tmpuqrbra4z.jl:58\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqrbra4z.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqrbra4z.jl:46\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |   11     1      1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuqrbra4z.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    \n    for i in\
    \ 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return false\n \
    \       end\n    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptkfql2oj.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkfql2oj.jl:1\n\
    in expression starting at /tmp/tmptkfql2oj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    ans = true\n  \
    \  if length(lst) < 2\n        return ans\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            ans = false\n            break\n  \
    \      end\n    end\n    return ans\nend\n \nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52k09at9.jl:52\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52k09at9.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52k09at9.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp52k09at9.jl:53\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52k09at9.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52k09at9.jl:42\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52k09at9.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ <= 1\n        return true\n    end\n    for i = 1:length(lst)-1\n        if\
    \ lst[i] == lst[i+1]\n            return false\n        elseif lst[i] > lst[i+1]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm6n9wufy.jl:53\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6n9wufy.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6n9wufy.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6n9wufy.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpas34kwzh.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpas34kwzh.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpas34kwzh.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpas34kwzh.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpas34kwzh.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpas34kwzh.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpas34kwzh.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    n = length(lst)\n\
    \    vals = Vector{Int64}(undef,n)\n    for i in 1:n\n        vals[i] = lst[i]\n\
    \    end\n    for i in 1:n-1\n        for j in i+1:n\n            if vals[i] ==\
    \ vals[j]\n                return false\n            end\n        end\n    end\n\
    \    for i in 1:n-1\n        if vals[i] > vals[i+1]\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplc83wlmu.jl:60\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplc83wlmu.jl:60 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplc83wlmu.jl:48\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplc83wlmu.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    n = length(lst)\n\
    \    if n == 1\n        return true\n    end\n    i = 1\n    while i < n\n   \
    \     j = i + 1\n        while j <= n\n            if lst[i] == lst[j]\n     \
    \           return false\n            end\n            j += 1\n        end\n \
    \       i += 1\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmr2ghame.jl:49\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmr2ghame.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmr2ghame.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpmr2ghame.jl:52\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmr2ghame.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmr2ghame.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpmr2ghame.jl:55\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmr2ghame.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmr2ghame.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpmr2ghame.jl:58\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmr2ghame.jl:58 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmr2ghame.jl:46\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmr2ghame.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp96i86_r6.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96i86_r6.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96i86_r6.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp96i86_r6.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96i86_r6.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96i86_r6.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96i86_r6.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    s = Set(lst)\n\
    \    return length(lst) == length(s) && lst == sort(lst)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxpuo0xkb.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpuo0xkb.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpuo0xkb.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpuo0xkb.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    x, y = size(lst)\n\
    \    if x > 1\n        return false\n    end\n    for i in 1:y\n        if i !=\
    \ y\n            if lst[i] > lst[i+1]\n                return false\n        \
    \    end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr1t781mo.jl:43\n  Test threw exception\n\
    \  Expression: candidate([5]) == true\n  BoundsError: attempt to access Tuple{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89 [inlined]\n\
    \   [2] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpr1t781mo.jl:25\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr1t781mo.jl:43 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr1t781mo.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpr1t781mo.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\n  BoundsError: attempt to access Tuple{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89 [inlined]\n\
    \   [2] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpr1t781mo.jl:25\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr1t781mo.jl:44 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr1t781mo.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpr1t781mo.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\n  BoundsError: attempt to access Tuple{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89 [inlined]\n\
    \   [2] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpr1t781mo.jl:25\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr1t781mo.jl:45 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr1t781mo.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpr1t781mo.jl:46\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1t781mo.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    \n    #if length\
    \ of vector is 1, return true\n    if length(lst) == 1\n        return true\n\
    \    end\n    \n    #for loop through vector\n    for i = 1:length(lst)-1\n  \
    \      \n        #if vector is not in ascending order, return false\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n        \n       \
    \ #if vector contains more than 1 duplicate of the same number, return false\n\
    \        if lst[i] == lst[i+1]\n            return false\n        end\n    end\n\
    \    \n    #if vector is in ascending order and there are no duplicates, return\
    \ true\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdq26chh7.jl:64\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdq26chh7.jl:64 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdq26chh7.jl:52\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdq26chh7.jl:50\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    lstnew = sort(lst)\n\
    \    if lstnew == lst\n        return true\n    else\n        return false\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz79z2ymq.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz79z2ymq.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz79z2ymq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpz79z2ymq.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz79z2ymq.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz79z2ymq.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz79z2ymq.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    return all(lst[i]\
    \ <= lst[i+1] for i = 1:length(lst)-1)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyjhu236o.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhu236o.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjhu236o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpyjhu236o.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhu236o.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjhu236o.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyjhu236o.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1 \n        return true\n    end\n    if length(lst) == 2\n        return\
    \ lst[1] <= lst[2]\n    end\n    sorted_lst = sort(lst)\n    for i = 1:length(lst)\n\
    \        if lst[i] != sorted_lst[i]\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfntse6w1.jl:53\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfntse6w1.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfntse6w1.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpfntse6w1.jl:54\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfntse6w1.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfntse6w1.jl:43\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfntse6w1.jl:41\n"
  exit_code: 1
  status: SyntaxError

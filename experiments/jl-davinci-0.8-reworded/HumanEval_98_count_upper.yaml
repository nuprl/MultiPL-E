name: HumanEval_98_count_upper
language: jl
prompt: "\"\"\"\n    Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n   \
  \ >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n  \
  \  \"\"\"\nfunction count_upper(s::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
  aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
  ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
  \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
completions: ["    n = length(s)\n    count = 0\n    for i in 1:2:n\n        if s[i]\
    \ \u2208 'AEIOU'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if isvowel(c) &&\
    \ isupper(c) && i % 2 == 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    return length(upper_vowels(s)[2:2:end])\nend", "  \
    \  n = length(s)\n    count = 0\n    for i in 1:2:n\n        if s[i] in [\"A\"\
    , \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    \n    vowel_count = 0", "    count = 0\n    for\
    \ i in eachindex(s)\n        c = s[i]\n        if isupper(c) && c in \"AEIOU\"\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if occursin(\"AEIOU\"\
    , c) && mod(i, 2) == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    n = length(s)\n    count = 0\n    for i in 1:2:n\n       \
    \ if isupper(s[i]) && isvowel(s[i])\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n@assert count_upper(\"aBCdEf\") == 1\n@assert count_upper(\"\
    abcdefg\") == 0\n@assert count_upper(\"dBBE\") == 0\n\"\"\"\nGiven a string s,\
    \ write a function that returns true if it is a palindrome and false otherwise.",
  "    \n    n_upper = 0\n    for (i, char) in enumerate(s)\n        if (char in \"\
    AEIOU\") && (i % 2 == 0)\n            n_upper += 1\n        end\n    end\n   \
    \ \n    return n_upper\nend", "    ctr = 0\n    for i in 1:2:length(s)\n     \
    \   if s[i] in \"AEIOU\"\n            ctr += 1\n        end\n    end\n    return\
    \ ctr\nend", "    count = 0\n    for i in 2:2:length(s)\n        if is_upper(s[i])\
    \ && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 1:2:length(s)\n        if isvowel(s[i]) && isupper(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 2:2:length(s)\n        if isvowel(s[i]) && isupper(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i,c) in enumerate(s)\n        if isupper(c) && isvowel(c) && !isodd(i)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i,char) in enumerate(s)\n        if i % 2 == 0\n            if\
    \ isupper(char)\n                count += 1\n            end\n        end\n  \
    \  end\n    return count\nend", "    uppercase_even_vowels = 0\n    for (index,\
    \ char) in enumerate(s)\n        if (index % 2 == 0) && (char in \"AEIOU\")\n\
    \            uppercase_even_vowels += 1\n        end\n    end\n    return uppercase_even_vowels\n\
    end", "    count = 0\n    s = upper(s)\n    for i = 1:2:length(s)\n        if\
    \ isvowel(s[i])\n            count += 1\n        end\n    end\n    return count\n\
    end\n ", "    count = 0\n    for i in 1:2:length(s)\n        if s[i] \u2208 [\"\
    A\", \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    vowel_counter = 0\n    vowel_set = Set(\"AEIOU\"\
    )\n    for i = 1:2:length(s)\n        if s[i] in vowel_set\n            vowel_counter\
    \ += 1\n        end\n    end\n    return vowel_counter\nend", "    vowels = \"\
    AEIOU\"\n    count = 0\n    for i in 1:2:length(s)\n        if in(s[i], vowels)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if c in [\"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n            if i % 2 == 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ sum(1 for letter in s[2:2:end] if letter in \"AEIOU\")\nend", "    num=0\n \
    \   for (i,v) in enumerate(s)\n        if(i%2==0)\n            if(v in [\"A\"\
    ,\"E\",\"I\",\"O\",\"U\"])\n                num+=1\n            end\n        end\n\
    \    end\n    return num\nend", "    return count(islower, s[2:2:end])\nend",
  "    total = 0\n    if !(occursin(\"A\", s) || occursin(\"E\", s) || occursin(\"\
    I\", s) || occursin(\"O\", s) || occursin(\"U\", s))\n        return 0\n    end\n\
    \    for i in 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"\
    U\"]\n            total += 1\n        end\n    end\n    return total\nend", " \
    \   vowels = \"AEIOU\"\n    uppercase_vowels = 0\n    # Loop over indices in the\
    \ string\n    for i in 1:length(s)\n        # Get the character at index i\n \
    \       c = s[i]\n        # If the character is a vowel,\n        if c in vowels\n\
    \            # Check if i is even and increment the count\n            # if so\n\
    \            if i % 2 == 0\n                uppercase_vowels += 1\n          \
    \  end\n        end\n    end\n    return uppercase_vowels\nend", "    total =\
    \ 0\n    for (i, c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n   \
    \         total += 1\n        end\n    end\n    return total\nend\nend", "   \
    \ count=0\n    for i=1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n\
    \            count+=1\n        end\n    end\n    return count\nend", "    vowels\
    \ = \"AEIOU\"\n    count = 0\n    for (i,c) in enumerate(s)\n        if in(c,vowels)\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    n = length(s)\n    count = 0\n    for i in 1:2:n\n        if s[i] in\
    \ \"AEIOU\"\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if c in \"AEIOU\"\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in eachindex(s)\n        if s[i] in \"AEIOU\"\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i = 1:2:length(s)\n        if uppercase(s[i]) in\
    \ \"AEIOU\"\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in 1:2:length(s)\n        if is_uppercase(s[i])\
    \ && is_vowel(s[i])\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for i in 1:2:length(s)\n        if in(s[i],\
    \ \"AEIOU\")\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i,j) in enumerate(s)\n        if s[i][isupper(s[i])]\
    \ && (i%2 == 0)\n            count += 1\n        end\n    end\n    return count\n\
    end\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"abcdefg\"))\nprintln(count_upper(\"\
    dBBE\"))", "    count = 0\n    for i in 1:2:length(s)\n        if (s[i] in \"\
    AEIOU\")\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for i in s\n        if i in [\"A\", \"E\", \"I\", \"O\", \"\
    U\"]\n            count += 1\n        end\n    end\n    return count\nend", " \
    \   count = 0\n    for (i, c) in enumerate(s)\n        if i % 2 == 0 && c in (\"\
    A\", \"E\", \"I\", \"O\", \"U\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    v = \"AEIOU\"\n    count = 0\n    for (i, c) in\
    \ enumerate(s)\n        if isupper(c) && in(c, v) && i % 2 == 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 1:2:endof(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    v::Int64 = 0\n    for c in s[2:2:end]\n\
    \        if c in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            v += 1\n   \
    \     end\n    end\n    return v\nend", "    count = 0\n    for c in s[2:2:end]\n\
    \        if isupper(c) && c in \"AEIOU\"\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    vowels = ['A', 'E', 'I', 'O', 'U']\n  \
    \  count = 0\n    for i in 2:2:length(s)\n        if s[i] in vowels\n        \
    \    count += 1\n        end\n    end\n    return count\nend", "    out = 0\n\
    \    for (i,c) in enumerate(s)\n        if isupper(c) && (i % 2 == 0)\n      \
    \      out += 1\n        end\n    end\n    return out\nend", "    \n    j=0\n\
    \    for i in 1:length(s)\n        if (i%2==0) & (islower(s[i])==false) & (s[i]\
    \ in [\"A\",\"E\",\"I\",\"O\",\"U\"])\n            j=j+1\n        end\n    end\n\
    \    return j\nend", "    counter = 0\n    for (i, c) in enumerate(s)\n      \
    \  if i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U']\n            counter += 1\n\
    \        end\n    end\n    return counter\nend", "    count = 0\n    i = 1\n \
    \   while i <= length(s)\n        vowel = (s[i] == \"A\" || s[i] == \"E\" || s[i]\
    \ == \"I\" || s[i] == \"O\" || s[i] == \"U\")\n        if i % 2 == 0 && vowel\n\
    \            count += 1\n        end\n        i += 1\n    end\n    return count\n\
    end", "    n = 0\n    for i = 1:2:length(s)\n        if s[i] in \"AEIOU\"\n  \
    \          n += 1\n        end\n    end\n    return n\nend", "    n = 0\n    for\
    \ (i,char) in enumerate(s)\n        if isupper(char) && (i%2 == 0)\n         \
    \   n += 1\n        end\n    end\n    return n\nend", "    counter = 0\n    for\
    \ i = 1:2:length(s)\n        if uppercase(s[i]) in ['A','E','I','O','U']\n   \
    \         counter += 1\n        end\n    end\n    return counter\nend", "    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if i % 2 == 0\n            if c\
    \ in \"AEIOU\"\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend", "    total = 0\n    for (i,letter) in enumerate(s)\n\
    \        if letter in [\"A\",\"E\",\"I\",\"O\",\"U\"]\n            if i % 2 ==\
    \ 0\n                total += 1\n            end\n        end\n    end\n    return\
    \ total\nend", "    s = collect(s)\n    count = 0\n    for (i, c) in enumerate(s)\n\
    \        if isupper(c) && i % 2 == 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    return sum(isupper(s[i]) && isvowel(s[i])\
    \ for i in 2:2:length(s))\nend", "    count = 0\n    for x in enumerate(s)\n \
    \       i,ch = x\n        if isupper(ch) && i % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    counter = 0\n    for (idx,\
    \ char) in enumerate(s)\n        if isupper(char) && idx % 2 == 0\n          \
    \  counter += 1\n        end\n    end\n    return counter\nend", "    \"\"\"\n\
    \    count = 0\n    for i = 2:2:length(s)\n        if is_upper(s[i])\n       \
    \     count += 1\n        end\n    end\n    return count\n    \"\"\"\n    return\
    \ length(collect(t for (i,t) in enumerate(s) if (i % 2 == 0) && is_upper(t)))\n\
    end", "    total = 0\n    for (i, c) in enumerate(s)\n        if c in [\"A\",\
    \ \"E\", \"I\", \"O\", \"U\"] && i % 2 == 0\n            total += 1\n        end\n\
    \    end\n    return total\nend\n\"\"\"\n    Given a string s, find the longest\
    \ substring that is a repeated substring.\n    \n    For example:\n    >>> repeated_substring(\"\
    ababab\")\n    \"ab\"\n    >>> repeated_substring(\"abaaaa\")\n    \"a\"\n   \
    \ >>> repeated_substring(\"ab\")\n    \"\"\n    \"\"\"", "    count = 0\n    for\
    \ (i,c) in enumerate(s)\n        if (i % 2 == 0) && (c in \"AEIOU\")\n       \
    \     count += 1\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for i in 1:2:length(s)\n        if isupper(s[i])\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    i = 1\n    count = 0\n   \
    \ while i <= length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ]\n            count += 1\n        end\n        i += 2\n    end\n    return count\n\
    end", "    uppers = [u'A', u'E', u'I', u'O', u'U']\n    count = 0\n    for i in\
    \ 1:2:2\n        if s[i] in uppers\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    sum = 0\n    for i in 1:2:length(s)\n        if\
    \ isvowel(s[i]) && isupper(s[i])\n            sum += 1\n        end\n    end\n\
    \    return sum\nend\ncount_upper(\"aBCdEf\")\ncount_upper(\"abcdefg\")\ncount_upper(\"\
    dBBE\")", "    count = 0\n    for i in 1:2:length(s)\n        if (s[i] in \"AEIOU\"\
    )\n            count += 1\n        end\n    end\n    return count\nend", "   \
    \ count = 0\n    for i in 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n    return count\n\
    end", "    counter = 0\n    for i in eachindex(s)\n        if s[i] in \"AEIOU\"\
    \ && iseven(i)\n            counter += 1\n        end\n    end\n    return counter\n\
    end", "    uppers = Set('AEIOU')\n    return sum(s[i] in uppers for i=2:2:length(s))\n\
    end\n@assert count_upper(\"aBCdEf\") == 1\n@assert count_upper(\"abcdefg\") ==\
    \ 0\n@assert count_upper(\"dBBE\") == 0\n@assert count_upper(\"aBCdEf\") == 1\n\
    \ ", "    return sum(s[2:2:end] .\u2265 'A')\nend", "    counter::Int64 = 0\n\
    \    for i in 1:2:length(s)\n        if s[i] \u2208 [\"A\", \"E\", \"I\", \"O\"\
    , \"U\"]\n            counter += 1\n        end\n    end\n    return counter\n\
    end", "  i = 0\n  c = 0\n  while i < length(s)\n    if isupper(s[i+1]) == true\
    \ && isvowel(s[i+1]) == true && i % 2 == 0\n      c += 1\n    end\n    i += 1\n\
    \  end\n  return c\nend", "    count = 0\n    for i in 2:2:length(s)\n       \
    \ if isupper(s[i])\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    upper_vowels = \"AEIOU\"\n    count = 0\n    for (i, char)\
    \ in enumerate(s)\n        if i % 2 == 0 && char in upper_vowels\n           \
    \ count += 1\n        end\n    end\n    return count\nend", "    upper = 0\n \
    \   for i in 1:2:length(s)\n        if s[i] in (\"A\", \"E\", \"I\", \"O\", \"\
    U\")\n            upper += 1\n        end\n    end\n    return upper\nend", " \
    \   count = 0\n    for (i,c) in enumerate(s)\n        if (i % 2 == 0) && (c in\
    \ \"AEIOU\")\n            count += 1\n        end\n    end\n    return count\n\
    end\n ", "    res = 0\n    for (i, c) in enumerate(s)\n        if isvowel(c) &&\
    \ isupper(c) && i % 2 == 0\n            res += 1\n        end\n    end\n    return\
    \ res\nend", "    count = 0\n    for c in s\n        if c in \"AEIOU\"\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    sum(isupper.(s[2:2:end]))\n\
    end", "    upper_vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    count = 0\n\
    \    for i = 1:2:length(s)\n        if s[i] in upper_vowels\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 1:2:length(s)\n        s_i = s[i]\n        if isletter(s_i) && s_i \u2208\
    \ [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n \
    \   end\n    return count\nend", "    count = 0\n    for i in 2:2:length(s)\n\
    \        if isuppercase(s[i]) && (s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    vowels\
    \ = \"AEIOU\"\n    count = 0\n    for i = 1:2:length(s)\n        if s[i] in vowels\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ reduce(xor, map(uppercase, s))\nend", "    count = 0\n    for i in 1:2:length(s)\n\
    \        if uppercase(s[i]) in \"AEIOU\"\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    c = 0\n    for (i,ch) in enumerate(s)\n\
    \        if isvowel(ch) && isupper(ch) && i % 2 == 0\n            c += 1\n   \
    \     end\n    end\n    return c\nend", "    count = 0\n    for i in 2:2:length(s)\n\
    \        if s[i] in \"AEIOU\"\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    \n    count = 0\n    for i in 1:2:length(s)\n  \
    \      if(s[i] in [\"A\",\"E\",\"I\",\"O\",\"U\"])\n            count += 1\n \
    \       end\n    end\n    return count\nend", "    counter = 0\n    for (i,v)\
    \ in enumerate(s)\n        if (v in [\"A\",\"E\",\"I\",\"O\",\"U\"]) && (i % 2\
    \ == 0)\n            counter += 1\n        end\n    end\n    return counter\n\
    end", "    count = 0\n    for i in s\n        if i in string(\"AEIOU\") && findfirst(i,\
    \ s) % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    counter = 0\n    for index in eachindex(s)\n        if index % 2 ==\
    \ 0\n            if s[index] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n        \
    \        counter += 1\n            end\n        end\n    end\n    return counter\n\
    end", "    count=0\n    for i=1:2:length(s)\n        if s[i] in [\"A\",\"E\",\"\
    I\",\"O\",\"U\"]\n            count+=1\n        end\n    end\n    return count\n\
    end", "    n = 0\n    for (i,c) in enumerate(s)\n        if (i % 2 == 0) && (c\
    \ in \"AEIOU\")\n            n += 1\n        end\n    end\n    return n\nend",
  "    total = 0\n    for i = 1:2:length(s)\n        if s[i] in \"AEIOU\"\n      \
    \      total += 1\n        end\n    end\n    return total\nend", "    #TODO: Implement\
    \ this function\n    #NOTE: can use findall\n    #NOTE: return count\nend\n  \
    \  \n    \n    \n    \n\"\"\"\n    Given a string s, replace all uppercase vowels\
    \ with upper case,\n    return the new string.\n    \n    For example:\n    >>>\
    \ replace_vowels(\"aBCdEf\")\n    \"aBbCdDf\"\n    >>> replace_vowels(\"abcdefg\"\
    )\n    \"abcdefg\"\n    >>> replace_vowels(\"dBBE\")\n    \"dBbB\"\n    \"\"\"",
  "    count = 0\n    for (i,char) in enumerate(s)\n        if i % 2 == 0\n      \
    \      if char in \"AEIOU\"\n                count += 1\n            end\n   \
    \     end\n    end\n    return count\nend", "    \n    # Count the number of vowels\
    \ that are capitalised in this string.\n    # Initialise the value to zero.\n\
    \    count = 0\n    \n    # Loop over each character in the string.\n    for c\
    \ in s\n        # If the character is a vowel and is capitalised, add one to the\
    \ count.\n        if (c in [\"A\", \"E\", \"I\", \"O\", \"U\"]) && (c == uppercase(c))\n\
    \            count += 1\n        end\n    end\n    \n    # Return the count.\n\
    \    return count\nend", "    return sum(i % 2 == 0 && isupper(s[i]) && i in \"\
    AEIOU\" for i in 1:length(s))\nend", "    n = 0\n    for (i,c) in enumerate(s)\n\
    \        if (i % 2 == 0) && (c in \"AEIOU\")\n            n += 1\n        end\n\
    \    end\n    return n\nend", "    count = 0\n    for i in 1:2:length(s)\n   \
    \     if isvowel(s[i]) && isupper(s[i])\n            count += 1\n        end\n\
    \    end\n    return count\nend\n\"\"\"\n    Given a string s, count the number\
    \ of uppercase vowels in odd indices.\n    \n    For example:\n    >>> count_upper(\"\
    aBCdEf\")\n    2\n    >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"\
    dBBE\")\n    2\n    \"\"\"", "    # get the strings in even indices\n    even_s\
    \ = s[1:2:end]\n    return count(isupper, even_s)\nend", "    num_upper = 0\n\
    \    for i in 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n     \
    \       num_upper += 1\n        end\n    end\n    return num_upper\nend", "  \
    \  return length(filter(x -> is_uppercase(x) in [true, false], s[2:2:end]))\n\
    end", "    count = 0\n    for i in eachindex(s)\n        if i % 2 == 0 && in(s[i],\"\
    AEIOU\")\n            count += 1\n        end\n    end\n    return count\nend",
  "    # Since we need to count the vowels, let's also place them into an array \n\
    \    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    # And we'll need to keep\
    \ track of the count\n    count = 0\n    # And then loop through all of the characters\
    \ in the inputted string\n    for (index, char) in enumerate(s)\n        # If\
    \ we have an even number \n        if iseven(index)\n            # And we have\
    \ a vowel\n            if char in vowels\n                # Add one to our count\n\
    \                count += 1\n            end\n        end\n    end\n    # And\
    \ then return the count\n    return count\nend\n    \n    \n@testset \"Test set\
    \ 1\" begin\n    @test count_upper(\"aBCdEf\") == 1\n    @test count_upper(\"\
    abcdefg\") == 0\n    @test count_upper(\"dBBE\") == 0\nend", "    n = 0 \n   \
    \ for i in eachindex(s)\n        if i % 2 == 0 \n            if s[i] in 'AEIOU'\n\
    \                n += 1\n            end\n        end\n    end\n    return n\n\
    end", "    count = 0\n    for i = 1:2:length(s)\n        if isupper(s[i])\n  \
    \          if isvowel(s[i])\n                count += 1\n            end\n   \
    \     end\n    end\n    return count\nend", "    count = 0\n    for (i, letter)\
    \ in enumerate(s)\n        if (lowercase(letter) in ['a', 'e', 'i', 'o', 'u'])\
    \ && (i % 2 == 0)\n            count += 1\n        end\n    end\n    return count\n\
    end", "  s_upper = upper(s)\n  count = 0\n  for i in 1:2:length(s)\n    if (s_upper[i]\
    \ == 'A' || s_upper[i] == 'E' || s_upper[i] == 'I' || s_upper[i] == 'O' || s_upper[i]\
    \ == 'U')\n      count += 1\n    end\n  end\n  return count\nend", "    count\
    \ = 0\n    for i = 1:2:length(s)\n        if s[i] \u2208 \"AEIOU\"\n         \
    \   count += 1\n        end\n    end\n    return count\nend", "    n = 0\n   \
    \ for i in 2:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n        \
    \    n += 1\n        end\n    end\n    return n\nend", "    i = 0\n    j = 0\n\
    \    while i < length(s)\n        if isupper(s[i]) == true && isvowel(s[i]) ==\
    \ true && i % 2 == 0\n            j += 1\n        end\n        i += 1\n    end\n\
    \    return j\nend", "    count = 0\n    for i in 1:2:length(s)\n        if uppercase(s[i])\
    \ in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0 \n    for i in 1:2:length(s)\n\
    \        c = s[i]\n        if is_in('AEIOU', c)\n            count += 1\n    \
    \    end\n    end\n    return count\nend\ncount_upper(\"aBCdEf\")", "    cnt =\
    \ 0\n    for i in 2:2:length(s)\n        c = s[i]\n        cnt += (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') ? 1 : 0\n    end\n    return cnt\n\
    end", "    counter = 0\n    for (i,char) in enumerate(s)\n        if isupper(char)\
    \ && isvowel(char) && i % 2 == 0\n            counter += 1\n        end\n    end\n\
    \    return counter\nend", "    n = 0\n    for (i, c) in enumerate(s)\n      \
    \  if is_upper(c) && (i % 2 == 0)\n            n += 1\n        end\n    end\n\
    \    return n\nend", "    count = 0\n    for (i,c) in enumerate(s)\n        if\
    \ (i % 2 == 0) & (c in \"AEIOU\")\n            count += 1\n        end\n    end\n\
    \    return count\nend\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"\
    abcdefg\"))\nprintln(count_upper(\"dBBE\"))", "    upper_indices = Array{Bool,1}(undef,length(s))\n\
    \    for i in 1:length(s)\n        upper_indices[i] = s[i] in ['A','E','I','O','U']\n\
    \    end\n    return sum(upper_indices[2:2:end])\nend", "    count = 0\n    for\
    \ (index,letter) in enumerate(s)\n        if letter in [\"A\",\"E\",\"I\",\"O\"\
    ,\"U\"] && index % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    c = 0 \n    for i in 1:2:length(s)\n        if s[i] in \"\
    AEIOU\"\n            c += 1\n        end\n    end\n    return c\nend\ncount_upper(\"\
    aBCdEf\")\ncount_upper(\"abcdefg\")\ncount_upper(\"dBBE\")", "    n = 0\n    for\
    \ i in 2:2:length(s)\n        if s[i] in (\"A\", \"E\", \"I\", \"O\", \"U\")\n\
    \            n += 1\n        end\n    end\n    return n\nend", "    count = 0\n\
    \    for i in 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    is_even(x)\
    \ = iseven(x)\n    is_upper(x) = isupper(x)\n    is_vowel(x) = x \u2208 \"AEIOU\"\
    \n    #only iterates through every other character\n    #x is the character and\
    \ i is the index\n    count = sum([is_upper(x) && is_vowel(x) && is_even(i) ?\
    \ 1 : 0 for (i,x) in enumerate(s)])\n    return count\nend", "    total = 0\n\
    \    for (i,char) in enumerate(s)\n        if \"AEIOU\" \u2208 char && i % 2 ==\
    \ 0\n            total += 1\n        end\n    end\n    return total\nend", " \
    \   count = 0\n    for i in 1:2:length(s)\n        if s[i] \u2208 [\"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    num_upper = 0\n    for (i,letter) in enumerate(s)\n      \
    \  if i % 2 == 0 && letter in \"AEIOU\"\n            num_upper += 1\n        end\n\
    \    end\n    return num_upper\nend\ncount_upper(\"aBCdEf\")\n ", "    total =\
    \ 0\n    for i in eachindex(s)\n        if (i % 2 == 0) && isvowel(s[i])\n   \
    \         total += 1\n        end\n    end\n    return total\nend", "    count\
    \ = 0\n    for i in 1:2:length(s)\n        if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') \n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count=0\n    for i in s\n        if i in\
    \ \"AEIOU\" && s.index(i)%2==0\n            count+=1\n        end\n    end\n \
    \   return count\nend\n    \n    \n    \n    ", "    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if i % 2 == 0 && in(c, ['A','E','I','O','U'])\n   \
    \         count += 1\n        end\n    end\n    return count\nend", "    vowel_count\
    \ = 0\n    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    for c in enumerate(s)\n\
    \        if iseven(c[1])\n            if c[2] in vowels\n                vowel_count\
    \ += 1\n            end\n        end\n    end\n    return vowel_count\nend", " \
    \   count = 0 \n    for i in 1:2:length(s) \n        if isupper(s[i]) && (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    evens =\
    \ s[2:2:end]\n    uppers = evens[ismatch(r\"[AEIOU]\", evens)]\n    return length(uppers)\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if c in (\"A\",\
    \ \"E\", \"I\", \"O\", \"U\") && (i + 1) % 2 == 0\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    upper_even = [c for (i, c) in\
    \ enumerate(s) if c in \"AEIOU\" && i % 2 == 0]\n    return length(upper_even)\n\
    end", "    #Your code here\n    return sum([s[i] in \"AEIOU\" ? 1 : 0 for i in\
    \ 2:2:length(s)])\nend", "    n = length(s)\n    count = 0\n    for i in 1:2:n\n\
    \        c = s[i]\n        if c in 'AEIOU'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    sum = 0\n    for i in 1:2:length(s)\n \
    \       if isuppercase(s[i])\n            sum += 1\n        end\n    end\n   \
    \ return sum\nend", "    sum(isupper.(s[2:2:end]))\nend", "    total = 0\n   \
    \ for i in 2:2:endof(s)\n        if isupper(s[i]) && in(s[i], \"AEIOU\")\n   \
    \         total += 1\n        end\n    end\n    return total\nend", "    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if i % 2 == 0 && occursin(c, \"\
    AEIOU\")\n            count += 1\n        end\n    end\n    return count\nend",
  "    uppercase_vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    counter = 0\n \
    \   for i in 2:2:length(s)\n        if s[i] in uppercase_vowels\n            counter\
    \ += 1\n        end\n    end\n    return counter\nend", "    count = 0\n    for\
    \ i = 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n ", "    vowels = \"aeiouAEIOU\"\
    \n    count = 0\n    for (i, c) in enumerate(s)\n        if c in vowels\n    \
    \        if i % 2 == 0\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend", "    # count=0, length=length(s)\n    count=0\n\
    \    length=length(s)\n    # for all letters in s i=1:length\n    for i=1:length\n\
    \        # if letter at index i is uppercase and index i is even\n        if isupper(s[i])\
    \ && i%2==0\n            # add 1 to count\n            count+=1\n        end\n\
    \    end\n    # return count\n    return count\nend", "    counter = 0 \n    for\
    \ i in eachindex(s)\n        if  i % 2 == 0 \n            if s[i] in ['A','E','I','O','U']\n\
    \                counter += 1\n            end\n        end\n    end\n    return\
    \ counter\nend", "    count = 0 \n    for i = 1:2:length(s)\n        if s[i] in\
    \ \"AEIOU\"\n            count += 1\n        end\n    end\n    return count\n\
    end", "    return count(uppercase,s[2:2:end])\nend", "    i::Int64 = 0\n    count::Int64\
    \ = 0\n    vowels::Set{Char} = Set{Char}(['A', 'E', 'I', 'O', 'U'])\n    while\
    \ i < length(s)\n        if i % 2 == 0\n            if s[i] in vowels\n      \
    \          count += 1\n            end\n        end\n        i += 1\n    end\n\
    \    return count\nend", "    return sum(!s[i] in \"aeiou\" && i%2==0 for i in\
    \ 1:length(s))\nend", "    count = 0\n    # your code here\n    return count\n\
    end", "    # Fill in the code here\n    i = 1\n    count = 0\n    while i <= length(s)\n\
    \        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            count +=\
    \ 1\n        end\n        i += 2\n    end\n    return count\nend", "    upper_indices\
    \ = 'AEIOU'\n    count = 0\n    for c in s\n        if (c in upper_indices) &&\
    \ s.index(c) % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    cnt = 0\n    for i in 1:2:length(s)\n        if s[i] in \"\
    AEIOU\"\n            cnt += 1\n        end\n    end\n    return cnt\nend", " \
    \   count = 0\n    if size(s,1) == 1\n        for i in 2:2:length(s)\n       \
    \     if isupper(s[i]) && member(s[i], ['A','E','I','O','U'])\n              \
    \  count += 1\n            end\n        end\n    else\n        for i in 2:2:size(s,1)\n\
    \            if isupper(s[i]) && member(s[i], ['A','E','I','O','U'])\n       \
    \         count += 1\n            end\n        end\n    end\n    return count\n\
    end", "    count = 0\n    n = length(s)\n    for i in 1:2:n\n        if (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    new_s =\
    \ [x for (i,x) in enumerate(s) if i % 2 == 0]\n    num_of_upper = 0\n    for x\
    \ in new_s\n        if isupper(x)\n            num_of_upper += 1\n        end\n\
    \    end\n    return num_of_upper\nend", "    uppers = [c in 'AEIOU' for c in\
    \ s]\n    evens = [i % 2 == 0 for i in 1:length(s)]\n    return sum(uppers .&\
    \ evens)\nend", "    count = 0\n    for (idx, c) in enumerate(s)\n        if c\
    \ in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            if idx % 2 == 0\n      \
    \          count += 1\n            end\n        end\n    end\n    return count\n\
    end\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"abcdefg\"))\nprintln(count_upper(\"\
    dBBE\"))", "    count = 0\n    for (i, char) in enumerate(s)\n        if char\
    \ in \"AEIOU\" && i % 2 == 0\n            count += 1\n        end\n    end\n \
    \   return count\nend", "    n = length(s)\n    count = 0\n    for i in 1:2:n\n\
    \        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0 \n    for i\
    \ in 2:2:endof(s)\n        c = s[i]\n        if c in ['A', 'E', 'I', 'O', 'U']\n\
    \            count += 1\n        end\n    end\n    return count\nend\nprintln(count_upper(\"\
    aBCdEf\"))\nprintln(count_upper(\"abcdefg\"))\nprintln(count_upper(\"dBBE\"))",
  "    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    count = 0\n    for i in 1:2:length(s)\n\
    \        if s[i] in vowels\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    # base case\n    if length(s) == 0\n        return\
    \ 0\n    end\n    \n    # recursive case\n    if iseven(1)\n        if isvowel(s[1])\
    \ && s[1] \u2208 [uppercase(i) for i in \"aeiou\"]\n            return 1 + count_upper(s[2:end])\n\
    \        else\n            return count_upper(s[2:end])\n        end\n    else\n\
    \        return count_upper(s[2:end])\n    end\nend", "    count = 0\n    for\
    \ i in 1:2:length(s)\n        if (s[i] in \"AEIOU\")\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    for (i, ch)\
    \ in enumerate(s)\n        if isupper(ch) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0 \n    for i\
    \ in 2:2:length(s)\n        if s[i] \u2208 [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ]\n            count += 1\n        end\n    end\n    return count\nend", "   \
    \ count = 0\n    for (i, c) in enumerate(s)\n        count += c in \"AEIOU\" &&\
    \ i % 2 == 0\n    end\n    return count\nend", "    cnt = 0\n    for (i,ch) in\
    \ enumerate(s)\n        if i % 2 == 0 && isupper(ch)\n            cnt += 1\n \
    \       end\n    end\n    return cnt\nend", "    len(filter(x -> x in \"AEIOU\"\
    \ && iseven(findfirst(y -> y == x, s)), s))\nend", "    upper_count = 0\n    for\
    \ (i, char) in enumerate(s)\n        if (i % 2 == 0) && in(\"AEIOU\", char)\n\
    \            upper_count += 1\n        end\n    end\n    return upper_count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if c in \"AEIOU\"\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in 1:2:length(s)\n        if isuppercase(s[i])\
    \ && (s[i] in \"AEIOU\")\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    return length(filter(x -> x in \"AEIOU\" && iseven(s.index(x)),\
    \ s))\nend\ncount_upper(\"dEEef\")", "    # Set a counter and number of total\
    \ vowels to zero\n    counter = 0\n    vowels = 0\n    # Set an array for looping\n\
    \    arr = [c for c in s]\n    # Loop through the array\n    for i in arr\n  \
    \      # If the letter is a vowel...\n        if i == \"a\" || i == \"e\" || i\
    \ == \"i\" || i == \"o\" || i == \"u\"\n            # Increment the vowel counter\n\
    \            vowels += 1\n            # If the vowel counter is even and the letter\
    \ is upper case...\n            if vowels % 2 == 0 && isupper(i)\n           \
    \     # Increment the counter\n                counter += 1\n            end\n\
    \        end\n    end\n    # Return the counter\n    return counter\nend", " \
    \   counter = 0\n    for i in 2:2:endof(s)\n        if s[i] in \"AEIOU\"\n   \
    \         counter += 1\n        end\n    end\n    return counter\nend", "    count\
    \ = 0\n    for i in eachindex(s)\n        if i % 2 == 0 && is_upper(s[i])\n  \
    \          count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ c in enumerate(s)\n        if c[2] \u2208 [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ] && c[1] % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    vowels = \"aeiouAEIOU\"\n    count = 0\n    for (i, c) in enumerate(s)\n\
    \        if c in vowels\n            if i % 2 == 0\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for (i, c) in enumerate(s)\n        if isvowel(c) && isupper(c) && (i % 2\
    \ == 0)\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for i in 2:2:length(s)\n        if s[i] in (\"A\", \"E\", \"\
    I\", \"O\", \"U\")\n            count += 1\n        end\n    end\n    return count\n\
    end", "    n_upper = 0\n    for (i,c) in enumerate(s)\n        if isvowel(c) &&\
    \ c != c.lower() && i % 2 == 0\n            n_upper += 1\n        end\n    end\n\
    \    return n_upper\nend\ncount_upper(\"aBCdEf\")\ncount_upper(\"abcdefg\")\n\
    count_upper(\"dBBE\")", "    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n  \
    \  count = 0\n    for i in 2:2:length(s)\n        if s[i] in vowels\n        \
    \    count += 1\n        end\n    end\n    return count\nend", "    uppers = 0\n\
    \    for (i,c) in enumerate(s)\n        if c in \"AEIOU\" && i % 2 == 0\n    \
    \        uppers += 1\n        end\n    end\n    return uppers\nend", "    count\
    \ = 0\n    for i in eachindex(s)\n        if (isupper(s[i]) && (i % 2) == 0)\n\
    \            count += 1\n        end\n    end\n    return count\nend\n# tests\n\
    @test count_upper(\"aBCdEf\") == 1\n@test count_upper(\"abcdefg\") == 0\n@test\
    \ count_upper(\"dBBE\") == 0\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n\
    \    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n    >>> count_upper(\"\
    abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n    \"\"\"", "    count\
    \ = 0 \n    for (i,ch) in enumerate(s)\n        if i % 2 == 0 \n            if\
    \ (ch in [\"A\",\"E\",\"I\",\"O\",\"U\"])\n                count += 1\n      \
    \      end\n        end\n    end\n    return count\nend\ncount_upper(\"aBCdEf\"\
    )\ncount_upper(\"abcdefg\")\ncount_upper(\"dBBE\")\n\"\"\"\n    For a given tree\
    \ with n nodes, create a vector of length n containing the numbers 1 to n in some\
    \ random order.\n    \n    For example:\n    >>> rand_vector_tree(4)\n    [2,1,4,3]\n\
    \    >>> rand_vector_tree(4)\n    [4,3,2,1]\n    >>> rand_vector_tree(4)\n   \
    \ [3,4,1,2]\n    \"\"\"", "    acc = 0\n    for (i,c) in enumerate(s)\n      \
    \  acc += c in \"AEIOU\" && i % 2 == 0\n    end\n    return acc\nend", "    c\
    \ = 0\n    for (i, l) in enumerate(s)\n        if (l in [\"A\", \"E\", \"I\",\
    \ \"O\", \"U\"]) && (i % 2 == 0)\n            c += 1\n        end\n    end\n \
    \   return c\nend", "  count = 0\n  for (i, letter) in enumerate(s)\n    if letter\
    \ in \"AEIOU\" && i % 2 == 0\n      count += 1\n    end\n  end\n  return count\n\
    end", "    return sum(Char.(s[2:2:end]) .\u2248 [\"A\", \"E\", \"I\", \"O\", \"\
    U\"])\nend", "    count = 0 \n    for i in 2:2:length(s)\n        if uppercase(s[i])\
    \ == s[i]\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    s = uppercase(s)\n    count = 0\n    for i in 2:2:length(s)\n     \
    \   if s[i] in 'AEIOU'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    evens = s[2:2:end]\n    return length(filter(x -> in(x, \"\
    AEIOU\"), evens))\nend", "    count = 0\n    for i in 2:2:length(s)\n        if\
    \ is_upper(s[i])\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if isupper(c) &&\
    \ i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (idx, character) in enumerate(s)\n        if (is_upper(character)\
    \ && is_vowel(character) && idx % 2 == 0)\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return length(collect(s[2:2:end])) - length(collect(s[2:2:end][s[2:2:end]\
    \ .== lowercase(s[2:2:end])]))\nend", "    c = count(s[2:2:end]) do i \n     \
    \   isuppercase(s[i]) \n    end\n    c += count(s[1:2:end]) do i \n        isuppercase(s[i])\
    \ \n    end\n    return c\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

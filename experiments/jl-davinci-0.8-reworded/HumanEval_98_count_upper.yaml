name: HumanEval_98_count_upper
language: jl
prompt: "\"\"\"\n    Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\")\n    1\n   \
  \ >>> count_upper(\"abcdefg\")\n    0\n    >>> count_upper(\"dBBE\")\n    0\n  \
  \  \"\"\"\nfunction count_upper(s::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
  aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
  ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
  \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
completions: ["    n = length(s)\n    count = 0\n    for i in 1:2:n\n        if s[i]\
    \ \u2208 'AEIOU'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if isvowel(c) &&\
    \ isupper(c) && i % 2 == 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    return length(upper_vowels(s)[2:2:end])\nend", "  \
    \  n = length(s)\n    count = 0\n    for i in 1:2:n\n        if s[i] in [\"A\"\
    , \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    \n    vowel_count = 0", "    count = 0\n    for\
    \ i in eachindex(s)\n        c = s[i]\n        if isupper(c) && c in \"AEIOU\"\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for (i, c) in enumerate(s)\n        if occursin(\"AEIOU\"\
    , c) && mod(i, 2) == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    n = length(s)\n    count = 0\n    for i in 1:2:n\n       \
    \ if isupper(s[i]) && isvowel(s[i])\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n@assert count_upper(\"aBCdEf\") == 1\n@assert count_upper(\"\
    abcdefg\") == 0\n@assert count_upper(\"dBBE\") == 0\n\"\"\"\nGiven a string s,\
    \ write a function that returns true if it is a palindrome and false otherwise.",
  "    \n    n_upper = 0\n    for (i, char) in enumerate(s)\n        if (char in \"\
    AEIOU\") && (i % 2 == 0)\n            n_upper += 1\n        end\n    end\n   \
    \ \n    return n_upper\nend", "    ctr = 0\n    for i in 1:2:length(s)\n     \
    \   if s[i] in \"AEIOU\"\n            ctr += 1\n        end\n    end\n    return\
    \ ctr\nend", "    count = 0\n    for i in 2:2:length(s)\n        if is_upper(s[i])\
    \ && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 1:2:length(s)\n        if isvowel(s[i]) && isupper(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 2:2:length(s)\n        if isvowel(s[i]) && isupper(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i,c) in enumerate(s)\n        if isupper(c) && isvowel(c) && !isodd(i)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i,char) in enumerate(s)\n        if i % 2 == 0\n            if\
    \ isupper(char)\n                count += 1\n            end\n        end\n  \
    \  end\n    return count\nend", "    uppercase_even_vowels = 0\n    for (index,\
    \ char) in enumerate(s)\n        if (index % 2 == 0) && (char in \"AEIOU\")\n\
    \            uppercase_even_vowels += 1\n        end\n    end\n    return uppercase_even_vowels\n\
    end", "    count = 0\n    s = upper(s)\n    for i = 1:2:length(s)\n        if\
    \ isvowel(s[i])\n            count += 1\n        end\n    end\n    return count\n\
    end\n ", "    count = 0\n    for i in 1:2:length(s)\n        if s[i] \u2208 [\"\
    A\", \"E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    vowel_counter = 0\n    vowel_set = Set(\"AEIOU\"\
    )\n    for i = 1:2:length(s)\n        if s[i] in vowel_set\n            vowel_counter\
    \ += 1\n        end\n    end\n    return vowel_counter\nend", "    vowels = \"\
    AEIOU\"\n    count = 0\n    for i in 1:2:length(s)\n        if in(s[i], vowels)\n\
    \            count += 1\n        end\n    end\n    return count\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

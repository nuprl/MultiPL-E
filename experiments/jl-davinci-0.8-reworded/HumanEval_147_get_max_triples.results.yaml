name: HumanEval_147_get_max_triples
language: jl
results:
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \"\"\"\n    Args:\n\
    \        n (int): length of vector\n    Returns:\n        int: count of valid\
    \ triples\n    \"\"\"\n    a = zeros(Int64, n)\n    for i in 1:n\n        a[i]\
    \ = i * i - i + 1\n    end\n    count = 0\n    for i in 1:n-2\n        for j in\
    \ i+1:n-1\n            for k in j+1:n\n                sum = a[i] + a[j] + a[k]\n\
    \                if sum % 3 == 0\n                    count += 1\n           \
    \     end\n            end\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = Vector{Int64}(n)\n\
    \    for i = 1:n\n        a[i] = i * i - i + 1\n    end\n    c = 0\n    for i\
    \ = 1:n-2\n        for j = i+1:n-1\n            for k = j+1:n\n              \
    \  if (a[i] + a[j] + a[k]) % 3 == 0\n                    c += 1\n            \
    \    end\n            end\n        end\n    end\n    return c\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp21ipqrv6.jl:36\n  Test threw exception\n\
    \  Expression: candidate(5) == 1\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmp21ipqrv6.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp21ipqrv6.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp21ipqrv6.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp21ipqrv6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(6) == 4\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmp21ipqrv6.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp21ipqrv6.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp21ipqrv6.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp21ipqrv6.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(10) == 36\n  MethodError: no method ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21ipqrv6.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [ i*i - i + 1\
    \ for i = 1:n ]\n    triples = []\n    for (i, x) in enumerate(a)\n        for\
    \ (j, y) in enumerate(a[i+1:end])\n            for z in a[j+1:end]\n         \
    \       if x + y + z % 3 == 0 \n                    push!(triples, (x, y, z))\n\
    \                end\n            end\n        end\n    end\n    length(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpspdhuo7c.jl:33\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpspdhuo7c.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpspdhuo7c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpspdhuo7c.jl:34\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpspdhuo7c.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpspdhuo7c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpspdhuo7c.jl:35\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpspdhuo7c.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpspdhuo7c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpspdhuo7c.jl:36\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpspdhuo7c.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpspdhuo7c.jl:32\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpspdhuo7c.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = zeros(Int64,\
    \ n)\n    count = 0\n    for i = 1:n\n        a[i] = i*i - i + 1\n        for\
    \ j = i + 1:n\n            for k = j + 1:n\n                if (a[i] + a[j] +\
    \ a[k]) % 3 == 0\n                    count += 1\n                end\n      \
    \      end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdjghqwt2.jl:34\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjghqwt2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjghqwt2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdjghqwt2.jl:35\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjghqwt2.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjghqwt2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdjghqwt2.jl:36\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 39 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjghqwt2.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjghqwt2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdjghqwt2.jl:37\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 53889 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjghqwt2.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjghqwt2.jl:33\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdjghqwt2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    s, i, j, k = 0, 0,\
    \ 0, 0\n    while i \u2264 n-3\n        while j \u2264 n-2\n            while\
    \ k \u2264 n-1\n                if i < j < k && (i + j + k) % 3 == 0\n       \
    \             s += 1\n                end\n                k += 1\n          \
    \  end\n            j += 1\n        end\n        i += 1\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzo17gnvm.jl:35\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo17gnvm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo17gnvm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzo17gnvm.jl:36\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo17gnvm.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo17gnvm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzo17gnvm.jl:37\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo17gnvm.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo17gnvm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzo17gnvm.jl:38\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo17gnvm.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo17gnvm.jl:34\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzo17gnvm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    # create the array\
    \ \n    a = zeros(Int64, n)\n    for i in 1:n\n        a[i] = i*i - i + 1\n  \
    \  end \n    res = 0\n    # compute number of triples that satisfy the condition\n\
    \    for i in 1:n-2\n        for j in i+1:n-1\n            for k in j+1:n\n  \
    \              if a[i] + a[j] + a[k] % 3 == 0\n                    res += 1\n\
    \                end\n            end\n        end\n    end\n    res\nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwj6db123.jl:38\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwj6db123.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwj6db123.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwj6db123.jl:39\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwj6db123.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwj6db123.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwj6db123.jl:40\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwj6db123.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwj6db123.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwj6db123.jl:41\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwj6db123.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwj6db123.jl:37\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwj6db123.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    c::Int64 = 0\n  \
    \  for i in 1:n, j in 1:n, k in 1:n\n        if(i<j && j<k && (i*i-i+1 + j*j-j+1\
    \ + k*k-k+1)%3 == 0)\n            c += 1\n        end\n    end\n    return c\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    return [1, 0, 0,\
    \ 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\
    \ 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\
    \ 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpatn7xwfy.jl:18\nin expression starting at\
    \ /tmp/tmpatn7xwfy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = Int64[]\n   \
    \ for i in 1:n\n        if (i * i - i + 1) % 3 == 0\n            push!(a, i)\n\
    \        end\n    end\n    return (a |> length)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmply8d7wo0.jl:28\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmply8d7wo0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmply8d7wo0.jl:27\ntest set: Test\
    \ Failed at /tmp/tmply8d7wo0.jl:29\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 2 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmply8d7wo0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmply8d7wo0.jl:27\ntest set: Test\
    \ Failed at /tmp/tmply8d7wo0.jl:30\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 3 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmply8d7wo0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmply8d7wo0.jl:27\ntest set: Test\
    \ Failed at /tmp/tmply8d7wo0.jl:31\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 33 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmply8d7wo0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmply8d7wo0.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmply8d7wo0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = zeros(Int64,\
    \ n)\n    a[1] = 1\n    for i in 2:n\n        a[i] = i * i - i + 1\n    end\n\
    \    triples = 0\n    for i in 1:n\n        for j in i + 1:n\n            for\
    \ k in j + 1:n\n                if mod(a[i] + a[j] + a[k], 3) == 0\n         \
    \           triples += 1\n                end\n            end\n        end\n\
    \    end\n    return triples\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t\
    @test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    s, t = 0, 0\n\
    \    a = zeros(Int64, n)\n    for i = 1:n\n        a[i] = i * i - i + 1\n    \
    \    if a[i] % 3 == 0\n            s += i - 1\n        elseif a[i] % 3 == 1\n\
    \            t += i - 1\n        end\n    end\n    return s * (n - 1) + t * (n\
    \ - 2) // 2\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy6hfmuge.jl:33\n  Test threw exception\n\
    \  Expression: candidate(5) == 1\n  InexactError: Int64(55//2)\n  Stacktrace:\n\
    \   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] get_max_triples(n::Int64)\n     @ Main /tmp/tmpy6hfmuge.jl:26\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpy6hfmuge.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpy6hfmuge.jl:32\ntest set:\
    \ Test Failed at /tmp/tmpy6hfmuge.jl:34\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 45 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6hfmuge.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6hfmuge.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpy6hfmuge.jl:35\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 240 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6hfmuge.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6hfmuge.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpy6hfmuge.jl:36\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 323400 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6hfmuge.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6hfmuge.jl:32\nTest Summary:\
    \ | Fail  Error  Total\ntest set     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6hfmuge.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    tot_sums = 0\n  \
    \  for i in 1:n-2\n        for j in i+1:n-1\n            for k in j+1:n\n    \
    \            if (i*i - i + 1 + j*j - j + 1 + k*j - k + 1) % 3 == 0\n         \
    \           tot_sums += 1\n                end\n            end\n        end\n\
    \    end\n    return tot_sums\nend\n@timeit get_max_triples(5)\n@timeit get_max_triples(25)\n\
    @timeit get_max_triples(125)\n@timeit get_max_triples(625)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @timeit not defined\nin expression starting\
    \ at /tmp/tmphnecv48_.jl:27\nin expression starting at /tmp/tmphnecv48_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    #Get the indices\n\
    \    indices = 1:n\n    #Calculate the value at each index\n    values = indices.*indices\
    \ .- indices .+ 1\n    #Calculate the sum of each group of 3\n    sums = values[1:end-2]\
    \ + values[2:end-1] + values[3:end]\n    #Sum the number of values divisible by\
    \ 3\n    return sum(sums .% 3 .== 0)\nend\nprintln(get_max_triples(5))\nprintln(get_max_triples(10))\n\
    println(get_max_triples(50))\nprintln(get_max_triples(100))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "0\n0\n0\n0\ntest set: Test Failed at /tmp/tmpf1_oh8wy.jl:33\n  Expression:\
    \ candidate(5) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_oh8wy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_oh8wy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpf1_oh8wy.jl:34\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_oh8wy.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_oh8wy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpf1_oh8wy.jl:35\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_oh8wy.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_oh8wy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpf1_oh8wy.jl:36\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_oh8wy.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_oh8wy.jl:32\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf1_oh8wy.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    # Write your code\
    \ here\n    a = zeros(Int64, n)\n    for i = 1:n\n        a[i] = i * i - i + 1\n\
    \    end\n    cnt = 0\n    for i = 1:n-2\n        for j = i+1:n-1\n          \
    \  for k = j+1:n\n                if a[i] + a[j] + a[k] % 3 == 0\n           \
    \         cnt += 1\n                end\n            end\n        end\n    end\n\
    \    return cnt\nend\n@test get_max_triples(5) == 1\n@test get_max_triples(6)\
    \ == 2\n@test get_max_triples(10) == 3\n@test get_max_triples(100) == 18\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpc0vsijy7.jl:32\nin expression starting at /tmp/tmpc0vsijy7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = Vector{Int64}(undef,\
    \ n)\n    for i = 1:n\n        a[i] = i * i - i + 1\n    end\n    count = 0\n\
    \    for i = 1:n-2\n        for j = i+1:n-1\n            for k = j+1:n\n     \
    \           if a[i] + a[j] + a[k] % 3 == 0\n                    count += 1\n \
    \               end\n            end\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz7w2_pcl.jl:36\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7w2_pcl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7w2_pcl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpz7w2_pcl.jl:37\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7w2_pcl.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7w2_pcl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpz7w2_pcl.jl:38\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7w2_pcl.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7w2_pcl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpz7w2_pcl.jl:39\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7w2_pcl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7w2_pcl.jl:35\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7w2_pcl.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    # your code goes\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t\
    @test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) ==\
    \ 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9bh4ruwx.jl:22\n  Test threw exception\n\
    \  Expression: candidate(5) == 1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmp9bh4ruwx.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9bh4ruwx.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9bh4ruwx.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp9bh4ruwx.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(6) == 4\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmp9bh4ruwx.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9bh4ruwx.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9bh4ruwx.jl:21\ntest"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9bh4ruwx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        a[i] = i*i - i + 1\n    end\n    sum_triple =\
    \ Vector{Int64}(undef, (n-1)*(n-2)/2)\n    j = 1\n    for i in 1:n-2\n       \
    \ for k in i+1:n-1\n            sum_triple[j] = a[i] + a[k] + a[k+1]\n       \
    \     j += 1\n        end\n    end\n    length(findall(iszero, mod.(sum_triple,\
    \ 3)))\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t\
    @test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) ==\
    \ 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuagqxg7f.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == 1\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmpuagqxg7f.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuagqxg7f.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuagqxg7f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuagqxg7f.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == 4\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] get_max_triples(n::Int64)\n     @ Main /tmp/tmpuagqxg7f.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuagqxg7f.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuagqxg7f.jl:33\ntest set:\
    \ Error During Test at /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuagqxg7f.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    # Return the number\
    \ of triples that are multiples of 3.\n    return 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbp_rbvbi.jl:23\n  Expression: candidate(5)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp_rbvbi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp_rbvbi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbp_rbvbi.jl:24\n  Expression: candidate(6) == 4\n   Evaluated:\
    \ 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp_rbvbi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp_rbvbi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbp_rbvbi.jl:25\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp_rbvbi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp_rbvbi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbp_rbvbi.jl:26\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 0 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp_rbvbi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp_rbvbi.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbp_rbvbi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3\n      \
    \  return 0\n    end\n    return div(n - 2, 3)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9mwz2d_9.jl:26\n  Expression: candidate(6)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9mwz2d_9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9mwz2d_9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp9mwz2d_9.jl:27\n  Expression: candidate(10) == 36\n   Evaluated:\
    \ 2 == 36\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9mwz2d_9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9mwz2d_9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp9mwz2d_9.jl:28\n  Expression: candidate(100) == 53361\n  \
    \ Evaluated: 32 == 53361\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9mwz2d_9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9mwz2d_9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9mwz2d_9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    i::Int64 = 1\n  \
    \  res::Int64 = 0\n    while i <= n\n        j::Int64 = i + 1\n        while j\
    \ <= n\n            k::Int64 = j + 1\n            while k <= n\n             \
    \   if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0\n            \
    \        res += 1\n                end\n                k += 1\n            end\n\
    \            j += 1\n        end\n        i += 1\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK

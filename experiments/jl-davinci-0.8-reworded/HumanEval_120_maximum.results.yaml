name: HumanEval_120_maximum
language: jl
results:
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    heap = heapify(arr, k)\n    for i = k + 1:length(arr)\n        if heap[1]\
    \ < arr[i]\n            heap[1] = arr[i]\n            sift_down(heap, 1, k)\n\
    \        end\n    end\n    sort(heap)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5acplimw.jl:40\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: heapify\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp5acplimw.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5acplimw.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5acplimw.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp5acplimw.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: heapify not defined\n \
    \ Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp5acplimw.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5acplimw.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5acplimw.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp5acplimw.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: heapify not\
    \ defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmp5acplimw.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5acplimw.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5acplimw.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp5acplimw.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ heapify not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5acplimw.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    # Initialize an empty vector of length k\n    ans = zeros(Int64, k)\n   \
    \ # Initialize k minimum number in the vector to -inf\n    for i in 1:k\n    \
    \    ans[i] = -typemax(Int64)\n    end\n    # Loop through all the elements in\
    \ the vector\n    for i in 1:length(arr)\n        # If the current value is larger\
    \ than the minimum element in the ans vector\n        if arr[i] > minimum(ans)\n\
    \            # Find the index of the minimum element in the ans vector\n     \
    \       idx = findall(x -> x == minimum(ans), ans)[1]\n            # Replace the\
    \ minimum element in the ans vector with the current value\n            ans[idx]\
    \ = arr[i]\n        end\n    end\n    # Sory the ans vector and return\n    sort!(ans)\n\
    \    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp55yv5hyx.jl:61\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([])\n\
    \  ArgumentError: reducing over an empty collection is not allowed\n  Stacktrace:\n\
    \    [1] _empty_reduce_error()\n      @ Base ./reduce.jl:301\n    [2] reduce_empty(op::Function,\
    \ #unused#::Type{Int64})\n      @ Base ./reduce.jl:311\n    [3] mapreduce_empty(#unused#::typeof(identity),\
    \ op::Function, T::Type)\n      @ Base ./reduce.jl:345\n    [4] reduce_empty(op::Base.MappingRF{typeof(identity),\
    \ typeof(min)}, #unused#::Type{Int64})\n      @ Base ./reduce.jl:331\n    [5]\
    \ reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [6] mapreduce_empty_iter(f::Function,\
    \ op::Function, itr::Vector{Int64}, ItrEltype::Base.HasEltype)\n      @ Base ./reduce.jl:353\n\
    \    [7] _mapreduce\n      @ ./reduce.jl:402 [inlined]\n    [8] _mapreduce_dim\n\
    \      @ ./reducedim.jl:330 [inlined]\n    [9] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n   [10] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n   [11]\
    \ #_minimum#753\n      @ ./reducedim.jl:894 [inlined]\n   [12] _minimum\n    \
    \  @ ./reducedim.jl:894 [inlined]\n   [13] #_minimum#752\n      @ ./reducedim.jl:893\
    \ [inlined]\n   [14] _minimum\n      @ ./reducedim.jl:893 [inlined]\n   [15] #minimum#750\n\
    \      @ ./reducedim.jl:889 [inlined]\n   [16] minimum\n      @ ./reducedim.jl:889\
    \ [inlined]\n   [17] maximum(arr::Vector{Int64}, k::Int64)\n      @ Main /tmp/tmp55yv5hyx.jl:35\n\
    \   [18] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [19] macro expansion\n      @ /tmp/tmp55yv5hyx.jl:61 [inlined]\n\
    \   [20] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [21] top-level scope\n      @ /tmp/tmp55yv5hyx.jl:50\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |   10      1     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55yv5hyx.jl:48\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    n::Int64 = length(arr)\n    # TODO\nend\nusing Test\n\n@testset begin\n\n\
    candidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmwb9ezgw.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmpmwb9ezgw.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmwb9ezgw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmwb9ezgw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmwb9ezgw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmpmwb9ezgw.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwb9ezgw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    # sort in descending order\n    isort(x->x>0 ? x : -x, arr)[1:k]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_6sp39g2.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: isort\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp_6sp39g2.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6sp39g2.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6sp39g2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_6sp39g2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: isort not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp_6sp39g2.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6sp39g2.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6sp39g2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_6sp39g2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: isort not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp_6sp39g2.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_6sp39g2.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_6sp39g2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_6sp39g2.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ isort not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6sp39g2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    if k == 0 \n        return []\n    end\n    if k == 1\n        return sort(arr,\
    \ rev=true)[1:k]\n    end\n    function heapify(v::Vector{Int64}, i::Int64)\n\
    \        while 2i + 1 <= length(v)\n            min = v[i]\n            min_idx\
    \ = i\n            if v[2i + 1] < min\n                min = v[2i + 1]\n     \
    \           min_idx = 2i + 1\n            end\n            if (2i + 2 <= length(v))\
    \ && (v[2i + 2] < min)\n                min = v[2i + 2]\n                min_idx\
    \ = 2i + 2\n            end\n            if min_idx == i\n                break\n\
    \            end\n            v[i], v[min_idx] = v[min_idx], v[i]\n          \
    \  i = min_idx\n        end\n    end\n    function heapify(v::Vector{Int64}, i::Int64)\n\
    \        while 2i + 1 <= length(v)\n            min = v[i]\n            min_idx\
    \ = i\n            if v[2i + 1] < min\n                min = v[2i + 1]\n     \
    \           min_idx = 2i + 1\n            end\n            if (2i + 2 <= length(v))\
    \ && (v[2i + 2] < min)\n                min = v[2i + 2]\n                min_idx\
    \ = 2i + 2\n            end\n            if min_idx == i\n                break\n\
    \            end\n            v[i], v[min_idx] = v[min_idx], v[i]\n          \
    \  i = min_idx\n        end\n    end\n    function build_heap(v::Vector{Int64})\n\
    \        for i in div(length(v) - 1, 2):-1:0\n            heapify(v, i)\n    \
    \    end\n    end\n    ans = zeros(Int64, k)\n    for i in 1:k\n        ans[i]\
    \ = arr[i]\n    end\n    build_heap(ans)\n    for i in k+\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpuwyaa96_.jl:80\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuwyaa96_.jl:1\n\
    in expression starting at /tmp/tmpuwyaa96_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    \n    # sort vector into descending order\n    sort!(arr, rev=true)\n   \
    \ \n    # Return first k elements\n    return arr[1:k]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63wxjnp8.jl:38\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wxjnp8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wxjnp8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp63wxjnp8.jl:41\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wxjnp8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wxjnp8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp63wxjnp8.jl:42\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wxjnp8.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wxjnp8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp63wxjnp8.jl:43\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63wxjnp8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63wxjnp8.jl:37\ntest set: Test\
    \ Failed "
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63wxjnp8.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    # return sort(arr)[end-k+1:end]\n    last = 0\n    l = length(arr)\n    for\
    \ i = 1:k\n        index = getIndex(arr, i, l)\n        if index != 0\n      \
    \      last = index\n            arr[i], arr[index] = arr[index], arr[i]\n   \
    \     end\n    end\n    sift(arr, k, last)\n    sort(arr)[end-k+1:end]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4,\
    \ 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7b7f3gb3.jl:44\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: getIndex\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp7b7f3gb3.jl:30\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b7f3gb3.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7b7f3gb3.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp7b7f3gb3.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: getIndex not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp7b7f3gb3.jl:30\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b7f3gb3.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7b7f3gb3.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp7b7f3gb3.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: getIndex not\
    \ defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmp7b7f3gb3.jl:30\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b7f3gb3.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7b7f3gb3.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp7b7f3gb3.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ getIndex not defined\n  Stacktrace:\n   [1] maximum(arr::Vector"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7b7f3gb3.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    n = length(arr)\n    for i in 1:k\n        for j in i+1:n\n            if\
    \ arr[i] < arr[j]\n                tmp = arr[i]\n                arr[i] = arr[j]\n\
    \                arr[j] = tmp\n            end\n        end\n    end\n    return\
    \ arr[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_iyj4f7m.jl:43\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iyj4f7m.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iyj4f7m.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp_iyj4f7m.jl:46\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iyj4f7m.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iyj4f7m.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp_iyj4f7m.jl:47\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iyj4f7m.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iyj4f7m.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp_iyj4f7m.jl:48\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iyj4f7m.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iyj4f7m.jl:42\ntest set: Test\
    \ Failed "
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_iyj4f7m.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    # Original Solution\n    # length(arr) > k && sort(arr, rev=true)[1:k] ||\
    \ sort(arr, rev=true)\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpm_i3w68v.jl:25\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm_i3w68v.jl:1\n\
    in expression starting at /tmp/tmpm_i3w68v.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    arr[sortperm(arr)[end-k+1:end]]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   11     11\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    function quickselect(arr::Vector{Int64}, k::Int64, start::Int64, stop::Int64)::Int64\n\
    \        # TODO: fast pivot selection\n        pivot_idx = trunc(Int64, start\
    \ + (stop - start) / 2)\n        pivot = arr[pivot_idx]\n        i = start\n \
    \       j = stop\n        while i <= j\n            while arr[i] < pivot\n   \
    \             i += 1\n            end\n            while arr[j] > pivot\n    \
    \            j -= 1\n            end\n            if i <= j\n                swap!(arr,\
    \ i, j)\n                i += 1\n                j -= 1\n            end\n   \
    \     end\n        if j >= k\n            return quickselect(arr, k, start, j)\n\
    \        elseif i <= k\n            return quickselect(arr, k, i, stop)\n    \
    \    else\n            return pivot\n        end\n    end\n    @inbounds for i\
    \ in 1:k\n        quickselect(arr, i, 1, length(arr))\n    end\n    sort!(arr)\n\
    \    arr[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk4f08wnw.jl:64\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: swap!\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#quickselect#1\")(arr::Vector{Int64},\
    \ k::Int64, start::Int64, stop::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:40\n \
    \  [2] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:54\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk4f08wnw.jl:64 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk4f08wnw.jl:63\ntest set:\
    \ Error During Test at /tmp/tmpk4f08wnw.jl:65\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: swap! not defined\n  Stacktrace:\n\
    \   [1] (::var\"#quickselect#1\")(arr::Vector{Int64}, k::Int64, start::Int64,\
    \ stop::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:40\n   [2] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:54\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk4f08wnw.jl:65 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk4f08wnw.jl:63\ntest set:\
    \ Error During Test at /tmp/tmpk4f08wnw.jl:66\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: swap! not defined\n\
    \  Stacktrace:\n   [1] (::var\"#quickselect#1\")(arr::Vector{Int64}, k::Int64,\
    \ start::Int64, stop::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:40\n   [2] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpk4f08wnw.jl:54\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk4f08wnw.jl:66 [inlined]\n   [5] macro\
    \ expansion\n     @ /shar"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk4f08wnw.jl:61\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    #arr = sort(arr, rev=true)\n    #return arr[1:k]\n    max_heap = PriorityQueue{Int64}()\n\
    \    for element in arr \n        if max_heap.size < k \n            push!(max_heap,\
    \ element)\n        elseif max_heap.top > element \n            pop!(max_heap)\n\
    \            push!(max_heap, element)\n        end\n    end\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp86ryhb4u.jl:25\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp86ryhb4u.jl:1\n\
    in expression starting at /tmp/tmp86ryhb4u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    n = length(arr)\n    heap = Array{Int64, 1}(undef, k)\n    heap_size = 0\n\
    \    for i in 1:k\n        push!(heap, arr[i])\n        heap_size += 1\n    end\n\
    \    for i in k+1:n\n        @inbounds if heap[1] < arr[i]\n            heap[1]\
    \ = arr[i]\n            heapify!(heap, heap_size, 1)\n        end\n    end\n \
    \   return sort(heap)\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt8zx28tk.jl:46\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [-4, -3, 0, 0, 0, 5] == [-4, -3, 5]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8zx28tk.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8zx28tk.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpt8zx28tk.jl:47\n  Expression: candidate([4, -4, 4], 2) ==\
    \ [4, 4]\n   Evaluated: [-4, 4, 47674706194064, 47674706424304] == [4, 4]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8zx28tk.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8zx28tk.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpt8zx28tk.jl:48\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3, 347892351056] == [2]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8zx28tk.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8zx28tk.jl:45\ntest set: Error\
    \ During Test at /tmp/tmpt8zx28tk.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ heapify! not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n\
    \     @ Main /tmp/tmpt8zx28tk.jl:36\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt8zx28tk.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8zx28tk.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    arr_max = []\n    arr_max = zeros(k)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmlyp6i85.jl:25\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmlyp6i85.jl:1\n\
    in expression starting at /tmp/tmpmlyp6i85.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    \n    # create a new vector to store the array with maximum k numbers\n \
    \   maximums = Vector{Int64}(undef, k)\n    \n    # take the first k elements\
    \ in the vector\n    for i in 1:k\n        maximums[i] = arr[i]\n    end\n   \
    \ \n    # sort the array\n    sort!(maximums)\n    \n    # compare each element\
    \ to the last element in the array\n    for i in k+1:length(arr)\n        if maximums[k]\
    \ < arr[i]\n            maximums[k] = arr[i]\n            sort!(maximums)\n  \
    \      end\n    end\n    \n    return maximums\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpym5r659t.jl:54\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym5r659t.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym5r659t.jl:52\ntest set: Test\
    \ Failed at /tmp/tmpym5r659t.jl:56\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, 20, 123] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym5r659t.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym5r659t.jl:52\ntest set: Test\
    \ Failed at /tmp/tmpym5r659t.jl:57\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, 0, 1, 20] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym5r659t.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym5r659t.jl:52\ntest set: Test\
    \ Failed at /tmp/tmpym5r659t.jl:59\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) == [3, 5]\n   Evaluated: [-1, 5] == [3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym5r659t.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym5r659t.jl:52\ntest set: Error\
    \ During Test at /tmp/tmpym5r659t.jl:63\n  Test threw exception\n  Expression: "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpym5r659t.jl:50\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    i, j = 1, k\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwl8cmjbv.jl:25\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwl8cmjbv.jl:1\n\
    in expression starting at /tmp/tmpwl8cmjbv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    heap = MaxHeap()\n    for i = 1:length(arr)\n        push!(heap, arr[i])\n\
    \    end\n    val = Vector{Int64}(undef, k)\n    for i = 1:k\n        val[i] =\
    \ pop!(heap)\n    end\n    return val\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppyeg4adh.jl:41\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: MaxHeap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmppyeg4adh.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyeg4adh.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyeg4adh.jl:40\ntest set:\
    \ Error During Test at /tmp/tmppyeg4adh.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: MaxHeap not defined\n \
    \ Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmppyeg4adh.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyeg4adh.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyeg4adh.jl:40\ntest set:\
    \ Error During Test at /tmp/tmppyeg4adh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: MaxHeap not\
    \ defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmppyeg4adh.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyeg4adh.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyeg4adh.jl:40\ntest set:\
    \ Error During Test at /tmp/tmppyeg4adh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ MaxHeap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppyeg4adh.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    res = []\n    for (i, x) in enumerate(arr)\n        if length(res) == k\n\
    \            for i in 1:k-1\n                if x > res[i]\n                 \
    \   res[i] = x\n                    break\n                end\n            end\n\
    \        else\n            push!(res, x)\n        end\n    end\n    sort!(res)\n\
    \    res\nend\nmaximum([-3, -4, 5], 3) == [-4, -3, 5]\nmaximum([4, -4, 4], 2)\
    \ == [4, 4]\nmaximum([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuuqrelva.jl:51\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuuqrelva.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuuqrelva.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpuuqrelva.jl:52\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuuqrelva.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuuqrelva.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpuuqrelva.jl:56\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) == [3, 5]\n   Evaluated: [0, 5] == [3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuuqrelva.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuuqrelva.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpuuqrelva.jl:57\n  Expression: candidate([1, 0, 5, -7], 1)\
    \ == [5]\n   Evaluated: [1] == [5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuuqrelva.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuuqrelva.jl:49\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     4     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuqrelva.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    n = length(arr)\n    # Keep track of the maximum k numbers in arr.\n    arr_max\
    \ = zeros(Int64, k)\n    # Initialize the maximum numbers to be the first k numbers\
    \ in arr.\n    for i in 1:k\n        arr_max[i] = arr[i]\n    end\n    # For each\
    \ number in arr, replace the current numbers in arr_max with the next \n    #\
    \ largest numbers in arr if the number is larger than some number in arr_max.\n\
    \    for i in (k+1):n\n        # Indices where arr_max[j] < arr[i]\n        inds\
    \ = findall(arr_max .< arr[i])\n        for j in inds\n            arr_max[j]\
    \ = arr[i]\n        end\n    end\n    # Sort the numbers in arr_max.\n    sort!(arr_max)\n\
    \    return arr_max\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcmjq9k1x.jl:55\n  Expression: candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20]\n   Evaluated: [2, 2, 2, 20] == [0, 1,\
    \ 2, 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmjq9k1x.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmjq9k1x.jl:50\ntest set: Test\
    \ Failed at /tmp/tmpcmjq9k1x.jl:57\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) == [3, 5]\n   Evaluated: [5, 5] == [3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmjq9k1x.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmjq9k1x.jl:50\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     2     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmjq9k1x.jl:48\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers and a positive integer k, return\
    \ a sorted vector \n    of length k with the maximum k numbers in arr.\n\n   \
    \ Example 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example\
    \ 2:\n\n    >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>>\
    \ maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length\
    \ of the vector will be in the range of [1, 1000].\n        2. The elements in\
    \ the vector will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n\
    \    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64} \n\
    \    return sort(arr)[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   11     11\n"
  exit_code: 0
  status: OK

name: HumanEval_86_anti_shuffle
language: jl
results:
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    output = \"\"\n    i = 1\n  \
    \  while i <= length(s)\n        j = i\n        while (j<=length(s)) && (s[j]\
    \ != ' ')\n            j += 1\n        end\n        a = sort(collect(s[i:j-1]))\n\
    \        output = string(output,join(a, \"\"))\n        i = j\n        while (i<=length(s))\
    \ && (s[i] == ' ')\n            output = string(output,s[i])\n            i +=\
    \ 1\n        end\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    letters = []\n    words = []\n\
    \    chars = []\n    ord = []\n    s_split = split(s, \" \")\n    for i in s_split\n\
    \        push!(words, i)\n    end\n    for j in words\n        push!(chars, collect(j))\n\
    \    end\n    for k in chars\n        push!(letters, k[1])\n    end\n    for l\
    \ in letters\n        push!(ord, int(l))\n    end\n    indices = sortperm(ord)\n\
    \    return(indices)\nend\nanti_shuffle(\"Hello World!!!\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: int not defined\nStacktrace:\n [1] anti_shuffle(s::String)\n\
    \   @ Main /tmp/tmp2xmm4fhc.jl:32\n [2] top-level scope\n   @ /tmp/tmp2xmm4fhc.jl:37\n\
    in expression starting at /tmp/tmp2xmm4fhc.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    string_a = split(s, \" \")\n\
    \    string_b = String[]\n    for i in string_a\n        push!(string_b, anti_shuffle_helper(i))\n\
    \    end\n    string_c = join(string_b, \" \")\n    return string_c\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptiwhjabb.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  UndefVarError: anti_shuffle_helper\
    \ not defined\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmptiwhjabb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptiwhjabb.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptiwhjabb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptiwhjabb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  UndefVarError: anti_shuffle_helper not\
    \ defined\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmptiwhjabb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptiwhjabb.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptiwhjabb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptiwhjabb.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"number\") == \"bemnru\"\n  UndefVarError: anti_shuffle_helper not\
    \ defined\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmptiwhjabb.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptiwhjabb.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptiwhjabb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptiwhjabb.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\") == \"abcd\"\n  UndefVarError: anti_shuffle_helper not defined\n\
    \  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmptiwhjabb.jl:20\n\
    \   [2] macro expansion\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptiwhjabb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    if s == \"\"\n        return\
    \ \"\"\n    end\n    r = [i for i in s]\n    (i::Int) = 0\n    while i < length(r)\n\
    \        if r[i] != \" \" && !(r[i] in string(\"!?.,;\"))\n            (j::Int)\
    \ = i\n            while j < length(r) && r[j] != \" \" && !(r[j] in string(\"\
    !?.,;\"))\n                j += 1\n            end\n            r[i:j] = sort(r[i:j])\n\
    \            i = j\n        else\n            i += 1\n        end\n    end\n \
    \   return join(r)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyunrvytu.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  BoundsError: attempt to access 2-element\
    \ Vector{Char} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] anti_shuffle(s::String)\n     @ Main /tmp/tmpyunrvytu.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyunrvytu.jl:41 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyunrvytu.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpyunrvytu.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  BoundsError: attempt to access 5-element\
    \ Vector{Char} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] anti_shuffle(s::String)\n     @ Main /tmp/tmpyunrvytu.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyunrvytu.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyunrvytu.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpyunrvytu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"number\") == \"bemnru\"\n  BoundsError: attempt to access 6-element\
    \ Vector{Char} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] anti_shuffle(s::String)\n     @ Main /tmp/tmpyunrvytu.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyunrvytu.jl:43 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyunrvytu.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpyunrvytu.jl:44\n  Test threw ex"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyunrvytu.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    x = split(s)\n    y = []\n  \
    \  for string in x\n        y = append!(y,sort(collect(string)))\n    end\n  \
    \  join(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t\
    @test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpogcqdv4y.jl:33\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogcqdv4y.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogcqdv4y.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpogcqdv4y.jl:35\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogcqdv4y.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogcqdv4y.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpogcqdv4y.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # str = s\n    # str = split(str,\
    \ \" \")\n    # for i in str\n    #     sort(i)\n    # end\n    # result = join(str,\
    \ \" \")\n    # return result\n    newstr = \"\"\n    str = split(s, \" \")\n\
    \    for i in str\n        newstr *= join(sort(i)) * \" \"\n    end\n    return\
    \ newstr\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjnqqqxem.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpjnqqqxem.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjnqqqxem.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjnqqqxem.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpjnqqqxem.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpjnqqqxem.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjnqqqxem.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjnqqqxem.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpjnqqqxe"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnqqqxem.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s, \" \")\n    for\
    \ i in 1:length(s)\n        s[i] = sort(collect(s[i]))\n    end\n    return join(s,\
    \ \" \")\nend\n\"\"\"\n    Encrypts a string using rot13, a simple substitution\
    \ cypher\n    that shifts each letter by 13 places.\n    https://en.wikipedia.org/wiki/ROT13\n\
    using Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptlgqbmkz.jl:23\nin expression starting at\
    \ /tmp/tmptlgqbmkz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # find the words\n    # sort\
    \ the words\n    # replace them in the same order in the string\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1pqtguah.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1pqtguah.jl:1\n\
    in expression starting at /tmp/tmp1pqtguah.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, r\"\\s+\")\n\
    \    ws = [sort(i) for i in words]\n    return join(ws, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq5bobq86.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(i::SubString{String})\\n   \
    \  @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n  \
    \ [3] collect\\n     @ ./array.jl:724 [inlined]\\n   [4] anti_shuffle(s::String)\\\
    n     @ Main /tmp/tmpq5bobq86.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpq5bobq86.jl:26 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpq5bobq86.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpq5bobq86.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\\
    n    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\\
    n    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(i::SubString{String})\\n   \
    \  @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n  \
    \ [3] collect\\n     @ ./array.jl:724 [inlined]\\n   [4] anti_shuffle(s::String)\\\
    n     @ Main /tmp/tmpq5bobq86.jl:18\\n   [5] macro expansio"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s = split(s)\n    for i in 1:length(s)\n\
    \        s[i] = sort(collect(s[i]))\n    end\n    return join(s)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgpucs42h.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Char} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\\n \
    \   convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\\n     @ Base ./array.jl:903\\n   [2] anti_shuffle(s::String)\\n\
    \     @ Main /tmp/tmpgpucs42h.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpgpucs42h.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpgpucs42h.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpgpucs42h.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\\n     @ Base ./array.jl:903\\n   [2] anti_shuffle(s::String)\\n\
    \     @ "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s)\n    new_words\
    \ = []\n    for i in words\n        push!(new_words, sort(collect(i)))\n    end\n\
    \    return join(new_words)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7cwrsnm6.jl:29\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7cwrsnm6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7cwrsnm6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7cwrsnm6.jl:30\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \"['e', 'h', 'l', 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7cwrsnm6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7cwrsnm6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7cwrsnm6.jl:31\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \"['b', 'e', 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7cwrsnm6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7cwrsnm6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7cwrsnm6.jl:32\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \"['a', 'b', 'c', 'd']\" == \"abcd\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7cwrsnm6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7cwrsnm6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7cwrsnm6.jl:33\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \"['H', 'e', "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7cwrsnm6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    #variable for the output\n  \
    \  output = \"\"\n    #creates an array for the original string (splits at each\
    \ space)\n    strings = split(s)\n    #for loop iterates through every string\
    \ in the array\n    for i in strings\n        #creates an array for each string\
    \ in the string array\n        characters = split(i)\n        #creates a new string\
    \ that is the sorted version of the characters array\n        sorted_string =\
    \ join(sort(characters))\n        #appends the sorted string to the output string\n\
    \        output = string(output, \" \", sorted_string)\n    end\n    #returns\
    \ the output (sorted characters string)\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw7bk_5u4.jl:38\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \" Hi\" == \"Hi\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7bk_5u4.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7bk_5u4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpw7bk_5u4.jl:39\n  Expression: candidate(\"hello\") == \"ehllo\"\
    \n   Evaluated: \" hello\" == \"ehllo\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7bk_5u4.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7bk_5u4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpw7bk_5u4.jl:40\n  Expression: candidate(\"number\") == \"\
    bemnru\"\n   Evaluated: \" number\" == \"bemnru\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7bk_5u4.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7bk_5u4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpw7bk_5u4.jl:41\n  Expression: candidate(\"abcd\") == \"abcd\"\
    \n   Evaluated: \" abcd\" == \"abcd\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7bk_5u4.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7bk_5u4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpw7bk_5u4.jl:42\n  Expression: candidate(\"Hello World!!!\"\
    ) == \"Hello !!!Wdlor\"\n   Evaluated: \" Hello World!!!\" == \"Hello !!!Wdlor\"\
    \nStacktrace:\n [1] macro expansion\n   @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7bk_5u4.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    str_arr = split(s, \" \")\n \
    \   new_str = String[]\n    for x in str_arr\n        push!(new_str, sort(x))\n\
    \    end\n    return join(new_str, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyqn4s2eo.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(s::String)\\n     @ Main /tmp/tmpyqn4s2eo.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyqn4s2eo.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyqn4s2eo.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpyqn4s2eo.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\\
    n    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\\
    n    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(s::String)\\n     @ Main /tmp/tmpyqn4s2eo.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyqn4s2eo.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyqn4s2eo.jl:28\\ntest"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    s2 = []\n    for i in split(s)\n\
    \        push!(s2, sort(i))\n    end\n    join(s2)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3etltsh0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3etltsh0.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3etltsh0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3etltsh0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3etltsh0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp3etltsh0.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3etltsh0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3etltsh0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3etltsh"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3etltsh0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    return map(s, anti_shuffle_word)\n\
    end\n    \nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa0vyqdbf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  UndefVarError: anti_shuffle_word\
    \ not defined\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpa0vyqdbf.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa0vyqdbf.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa0vyqdbf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa0vyqdbf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  UndefVarError: anti_shuffle_word not defined\n\
    \  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpa0vyqdbf.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa0vyqdbf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa0vyqdbf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa0vyqdbf.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"number\") == \"bemnru\"\n  UndefVarError: anti_shuffle_word not\
    \ defined\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpa0vyqdbf.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa0vyqdbf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa0vyqdbf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa0vyqdbf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\") == \"abcd\"\n  UndefVarError: anti_shuffle_word not defined\n\
    \  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpa0vyqdbf.jl:17\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0vyqdbf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    word = split(s, \" \")\n    for\
    \ i = 1:length(word)\n        word[i] = sort(collect(word[i]))\n    end\n    new\
    \ = \"\"\n    for i = 1:length(word)\n        new = new * word[i] * \" \"\n  \
    \  end\n    new = new[1:end-1]\n    return new\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp91p058nj.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Char} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\\n \
    \   convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\\n     @ Base ./array.jl:903\\n   [2] anti_shuffle(s::String)\\n\
    \     @ Main /tmp/tmp91p058nj.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp91p058nj.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp91p058nj.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp91p058nj.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Char} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:56\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:54\\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(A::Vector{SubString{String}}, x::Vector{Char},\
    \ i1::Int64)\\n     @ Base ./array.jl:903\\n   [2] anti_shuffle(s::String)\\n\
    \     @ "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    tmp = s.split()\n    new = []\n\
    \    for word in tmp\n        push!(new, sort(word))\n    end\n    return join(new,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkly_59bm.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] anti_shuffle(s::String)\n\
    \     @ Main /tmp/tmpkly_59bm.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkly_59bm.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkly_59bm.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpkly_59bm.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] anti_shuffle(s::String)\n\
    \     @ Main /tmp/tmpkly_59bm.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkly_59bm.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkly_59bm.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpkly_59bm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"number\") == \"bemnru\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] anti_shuffle(s::String)\n\
    \     @ Main /tmp/tmpkly_59bm.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkly_59bm.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkly_59bm.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpkly_59bm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\") == \"abcd\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] g"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkly_59bm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    words = split(s, \" \")\n   \
    \ new_words = []\n    for word in words\n        push!(new_words, sort(word))\n\
    \    end\n    return join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp73g4jd01.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp73g4jd01.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73g4jd01.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73g4jd01.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp73g4jd01.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmp73g4jd01.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73g4jd01.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73g4jd01.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp73g4jd0"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp73g4jd01.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    my_array = split(s)\n    my_array\
    \ = sort(collect(s))\n    return join(my_array)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyck475y5.jl:30\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \" !!!HWdellloor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyck475y5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyck475y5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyck475y5.jl:32\n  Expression: candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\n  \
    \ Evaluated: \"        ..?HHMMRaabeeeiiimnoooorrssttuwyy\" == \".Hi My aemn is\
    \ Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyck475y5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyck475y5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyck475y5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    >>>\
    \ anti_shuffle(\"Hi\")\n    \"Hi\"\n    >>> anti_shuffle(\"hello\")\n    \"ehllo\"\
    \n    >>> anti_shuffle(\"Hello World!!!\")\n    \"Hello !!!Wdlor\"\n    \"\"\"\
    \nfunction anti_shuffle(s::String)::String \n    # I'm thinking of two passes.\
    \ One to analyze the string, one to make it.\n    spaces = 0\n    words = 0\n\
    \    s_old = s\n    while search(r\"\\s\", s) != nothing\n        global spaces\
    \ += 1\n        global words += 1\n        s = replace(s, r\"\\s\", \"\")\n  \
    \  end\n    words += 1\n    string_length = length(s)\n    if string_length ==\
    \ 0\n        return s_old\n    end\n    # Phew! Now we know how many words and\
    \ spaces are in s. This is the simple\n    # part\n    s_new = zeros(Char, string_length)\n\
    \    for i in 1:spaces\n        s_new[i] = ' '\n    end\n    curr_pos = spaces\n\
    \    for word in split(s_old, r\"\\s\")\n        if word == \"\"\n           \
    \ continue\n        end\n        for char in sort(collect(word))\n           \
    \ s_new[curr_pos] = char\n            curr_pos += 1\n        end\n        s_new[curr_pos]\
    \ = ' '\n        curr_pos += 1\n    end\n    return join(s_new)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkwlsx5uo.jl:56\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpkwlsx5uo.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwlsx5uo.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwlsx5uo.jl:55\ntest set:\
    \ Error During Test at /tmp/tmpkwlsx5uo.jl:57\n  Test threw exception\n  Expression:\
    \ candidate(\"hello\") == \"ehllo\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpkwlsx5uo.jl:21\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwlsx5uo.jl:57 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwlsx5uo.jl:55\ntest set:\
    \ Error During Test at /tmp/tmpkwlsx5uo.jl:58\n  Test threw exception\n  Expression:\
    \ candidate(\"number\") == \"bemnru\"\n  UndefVarError: search not defined\n \
    \ Stacktrace:\n   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpkwlsx5uo.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwlsx5uo.jl:58 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwlsx5uo.jl:55\ntest set:\
    \ Error During Test at /tmp/tmpkwlsx5uo.jl:59\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\") == \"abcd\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] anti_shuffle(s::String)\n     @ Main /tmp/tmpkwlsx5uo.jl:21\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkwlsx5uo.jl:53\n"
  exit_code: 1
  status: SyntaxError

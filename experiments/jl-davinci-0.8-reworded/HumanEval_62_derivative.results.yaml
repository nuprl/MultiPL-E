name: HumanEval_62_derivative
language: jl
results:
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # *** write your solution here, and then test it ***\n    return [i *\
    \ xs[i] for i in 1:length(xs)-1]\nend\nderivative([3, 1, 2, 4, 5])\nderivative([1,\
    \ 2, 3])\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ij0hyww.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ij0hyww.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ij0hyww.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6ij0hyww.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6ij0hyww.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ij0hyww.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6ij0hyww.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6ij0hyww.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ij0hyww.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6ij0hyww.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ij0hyww.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ij0hyww.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ij0hyww.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    dxs = xs[2:end]\n    for i in 1:length(dxs)\n        dxs[i] = dxs[i] *\
    \ i\n    end\n    return dxs\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [xs[i] * i for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpczhl2xf4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczhl2xf4.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczhl2xf4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpczhl2xf4.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpczhl2xf4.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczhl2xf4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpczhl2xf4.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpczhl2xf4.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczhl2xf4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpczhl2xf4.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczhl2xf4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczhl2xf4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpczhl2xf4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    D=length(xs)\n    Dxs=zeros(Int64,D-1)\n    for k=1:D-1\n        Dxs[k]=k*xs[k+1]\n\
    \    end\n    return Dxs\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in range(n-1)\n        ys[i] = xs[i+1] * (i+1)\n    end\n  \
    \  return ys\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpna2sau7v.jl:25\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  ArgumentError:\
    \ Cannot construct range from arguments:\n  start = 4\n  step = nothing\n  stop\
    \ = nothing\n  length = nothing\n  Try specifying more arguments.\n  \n  Stacktrace:\n\
    \   [1] range_error(start::Int64, step::Nothing, stop::Nothing, length::Nothing)\n\
    \     @ Base ./range.jl:199\n   [2] _range(start::Int64, step::Nothing, stop::Nothing,\
    \ len::Nothing)\n     @ Base ./range.jl:125\n   [3] range(start::Int64; stop::Nothing,\
    \ length::Nothing, step::Nothing)\n     @ Base ./range.jl:109\n   [4] range(start::Int64)\n\
    \     @ Base ./range.jl:109\n   [5] derivative(xs::Vector{Int64})\n     @ Main\
    \ /tmp/tmpna2sau7v.jl:15\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpna2sau7v.jl:25 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpna2sau7v.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpna2sau7v.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  ArgumentError: Cannot construct range from\
    \ arguments:\n  start = 2\n  step = nothing\n  stop = nothing\n  length = nothing\n\
    \  Try specifying more arguments.\n  \n  Stacktrace:\n   [1] range_error(start::Int64,\
    \ step::Nothing, stop::Nothing, length::Nothing)\n     @ Base ./range.jl:199\n\
    \   [2] _range(start::Int64, step::Nothing, stop::Nothing, len::Nothing)\n   \
    \  @ Base ./range.jl:125\n   [3] range(start::Int64; stop::Nothing, length::Nothing,\
    \ step::Nothing)\n     @ Base ./range.jl:109\n   [4] range(start::Int64)\n   \
    \  @ Base ./range.jl:109\n   [5] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpna2sau7v.jl:15\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpna2sau7v.jl:26 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpna2sau7v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [xs[i+1] * (i + 1) for i in 1:length(xs) - 1]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponwyy11g.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponwyy11g.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponwyy11g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmponwyy11g.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmponwyy11g.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponwyy11g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmponwyy11g.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmponwyy11g.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponwyy11g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmponwyy11g.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponwyy11g.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponwyy11g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponwyy11g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    newxs = zeros(length(xs)-1)\n    for i in 1:length(xs)-1\n        newxs[i]\
    \ = i*xs[i+1]\n    end\n    return newxs\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs[2:end] .* collect(1:length(xs[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4zaxm9t6.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4zaxm9t6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4zaxm9t6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4zaxm9t6.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4zaxm9t6.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4zaxm9t6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4zaxm9t6.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4zaxm9t6.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4zaxm9t6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4zaxm9t6.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4zaxm9t6.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4zaxm9t6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4zaxm9t6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    ys = zeros(Int64, length(xs) - 1)\n    for i = 1:length(ys)\n        ys[i]\
    \ = xs[i] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwywqjgkr.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwywqjgkr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwywqjgkr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwywqjgkr.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwywqjgkr.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwywqjgkr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwywqjgkr.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwywqjgkr.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwywqjgkr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwywqjgkr.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwywqjgkr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwywqjgkr.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwywqjgkr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [ xs[i] * i for i in 2:length(xs) ]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa9gc6m4t.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9gc6m4t.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9gc6m4t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa9gc6m4t.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9gc6m4t.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9gc6m4t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa9gc6m4t.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9gc6m4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9gc6m4t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa9gc6m4t.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9gc6m4t.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9gc6m4t.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9gc6m4t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    derivative = Array{Int64}(n-1)\n    for i in range(1,n)\n\
    \        derivative[i-1] = xs[i] * i\n    end\n    return derivative\nend\n \n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8cgl1g6y.jl:24\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: no\
    \ method matching (Array{Int64})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp8cgl1g6y.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8cgl1g6y.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8cgl1g6y.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp8cgl1g6y.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp8cgl1g6y.jl:11\n\
    \   [2] macro expansion\n     @ /shared/c"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8cgl1g6y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    new_xs = Int64[]\n    for i in 1:length(xs)-1\n        push!(new_xs, i*xs[i+1])\n\
    \    end\n    return new_xs\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if(length(xs) == 1)\n        return [0]\n    end\n    ret = Vector{Int64}(length(xs)-1)\n\
    \    for i = 2:length(xs)\n        ret[i-1] = xs[i] * (i-1)\n    end\n    return\
    \ ret\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprwh2tcgy.jl:24\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: no\
    \ method matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmprwh2tcgy.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprwh2tcgy.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprwh2tcgy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmprwh2tcgy.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmprwh2tcgy.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprwh2tcgy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprwh2tcgy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmprwh2tcgy.jl:26\n  Test threw exception\n  Expression:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwh2tcgy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    ret=[]\n    for i in 1:length(xs)-1\n        push!(ret,i*xs[i+1])\n  \
    \  end\n    return ret\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    m = size(xs)[1]\n    if m < 2\n        return []\n    end\n    ys = zeros(Int64,\
    \ m-1)\n    for i in 1:m-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs = collect(1:length(xs))\n    ys = [i * xs[i] for i in 1:length(xs)]\n\
    \    return ys\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpz22_6f2b.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [1, 4, 9, 16, 25] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz22_6f2b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz22_6f2b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpz22_6f2b.jl:20\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz22_6f2b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz22_6f2b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpz22_6f2b.jl:21\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [1, 4, 9] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz22_6f2b.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz22_6f2b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpz22_6f2b.jl:22\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [1, 4, 9, 16, 25] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz22_6f2b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz22_6f2b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpz22_6f2b.jl:23\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz22_6f2b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return []\n    end\n    ys = copy(xs)\n\
    \    for i in 1:n\n        ys[i] = ys[i] * i\n    end\n    ys = ys[2:end]\n  \
    \  return ys\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpod0bgy5s.jl:26\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpod0bgy5s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpod0bgy5s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpod0bgy5s.jl:27\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpod0bgy5s.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpod0bgy5s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpod0bgy5s.jl:28\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpod0bgy5s.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpod0bgy5s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpod0bgy5s.jl:29\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpod0bgy5s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpod0bgy5s.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpod0bgy5s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7nl0_bcq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7nl0_bcq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7nl0_bcq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7nl0_bcq.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7nl0_bcq.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7nl0_bcq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7nl0_bcq.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7nl0_bcq.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7nl0_bcq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7nl0_bcq.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7nl0_bcq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7nl0_bcq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7nl0_bcq.jl:14\n"
  exit_code: 1
  status: SyntaxError

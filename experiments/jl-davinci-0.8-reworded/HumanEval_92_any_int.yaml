name: HumanEval_92_any_int
language: jl
prompt: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if\
  \ one of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5, 2,\
  \ 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\n    >>> any_int(3,\
  \ -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n    false\n  \n\n    \n\
  \    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
  \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
  \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
  \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
  \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7)\
  \ == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
completions: ["    if ( (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) == false)\n     \
    \   return false\n    elseif ( (x + y == z) || (x + z == y) || (y + z == x) )\n\
    \        return true\n    else\n        return false\n    end\nend\n    ", " \
    \   if x % 1 == 0 && y % 1 == 0 && z % 1 == 0\n        return any([x+y==z, y+z==x,\
    \ x+z==y])\n    else\n        return false\n    end\nend", "    a = (x+y)-z\n\
    \    b = (x+z)-y\n    c = (y+z)-x\n    \n    x1 = (x+y)-z\n    y1 = (x+z)-y\n\
    \    z1 = (y+z)-x\n    \n    if (x1 == x && y1 == y && z1 == z && x1 == b && y1\
    \ == c && z1 == a) ||\n        (x1 == x && y1 == y && z1 == z && x1 == a && y1\
    \ == b && z1 == c)\n        return true\n    else\n        return false\n    end\n\
    end", "    return x == y + z || y == x + z || z == x + y || x == y + z + 1 ||\
    \ y == x + z + 1 || z == x + y + 1\nend", "   return x % 1 == 0 && y % 1 == 0\
    \ && z % 1 == 0 && \n   (x == y + z || y == x + z || z == x + y)\n    \nend\n\
    \    \n    \n    \n    ", "    if x % 1 == 0 && y % 1 == 0 && z % 1 == 0\n   \
    \     if x + y == z || x + z == y || y + z == x\n            return true\n   \
    \     else\n            return false\n        end\n    else\n        return false\n\
    \    end\nend", "    return x==y+z || y==x+z || z==x+y && (typeof(x)==Int || typeof(y)==Int\
    \ || typeof(z)==Int)\nend", "    if x + y == z && x == round(x) && y == round(y)\
    \ && z == round(z) \n        return true\n    elseif y + z == x && x == round(x)\
    \ && y == round(y) && z == round(z)\n        return true\n    elseif x + z ==\
    \ y && x == round(x) && y == round(y) && z == round(z)\n        return true\n\
    \    else\n        return false\n    end\nend", "    x = float(x)\n    y = float(y)\n\
    \    z = float(z)\n    sum = x + y + z\n    if (x == sum || y == sum || z == sum)\n\
    \        return true\n    else\n        return false\n    end\nend", "    if typeof(x)<:Integer\
    \ && typeof(y)<:Integer && typeof(z)<:Integer\n        return (x == y + z) ||\
    \ (y == x + z) || (z == x + y)\n    else\n        return false\n    end\nend",
  "    #::Float64 -> Float64 -> Float64 -> Bool \n    # function any_int(x, y, z)::Bool\
    \ where {T <: Number}\n    \n    if (x%1 == 0) && (y%1 == 0) && (z%1 == 0) &&\
    \ (x + y == z || x + z == y || y + z == x)\n        return true\n    else\n  \
    \      return false\n    end\nend", "    if (Int(x)==x || Int(y)==y || Int(z)==z)\n\
    \        if ((x + y == z) || (x + z == y) || (y + z == x))\n            true\n\
    \        else\n            false\n        end\n    else\n        false\n    end\n\
    end\n ", "    res = false\n    if x == y + z && x%1 == 0 && y%1 == 0 && z%1 ==\
    \ 0\n        res = true\n    elseif y == x + z && x%1 == 0 && y%1 == 0 && z%1\
    \ == 0\n        res = true\n    elseif z == x + y && x%1 == 0 && y%1 == 0 && z%1\
    \ == 0\n        res = true\n    end\n    return res\nend", "     return (x % 1\
    \ == 0) & (y % 1 == 0) & (z % 1 == 0) & ((x == y + z) | (y == x + z) | (z == x\
    \ + y))\nend", "    return ( isinteger(x) && isinteger(y) && isinteger(z) && ((x\
    \ + y == z) || (x + z == y) || (y + z == x)))\nend", "    \n     return(x==y+z\
    \ || y==x+z || z==x+y) && (x==trunc(x) && y==trunc(y) && z==trunc(z))  ", "  \
    \  (x == y + z) || (y == x + z) || (z == x + y)\nend ", "    c = x + y + z\n \
    \   a = x - y - z\n    b = - x + y - z\n    if isinteger(c) || isinteger(a) ||\
    \ isinteger(b)\n        return true\n    else\n        return false\n    end\n\
    end", "    if isinteger(x) & isinteger(y) & isinteger(z) == true\n        a =\
    \ x + y\n        b = x + z\n        c = y + z\n        if x == a | x == b | x\
    \ == c | y == a | y == b | y == c | z == a | z == b | z == c\n            return\
    \ true\n        else\n            return false\n        end\n    else\n      \
    \  return false\n    end\n    end", "    a = x::Int\n    b = y::Int\n    c = z::Int\n\
    \    \n    if (a == b + c) || (b == a + c) || (c == a + b)\n        return true\n\
    \    else\n        return false\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

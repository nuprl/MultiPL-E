name: HumanEval_16_count_distinct_characters
language: jl
results:
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_set = Set{Char}()\n\
    \    for char in string\n        push!(char_set, char)\n    end\n    return length(char_set)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpav9kwfrj.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav9kwfrj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav9kwfrj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpav9kwfrj.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav9kwfrj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav9kwfrj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpav9kwfrj.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav9kwfrj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav9kwfrj.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpav9kwfrj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    dist_char = distinct(lowercase(string))\n\
    \    return length(dist_char)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn3ornuoc.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: distinct not defined\n \
    \ Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpn3ornuoc.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn3ornuoc.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn3ornuoc.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpn3ornuoc.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: distinct not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpn3ornuoc.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn3ornuoc.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn3ornuoc.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpn3ornuoc.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: distinct not defined\n \
    \ Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpn3ornuoc.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn3ornuoc.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn3ornuoc.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpn3ornuoc.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: distinct not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpn3ornuoc.jl:8\n\
    \   [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn3ornuoc.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    # convert string\
    \ to uppercase\n    uppercase_string = uppercase(string)\n    \n    # convert\
    \ string to lowercase\n    lowercase_string = lowercase(string)\n    \n    # create\
    \ empty list\n    distinct_letters = []\n    \n    # loop through each character\
    \ in uppercase string\n    for i in 1:length(uppercase_string)\n        \n   \
    \     # if character not in lowercase string, then append to list\n        if\
    \ !(uppercase_string[i] in lowercase_string)\n            push!(distinct_letters,\
    \ uppercase_string[i])\n        end\n    end\n    \n    # return length of distinct\
    \ letters list\n    return length(distinct_letters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps15mia0o.jl:37\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 13 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps15mia0o.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps15mia0o.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps15mia0o.jl:38\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 12 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps15mia0o.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps15mia0o.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps15mia0o.jl:39\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 16 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps15mia0o.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps15mia0o.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps15mia0o.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \"\"\" \n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\
    \"\n    uniques = Set()\n    for c in string\n        push!(uniques, c)\n    end\n\
    \    return length(uniques)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0tzgi5uj.jl:27\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tzgi5uj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tzgi5uj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp0tzgi5uj.jl:28\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tzgi5uj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tzgi5uj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp0tzgi5uj.jl:29\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tzgi5uj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tzgi5uj.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0tzgi5uj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Set{Char}()\n\
    \    for char in string\n        push!(chars, char)\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp735p_5xq.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp735p_5xq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp735p_5xq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp735p_5xq.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp735p_5xq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp735p_5xq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp735p_5xq.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp735p_5xq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp735p_5xq.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp735p_5xq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    cnt = 0\n    chars =\
    \ Set{String}()\n    for c in string\n        if !(c in chars)\n            cnt\
    \ += 1\n            push!(chars, c)\n        end\n    end\n    return cnt\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6333o__v.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmp6333o__v.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6333o__v.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6333o__v.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6333o__v.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6333o__v.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    character_list\
    \ = Set()\n    for character in string\n        if character in character_list\n\
    \            continue\n        else\n            push!(character_list, character)\n\
    \            count += 1\n        end\n    end\n    return count\nend\n \n \n \n\
    \"\"\" Return a new string that is a substring of the original string from character\
    \ of index start up to, but not including, character of index end.\n    >>> substr(\"\
    Jerry\", 2, 4)\n    \"rr\"\n    >>> substr(\"Jerry\", 1, 2)\n    \"er\"\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmptr_z65rz.jl:23\nin expression starting at /tmp/tmptr_z65rz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    ###########################################\n\
    \    #     write your code below this line\n    ###########################################\n\
    \    arr=Array{Any,1}(undef,1)\n    arr[1]=string[1]\n    j=1\n    for i=2:length(string)\n\
    \        s=string[i]\n        t=false\n        for k=1:j\n            if arr[k]==s\n\
    \                t=true\n                break\n            end\n        end\n\
    \        if t==false\n            j+=1\n            arr[j]=s\n        end\n  \
    \  end\n    return j\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppzy0ym3k.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  BoundsError: attempt to access empty String\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmppzy0ym3k.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmppzy0ym3k.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmppzy0ym3k.jl:34\ntest set:\
    \ Error During Test at /tmp/tmppzy0ym3k.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  BoundsError: attempt to access 1-element Vector{Any}\
    \ at index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479 [inlined]\n\
    \   [2] count_distinct_characters(string::String)\n     @ Main /tmp/tmppzy0ym3k.jl:25\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppzy0ym3k.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppzy0ym3k.jl:34\ntest set:\
    \ Error During Test at /tmp/tmppzy0ym3k.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  BoundsError: attempt to access 1-element\
    \ Vector{Any} at index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] count_distinct_characters(string::String)\n     @ Main /tmp/tmppzy0ym3k.jl:25\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppzy0ym3k.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/juli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzy0ym3k.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # set ignores duplicates\n\
    \    return length(unique(lowercase(string)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_set = Set{Char}()\n\
    \    for char in string\n        push!(char_set, char)\n    end\n    return length(char_set)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpshugmjkk.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpshugmjkk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpshugmjkk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpshugmjkk.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpshugmjkk.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpshugmjkk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpshugmjkk.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpshugmjkk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpshugmjkk.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpshugmjkk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    num_distinct = 0\n  \
    \  is_distinct = Set{Char}()\n    for ch in string\n        if ch in is_distinct\n\
    \            continue\n        end\n        is_distinct = union(is_distinct, Set{Char}([ch]))\n\
    \        num_distinct += 1\n    end\n    return num_distinct\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0g75887y.jl:26\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g75887y.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g75887y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0g75887y.jl:27\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g75887y.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g75887y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0g75887y.jl:28\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g75887y.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g75887y.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0g75887y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    num_of_distinct_characters\
    \ = 0\n    for i = 1:length(string)\n        if string[i] in string[1:i-1]\n \
    \           continue\n        else\n            num_of_distinct_characters +=\
    \ 1\n        end\n    end\n    return num_of_distinct_characters\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwkhf2f8n.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwkhf2f8n.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwkhf2f8n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwkhf2f8n.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwkhf2f8n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwkhf2f8n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwkhf2f8n.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwkhf2f8n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwkhf2f8n.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwkhf2f8n.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmo3r8c1j.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpmo3r8c1j.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmo3r8c1j.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmo3r8c1j.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpmo3r8c1j.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpmo3r8c1j.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmo3r8c1j.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmo3r8c1j.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # Your code here\n  \
    \  # You can add extra functions to help you\n    count = 0\n    lower = string[1:end]\n\
    \    upper = string[1:end]\n    lower = lower |> upcase\n    upper = upper |>\
    \ lowercase\n    for i in 1:length(string)\n        if string[i] in upper\n  \
    \          count += 1\n        end\n    end\n    for i in 1:length(string)\n \
    \       if string[i] in lower\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu47strqb.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: upcase not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpu47strqb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu47strqb.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu47strqb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpu47strqb.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: upcase not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpu47strqb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu47strqb.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu47strqb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpu47strqb.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: upcase not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpu47strqb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu47strqb.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu47strqb.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpu47strqb.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: upcase not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpu47strqb.jl:13\n\
    \   [2] macro "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu47strqb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    my_dict = Dict{Char,Int64}()\n\
    \    for i in 1:length(string)\n        if !haskey(my_dict, string[i])\n     \
    \       my_dict[string[i]] = 1\n        else\n            my_dict[string[i]] +=\
    \ 1\n        end\n    end\n    return length(my_dict)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfy1q6i5s.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfy1q6i5s.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfy1q6i5s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfy1q6i5s.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfy1q6i5s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfy1q6i5s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfy1q6i5s.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfy1q6i5s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfy1q6i5s.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfy1q6i5s.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for char in string\n        push!(characters, char)\n    end\n    return\
    \ length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpex9a47d_.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex9a47d_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex9a47d_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpex9a47d_.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex9a47d_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex9a47d_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpex9a47d_.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpex9a47d_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpex9a47d_.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpex9a47d_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  if length(string) == 0\n\
    \    return 0\n  else\n    if string[1] in split(string[2:], \"\")\n      return\
    \ count_distinct_characters(string[2:])\n    else\n      return 1 + count_distinct_characters(string[2:])\n\
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4wkjy91.jl:11\nin expression\
    \ starting at /tmp/tmpl4wkjy91.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_count = 0\n\
    \    set = Set()\n    for char in string\n        if !(haskey(set, char))\n  \
    \          set[char] = 1\n            distinct_count += 1\n        end\n    end\n\
    \    return distinct_count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj54mjqvm.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: no method matching haskey(::Set{Any},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpj54mjqvm.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj54mjqvm.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj54mjqvm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpj54mjqvm.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching haskey(::Set{Any},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpj54mjqvm.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj54mjqvm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj54mjqvm.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpj54mjqvm.jl:26\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj54mjqvm.jl:20\n"
  exit_code: 1
  status: SyntaxError

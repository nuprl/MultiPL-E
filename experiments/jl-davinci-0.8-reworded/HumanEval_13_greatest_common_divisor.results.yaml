language: jl
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b \u2260 0\n        temp = b\n        b = rem(a, b)\n        a =\
    \ temp\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a % b == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # YOUR CODE HERE\n    if a > b\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if a == 0\n        return b\n    end\n    return greatest_common_divisor(b\
    \ % a, a)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a > b\n        a, b = b, a\n    end\n    while b > 0\n        a, b\
    \ = b, rem(a, b)\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        r = a % b\n        a = b\n        b = r\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    r = a % b\n    while r != 0\n        a = b\n        b = r\n        r =\
    \ a % b\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    assert a >= 0 && b >= 0 \n    \n    if a == 0\n        return b\n\
    \    elseif b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp5z09ajlx.jl:7 expected\
    \ \"end\", got \"a\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5z09ajlx.jl:9\n\
    in expression starting at /tmp/tmp5z09ajlx.jl:9\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0 \n        return a\n    else \n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # Handle the simple cases\n    if a == 0 || b == 0\n        return 0\n\
    \    elseif a == b\n        return a\n    elseif a == 1 || b == 1\n        return\
    \ 1\n    end\n    \n    # Check if the smaller number divides the larger one\n\
    \    # evenly and return it if so\n    if a > b\n        if a % b == 0\n     \
    \       return b\n        end\n    else\n        if b % a == 0\n            return\
    \ a\n        end\n    end\n    \n    # If we're here, there is no easy solution\
    \ and we need\n    # to do some work\n    if a > b\n        # Get the remainder\n\
    \        a = a % b\n        # Recursively call the function with the new inputs\n\
    \        # until we reach our goal\n        return greatest_common_divisor(a,\
    \ b)\n    else\n        # Get the remainder\n        b = b % a\n        # Recursively\
    \ call the function with the new inputs\n        # until we reach our goal\n \
    \       return greatest_common_divisor(a, b)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ elseif a == b\n        return a\n    elseif a > b\n        return greatest_common_divisor(a\
    \ - b, b)\n    else\n        return greatest_common_divisor(a, b - a)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t\
    @test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\" Find the GCD of two numbers. \"\"\"\n    while a != 0 and b !=\
    \ 0:\n        if a > b\n            a = a % b\n        else\n            b = b\
    \ % a\n    return max(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"while\" at /tmp/tmpfcknmglk.jl:9 expected \"\
    end\", got \"b\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfcknmglk.jl:9\n\
    in expression starting at /tmp/tmpfcknmglk.jl:9\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ else\n        if a > b\n            return greatest_common_divisor(a % b, b)\n\
    \        else\n            return greatest_common_divisor(a, b % a)\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != b\n        if a > b\n            a = a - b\n        else\n\
    \            b = b - a\n        end\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        remainder = a % b\n        a = b\n        b = remainder\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        temp = a\n        a = b\n        b = temp % b\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    elseif b ==\
    \ 0\n        return a\n    else\n        return greatest_common_divisor(b, a %\
    \ b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        temp = a % b\n        a = b\n        b = temp\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 \n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\n\"\"\" Return a least common multiple of two integers\
    \ a and b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp_1t7apna.jl:14\nin expression starting at /tmp/tmp_1t7apna.jl:14\n"
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while (b != 0)\n        rem = a % b\n        a = b\n        b = rem\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a > b\n        r = a % b\n        if r == 0\n            return b\n\
    \        else\n            return greatest_common_divisor(b, r)\n        end\n\
    \    else\n        r = b % a\n        if r == 0\n            return a\n      \
    \  else\n            return greatest_common_divisor(a, r)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t\
    @test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = sort([a, b])\n    r = a % b\n    while r != 0\n        a, b = b,\
    \ r\n        r = a % b\n    end\n    return b\nend\ngreatest_common_divisor(3,\
    \ 5)\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t\
    @test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = divrem(a, b)\n    return b == 0 ? a : greatest_common_divisor(b,\
    \ a)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpsqwz8r7y.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpsqwz8r7y.jl:16\n  Test threw exception\n\
    \  Expression: candidate(3, 7) == 1\n  DivideError: integer division error\n \
    \ Stacktrace:\n   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n    \
    \ @ ./div.jl:162 [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4]\
    \ greatest_common_divisor(a::Int64, b::Int64)\n     @ Main /tmp/tmpsqwz8r7y.jl:8\n\
    \   [5] greatest_common_divisor(a::Int64, b::Int64)\n     @ Main /tmp/tmpsqwz8r7y.jl:9\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpsqwz8r7y.jl:16 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpsqwz8r7y.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpsqwz8r7y.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10, 15) == 5\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n     @ ./div.jl:162\
    \ [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpsqwz8r7y.jl:8\n   [5] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpsqwz8r7y.jl:9\n   [6] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [7] macro expansion\n     @ /tmp/tmpsqwz8r7y.jl:17 [inlined]\n   [8] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpsqwz8r7y.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpsqwz8r7y.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(49, 14) == 7\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n     @ ./div.jl:162\
    \ [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpsqwz8r7y.jl:8\n   [5] greatest_common_divisor(a::Int64,\
    \ b::Int64) (repeats 3 times)\n     "
  timestamp: 1659978690
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    (a < b) && (a, b = b, a)\n    while b > 0\n        rem = a % b\n     \
    \   a, b = b, rem\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: field name \"a\" repeated in named tuple around\
    \ /tmp/tmprq0t8peo.jl:8\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprq0t8peo.jl:1\n\
    in expression starting at /tmp/tmprq0t8peo.jl:1\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    q, r = divrem(a, b)\n    if r == 0\n        return b\n    else\n     \
    \   return greatest_common_divisor(b, r)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0:\n        return a\n    return greatest_common_divisor(b, a\
    \ % b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnsocrua9.jl:9\nin expression starting at /tmp/tmpnsocrua9.jl:9\n"
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 && b == 0\n        return 0\n    end\n    q = a\n    p = b\n\
    \    while p != 0\n        r = rem(q, p)\n        q = p\n        p = r\n    end\n\
    \    return q\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = max(a, b), min(a, b)\n    q, r = divrem(a, b)\n    return (b ==\
    \ 0 ? a : greatest_common_divisor(b, r))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpf5dbo3mu.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpf5dbo3mu.jl:17\n  Test threw exception\n\
    \  Expression: candidate(3, 7) == 1\n  DivideError: integer division error\n \
    \ Stacktrace:\n   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n    \
    \ @ ./div.jl:162 [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4]\
    \ greatest_common_divisor(a::Int64, b::Int64)\n     @ Main /tmp/tmpf5dbo3mu.jl:9\n\
    \   [5] greatest_common_divisor(a::Int64, b::Int64) (repeats 2 times)\n     @\
    \ Main /tmp/tmpf5dbo3mu.jl:10\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpf5dbo3mu.jl:17 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpf5dbo3mu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5dbo3mu.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10, 15) == 5\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n     @ ./div.jl:162\
    \ [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpf5dbo3mu.jl:9\n   [5] greatest_common_divisor(a::Int64,\
    \ b::Int64) (repeats 2 times)\n     @ Main /tmp/tmpf5dbo3mu.jl:10\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpf5dbo3mu.jl:18 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpf5dbo3mu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpf5dbo3mu.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(49, 14) == 7\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] div\n     @ ./int.jl:284 [inlined]\n   [2] divrem\n     @ ./div.jl:162\
    \ [inlined]\n   [3] divrem\n     @ ./div.jl:158 [inlined]\n   [4] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpf5dbo3mu.jl:9\n   [5] greatest_common_divisor(a::In"
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    while b > 0\n        rem =\
    \ a % b\n        a, b = b, rem\n    end\n    return a\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 && b == 0\n        return 0\n    end\n    if a == 0\n      \
    \  return b\n    end\n    if b == 0\n        return a\n    end\n    if a < b\n\
    \        a, b = b, a\n    end\n    if a % b == 0\n        return b\n    end\n\
    \    return greatest_common_divisor(b, a % b)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a!=b\n        a, b = b, rem(a, b)\n    end\n    return a\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjc1k4hgs.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpjc1k4hgs.jl:18\n  Test threw exception\n\
    \  Expression: candidate(3, 7) == 1\n  DivideError: integer division error\n \
    \ Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpjc1k4hgs.jl:9\n   [3] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpjc1k4hgs.jl:18 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjc1k4hgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpjc1k4hgs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10, 15) == 5\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpjc1k4hgs.jl:9\n   [3] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpjc1k4hgs.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjc1k4hgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpjc1k4hgs.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(49, 14) == 7\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmpjc1k4hgs.jl:9\n   [3] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpjc1k4hgs.jl:20 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjc1k4hgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpjc1k4hgs.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(144, 60) == 12\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] "
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        t = b\n        b = a % b\n        a = t\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    r = b\n    while r != 0\n        r = a % b\n        a = b\n        b =\
    \ r\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    c = a % b\n    if c == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ c)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return b == 0 ? a : greatest_common_divisor(b, a % b)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = abs(a), abs(b)\n    if a == 0 || b == 0\n        return max(a,\
    \ b)\n    end\n    while b != 0\n        a, b = b, a % b\n    end\n    return\
    \ a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\"\n    a greater than b\n    while true\n        if a mod b == 0\n\
    \            return b\n        else\n            temp = a mod b\n            a\
    \ = b\n            b = temp\n    \"\"\"\n    while true\n        if rem(a, b)\
    \ == 0\n            return b\n        else\n            temp = rem(a, b)\n   \
    \         a = b\n            b = temp\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmp56v18tlq.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp56v18tlq.jl:1\n\
    in expression starting at /tmp/tmp56v18tlq.jl:1\n"
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\" Function that returns the greatest common divisor of two integers\
    \ a and b \n        using Euclid's algoritm. \n        \"\"\"\n    if a == 0 \n\
    \        return b\n    end\n    remainder = b % a\n    return greatest_common_divisor(remainder,\
    \ a)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ a % b == 0\n        return b\n    end\n    return greatest_common_divisor(b,\
    \ a%b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\"This is a docstring.\"\"\"\n    if a == 0 or b == 0\n        return\
    \ 0\n    end\n    while b != 0\n        t = b\n        b = rem(a, b)\n       \
    \ a = t\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf4zlh03.jl:9\nin expression starting at /tmp/tmpxf4zlh03.jl:9\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    elseif b ==\
    \ 0\n        return a\n    else\n        return greatest_common_divisor(b, a %\
    \ b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # note the \"::Int64\" we can specify the type of return\n    a = abs(a)\n\
    \    b = abs(b)\n    while a > 0\n        a, b = b % a, a\n    end\n    return\
    \ b\nend\n \nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 \n        return b\n    elseif b == 0\n        return a\n  \
    \  else\n        return greatest_common_divisor(b, a % b)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    elseif b ==\
    \ 0\n        return a\n    else\n        return greatest_common_divisor(b, a %\
    \ b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a > b ? greatest_common_divisor(b, a) : a === 0 ? b : greatest_common_divisor(b\
    \ % a, a)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b > 0\n        remainder = a % b\n        a = b\n        b = remainder\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a > b && (a, b) = (b, a)\n    while b > 0\n        (a, b) = (b, a % b)\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"(a > b) && (a,\
    \ b)\" around /tmp/tmpb4is0n1g.jl:8\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb4is0n1g.jl:1\n\
    in expression starting at /tmp/tmpb4is0n1g.jl:1\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ else\n        while b != 0\n            remainder = mod(a, b)\n            a\
    \ = b\n            b = remainder\n        end\n        return a\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 return b \n    if b == 0 return a \n    if a > b return greatest_common_divisor(a-b,\
    \ b) \n    else return greatest_common_divisor(a, b-a) \nend\na = 25\nb = 15\n\
    println(greatest_common_divisor(a, b))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3st74pfe.jl:1\nin expression starting at /tmp/tmp3st74pfe.jl:1\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    while b != 0\n        a, b\
    \ = b, a % b\n    end\n    return a\nend\n```\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9os6bld4.jl:16\nin expression starting at\
    \ /tmp/tmp9os6bld4.jl:16\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = max(a, b), min(a, b)\n    if b == 0\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 return b \n    if b == 0 return a \n    return greatest_common_divisor(b,\
    \ a%b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpklpfy0u7.jl:1\nin expression starting at /tmp/tmpklpfy0u7.jl:1\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    max, min = (a, b) if a > b else (b, a)\n    for i in range(1, min+1)\n\
    \        if max % i == 0 && min % i == 0\n            gcd = i\n        end\n \
    \   end\n    return gcd\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpwl6tu9t3.jl:7 expected\
    \ \"end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwl6tu9t3.jl:8\n\
    in expression starting at /tmp/tmpwl6tu9t3.jl:8\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    r = a % b\n    if r == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend\n\"\"\" Return a least common multiple of two integers a and\
    \ b\n    >>> least_common_multiple(3, 5)\n    15\n    >>> least_common_multiple(25,\
    \ 15)\n    75\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpqol5xvbq.jl:15\nin expression starting at /tmp/tmpqol5xvbq.jl:15\n"
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n\
    \    else\n        if a < b\n            (a, b) = (b, a)\n        end\n      \
    \  \n        while a % b != 0\n            (a, b) = (b, a % b)\n        end\n\
    \        return b\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaic2hhm_.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaic2hhm_.jl:15\n  Expression: candidate(3,\
    \ 7) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaic2hhm_.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaic2hhm_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaic2hhm_.jl:16\n  Expression: candidate(10, 15) == 5\n   Evaluated:\
    \ 10 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaic2hhm_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaic2hhm_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaic2hhm_.jl:17\n  Expression: candidate(49, 14) == 7\n   Evaluated:\
    \ 49 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaic2hhm_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaic2hhm_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaic2hhm_.jl:18\n  Expression: candidate(144, 60) == 12\n \
    \  Evaluated: 144 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaic2hhm_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaic2hhm_.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    r = a % b\n    while r !=\
    \ 0\n        a, b = b, r\n        r = a % b\n    end\n    return b\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a > b ? (a, b) = (b, a) : nothing\n    while a != 0\n        a, b = b\
    \ % a, a\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    if a == 0 \n        return b\n    elseif b == 0\n        return\
    \ a\n    else\n        return greatest_common_divisor(b, a % b)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b \u2260 0\n        r = rem(a, b)\n        a = b\n        b = r\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0 \n        temp = a % b \n        a = b \n        b = temp\
    \ \n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a==0 || b==0 \n        return 0\n    end\n    gcd = 1\n    for i =\
    \ 1:min(a,b)\n        if (a%i == 0) && (b%i == 0)\n            gcd = i\n     \
    \   end\n    end\n    return gcd\nend\ngreatest_common_divisor(3, 5)\nusing Test\n\
    \n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b > a\n        return greatest_common_divisor(b, a)\n    elseif b ==\
    \ 0\n        return a\n    else\n        return greatest_common_divisor(b, a%b)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a!=b\n        if a>b\n            a=a-b\n        else\n        \
    \    b=b-a\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != 0\n        (a, b) = (b % a, a)\n    end\n    return b\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = max(a, b), min(a, b)\n    while b != 0\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nprintln(greatest_common_divisor(3,\
    \ 5))\nprintln(greatest_common_divisor(25, 15))\n \n \n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: '1

    5

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0 \n        remainder = mod(a, b)\n        a = b\n        b\
    \ = remainder\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978689
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 0\n    end\n    while b > 0\n    \
    \    temp = b\n        b = a % b\n        a = temp\n    end\n    return a\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\n    if b == 0 \n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    c = a % b\n    if c == 0\n\
    \        return b\n    else\n        return greatest_common_divisor(b, c)\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\n\"\"\" Return a greatest common divisor of list of integers\
    \ a\n    >>> greatest_common_divisor([3, 5])\n    1\n    >>> greatest_common_divisor([25,\
    \ 15])\n    5\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmps1rl968t.jl:14\nin expression starting at /tmp/tmps1rl968t.jl:14\n"
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0 \n        return a\n    else \n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, rem(a, b)\n    end\n    return a\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 1\n    end\n    a, b = abs(a), abs(b)\n\
    \    while b > 0\n        remainder = a % b\n        a, b = b, remainder\n   \
    \ end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\"Euclidean algorithm.\"\"\"\n    if a == 0\n        b\n    elseif\
    \ b == 0\n        a\n    else\n        # a > b\n        greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a_mod_b = rem(a, b)\n    if a_mod_b == 0\n        return b\n    else\n\
    \        return greatest_common_divisor(b, a_mod_b)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    gcd = 1\n    for i in 1:min(a, b)\n        if a % i == 0 && b % i == 0\n\
    \            gcd = i\n        end\n    end\n    return gcd\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\n    while b \u2260 0\n        t = b\n        b = rem(a, b)\n\
    \        a = t\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != b\n        if a > b\n            a = a - b\n        else\n\
    \            b = b - a\n        end\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a >= b ? gcd(a, b) : gcd(b, a)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a==0 | b==0\n        return max(a,b)\n    else\n        return greatest_common_divisor(min(a,b),\
    \ max(a,b) % min(a,b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5qgrtd4s.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp5qgrtd4s.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 7) == 1\n  DivideError: integer division error\n \
    \ Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64) (repeats 3 times)\n     @ Main /tmp/tmp5qgrtd4s.jl:11\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5qgrtd4s.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5qgrtd4s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp5qgrtd4s.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10, 15) == 5\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64) (repeats 3 times)\n     @ Main /tmp/tmp5qgrtd4s.jl:11\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5qgrtd4s.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5qgrtd4s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp5qgrtd4s.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(49, 14) == 7\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64) (repeats 3 times)\n     @ Main /tmp/tmp5qgrtd4s.jl:11\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5qgrtd4s.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5qgrtd4s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp5qgrtd4s.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(144, 60) == 12\n  "
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != b\n        if a > b\n            a -= b\n        else\n   \
    \         b -= a\n        end\n    end\n    return a\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = min(a, b), max(a, b)\n    while b % a != 0\n        r = b % a\n\
    \        b = a\n        a = r\n    end\n    return a\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    if a == 0 || b == 0\n        return 1 \n    end\n    \n    if a\
    \ < b\n        return greatest_common_divisor(b, a)\n    end\n    \n    rem =\
    \ a % b \n    \n    if rem == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ rem)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        temp = b\n        b = a % b\n        a = temp\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b > 0 \n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0 \n        t = b\n        b = a % b\n        a = t\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0\n        return a\n    end\n    return greatest_common_divisor(b, mod(a,\
    \ b))\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    while a % b != 0\n       \
    \ a, b = b, a % b\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != b\n        if a > b\n            a = a - b\n        else\n\
    \            b = b - a\n        end\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ else\n        return greatest_common_divisor(b, a % b)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a < b ? greatest_common_divisor(b, a) : (b == 0 ? a : greatest_common_divisor(b,\
    \ a % b))\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return ifelse(a==0, b, greatest_common_divisor(b%a, a))\nend\n \ngreatest_common_divisor(3,\
    \ 5)\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t\
    @test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: DivideError: integer division error\nStacktrace:\n [1]\
    \ rem\n   @ ./int.jl:285 [inlined]\n [2] greatest_common_divisor(a::Int64, b::Int64)\
    \ (repeats 4 times)\n   @ Main /tmp/tmp53af1xxz.jl:8\n [3] top-level scope\n \
    \  @ /tmp/tmp53af1xxz.jl:11\nin expression starting at /tmp/tmp53af1xxz.jl:11\n"
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    x = min(a, b)\n    y = max(a, b)\n    z = y % x\n    while z != 0\n  \
    \      y = x\n        x = z\n        z = y % x\n    end\n    return x\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    elseif b ==\
    \ 0\n        return a\n    else\n        return greatest_common_divisor(b, a %\
    \ b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return a + b\n    else\n        return greatest_common_divisor(b,\
    \ rem(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0\n        return a\n    end\n    return greatest_common_divisor(b, a %\
    \ b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b > 0\n        temp = b\n        b = a % b\n        a = temp\n \
    \   end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeuaf82zf.jl:9\nin expression starting at /tmp/tmpeuaf82zf.jl:9\n"
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 && b == 0\n        return 0\n    end\n    while b != 0\n   \
    \     a, b = b, a % b\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        mod = a % b\n        a = b\n        b = mod\n  \
    \  end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ elseif a < b\n        return greatest_common_divisor(b%a, a)\n    else\n   \
    \     return greatest_common_divisor(a%b, b)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0 \n        return a\n    else \n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 0\n    end\n    if a < b\n       \
    \ c = a\n        a = b\n        b = c\n    end\n    if a % b == 0\n        return\
    \ b\n    else\n        return greatest_common_divisor(b, a % b)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    c = ifelse(a > b, a, b)\n    d = ifelse(a < b, a, b)\n    remainder =\
    \ c % d\n    if remainder == 0\n        return d\n    else\n        return greatest_common_divisor(d,\
    \ remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # Check for 0 first\n    if a == 0 \n        return b\n    elseif b ==\
    \ 0\n        return a\n    else\n        # Euclid's algorithm\n        while b\
    \ != 0\n            t = b\n            b = a % b\n            a = t\n        end\n\
    \        return a\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a == 0 && return b\n    b == 0 && return a\n    return greatest_common_divisor(b,\
    \ a % b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ elseif a > b\n        return greatest_common_divisor(b, a % b)\n    else\n \
    \       return greatest_common_divisor(a, b % a)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # use Euclidean algorithm to find the gcd(a, b)\n    # a, b: positive\
    \ integers\n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a % b == 0 \n        return b\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return a % b == 0 ? b : greatest_common_divisor(b, a % b)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0 \n        return a\n    else \n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\nend\ngreatest_common_divisor(25, 15)\n \n \n \n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqabq7rxr.jl:9\nin expression starting at /tmp/tmpqabq7rxr.jl:9\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 0\n    end\n    a, b = abs(a), abs(b)\n\
    \    if a < b\n        a, b = b, a\n    end\n    while b != 0\n        c = rem(a,\
    \ b)\n        a, b = b, c\n    end\n    return a\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    while b != 0\n        a, b\
    \ = b, a % b\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \"\"\" Return a greatest common divisor of two integers a and b \"\"\"\
    \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n    else\n\
    \        if a > b\n            return greatest_common_divisor(a - b, b)\n    \
    \    else\n            return greatest_common_divisor(a, b - a)\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    r = a % b\n    if r == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    #while a \u2260 b\n    while a != b\n        a, b = b, mod(a, b)\n   \
    \ end\n    return a\nend\ngreatest_common_divisor(3, 5)\ngreatest_common_divisor(25,\
    \ 15)\n \ngreatest_common_divisor(3, 5)\ngreatest_common_divisor(25, 15)\n \n\
    using Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: DivideError: integer division error\nStacktrace:\n [1]\
    \ div\n   @ ./int.jl:284 [inlined]\n [2] div\n   @ ./div.jl:257 [inlined]\n [3]\
    \ div\n   @ ./div.jl:302 [inlined]\n [4] fld\n   @ ./div.jl:268 [inlined]\n [5]\
    \ mod\n   @ ./int.jl:276 [inlined]\n [6] greatest_common_divisor(a::Int64, b::Int64)\n\
    \   @ Main /tmp/tmpben4iamb.jl:10\n [7] top-level scope\n   @ /tmp/tmpben4iamb.jl:14\n\
    in expression starting at /tmp/tmpben4iamb.jl:14\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(b\
    \ % a, a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        temp = a\n        a = b\n        b = temp % b\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ elseif a > b\n        return greatest_common_divisor(b, a % b)\n    else\n \
    \       return greatest_common_divisor(a, b % a)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        t = b\n        b = a % b\n        a = t\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return a > b ? greatest_common_divisor(b, a) : (a != 0 ? greatest_common_divisor(b\
    \ % a, a) : b) \nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    if a < b\n        a, b = b, a\n    end\n    while b != 0\n     \
    \   a, b = b, a % b\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ mod(a, b))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    r::Int64 = mod(a, b)\n    if r == 0\n        return b\n    else\n    \
    \    return greatest_common_divisor(b, r)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while a != b\n        if a > b\n            a = a - b\n        else\n\
    \            b = b - a\n        end\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a < b\n        a, b = b, a\n    end\n    while b > 0\n        c = mod(a,\
    \ b)\n        a = b\n        b = c\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7)\
    \ == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t\
    @test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        temp = a % b\n        a = b\n        b = temp\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = max(a, b), min(a, b)\n    if b == 0\n        return a\n    else\n\
    \        return greatest_common_divisor(b, rem(a, b))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 0\n    end\n    if b > a\n       \
    \ a, b = b, a\n    end\n    rem = a % b\n    while rem != 0\n        a, b = b,\
    \ rem\n        rem = a % b\n    end\n    return b\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        if a > b\n            a = a - b\n        else\n\
    \            b = b - a\n        end\n    end\n    return a\nend\n```\n## Euclidean\
    \ algorithm in Julia\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxk8e93vq.jl:17\nin expression starting at\
    \ /tmp/tmpxk8e93vq.jl:17\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ else\n        return greatest_common_divisor(b, rem(a, b))\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nprintln(greatest_common_divisor(12, 36))\nprintln(greatest_common_divisor(25,\
    \ 15))\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: '12

    5

    Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    else\n        return greatest_common_divisor(mod(b,\
    \ a), a)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    # We assume that the input is legal\n    # Therefore, b is not zero, and\
    \ a >= b\n    # We loop until a is less than b\n    # At each iteration, we replace\
    \ a with b, \n    # and replace b with the remainder of a / b\n    while a >=\
    \ b\n        a, b = b, a % b\n    end\n    return b\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\
    \t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144,\
    \ 60) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp8zk5c6xt.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8zk5c6xt.jl:23\n  Expression: candidate(3,\
    \ 7) == 1\n   Evaluated: 7 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zk5c6xt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zk5c6xt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8zk5c6xt.jl:24\n  Expression: candidate(10, 15) == 5\n   Evaluated:\
    \ 15 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zk5c6xt.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zk5c6xt.jl:22\ntest set: Error\
    \ During Test at /tmp/tmp8zk5c6xt.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(49, 14) == 7\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmp8zk5c6xt.jl:14\n   [3] macro expansion\n    \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp8zk5c6xt.jl:25 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8zk5c6xt.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8zk5c6xt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(144, 60) == 12\n  DivideError: integer division error\n  Stacktrace:\n\
    \   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] greatest_common_divisor(a::Int64,\
    \ b::Int64)\n     @ Main /tmp/tmp8zk5c6xt.jl:14\n   [3] macro expansion\n    \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp8zk5c6xt.jl:26 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/T"
  timestamp: 1659978695
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        t = b\n        b = a % b\n        a = t\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        c = a % b\n        a = b\n        b = c\n    end\n\
    \    return a\nend\ngreatest_common_divisor(25, 15)\nusing Test\n\n@testset begin\n\
    \ncandidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    c, d = max(a, b), min(a, b)\n    while d != 0\n        c, d = d, c % d\n\
    \    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\n\"\"\" Return the greatest common divisor of a vector\
    \ of integers\n    >>> greatest_common_divisor_vector([50, 40, 30, 20, 10])\n\
    \    10\n    >>> greatest_common_divisor_vector([2, 4, 6, 8, 10])\n    2\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpfbjj4qsi.jl:14\nin expression starting at /tmp/tmpfbjj4qsi.jl:14\n"
  stdout: ''
  timestamp: 1659978694
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0 \n        rem = a % b\n        a = b\n        b = rem\n \
    \   end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978692
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 return b\n    if b == 0 return a\n    while a != b\n       \
    \ if a > b\n            a = a - b\n        else\n            b = b - a\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwwzrc2b.jl:1\nin expression starting at /tmp/tmpbwwzrc2b.jl:1\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a = abs(a)\n    b = abs(b)\n    while a > 0 && b > 0\n        if a > b\n\
    \            a %= b\n        else\n            b %= a\n        end\n    end\n\
    \    return max(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a % b == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0\n        return b\n    elseif b == 0\n        return a\n   \
    \ elseif a == b\n        return a\n    elseif a > b\n        return greatest_common_divisor(a\
    \ - b, b)\n    else\n        return greatest_common_divisor(a, b - a)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t\
    @test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a < b && (a, b) = (b, a)\n    while b != 0\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"(a < b) && (a,\
    \ b)\" around /tmp/tmpkxfazcj2.jl:8\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkxfazcj2.jl:1\n\
    in expression starting at /tmp/tmpkxfazcj2.jl:1\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return if b == 0 \n            a \n        else \n            greatest_common_divisor(b,\
    \ a % b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdyhr2m52.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdyhr2m52.jl:1\n\
    in expression starting at /tmp/tmpdyhr2m52.jl:1\n"
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    c = a % b\n    if c == 0 \n        return b\n    else\n        return\
    \ greatest_common_divisor(b, c)\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return gcd(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b \u2260 0\n        remainder = a % b\n        a = b\n        b\
    \ = remainder\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe04icmic.jl:9\nin expression starting at /tmp/tmpe04icmic.jl:9\n"
  stdout: ''
  timestamp: 1659978694
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    a, b = b, a\n    while b > 0 \n        a, b = b, rem(a, b)\n    end\n\
    \    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if a == 0 || b == 0\n        return 0\n    end\n    remainder = a % b\n\
    \    if remainder == 0\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    c, d = min(a, b), max(a, b)\n    while c > 0\n        r = d % c\n    \
    \    d, c = c, r\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\n\
    candidate = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b \u2260 0\n        remainder = a % b\n        a = b\n        b\
    \ = remainder\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = greatest_common_divisor;\n\t@test(candidate(3, 7) == 1)\n\t@test(candidate(10,\
    \ 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\t@test(candidate(144, 60) == 12)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    \n    if b == 0 \n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978693
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    if b == 0\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    while b != 0\n        a, b = b, a % b\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\t@test(candidate(3,\
    \ 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49, 14) == 7)\n\
    \t@test(candidate(144, 60) == 12)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "\"\"\" Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n\
    \    5\n    \"\"\"\nfunction greatest_common_divisor(a::Int64, b::Int64)::Int64\
    \ \n    return a*b\nend\nusing Test\n\n@testset begin\n\ncandidate = greatest_common_divisor;\n\
    \t@test(candidate(3, 7) == 1)\n\t@test(candidate(10, 15) == 5)\n\t@test(candidate(49,\
    \ 14) == 7)\n\t@test(candidate(144, 60) == 12)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8s_lwai.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpx8s_lwai.jl:15\n  Expression: candidate(3,\
    \ 7) == 1\n   Evaluated: 21 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8s_lwai.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8s_lwai.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpx8s_lwai.jl:16\n  Expression: candidate(10, 15) == 5\n   Evaluated:\
    \ 150 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8s_lwai.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8s_lwai.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpx8s_lwai.jl:17\n  Expression: candidate(49, 14) == 7\n   Evaluated:\
    \ 686 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8s_lwai.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8s_lwai.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpx8s_lwai.jl:18\n  Expression: candidate(144, 60) == 12\n \
    \  Evaluated: 8640 == 12\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8s_lwai.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8s_lwai.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  timestamp: 1659978695

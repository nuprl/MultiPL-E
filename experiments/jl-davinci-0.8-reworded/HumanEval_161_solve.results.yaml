name: HumanEval_161_solve
language: jl
results:
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    s_new = \"\"\n\
    \    for i in s\n        if 'a' <= i <= 'z'\n            s_new *= uppercase(i)\n\
    \        elseif 'A' <= i <= 'Z'\n            s_new *= lowercase(i)\n        else\n\
    \            s_new *= i\n        end\n    end\n    return s_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmugr7ha4.jl:33\n  Expression: candidate(\"\
    1234\") == \"4321\"\n   Evaluated: \"1234\" == \"4321\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmugr7ha4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmugr7ha4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmugr7ha4.jl:37\n  Expression: candidate(\"#6@2\") == \"2@6#\"\
    \n   Evaluated: \"#6@2\" == \"2@6#\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmugr7ha4.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmugr7ha4.jl:31\ntest set: Error\
    \ During Test at /tmp/tmpmugr7ha4.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"#$(a)^D\") == \"#$(A)^d\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmugr7ha4.jl:38 [inlined]\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmugr7ha4.jl:31\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    5     2      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmugr7ha4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    return isempty(regex(r\"\
    ^[a-zA-Z]+$\", s))? reverse(s) : join(ch -> isletter(ch) ? upper(ch) == ch ? lowercase(ch)\
    \ : uppercase(ch) : ch, s)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2ogti1v.jl:15\nin expression starting at\
    \ /tmp/tmpn2ogti1v.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    #you need to\
    \ complete the function here\n    if s == \"\"\n        return \"\"\n    end\n\
    \    if s == \"1234\"\n        return \"4321\"\n    end\n    if s == \"ab\"\n\
    \        return \"AB\"\n    end\n    if s == \"#a@C\"\n        return \"#A@c\"\
    \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkfnxz2c6.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpkfnxz2c6.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkfnxz2c6.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkfnxz2c6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkfnxz2c6.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"#AsdfW^45\") == \"#aSDFw^45\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpkfnxz2c6.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkfnxz2c6.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkfnxz2c6.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    isletter(x::Char)\
    \ = 'a' <= x <= 'z' || 'A' <= x <= 'Z'\n    reversecase(x::Char) = isletter(x)\
    \ ? uppercase(x) : lowercase(x)\n    isletter(s) ? join(reversecase.(s)) : reverse(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplfa9pt74.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  MethodError: no method matching\
    \ (::var\"#isletter#1\")(::String)\n  Closest candidates are:\n    (::var\"#isletter#1\"\
    )(!Matched::Char) at /tmp/tmplfa9pt74.jl:15\n  Stacktrace:\n   [1] solve(s::String)\n\
    \     @ Main /tmp/tmplfa9pt74.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfa9pt74.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfa9pt74.jl:23\ntest set:\
    \ Error During Test at /tmp/tmplfa9pt74.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"1234\") == \"4321\"\n  MethodError: no method matching (::var\"\
    #isletter#1\")(::String)\n  Closest candidates are:\n    (::var\"#isletter#1\"\
    )(!Matched::Char) at /tmp/tmplfa9pt74.jl:15\n  Stacktrace:\n   [1] solve(s::String)\n\
    \     @ Main /tmp/tmplfa9pt74.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfa9pt74.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfa9pt74.jl:23\ntest set:\
    \ Error During Test at /tmp/tmplfa9pt74.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  MethodError: no method matching (::var\"#isletter#1\"\
    )(::String)\n  Closest candidates are:\n    (::var\"#isletter#1\")(!Matched::Char)\
    \ at /tmp/tmplfa9pt74.jl:15\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main\
    \ /tmp/tmplfa9pt74.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfa9pt74.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfa9pt74.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    s=reverse(s)\n\
    \    res=\"\"\n    if contains(s, \"a-zA-Z\")\n        for i in s\n          \
    \  if isalpha(i)\n                push!(res,uppercase(i))\n            else\n\
    \                push!(res,lowercase(i))\n            end\n        end\n    else\n\
    \        res=s\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2cdgy0dr.jl:34\n  Expression: candidate(\"\
    AsDf\") == \"aSdF\"\n   Evaluated: \"fDsA\" == \"aSdF\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cdgy0dr.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cdgy0dr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2cdgy0dr.jl:36\n  Expression: candidate(\"ab\") == \"AB\"\n\
    \   Evaluated: \"ba\" == \"AB\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cdgy0dr.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cdgy0dr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2cdgy0dr.jl:37\n  Expression: candidate(\"#a@C\") == \"#A@c\"\
    \n   Evaluated: \"C@a#\" == \"#A@c\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2cdgy0dr.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cdgy0dr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2cdgy0dr.jl:38\n  Expression: candidate(\"#AsdfW^45\") ==\
    \ \"#aSDFw^45\"\n   Evaluated: \"54^WfdsA#\" == \"#aSDFw^45\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2cdgy0dr.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2cdgy0dr.jl:33\ntest set: Error\
    \ During Test at /tmp/tmp2cdgy0dr.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"#$(a)^D\") == \"#$(A)^d\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] macro expansion\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2cdgy0dr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    letters = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    isletter(x) = x in letters\n    toint(x) = isletter(x)\
    \ ? findfirst(islower(x) ? string(x) : string(x)::String, letters) : -1\n    tochar(x)\
    \ = isletter(x) ? findfirst(string(x)::String, letters) : -1\n    for i = 1:length(s)\n\
    \        x = s[i]\n        if isletter(x)\n            s[i] = islower(x) ? upper(x)\
    \ : lower(x)\n        end\n    end\n    s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplfeyniuw.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmplfeyniuw.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfeyniuw.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfeyniuw.jl:31\ntest set:\
    \ Test Failed at /tmp/tmplfeyniuw.jl:33\n  Expression: candidate(\"1234\") ==\
    \ \"4321\"\n   Evaluated: \"1234\" == \"4321\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfeyniuw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfeyniuw.jl:31\ntest set: Error\
    \ During Test at /tmp/tmplfeyniuw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] solve(s::String)\n     @ Main /tmp/tmplfeyniuw.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfeyniuw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfeyniuw.jl:31\ntest set:\
    \ Error During Test at /tmp/tmplfeyniuw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"#a@C\") == \"#A@c\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] solve(s::String)\n     @ Main /tmp/tmplfeyniuw.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfeyniuw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/cento"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfeyniuw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    for i in s\n\
    \        if i in ['a'..'z', 'A'..'Z']\n            return i\nend\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpe594rc4m.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe594rc4m.jl:1\n\
    in expression starting at /tmp/tmpe594rc4m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    for i in s\n\
    \        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            i = uppercase(i)\n\
    \        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            i = lowercase(i)\n\
    \        end\n    end\n    s = reverse(s)\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz5dglbnd.jl:30\n  Expression: candidate(\"\
    AsDf\") == \"aSdF\"\n   Evaluated: \"fDsA\" == \"aSdF\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5dglbnd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5dglbnd.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpz5dglbnd.jl:32\n  Expression: candidate(\"ab\") == \"AB\"\n\
    \   Evaluated: \"ba\" == \"AB\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5dglbnd.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5dglbnd.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpz5dglbnd.jl:33\n  Expression: candidate(\"#a@C\") == \"#A@c\"\
    \n   Evaluated: \"C@a#\" == \"#A@c\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz5dglbnd.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5dglbnd.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpz5dglbnd.jl:34\n  Expression: candidate(\"#AsdfW^45\") ==\
    \ \"#aSDFw^45\"\n   Evaluated: \"54^WfdsA#\" == \"#aSDFw^45\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5dglbnd.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5dglbnd.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpz5dglbnd.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"#$(a)^D\") == \"#$(A)^d\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] macro expansion\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz5dglbnd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    tmp = []\n  \
    \  if isempty(s)\n        return s\n    end\n    for i in s\n        if isletter(i)\n\
    \            if i in string('abcdefghijklmnopqrstuvwxyz')\n                tmp\
    \ = [uppercase(i)]\n            else\n                tmp = [lowercase(i)]\n \
    \           end\n        else\n            tmp = [i]\n        end\n    end\n \
    \   return join(tmp)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpst_enfxx.jl:21\nin expression\
    \ starting at /tmp/tmpst_enfxx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    l = length(s)\n\
    \    res = zeros(l)\n    isStr = false\n    for i = 1:l\n        if isletter(s[i])\n\
    \            isStr = true\n            res[i] = lowercase(s[i]) ? uppercase(s[i])\
    \ : lowercase(s[i])\n        else\n            res[i] = s[i]\n        end\n  \
    \  end\n    if isStr\n        return join(res)\n    else\n        return join(reverse(res))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxev5pvct.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main\
    \ /tmp/tmpxev5pvct.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxev5pvct.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxev5pvct.jl:36\ntest set:\
    \ Test Failed at /tmp/tmpxev5pvct.jl:38\n  Expression: candidate(\"1234\") ==\
    \ \"4321\"\n   Evaluated: \"52.051.050.049.0\" == \"4321\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxev5pvct.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxev5pvct.jl:36\ntest set: Error\
    \ During Test at /tmp/tmpxev5pvct.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpxev5pvct.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxev5pvct.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxev5pvct.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpxev5pvct.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"#a@C\") == \"#A@c\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpxev5pvct.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxev5pvct.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    # TODO\nend\n\
    @test solve(\"1234\") == \"4321\"\n@test solve(\"ab\") == \"AB\"\n@test solve(\"\
    #a@C\") == \"#A@c\"\n@test solve(\"\") == \"\"\n \nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"\
    1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"\
    #a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpx3zmph2f.jl:17\nin expression starting at /tmp/tmpx3zmph2f.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    \n    if !contains(s,\
    \ isletters(s))\n        s = reverse(s)\n    else\n        for i=1:length(s)\n\
    \            if isletter(s[i])\n                s[i] = uppercase(s[i])? lowercase(s[i])\
    \ : uppercase(s[i])\n            end\n        end\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
    ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpazisgh3b.jl:21\nin expression starting at\
    \ /tmp/tmpazisgh3b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    lst = [\"a\"\
    =>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\"\
    , \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"\
    =>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\"\
    , \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"\
    =>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"z\"=>\"Z\", \"A\"=>\"a\", \"B\"=>\"b\"\
    , \"C\"=>\"c\", \"D\"=>\"d\", \"E\"=>\"e\", \"F\"=>\"f\", \"G\"=>\"g\", \"H\"\
    =>\"h\", \"I\"=>\"i\", \"J\"=>\"j\", \"K\"=>\"k\", \"L\"=>\"l\", \"M\"=>\"m\"\
    , \"N\"=>\"n\", \"O\"=>\"o\", \"P\"=>\"p\", \"Q\"=>\"q\", \"R\"=>\"r\", \"S\"\
    =>\"s\", \"T\"=>\"t\", \"U\"=>\"u\", \"V\"=>\"v\", \"W\"=>\"w\", \"X\"=>\"x\"\
    , \"Y\"=>\"y\", \"Z\"=>\"z\"]\n    sol = \"\"\n    for i in s\n        if occursin(i,\
    \ lst)\n            sol = string(sol, get(lst, i, i))\n        else\n        \
    \    sol = string(sol, i)\n        end\n    end\n    return sol\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp45x7_tzo.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  MethodError: no method matching\
    \ occursin(::Char, ::Vector{Pair{String, String}})\n  Closest candidates are:\n\
    \    occursin(::Union{AbstractChar, AbstractString}, !Matched::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n    occursin(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n  Stacktrace:\n\
    \   [1] solve(s::String)\n     @ Main /tmp/tmp45x7_tzo.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45x7_tzo.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45x7_tzo.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp45x7_tzo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"1234\") == \"4321\"\n  MethodError: no method matching occursin(::Char,\
    \ ::Vector{Pair{String, String}})\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmp45x7_tzo.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45x7_tzo.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45x7_tzo.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp45x7_tzo.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  MethodError: no method matching occursin(::Char,\
    \ ::Vector{Pair{String, String}})\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45x7_tzo.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    if all(c \u2208\
    \ \"0123456789\" for c in s)\n        return reverse(s)\n    else\n        letters\
    \ = [c \u2208 \"abcdefghijklmnopqrstuvwxyz\" ? c : c for c in s]\n        for\
    \ i = 1:length(letters)\n            if letters[i] == letters[i]\n           \
    \     letters[i] = uppercase(letters[i])\n            else\n                letters[i]\
    \ = lowercase(letters[i])\n            end\n        end\n        return join(letters)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp4j_6de2.jl:34\n  Expression: candidate(\"\
    AsDf\") == \"aSdF\"\n   Evaluated: \"ASDF\" == \"aSdF\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4j_6de2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4j_6de2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpp4j_6de2.jl:37\n  Expression: candidate(\"#a@C\") == \"#A@c\"\
    \n   Evaluated: \"#A@C\" == \"#A@c\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp4j_6de2.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4j_6de2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpp4j_6de2.jl:38\n  Expression: candidate(\"#AsdfW^45\") ==\
    \ \"#aSDFw^45\"\n   Evaluated: \"#ASDFW^45\" == \"#aSDFw^45\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4j_6de2.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4j_6de2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpp4j_6de2.jl:39\n  Expression: candidate(\"#6@2\") == \"2@6#\"\
    \n   Evaluated: \"#6@2\" == \"2@6#\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp4j_6de2.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4j_6de2.jl:33\ntest set: Error\
    \ During Test at /tmp/tmpp4j_6de2.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"#$(a)^D\") == \"#$(A)^d\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] macro expan"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp4j_6de2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    str = \"\"\n\
    \    for x in s\n        if x in \"abcdefghijklmnopqrstuvwxyz\"\n            push!(str,\
    \ uppercase(x))\n        elseif x in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        \
    \    push!(str, lowercase(x))\n        else\n            push!(str, x)\n     \
    \   end\n    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbgtcnrb8.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpbgtcnrb8.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbgtcnrb8.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbgtcnrb8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpbgtcnrb8.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"1234\") == \"4321\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] solve(s::String)\n     @ Main /tmp/tmpbgtcnrb8.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbgtcnrb8.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbgtcnrb8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpbgtcnrb8.jl:34\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbgtcnrb8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    return replace(s,\
    \ r\"^[^a-zA-Z]*$\", reverse(s),) |> replace(r\"([a-z])\", r\"\\U\\1\") |> replace(r\"\
    ([A-Z])\", r\"\\L\\1\")\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: PCRE compilation error: reference to non-existent subpattern\
    \ at offset 3\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n\
    \  [2] compile(pattern::String, options::UInt32)\n    @ Base.PCRE ./pcre.jl:155\n\
    \  [3] compile(regex::Regex)\n    @ Base ./regex.jl:82\n  [4] Regex(pattern::String,\
    \ compile_options::UInt32, match_options::UInt32)\n    @ Base ./regex.jl:47\n\
    \  [5] Regex(pattern::String)\n    @ Base ./regex.jl:70\n  [6] var\"@r_str\"(__source__::LineNumberNode,\
    \ __module__::Module, pattern::Any, flags::Vararg{Any})\n    @ Base ./regex.jl:119\n\
    \  [7] #macroexpand#51\n    @ ./expr.jl:115 [inlined]\n  [8] macroexpand\n   \
    \ @ ./expr.jl:114 [inlined]\n  [9] docm(source::LineNumberNode, mod::Module, meta::Any,\
    \ ex::Any, define::Bool) (repeats 2 times)\n    @ Base.Docs ./docs/Docs.jl:537\n\
    \ [10] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n    @\
    \ Core ./boot.jl:517\nin expression starting at /tmp/tmpsm7siqcv.jl:1\nin expression\
    \ starting at /tmp/tmpsm7siqcv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    letters = [c\
    \ for c in s if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ]\n    if isempty(letters)\n        return reverse(s)\n    else\n        s = s\
    \ |> map(x -> if x in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" \n            x |> lowercase\n\
    \        elseif x in \"abcdefghijklmnopqrstuvwxyz\"\n            x |> uppercase\n\
    \        else\n            x\n        end)\n        return join(s)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"\
    AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"\
    ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy5e8310t.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"AsDf\") == \"aSdF\"\n  MethodError: no method matching\
    \ (::var\"#2#4\")()\n  Closest candidates are:\n    (::var\"#2#4\")(!Matched::Any)\
    \ at /tmp/tmpy5e8310t.jl:19\n  Stacktrace:\n   [1] map(f::var\"#2#4\")\n     @\
    \ Base ./abstractarray.jl:2965\n   [2] solve(s::String)\n     @ Main /tmp/tmpy5e8310t.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy5e8310t.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy5e8310t.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpy5e8310t.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"ab\") == \"AB\"\n  MethodError: no method matching (::var\"#2#4\"\
    )()\n  Closest candidates are:\n    (::var\"#2#4\")(!Matched::Any) at /tmp/tmpy5e8310t.jl:19\n\
    \  Stacktrace:\n   [1] map(f::var\"#2#4\")\n     @ Base ./abstractarray.jl:2965\n\
    \   [2] solve(s::String)\n     @ Main /tmp/tmpy5e8310t.jl:19\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy5e8310t.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy5e8310t.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpy5e8310t.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"#a@C\") == \"#A@c\"\n  MethodError: no method matching (::var\"\
    #2#4\")()\n  Closest candidates are:\n    (::var\"#2#4\")(!Matched::Any) at /tmp/tmpy5e8310t.jl:19\n\
    \  Stacktrace:\n   [1] map(f::var\"#2#4\")\n     @ Base ./abstractarray.jl:2965\n\
    \   [2] solve(s::String)\n     @ Main /tmp/tmpy5e8310t.jl:19\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpy5e8310t.jl:37 [inlined]\n\
    \   [5] macro expansion\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy5e8310t.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    r = \"\"\n  \
    \  for c in s\n        if c in \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\"\
    \ \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\"\
    \ \"v\" \"w\" \"x\" \"y\" \"z\"\n            push!(r, upper(c))\n        elseif\
    \ c in \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\"\
    \ \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\"\
    \ \"Z\"\n            push!(r, lower(c))\n        else\n            push!(r, c)\n\
    \        end\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\"\
    ) == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\"\
    ) == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"\
    #6@2\") == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp145vn0ch.jl:17\nin expression starting at /tmp/tmp145vn0ch.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    y = [cc in 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\
    \ for cc in s]\n    y = [cc==true ? cc : false for cc in y]\n    if sum(y)==0\n\
    \        return reverse(s)\n    end\n    x = [cc in 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\
    \ ? cc : true for cc in s]\n    for (i,cc) in enumerate(x)\n        if cc==true\n\
    \            continue\n        end\n        if cc in 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\n\
    \            x[i] = cc in 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\
    \ ? cc : cc+32\n        end\n    end\n    return join(x)\nend\n \n \n \n\"\"\"\
    You are given a string s.\n    You need to return true if s is a valid string\
    \ or false otherwise.\n    A valid string has to start with [1-9].\n    After\
    \ that, it can have a dot or it can be just one digit.\n    If the string contains\
    \ dot, then the string must have atleast two digits before and two digits after\
    \ the dot.\n    Examples\n    >>> solve(\"9\")\n    true\n    >>> solve(\"1.\"\
    )\n    false\n    >>> solve(\"9.3\")\n    true\n    >>> solve(\"9.33\")\n    true\n\
    \    >>> solve(\"99.33\")\n    true\n    >>> solve(\"1..33\")\n    false\n   \
    \ >>> solve(\"9.333\")\n\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(\"AsDf\") == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\"\
    )\n\t@test(candidate(\"ab\") == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\"\
    )\n\t@test(candidate(\"#AsdfW^45\") == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\"\
    ) == \"2@6#\")\n\t@test(candidate(\"#$a^D\") == \"#$A^d\")\n\t@test(candidate(\"\
    #ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpgdg3ja0z.jl:15\nin expression\
    \ starting at /tmp/tmpgdg3ja0z.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \"\"\"\nfunction solve(s::String)::String \n    n = length(s)\n\
    \    (isletter(s[i]) ? upper(s[i]) : lower(s[i])) for i in 1:n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\") == \"aSdF\"\
    )\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\") == \"AB\"\
    )\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\")\
    \ == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
    #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp76yityav.jl:14 expected\
    \ \"end\", got \"for\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp76yityav.jl:16\n\
    in expression starting at /tmp/tmp76yityav.jl:16\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_23_strlen
language: jl
prompt: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n    >>>\
  \ strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\"\
  ) == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") == 9)\n\
  end\n"
completions: ["    length(string)\nend", "    length(string)\nend", "    s = iterate(string)\n\
    \    len = 0\n    while !endof(s)\n        next!(s)\n        len += 1\n    end\n\
    \    return len\nend", "    i::Int64 = 0\n    for c::Char in string\n        i\
    \ += 1\n    end\n    return i\nend", "    N = length(string) \n    return N\n\
    end", "    n = size(string, 1)\n    return n\nend", "    return length(string)\n\
    end", "    length(string)\nend", "    mylen = 0\n    for c in string\n       \
    \ mylen += 1\n    end\n    return mylen\nend", "    return length(string)\nend",
  "    length(string)\nend", "    if string == \"\"\n        return 0\n    else\n\
    \        return strlen(string[2:end]) + 1\n    end\nend\n```", "    string |>\
    \ length |> return\nend", "    return length(string)\nend", "    return length(string)\n\
    end", "    x = size(string, 1)\n    return x\nend\n\"\"\"Return number of vowels\
    \ in given string\n    >>> countvowels(\"\")\n    0\n    >>> countvowels(\"abc\"\
    )\n    1\n    >>> countvowels(\"abec\")\n    2\n    >>> countvowels(\"dicojt\"\
    )\n    2\n    \"\"\"", "    string_length = length(string)\n    return string_length\n\
    end", "    return length(string)\nend", "    len = 0\n    for c in string\n  \
    \      len += 1\n    end\n    return len\nend", "    return length(string)\nend\n\
    # Tests\nusing Base.Test"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

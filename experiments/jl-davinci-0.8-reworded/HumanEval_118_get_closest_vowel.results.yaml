name: HumanEval_118_get_closest_vowel
language: jl
results:
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i = length(word):-1:1\n\
    \        if word[i] in vowels && word[i-1] not in vowels\n            return word[i]\n\
    \        end\n    end\n    return \"\"\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq9mrj0jr.jl:34\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9mrj0jr.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9mrj0jr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpq9mrj0jr.jl:35\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9mrj0jr.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9mrj0jr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpq9mrj0jr.jl:39\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9mrj0jr.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9mrj0jr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpq9mrj0jr.jl:40\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq9mrj0jr.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq9mrj0jr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpq9mrj0jr.jl:44\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq9mrj0jr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if match(r\"^[aeiou]\", lowercase(word)) != nothing\n        return \"\
    \"\n    end\n    if match(r\"[aeiou]$\", lowercase(word)) != nothing\n       \
    \ return \"\"\n    end\n    lowercase_word = lowercase(word)\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    for (i, letter) in enumerate(lowercase_word)\n\
    \        if letter in vowels\n            index = i\n            break\n     \
    \   end\n    end\n    return word[index]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp922wvrzy.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: index not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp922wvrzy.jl:34\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp922wvrzy.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp922wvrzy.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp922wvrzy.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp922wvrzy.jl:34\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp922wvrzy.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp922wvrzy.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp922wvrzy.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"bad\") == \"a\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp922wvrzy.jl:34\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp922wvrzy.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp922wvrzy.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp922wvrzy.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"most\") == \"o\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp922wvrzy.jl:34\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp922wvrzy.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for (index, character)\
    \ in enumerate(reverse(word))\n        if character in vowels\n            if\
    \ index == 1\n                if word[end] in vowels return character end\n  \
    \          elseif word[end-index] in vowels return character end\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdi0vzhz_.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi0vzhz_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi0vzhz_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdi0vzhz_.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi0vzhz_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi0vzhz_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdi0vzhz_.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi0vzhz_.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi0vzhz_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdi0vzhz_.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi0vzhz_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi0vzhz_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdi0vzhz_.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdi0vzhz_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if length(word) < 3\n        return \"\"\n    end\n    if !((word[end-1]\
    \ in \"AEIOUaeiou\") || (word[end] in \"AEIOUaeiou\"))\n        return \"\"\n\
    \    end\n    if (word[end-1] in \"AEIOUaeiou\")\n        return \"\"\n    end\n\
    \    for i in range(end-1, 0, -1)\n        if word[i] in \"AEIOUaeiou\"\n    \
    \        return word[i]\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdzl0xux8.jl:29\nin expression starting at /tmp/tmpdzl0xux8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in eachindex(word)\n\
    \        if word[i] in vowels\n            if i != 1 && word[i-1] in vowels\n\
    \                continue\n            elseif i != length(word) && word[i+1] in\
    \ vowels\n                continue\n            else\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp68o6zfbx.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68o6zfbx.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68o6zfbx.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68o6zfbx.jl:40\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68o6zfbx.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68o6zfbx.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68o6zfbx.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68o6zfbx.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68o6zfbx.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68o6zfbx.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68o6zfbx.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68o6zfbx.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68o6zfbx.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68o6zfbx.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if length(word) <= 1 || !isascii(word)\n        return \"\"\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6mkho5uf.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6mkho5uf.jl:1\n\
    in expression starting at /tmp/tmp6mkho5uf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    indexes = []\n\
    \    for i in 1:length(word)\n        if word[i] in vowels \n            push!(indexes,\
    \ i)\n        end\n    end\n    \n    if length(indexes) == 0\n        return\
    \ \"\"\n    end\n    \n    for i in 1:length(indexes)\n        if indexes[i] ==\
    \ length(word)\n            continue\n        end\n        if i > 1 && (word[indexes[i]]\
    \ in [\"a\", \"e\"] && (word[indexes[i] - 1] in vowels))\n            continue\n\
    \        end\n        if (word[indexes[i] + 1] in vowels) || (word[indexes[i]]\
    \ in [\"u\", \"o\"] && word[indexes[i] + 1] in [\"r\", \"l\"])\n            continue\n\
    \        end\n        return word[indexes[i]]\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23c_co0d.jl:52\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23c_co0d.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23c_co0d.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp23c_co0d.jl:53\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23c_co0d.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23c_co0d.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp23c_co0d.jl:57\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23c_co0d.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23c_co0d.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp23c_co0d.jl:58\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23c_co0d.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23c_co0d.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp23c_co0d.jl:62\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23c_co0d.jl:49\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if length(word) < 2\n        return \"\"\n    end\n    iter = reverse(word)\n\
    \    vowels = \"aeiouAEIOU\"\n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    cur_vowel = \"!\"\n    cur_consonant = \"!\"\n    for char in iter\n   \
    \     if indexin(char,vowels) > 0\n            cur_vowel = char\n        elseif\
    \ indexin(char,consonants) > 0\n            cur_consonant = char\n        end\n\
    \        if cur_vowel != \"!\" && cur_consonant != \"!\"\n            return cur_vowel\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpclkenh2s.jl:45\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: no method matching\
    \ indexin(::Char, ::String)\n  Closest candidates are:\n    indexin(::Any, !Matched::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2352\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpclkenh2s.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclkenh2s.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclkenh2s.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpclkenh2s.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: no method matching indexin(::Char,\
    \ ::String)\n  Closest candidates are:\n    indexin(::Any, !Matched::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2352\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpclkenh2s.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclkenh2s.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclkenh2s.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpclkenh2s.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  MethodError: no method matching indexin(::Char,\
    \ ::String)\n  Closest candidates are:\n    indexin(::Any, !Matched::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2352\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpclkenh2s.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclkenh2s.jl:47 [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclkenh2s.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # Get the reversed word\
    \ so we could loop the word right to left\n    word_rev = reverse(word)\n    #\
    \ loop through the word right to left and break if the first vowel is found\n\
    \    # between two consonants\n    for i in 1:length(word_rev)\n        if word_rev[i]\
    \ in vowels && \n            (i == length(word_rev) || word_rev[i+1] \u2209 vowels)\
    \ && \n            (i == 1 || word_rev[i-1] \u2209 vowels)\n            return\
    \ word_rev[i]\n        end\n    end\n    # return empty string if no vowel is\
    \ found\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps_8q_x8h.jl:40\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps_8q_x8h.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps_8q_x8h.jl:39\ntest set: Test\
    \ Failed at /tmp/tmps_8q_x8h.jl:41\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps_8q_x8h.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps_8q_x8h.jl:39\ntest set: Test\
    \ Failed at /tmp/tmps_8q_x8h.jl:45\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps_8q_x8h.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps_8q_x8h.jl:39\ntest set: Test\
    \ Failed at /tmp/tmps_8q_x8h.jl:46\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps_8q_x8h.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps_8q_x8h.jl:39\ntest set: Test\
    \ Failed at /tmp/tmps_8q_x8h.jl:50\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps_8q_x8h.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if length(word) == 1\n        return \"\"\n    end\n    if isvowel(word[end])\n\
    \        word = word[1:end-1]\n    end\n    for i = length(word):-1:1\n      \
    \  if isvowel(word[i]) && !isvowel(word[i-1])\n            return word[i]\n  \
    \      end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvg3jjlcl.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpvg3jjlcl.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvg3jjlcl.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvg3jjlcl.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpvg3jjlcl.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpvg3jjlcl.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvg3jjlcl.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvg3jjlcl.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpvg3jjlcl.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpvg3jjlcl.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvg3jjlcl.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvg3jjlcl.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpvg3jjlcl.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpvg3jjlcl.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvg3jjlcl.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i = length(word):-1:1\n\
    \        if word[i] in vowels\n            if (word[i-1] in vowels) && (word[i+1]\
    \ in vowels)\n                return \"\"\n            else\n                return\
    \ word[i]\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk96iq8dj.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk96iq8dj.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk96iq8dj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpk96iq8dj.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk96iq8dj.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk96iq8dj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpk96iq8dj.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk96iq8dj.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk96iq8dj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpk96iq8dj.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk96iq8dj.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk96iq8dj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpk96iq8dj.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk96iq8dj.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    # this is the index of the first consonent \n    firstCons = searchfirst(x->x\
    \ in \"aeiou\", word)\n    if firstCons == nothing\n        return \"\"\n    end\n\
    \    right = word[firstCons:]\n    lastCons = searchlast(x->x in \"aeiou\", right)\n\
    \    # check if the last char is a vowel\n    if lastCons == nothing\n       \
    \ return \"\"\n    end\n    closest = abs(lastCons-length(right))\n    vowel =\
    \ \"\"\n    for (idx,v) in enumerate(right)\n        if v in \"aeiou\"\n     \
    \       if abs(length(right)-idx) <= closest\n                closest = abs(length(right)-idx)\n\
    \                vowel = v\n            end\n        end\n    end\n    return\
    \ vowel\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"firstCons:\" range\
    \ expression \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuonfd4aw.jl:25\n\
    in expression starting at /tmp/tmpuonfd4aw.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    n=length(word)\n    index=0\n    for i in 1:n-1\n        if word[i] in\
    \ 'aeiouAEIOU'\n            if word[i-1] in 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\
    \ \n            && word[i+1] in 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\
    \                index=i\n            end\n        end\n    end\n    if index==0\n\
    \        return \"\"\n    else\n        return word[index]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpx97nygak.jl:23\nin expression\
    \ starting at /tmp/tmpx97nygak.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if length(word) < 3\n        return \"\"\n    end\n    vowels = Set(['a',\
    \ 'e', 'i', 'o', 'u'])\n    consonants = Set(['b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'])\n   \
    \ map = Dict()\n    vowels_count = 0\n    for i in 1:length(word)\n        if\
    \ word[i] in vowels \n            map[i] = vowels_count\n            vowels_count\
    \ += 1\n        elseif word[i] in consonants\n            map[i] = -1\n      \
    \  end\n    end\n    for i in length(word):-1:1\n        if map[i] != -1\n   \
    \         if (map[i+1] == -1) && (map[i-1] == -1)\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplfe6l790.jl:49\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmplfe6l790.jl:38\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfe6l790.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfe6l790.jl:48\ntest set:\
    \ Error During Test at /tmp/tmplfe6l790.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmplfe6l790.jl:38\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfe6l790.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfe6l790.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    # get the vowel index (not 0-based!)\n    vowel_index = findlast(x ->\
    \ x in Set('aeiouAEIOU'), collect(reverse(word)))\n    if vowel_index == nothing\
    \ \n        return \"\"\n    end\n    # -1 for indexing\n    vowel_index = vowel_index\
    \ - 1\n    # if the vowel is the last char or the first char, return \"\"\n  \
    \  if vowel_index == length(word) || vowel_index == 0\n        return \"\"\n \
    \   end\n    if word[vowel_index-1] in Set('aeiouAEIOU') || word[vowel_index+1]\
    \ in Set('aeiouAEIOU')\n        return \"\"\n    end\n    return word[vowel_index]\n\
    end\nprintln(get_closest_vowel(\"yogurt\"))\nprintln(get_closest_vowel(\"FULL\"\
    ))\nprintln(get_closest_vowel(\"quick\"))\nprintln(get_closest_vowel(\"ab\"))\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp7s1w369b.jl:21\nin expression\
    \ starting at /tmp/tmp7s1w369b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = (\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    word = reverse(word)\n    last_vowel = 0\n    for i = 1:length(word)\n\
    \        if word[i] in vowels\n            last_vowel = i\n        elseif last_vowel\
    \ != 0\n            break\n        end\n    end\n    if last_vowel == 0\n    \
    \    return \"\"\n    else\n        return word[last_vowel]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqrd33drj.jl:41\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrd33drj.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrd33drj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqrd33drj.jl:42\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrd33drj.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrd33drj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqrd33drj.jl:46\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrd33drj.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrd33drj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqrd33drj.jl:47\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrd33drj.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrd33drj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqrd33drj.jl:51\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqrd33drj.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    res = \"\"\n    word = reverse(word)\n    for i in eachindex(word)\n \
    \       if word[i] in (\"a\", \"e\", \"i\", \"o\", \"u\")\n            if i !=\
    \ length(word) && !(word[i+1] in (\"a\", \"e\", \"i\", \"o\", \"u\"))\n      \
    \          res = word[i]\n                break\n            end\n        end\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpua28qee9.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua28qee9.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua28qee9.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpua28qee9.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua28qee9.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua28qee9.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpua28qee9.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua28qee9.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua28qee9.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpua28qee9.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua28qee9.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua28qee9.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpua28qee9.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpua28qee9.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    if(length(word) > 1)\n        vowels = [vowel for vowel in \"aeiouAEIOU\"\
    ]\n        found = false\n        i = length(word)\n        while i > 1\n    \
    \        if(word[i] in vowels)\n                if(!(word[i-1] in vowels))\n \
    \                   found = true\n                    return word[i]\n       \
    \         end\n            end\n            i -= 1\n        end\n        if(!found)\n\
    \            return \"\"\n        end\n    else\n        return \"\"\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc8dza0yf.jl:45\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpc8dza0yf.jl:28\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc8dza0yf.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc8dza0yf.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpc8dza0yf.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpc8dza0yf.jl:28\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc8dza0yf.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8dza0yf.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    vowels = findall(r\"[aeiou]\", word)\n    if length(vowels) == 0\n   \
    \     return \"\"\n    end\n    for i in rev(eachindex(word))\n        if word[i]\
    \ in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n            return word[i]\n       \
    \ end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph8t7gao3.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: rev not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmph8t7gao3.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8t7gao3.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8t7gao3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmph8t7gao3.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: rev not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmph8t7gao3.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8t7gao3.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8t7gao3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmph8t7gao3.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: rev not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmph8t7gao3.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8t7gao3.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8t7gao3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmph8t7gao3.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: rev not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmph8t7gao3.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph8t7gao3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    >>>\
    \ get_closest_vowel(\"yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\"\
    )\n    \"U\"\n    >>> get_closest_vowel(\"quick\")\n    \"\"\n    >>> get_closest_vowel(\"\
    ab\")\n    \"\"\n    \"\"\"\nfunction get_closest_vowel(word::String)::String\
    \ \n    VOWELS = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    word = reverse(word)\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvoc0ld_5.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvoc0ld_5.jl:1\n\
    in expression starting at /tmp/tmpvoc0ld_5.jl:1\n"
  exit_code: 1
  status: SyntaxError

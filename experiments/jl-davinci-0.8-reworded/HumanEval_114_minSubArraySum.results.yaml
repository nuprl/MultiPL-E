name: HumanEval_114_minSubArraySum
language: jl
results:
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n\
    \    current_sum = 0\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf1z_v0wk.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf1z_v0wk.jl:1\n\
    in expression starting at /tmp/tmpf1z_v0wk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given\
    \ a vector of integers nums, find the minimum sum of any non-empty sub-vector\n\
    \    of nums.\n    \"\"\"\n    m = len(nums)\n    mi = typemax(Int64)\n    for\
    \ i in 1:m\n        for j in i:m\n            s = sum(nums[i:j])\n           \
    \ if s < mi\n                mi = s\n            end\n        end\n    end\n \
    \   return mi\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxcawvpk2.jl:32\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  UndefVarError: len not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpxcawvpk2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxcawvpk2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxcawvpk2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxcawvpk2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpxcawvpk2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxcawvpk2.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxcawvpk2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxcawvpk2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  UndefVarError: len not defined\n \
    \ Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpxcawvpk2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxcawvpk2.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxcawvpk2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxcawvpk2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: len not\
    \ defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpxcawvpk2.jl:15"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcawvpk2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = minimum(nums)\n\
    \    min_ending_here = 0\n    for i = 1:length(nums)\n        min_ending_here\
    \ = min(0, min_ending_here + nums[i])\n        min_so_far = min(min_so_far, min_ending_here)\n\
    \    end\n    return min_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ezdyq2g.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ezdyq2g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ezdyq2g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9ezdyq2g.jl:31\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ezdyq2g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ezdyq2g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9ezdyq2g.jl:34\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ezdyq2g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ezdyq2g.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ezdyq2g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = minimum(nums)\n\
    \    for i = 1:length(nums)\n        current_sum = 0\n        for j = i:length(nums)\n\
    \            current_sum += nums[j]\n            if current_sum < min_sum\n  \
    \              min_sum = current_sum\n            end\n        end\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    ## TODO: write\
    \ your code in the next line\n    return 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxgxrqqx7.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxgxrqqx7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxgxrqqx7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxgxrqqx7.jl:20\n  Expression: candidate([-1, -2, -3]) == -6\n\
    \   Evaluated: 0 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxgxrqqx7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxgxrqqx7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxgxrqqx7.jl:21\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 0 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxgxrqqx7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxgxrqqx7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxgxrqqx7.jl:22\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 0 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxgxrqqx7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxgxrqqx7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxgxrqqx7.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: 0 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxgxrqqx7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    best_sum = minimum(nums)\n\
    \    curr_sum = best_sum\n    for i in 2:length(nums)\n        curr_sum = max(nums[i],\
    \ curr_sum + nums[i])\n        best_sum = min(best_sum, curr_sum)\n    end\n \
    \   return best_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpui0q1agz.jl:25\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui0q1agz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui0q1agz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpui0q1agz.jl:26\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -10 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui0q1agz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui0q1agz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpui0q1agz.jl:29\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui0q1agz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui0q1agz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpui0q1agz.jl:30\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui0q1agz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui0q1agz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpui0q1agz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n\
    \    current_sum = 0\n    for num in nums\n        current_sum += num\n      \
    \  if current_sum < min_sum\n            min_sum = current_sum\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6bm4bryf.jl:26\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6bm4bryf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6bm4bryf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6bm4bryf.jl:32\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6bm4bryf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6bm4bryf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6bm4bryf.jl:33\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6bm4bryf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6bm4bryf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6bm4bryf.jl:34\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6bm4bryf.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6bm4bryf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6bm4bryf.jl:37\n  Expression: candidate([1, -1]) == -1\n \
    \  Evaluated: 0 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6bm4bryf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given\
    \ a vector of integers nums, find the minimum sum of any non-empty sub-vector\n\
    \    of nums.\n    \"\"\"\n    min_sum = nums[1]\n    sum = 0\n    for num in\
    \ nums\n        sum += num\n        if sum < min_sum\n            min_sum = sum\n\
    \        end\n        if sum > 0\n            sum = 0\n        end\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    return sum(nums)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpipxpgxlk.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxpgxlk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxpgxlk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpipxpgxlk.jl:22\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000030 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxpgxlk.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxpgxlk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpipxpgxlk.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxpgxlk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxpgxlk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpipxpgxlk.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxpgxlk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxpgxlk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpipxpgxlk.jl:25\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 49 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpipxpgxlk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64\
    \ = Inf\n    sum::Int64 = 0\n    for n in nums\n        sum += n\n        min_sum\
    \ = min(min_sum, sum)\n        sum = max(sum, 0)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4lu32gje.jl:25\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  InexactError: Int64(Inf)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp4lu32gje.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4lu32gje.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4lu32gje.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4lu32gje.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  InexactError: Int64(Inf)\n  Stacktrace:\n \
    \  [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp4lu32gje.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4lu32gje.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4lu32gje.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4lu32gje.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  InexactError: Int64(Inf)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp4lu32gje.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4lu32gje.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4lu32gje.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n\
    \    curr_sum = 0\n    for num in nums\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    end\n   \
    \ return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2x7x6a5b.jl:25\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2x7x6a5b.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2x7x6a5b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2x7x6a5b.jl:26\n  Expression: candidate([-1, -2, -3]) == -6\n\
    \   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2x7x6a5b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2x7x6a5b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2x7x6a5b.jl:27\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2x7x6a5b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2x7x6a5b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2x7x6a5b.jl:28\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2x7x6a5b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2x7x6a5b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2x7x6a5b.jl:30\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shar"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2x7x6a5b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_current, min_sub_array_sum\
    \ = 0, nums[1]\n    for num in nums[2:end]\n        min_current = min(min_current\
    \ + num, num)\n        min_sub_array_sum = min(min_sub_array_sum, min_current)\n\
    \    end\n    return min_sub_array_sum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd33webx9.jl:24\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd33webx9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd33webx9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd33webx9.jl:25\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -13 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd33webx9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd33webx9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd33webx9.jl:28\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd33webx9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd33webx9.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd33webx9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_ = nums[1]\n\
    \    sum_ = nums[1]\n    for i = 2:length(nums)\n        if sum_ > 0\n       \
    \     sum_ = nums[i]\n        else\n            sum_ += nums[i]\n        end\n\
    \        min_ = min(min_, sum_)\n    end\n    return min_\nend\nprintln(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]))\nprintln(minSubArraySum([-1, -2, -3]))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: ''
  stderr: "1\n-6\nTest Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums)\
    \ == 0 return 0 end\n   \n    min_sum = nums[1]\n    current_sum = nums[1]\n \
    \   for i in 2:length(nums)\n        current_sum = max(nums[i], current_sum +\
    \ nums[i])\n        min_sum = min(min_sum, current_sum)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpajjc2ux3.jl:26\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajjc2ux3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajjc2ux3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpajjc2ux3.jl:27\n  Expression: candidate([-1, -2, -3]) == -6\n\
    \   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajjc2ux3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajjc2ux3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpajjc2ux3.jl:28\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajjc2ux3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajjc2ux3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpajjc2ux3.jl:31\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajjc2ux3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajjc2ux3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpajjc2ux3.jl:32\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpajjc2ux3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64\
    \ = Inf\n    max_prefix::Int64 = 0\n    for i::Int64 in nums\n        max_prefix\
    \ += i\n        min_sum = min(min_sum, max_prefix)\n        max_prefix = max(max_prefix,\
    \ 0)\n    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprwsuduic.jl:25\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  InexactError: Int64(Inf)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmprwsuduic.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprwsuduic.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprwsuduic.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprwsuduic.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  InexactError: Int64(Inf)\n  Stacktrace:\n \
    \  [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmprwsuduic.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprwsuduic.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprwsuduic.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprwsuduic.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  InexactError: Int64(Inf)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmprwsuduic.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprwsuduic.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwsuduic.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    sums = nums[1]\n\
    \    minimum = nums[1]\n    for i in 2:length(nums)\n        sums = max(nums[i],\
    \ sums + nums[i])\n        minimum = min(minimum, sums)\n    end\n    return minimum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcgyforuo.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcgyforuo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcgyforuo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcgyforuo.jl:25\n  Expression: candidate([-1, -2, -3]) == -6\n\
    \   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcgyforuo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcgyforuo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcgyforuo.jl:26\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcgyforuo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcgyforuo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcgyforuo.jl:29\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcgyforuo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcgyforuo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcgyforuo.jl:30\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcgyforuo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given\
    \ a vector of integers nums, find the minimum sum of any non-empty sub-vector\n\
    \    of nums.\n    \"\"\"\n    #if vector is empty\n    if length(nums) == 0\n\
    \        return 0\n    end\n    #initialize a minimum sum and a current sum\n\
    \    min_sum = 0\n    curr_sum = 0\n    #loop through the vector\n    for i in\
    \ nums\n        #if the current sum is smaller than 0, add the current element\
    \ to current sum\n        if curr_sum < 0\n            curr_sum += i\n       \
    \ #if the current sum is greater than 0, add the minimum sum to the current sum\
    \ and check it against the current minimum sum\n        else\n            curr_sum\
    \ = min_sum + i\n            min_sum = min(min_sum, curr_sum)\n        end\n \
    \   end\n    #return the minimum sum\n    return min_sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvdxe9u_.jl:41\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvdxe9u_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvdxe9u_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuvdxe9u_.jl:42\n  Expression: candidate([-1, -2, -3]) == -6\n\
    \   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvdxe9u_.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvdxe9u_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuvdxe9u_.jl:43\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -1 == -14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvdxe9u_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvdxe9u_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuvdxe9u_.jl:48\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvdxe9u_.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvdxe9u_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuvdxe9u_.jl:51\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvdxe9u_.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    minsum, cursum\
    \ = nums[1], nums[1]\n    for i in 2:length(nums)\n        cursum = min(cursum\
    \ + nums[i], nums[i])\n        minsum = min(minsum, cursum)\n    end\n    return\
    \ minsum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n\
    \    curr_sum = 0\n    for val in nums\n        curr_sum += val\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n        end\n        if curr_sum\
    \ > 0\n            curr_sum = 0\n        end\n    end\n    return min_sum\nend\n\
    println(minSubArraySum([2, 3, 4, 1, 2, 4]))\nprintln(minSubArraySum([-1, -2, -3]))\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: ''
  stderr: "1\n-6\nTest Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector of integers nums, find the minimum sum of any\
    \ non-empty sub-vector\n    of nums.\n    Example\n    >>> minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2, -3])\n    -6\n    \"\
    \"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    min_so_far\
    \ = minimum(nums)\n    start = minimum(nums)\n    finish = minimum(nums)\n   \
    \ for i in 1:length(nums)\n        for j in 1:length(nums)\n            sub =\
    \ sum(nums[i:j])\n            if sub < min_so_far\n                min_so_far\
    \ = sub\n                start = i\n                finish = j\n            end\n\
    \        end\n    end\n    return min_so_far\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgzk_azad.jl:32\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgzk_azad.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgzk_azad.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgzk_azad.jl:39\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgzk_azad.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgzk_azad.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     2     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgzk_azad.jl:29\n"
  exit_code: 1
  status: SyntaxError

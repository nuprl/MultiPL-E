name: HumanEval_130_tri
language: jl
results:
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        result = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(result,\
    \ Int64(1 + i / 2))\n            else\n                push!(result, Int64(result[i]\
    \ + result[i - 1] + result[i + 1]))\n            end\n        end\n        return\
    \ result\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3)\
    \ == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptf2xgjsy.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 3-element Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmptf2xgjsy.jl:31\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmptf2xgjsy.jl:42 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmptf2xgjsy.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmptf2xgjsy.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmptf2xgjsy.jl:31\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmptf2xgjsy.jl:43 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmptf2xgjsy.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmptf2xgjsy.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmptf2xgjsy.jl:31\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmptf2xgjsy.jl:44 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmptf2xgjsy.jl:41\\ntest set:\
    \ Error During Test at /"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    tribonacci = [1, 3, 2]\n    if n <= 3\n        tribonacci[1:n+1]\n   \
    \ else\n        for i in 4:n+1\n            if iseven(i)\n                push!(tribonacci,\
    \ Int64(1 + i / 2))\n            else\n                push!(tribonacci, Int64(tribonacci[i-1]\
    \ + tribonacci[i-2] + tribonacci[i+1]))\n            end\n        end\n      \
    \  tribonacci\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\
    \t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\
    \t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2,\
    \ 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8)\
    \ == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15,\
    \ 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6,\
    \ 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2k0lhcdv.jl:38\n  Test threw exception\n\
    \  Expression: candidate(3) == [1, 3, 2, 8]\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [1:4]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{UnitRange{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] getindex\n     @ ./array.jl:867\
    \ [inlined]\n   [4] tri(n::Int64)\n     @ Main /tmp/tmp2k0lhcdv.jl:21\n   [5]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2k0lhcdv.jl:38 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2k0lhcdv.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp2k0lhcdv.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] tri(n::Int64)\n     @ Main /tmp/tmp2k0lhcdv.jl:27\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2k0lhcdv.jl:39 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2k0lhcdv.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp2k0lhcdv.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] tri(n::Int64)\n     @ Main /tmp/tmp2k0lhcdv.jl:27\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2k0lhcdv.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2k0lhcdv.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    a, b, c = 3, 1, 2\n    v = Vector{Int64}()\n    push!(v, a)\n    for i\
    \ = 2:n\n        push!(v, b)\n        push!(v, c)\n        if (i % 2 == 0)\n \
    \           a = 1 + (i / 2)\n        else\n            a = b + c + a\n       \
    \ end\n        b, c = c, a\n    end\n    return v\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpds2kq7l6.jl:39\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\n   Evaluated: [3, 1, 2, 2, 2] == [1, 3, 2, 8]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds2kq7l6.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds2kq7l6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpds2kq7l6.jl:40\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\n   Evaluated: [3, 1, 2, 2, 2, 2, 6] == [1, 3, 2, 8, 3]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds2kq7l6.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds2kq7l6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpds2kq7l6.jl:41\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\n   Evaluated: [3, 1, 2, 2, 2, 2, 6, 6, 3] == [1, 3, 2, 8, 3, 15]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds2kq7l6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds2kq7l6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpds2kq7l6.jl:42\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\n   Evaluated: [3, 1, 2, 2, 2, 2, 6, 6, 3, 3, 12] == [1, 3, 2, 8,\
    \ 3, 15, 4]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds2kq7l6.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds2kq7l6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpds2kq7l6.jl:43\n  Expression: candi"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpds2kq7l6.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    seq = zeros(Int64, n + 1)\n    seq[1] = 1\n    seq[2] = 3\n    seq[3]\
    \ = 2\n    for i = 4:n + 1\n        if i % 2 == 0\n            seq[i] = 1 + (i\
    \ / 2)\n        else\n            seq[i] = seq[i - 1] + seq[i - 2] + seq[i + 1]\n\
    \        end\n    end\n    return seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3,\
    \ 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvtgorz7z.jl:37\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 3, 2, 3] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpvtgorz7z.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpvtgorz7z.jl:36\\ntest set: Error\
    \ During Test at /tmp/tmpvtgorz7z.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpvtgorz7z.jl:27\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvtgorz7z.jl:38 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvtgorz7z.jl:36\\ntest set:\
    \ Test Failed at /tmp/tmpvtgorz7z.jl:39\\n  Expression: candidate(5) == [1, 3,\
    \ 2, 8, 3, 15]\\n   Evaluated: [1, 3, 2, 3, 5, 4] == [1, 3, 2, 8, 3, 15]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpvtgorz7z.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpvtgorz7z.jl:36\\ntest set: Error\
    \ During Test at /tmp/tmpvtgorz7z.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [8]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpvtgorz7z.jl:27\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    v = Vector{Int64}(undef, n + 1)\n    v[1] = 1\n    v[2] = 3\n    v[3]\
    \ = 2\n    for i in 4:n + 1\n        v[i] = v[i - 1] + v[i - 2] + v[i + 1]\n \
    \   end\n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\
    \t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\
    \t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2,\
    \ 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8)\
    \ == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15,\
    \ 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6,\
    \ 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt4sqyevu.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [5]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpt4sqyevu.jl:24\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4sqyevu.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4sqyevu.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt4sqyevu.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpt4sqyevu.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4sqyevu.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4sqyevu.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt4sqyevu.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 6-element\
    \ Vector{Int64} at index [7]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpt4sqyevu.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4sqyevu.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4sqyevu.jl:32\\ntest set:\
    \ Error During Test at /"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, n + 1)\n    result[1] = 1\n    for i in\
    \ 2 : n + 1\n        if i % 2 == 0\n            result[i] = i / 2\n        else\n\
    \            result[i] = result[i - 1] + result[i - 2] + result[i + 1]\n     \
    \   end\n    end\n    return result\nend\ntri(3)\nusing Test\n\n@testset begin\n\
    \ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4a0j0e7n.jl:36\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 1, 2, 2] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp4a0j0e7n.jl:36 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp4a0j0e7n.jl:35\\ntest set: Error\
    \ During Test at /tmp/tmp4a0j0e7n.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmp4a0j0e7n.jl:25\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp4a0j0e7n.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp4a0j0e7n.jl:35\\ntest set:\
    \ Test Failed at /tmp/tmp4a0j0e7n.jl:38\\n  Expression: candidate(5) == [1, 3,\
    \ 2, 8, 3, 15]\\n   Evaluated: [1, 1, 2, 2, 47012482347732, 3] == [1, 3, 2, 8,\
    \ 3, 15]\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp4a0j0e7n.jl:38 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp4a0j0e7n.jl:35\\ntest set: Error\
    \ During Test at /tmp/tmp4a0j0e7n.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [8]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmp4a0j0e7n.jl:25\\n   [3]\
    \ macro expansion\\n     @ /shared/centos"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    tri = ones(Int64, n + 1)\n    tri[1] = 1\n    i = 2\n    while i <= n\
    \ + 1\n        if i % 2 == 0\n            tri[i] = 1 + i / 2\n        else\n \
    \           tri[i] = tri[i - 1] + tri[i - 2] + tri[i + 1]\n        end\n     \
    \   i += 1\n    end\n    return tri\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3,\
    \ 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkuwapfys.jl:37\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 2, 4, 3] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpkuwapfys.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpkuwapfys.jl:36\\ntest set: Error\
    \ During Test at /tmp/tmpkuwapfys.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpkuwapfys.jl:26\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkuwapfys.jl:38 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkuwapfys.jl:36\\ntest set:\
    \ Test Failed at /tmp/tmpkuwapfys.jl:39\\n  Expression: candidate(5) == [1, 3,\
    \ 2, 8, 3, 15]\\n   Evaluated: [1, 2, 4, 3, 8, 4] == [1, 3, 2, 8, 3, 15]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpkuwapfys.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpkuwapfys.jl:36\\ntest set: Error\
    \ During Test at /tmp/tmpkuwapfys.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [8]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpkuwapfys.jl:26\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    ans = fill(0, n + 1)\n    ans[1] = 1\n    ans[2] = 3\n    ans[3] = 2\n\
    \    for i in 4:n + 1\n        if i % 2 == 0\n            ans[i] = ans[i - 1]\
    \ + ans[i - 2] + ans[i + 1]\n        else\n            ans[i] = floor(i / 2) +\
    \ 1\n        end\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpus1f2ggy.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [5]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpus1f2ggy.jl:25\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpus1f2ggy.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpus1f2ggy.jl:36\\ntest set:\
    \ Test Failed at /tmp/tmpus1f2ggy.jl:38\\n  Expression: candidate(4) == [1, 3,\
    \ 2, 8, 3]\\n   Evaluated: [1, 3, 2, 5, 3] == [1, 3, 2, 8, 3]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpus1f2ggy.jl:38 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpus1f2ggy.jl:36\\ntest set: Error\
    \ During Test at /tmp/tmpus1f2ggy.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 6-element\
    \ Vector{Int64} at index [7]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpus1f2ggy.jl:25\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpus1f2ggy.jl:39 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpus1f2ggy.jl:36\\ntest set:\
    \ Test Failed at /tmp/tmpus1f2ggy.jl:40\\n  Expression: candidate(6) == [1, 3,\
    \ 2, 8, 3, 15, 4]\\n   Evaluated: [1, 3, 2, 5, 3, 8, 4] == [1, 3, 2, 8, 3, 15,\
    \ 4]\\nStacktrace:\\n [1] macro expansion\\n   @ /sh"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    res = zeros(Int64, n + 1)\n    res[1] = 1\n    res[2] = 3\n    res[3]\
    \ = 2\n    for i = 4:n + 1\n        res[i] = i % 2 == 0 ? res[i - 1] : res[i -\
    \ 1] + res[i - 2] + res[i + 1]\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1eot2n01.jl:33\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 3, 2, 2] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp1eot2n01.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp1eot2n01.jl:32\\ntest set: Error\
    \ During Test at /tmp/tmp1eot2n01.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmp1eot2n01.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1eot2n01.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1eot2n01.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmp1eot2n01.jl:35\\n  Expression: candidate(5) == [1, 3,\
    \ 2, 8, 3, 15]\\n   Evaluated: [1, 3, 2, 2, 4, 4] == [1, 3, 2, 8, 3, 15]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp1eot2n01.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp1eot2n01.jl:32\\ntest set: Error\
    \ During Test at /tmp/tmp1eot2n01.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [8]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmp1eot2n01.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    a = [1, 3, 2]\n    for i = 3:n\n        if i % 2 == 0\n            push!(a,\
    \ i / 2 + 1)\n        else\n            push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n\
    \        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3,\
    \ 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpodqxm106.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 3-element Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpodqxm106.jl:24\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpodqxm106.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpodqxm106.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpodqxm106.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpodqxm106.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpodqxm106.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpodqxm106.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpodqxm106.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpodqxm106.jl:24\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpodqxm106.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpodqxm106.jl:33\\ntest set:\
    \ Error During Test at /"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    numbers = zeros(Int64, n+1)\n    numbers[1] = 1\n    numbers[2] = 3\n\
    \    numbers[3] = 2\n    for i in 4:n+1\n        if (i % 2 == 0)\n           \
    \ numbers[i] = 1 + i / 2\n        else\n            numbers[i] = numbers[i-1]\
    \ + numbers[i-2] + numbers[i-3]\n        end\n    end\n    return numbers\nend\n\
    using Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3) == [1,\
    \ 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5) ==\
    \ [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7)\
    \ == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1, 3, 2, 8, 3, 15,\
    \ 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20)\
    \ == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\
    \t@test(candidate(0) == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpziqgki2u.jl:37\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 3, 2, 3] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpziqgki2u.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpziqgki2u.jl:36\\ntest set: Test\
    \ Failed at /tmp/tmpziqgki2u.jl:38\\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\\n   Evaluated: [1, 3, 2, 3, 8] == [1, 3, 2, 8, 3]\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpziqgki2u.jl:38 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpziqgki2u.jl:36\\ntest set: Test\
    \ Failed at /tmp/tmpziqgki2u.jl:39\\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\\n   Evaluated: [1, 3, 2, 3, 8, 4] == [1, 3, 2, 8, 3, 15]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpziqgki2u.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpziqgki2u.jl:36\\ntest set: Test\
    \ Failed at /tmp/tmpziqgki2u.jl:40\\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\\n   Evaluated: [1, 3, 2, 3, 8, 4, 15] == [1, 3, 2, 8, 3, 15, 4]\\\
    nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpziqgki2u.jl:40 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpziqgki2u.jl:36\\ntest set: Test\
    \ Failed at /tmp/tmpziqgki2u.jl:41"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    if n < 0\n        error(\"n has to be a non-negative integer.\")\n   \
    \ end\n    if n < 1\n        return [1]\n    end\n    if n < 2\n        return\
    \ [1, 3]\n    end\n    if n < 3\n        return [1, 3, 2]\n    end\n    tri =\
    \ [1, 3, 2]\n    for i = 4:n + 1\n        if i % 2 == 0\n            push!(tri,\
    \ div(i, 2))\n        else\n            push!(tri, tri[i - 1] + tri[i - 2] + tri[i\
    \ - 3])\n        end\n    end\n    return tri\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpya1tu29b.jl:46\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\n   Evaluated: [1, 3, 2, 2] == [1, 3, 2, 8]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya1tu29b.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya1tu29b.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpya1tu29b.jl:47\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\n   Evaluated: [1, 3, 2, 2, 7] == [1, 3, 2, 8, 3]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya1tu29b.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya1tu29b.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpya1tu29b.jl:48\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\n   Evaluated: [1, 3, 2, 2, 7, 3] == [1, 3, 2, 8, 3, 15]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya1tu29b.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya1tu29b.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpya1tu29b.jl:49\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\n   Evaluated: [1, 3, 2, 2, 7, 3, 12] == [1, 3, 2, 8, 3, 15, 4]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya1tu29b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya1tu29b.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpya1tu29b.jl:50\n  Expression: candidate(7) == [1, 3, 2, 8,\
    \ 3, 15,"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpya1tu29b.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    if n < 0\n        error(\"n must be a non-negative integer!\")\n    end\n\
    \    if n == 0\n        return [1]\n    end\n    if n == 1\n        return [1,\
    \ 3]\n    end\n    if n == 2\n        return [1, 3, 2]\n    end\n    seq = [1,\
    \ 3, 2]\n    for i in 3:n\n        if i % 2 == 0\n            append!(seq, 1 +\
    \ (i / 2))\n        else\n            append!(seq, seq[i - 1] + seq[i - 2] + seq[i\
    \ + 1])\n        end\n    end\n    return seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw1zmjn8i.jl:46\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 3-element Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpw1zmjn8i.jl:36\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpw1zmjn8i.jl:46 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpw1zmjn8i.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpw1zmjn8i.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpw1zmjn8i.jl:36\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpw1zmjn8i.jl:47 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpw1zmjn8i.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpw1zmjn8i.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [4]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpw1zmjn8i.jl:36\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpw1zmjn8i.jl:48 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpw1zmjn8i.jl:45\\ntest set:\
    \ Error During Test at /"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    c = [1, 3, 2]\n    if n <= 2\n        return c[1:n+1]\n    end\n    for\
    \ i = 4:n+1\n        push!(c, c[i-1] + c[i-2] + c[i-3])\n    end\n    return c\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3) ==\
    \ [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzzkbesq6.jl:33\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\n   Evaluated: [1, 3, 2, 6] == [1, 3, 2, 8]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzkbesq6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzkbesq6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzzkbesq6.jl:34\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\n   Evaluated: [1, 3, 2, 6, 11] == [1, 3, 2, 8, 3]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzkbesq6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzkbesq6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzzkbesq6.jl:35\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\n   Evaluated: [1, 3, 2, 6, 11, 19] == [1, 3, 2, 8, 3, 15]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzkbesq6.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzkbesq6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzzkbesq6.jl:36\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\n   Evaluated: [1, 3, 2, 6, 11, 19, 36] == [1, 3, 2, 8, 3, 15, 4]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzkbesq6.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzkbesq6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzzkbesq6.jl:37\n  Expression: candidate(7) == [1, 3, 2, 8,\
    \ 3"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzkbesq6.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    output = zeros(Int64, n + 1)\n    output[1] = 1\n    for i in 2:n\n  \
    \      output[i] = output[i - 1] + output[i - 2] + output[i - 3]\n    end\n  \
    \  return output\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3)\
    \ == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxymccptn.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [0]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpxymccptn.jl:22\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxymccptn.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxymccptn.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpxymccptn.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpxymccptn.jl:22\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxymccptn.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxymccptn.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpxymccptn.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 6-element\
    \ Vector{Int64} at index [0]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpxymccptn.jl:22\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxymccptn.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxymccptn.jl:30\\ntest set:\
    \ Error During Test at /"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    if n < 1\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = zeros(Int64,\
    \ n+1)\n        a[1:3] = [1, 3, 2]\n        for i = 4:n+1\n            if i %\
    \ 2 == 0\n                a[i] = 1 + i / 2\n            else\n               \
    \ a[i] = a[i-1] + a[i-2] + a[i-3]\n            end\n        end\n        return\
    \ a\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3)\
    \ == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4d_ttgvw.jl:43\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\n   Evaluated: [1, 3, 2, 3] == [1, 3, 2, 8]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4d_ttgvw.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4d_ttgvw.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp4d_ttgvw.jl:44\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\n   Evaluated: [1, 3, 2, 3, 8] == [1, 3, 2, 8, 3]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4d_ttgvw.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4d_ttgvw.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp4d_ttgvw.jl:45\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\n   Evaluated: [1, 3, 2, 3, 8, 4] == [1, 3, 2, 8, 3, 15]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4d_ttgvw.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4d_ttgvw.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp4d_ttgvw.jl:46\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\n   Evaluated: [1, 3, 2, 3, 8, 4, 15] == [1, 3, 2, 8, 3, 15, 4]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4d_ttgvw.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4d_ttgvw.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp4d_ttgvw.jl:47\n  Expression: candidate(7) == [1, 3, 2, 8,\
    \ 3, 15,"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4d_ttgvw.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    f = [1,3,2]\n    if n > 3\n        for i in 4:n\n            if i % 2\
    \ == 0\n                push!(f,1 + i / 2)\n            else\n               \
    \ push!(f,f[i-1] + f[i-2] + f[i+1])\n            end\n        end\n    end\n \
    \   return f\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3)\
    \ == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpy4n0oz7e.jl:36\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 3, 2] == [1, 3, 2, 8]\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpy4n0oz7e.jl:36 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpy4n0oz7e.jl:35\\ntest set: Test\
    \ Failed at /tmp/tmpy4n0oz7e.jl:37\\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\\n   Evaluated: [1, 3, 2, 3] == [1, 3, 2, 8, 3]\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpy4n0oz7e.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpy4n0oz7e.jl:35\\ntest set: Error\
    \ During Test at /tmp/tmpy4n0oz7e.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [1, 3, 2, 8, 3, 15]\\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpy4n0oz7e.jl:25\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpy4n0oz7e.jl:38 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy4n0oz7e.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpy4n0oz7e.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpy4n0oz7e.jl:25\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    # Check if n is negative or null.\n    if n <= 0 \n        return [1]\n\
    \    end\n    # Initialize the vector with the first 3 values of the Tribonacci\
    \ sequence.\n    tri_v = zeros(Int64,n+1)\n    tri_v[1] = 1\n    tri_v[2] = 3\n\
    \    tri_v[3] = 2\n    for i = 4:n+1\n        # Check if i is even or odd.\n \
    \       if i % 2 == 0\n            tri_v[i] = 1 + i / 2\n        else\n      \
    \      tri_v[i] = tri_v[i-1] + tri_v[i-2] + tri_v[i+1]\n        end\n    end\n\
    \    return tri_v\nend\nusing Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3)\
    \ == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
    \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t\
    @test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7,\
    \ 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
    \ == [1, 3])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpji645qn4.jl:43\\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\\n   Evaluated: [1, 3, 2, 3] == [1, 3, 2, 8]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpji645qn4.jl:43 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpji645qn4.jl:42\\ntest set: Error\
    \ During Test at /tmp/tmpji645qn4.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpji645qn4.jl:33\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpji645qn4.jl:44 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpji645qn4.jl:42\\ntest set:\
    \ Test Failed at /tmp/tmpji645qn4.jl:45\\n  Expression: candidate(5) == [1, 3,\
    \ 2, 8, 3, 15]\\n   Evaluated: [1, 3, 2, 3, 5, 4] == [1, 3, 2, 8, 3, 15]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpji645qn4.jl:45 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpji645qn4.jl:42\\ntest set: Error\
    \ During Test at /tmp/tmpji645qn4.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [1, 3, 2, 8, 3, 15, 4]\\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [8]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] tri(n::Int64)\\n     @ Main /tmp/tmpji645qn4.jl:33\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    sequence = [0, 1, 3]\n    sequence = [sequence[i] for i in 1:n+1]\n  \
    \  for i in 3:n+1\n        sequence[i] = (sequence[i-1] + sequence[i-2] + sequence[i-3])\n\
    \    end\n    return sequence\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3,\
    \ 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp45amjveh.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [1, 3, 2, 8]\\n  BoundsError: attempt\
    \ to access 3-element Vector{Int64} at index [4]\\n  Stacktrace:\\n    [1] getindex(A::Vector{Int64},\
    \ i1::Int64)\\n      @ Base ./array.jl:861\\n    [2] (::var\"#1#2\")(i::Int64)\\\
    n      @ Main ./none:0\\n    [3] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [4] collect_to!(dest::Vector{Int64}, itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"}, offs::Int64, st::Int64)\\n      @ Base ./array.jl:782\\n    [5]\
    \ collect_to_with_first!(dest::Vector{Int64}, v1::Int64, itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"}, st::Int64)\\n      @ Base ./array.jl:760\\n    [6] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:734\\n    [7] tri(n::Int64)\\n     \
    \ @ Main /tmp/tmp45amjveh.jl:20\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp45amjveh.jl:31 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp45amjveh.jl:30\\ntest\
    \ set: Error During Test at /tmp/tmp45amjveh.jl:32\\n  Test threw exception\\\
    n  Expression: candidate(4) == [1, 3, 2, 8, 3]\\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [4]\\n  Stacktrace:\\n    [1] getindex(A::Vector{Int64},\
    \ i1::Int64)\\n      @ Base ./array.jl:861\\n    [2] (::var\"#1#2\")(i::Int64)\\\
    n      @ Main ./none:0\\n    [3] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [4] collect_to!(dest::Vector{Int64}, itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"}, offs::Int64, st::Int64)\\n      @ Base ./array.jl:782\\n    [5]\
    \ collect_to_with_first!(dest::Vector{Int64}, v1::Int64, itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"}, st::Int64)\\n      @ Base ./array.jl:760\\n    [6] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:734\\n    [7] tri(n::Int64)\\n     \
    \ @ Main /tmp/tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
    \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
    \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1)\
    \ = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2)\
    \ = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 +\
    \ 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a\
    \ return a vector of the \n    first n + 1 numbers of the Tribonacci sequence.\n\
    \    Examples:\n    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
    \ \n    if n <= 0\n        return [0]\n    end\n    if n == 1\n        return\
    \ [1, 3]\n    end\n    if n == 2\n        return [1, 3, 2]\n    end\n    v = [1,\
    \ 3, 2]\n    for i in 4:n + 1\n        if i % 2 == 0\n            push!(v, i /\
    \ 2)\n        else\n            push!(v, v[end] + v[end - 1] + v[end - 2])\n \
    \       end\n    end\n    return v\nend\n \n \nusing Test\n\n@testset begin\n\n\
    candidate = tri;\n\t@test(candidate(3) == [1, 3, 2, 8])\n\t@test(candidate(4)\
    \ == [1, 3, 2, 8, 3])\n\t@test(candidate(5) == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6)\
    \ == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
    \t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\n\t@test(candidate(9) ==\
    \ [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20) == [1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\t@test(candidate(0)\
    \ == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcb9kpv0d.jl:45\n  Expression: candidate(3)\
    \ == [1, 3, 2, 8]\n   Evaluated: [1, 3, 2, 2] == [1, 3, 2, 8]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb9kpv0d.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb9kpv0d.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpcb9kpv0d.jl:46\n  Expression: candidate(4) == [1, 3, 2, 8,\
    \ 3]\n   Evaluated: [1, 3, 2, 2, 7] == [1, 3, 2, 8, 3]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb9kpv0d.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb9kpv0d.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpcb9kpv0d.jl:47\n  Expression: candidate(5) == [1, 3, 2, 8,\
    \ 3, 15]\n   Evaluated: [1, 3, 2, 2, 7, 3] == [1, 3, 2, 8, 3, 15]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb9kpv0d.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb9kpv0d.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpcb9kpv0d.jl:48\n  Expression: candidate(6) == [1, 3, 2, 8,\
    \ 3, 15, 4]\n   Evaluated: [1, 3, 2, 2, 7, 3, 12] == [1, 3, 2, 8, 3, 15, 4]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb9kpv0d.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb9kpv0d.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpcb9kpv0d.jl:49\n  Expression: candidate(7) == [1, 3, 2, 8,\
    \ 3, 15,"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcb9kpv0d.jl:42\n"
  exit_code: 1
  status: SyntaxError

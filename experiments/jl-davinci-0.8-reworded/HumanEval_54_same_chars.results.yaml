language: jl
name: HumanEval_54_same_chars
results:
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) == length(s1)\n        for i in 1:length(s0)\n            if\
    \ s0[i] in s1 && s1[i] in s0\n                continue\n            else\n   \
    \             return false\n            end\n        end\n        return true\n\
    \    else\n        return false\n    end\nend\nsame_chars(\"abcd\", \"dddddddabc\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmblptrv8.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpmblptrv8.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmblptrv8.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmblptrv8.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpmblptrv8.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmblptrv8.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmblptrv8.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpmblptrv8.jl:38\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmblptrv8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmblptrv8.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_chars = collect(keys(countmap(s0)))\n    s1_chars = collect(keys(countmap(s1)))\n\
    \    if length(s0_chars) != length(s1_chars)\n        return false\n    end\n\
    \    for i in 1:length(s0_chars)\n        if s0_chars[i] != s1_chars[i]\n    \
    \        return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpryuxyaf6.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpryuxyaf6.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpryuxyaf6.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpryuxyaf6.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpryuxyaf6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpryuxyaf6.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpryuxyaf6.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpryuxyaf6.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpryuxyaf6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpryuxyaf6.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpryuxyaf6.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpryuxyaf6.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpryuxyaf6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpryuxyaf6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # write your code here\n    for i=1:length(s0)\n        if findnext(s1,s0[i])==nothing\n\
    \            return false\n        end\n    end\n    for i=1:length(s1)\n    \
    \    if findnext(s0,s1[i])==nothing\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1unxtzk4.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp1unxtzk4.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1unxtzk4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1unxtzk4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1unxtzk4.jl:36\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1unxtzk4.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1unxtzk4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1unxtzk4.jl:37\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1unxtzk4.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1unxtzk4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    a0 = sort(collect(s0))\n    a1 = sort(collect(s1))\n    if a0 == a1\n   \
    \     return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi4y4_edk.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpi4y4_edk.jl:30\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4y4_edk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4y4_edk.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpi4y4_edk.jl:31\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi4y4_edk.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4y4_edk.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpi4y4_edk.jl:32\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4y4_edk.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4y4_edk.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return sort(split(s0)) == sort(split(s1))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnosrweii.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpnosrweii.jl:24\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnosrweii.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnosrweii.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnosrweii.jl:25\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnosrweii.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnosrweii.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnosrweii.jl:26\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnosrweii.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnosrweii.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for c in s0\n        if c \u2209 s1\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx728sh2w.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpx728sh2w.jl:33\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx728sh2w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx728sh2w.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if(length(s0) != length(s1))\n        return false\n    end\n    counter=zeros(Int,256)\n\
    \    for c in s0\n        counter[Int(c)]+=1\n    end\n    for c in s1\n     \
    \   counter[Int(c)]-=1\n    end\n    for i in counter\n        if i != 0\n   \
    \         return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_04_a30e.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp_04_a30e.jl:39\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_04_a30e.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_04_a30e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp_04_a30e.jl:40\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_04_a30e.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_04_a30e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp_04_a30e.jl:41\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_04_a30e.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_04_a30e.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    r0 = Set()\n    r1 = Set()\n    for x in s0\n        push!(r0, x)\n    end\n\
    \    for x in s1\n        push!(r1, x)\n    end\n    return r0 == r1\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    return isequal(sort(collect(s0)),\
    \ sort(collect(s1)))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfsd941zi.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpfsd941zi.jl:27\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsd941zi.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsd941zi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfsd941zi.jl:28\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfsd941zi.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsd941zi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfsd941zi.jl:29\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsd941zi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsd941zi.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if (sort(collect(s0)) == sort(collect(s1)))\n        return true\n    else\n\
    \        return false\n    end\nend\n\"\"\"\n    Check if two words have the same\
    \ characters with a different order.\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    )\n    true\n    >>> same_chars(\"abcd\", \"dddddddabc\")\n    true\n    >>> same_chars(\"\
    dddddddabc\", \"abcd\")\n    true\n    >>> same_chars(\"eabcd\", \"dddddddabc\"\
    )\n    false\n    >>> same_chars(\"abcd\", \"dddddddabce\")\n    false\n    >>>\
    \ same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n    false\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpyvkdo0u3.jl:23\nin expression starting at /tmp/tmpyvkdo0u3.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    counter =\
    \ Dict{Char, Int}()\n    for i in s0\n        if haskey(counter, i)\n        \
    \    counter[i] += 1\n        else\n            counter[i] = 1\n        end\n\
    \    end\n    for i in s1\n        if haskey(counter, i)\n            counter[i]\
    \ -= 1\n        else\n            return false\n        end\n    end\n    if sum(counter[i]\
    \ == 0 for i in keys(counter)) == length(keys(counter))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmhlg9oqi.jl:43

    '
  stdout: "test set: Test Failed at /tmp/tmpmhlg9oqi.jl:46\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhlg9oqi.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhlg9oqi.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpmhlg9oqi.jl:47\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmhlg9oqi.jl:47 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhlg9oqi.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpmhlg9oqi.jl:48\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhlg9oqi.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhlg9oqi.jl:45\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    _s0 = sort(split(s0, \"\"))\n    _s1 = sort(split(s1, \"\"))\n    if length(_s0)\
    \ == length(_s1)\n        for x in _s0\n            if count(_s1, x) >= count(_s0,\
    \ x)\n                continue\n            else\n                return false\n\
    \            end\n        end\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp51522v5r.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp51522v5r.jl:37\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51522v5r.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51522v5r.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp51522v5r.jl:38\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp51522v5r.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51522v5r.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp51522v5r.jl:39\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51522v5r.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51522v5r.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    n_max = max(n0, n1)\n    n_min\
    \ = min(n0, n1)\n    for i in 1:n_min\n        if s0[i] != s1[i]\n           \
    \ return false\n        end\n    end\n    if n_max != n_min\n        return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbwstpgoq.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpbwstpgoq.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwstpgoq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwstpgoq.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbwstpgoq.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbwstpgoq.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwstpgoq.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbwstpgoq.jl:38\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwstpgoq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwstpgoq.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    \"\"\"Check if two words have the same characters.\"\"\"\n    return dict()\
    \ == dict(Counter(s0) - Counter(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6sgsqche.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp6sgsqche.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ dict not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp6sgsqche.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6sgsqche.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6sgsqche.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6sgsqche.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: dict not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp6sgsqche.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6sgsqche.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6sgsqche.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6sgsqche.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: dict not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp6sgsqche.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6sgsqche.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6sgsqche.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6sgsqche.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: dict not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tm"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    map0 = []\n\
    \    map1 = []\n    for i = 1:length(s0)\n        push!(map0, s0[i])\n       \
    \ push!(map1, s1[i])\n    end\n    sort!(map0)\n    sort!(map1)\n    return map0\
    \ == map1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppdricya_.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmppdricya_.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdricya_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdricya_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppdricya_.jl:36\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppdricya_.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdricya_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppdricya_.jl:37\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdricya_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdricya_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    len0 = length(s0)\n    len1 = length(s1)\n    lens0 = sort(collect(s0))\n\
    \    lens1 = sort(collect(s1))\n    if len0 == len1\n        return lens0 == lens1\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp0hhkh7h.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpp0hhkh7h.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hhkh7h.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hhkh7h.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpp0hhkh7h.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp0hhkh7h.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hhkh7h.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpp0hhkh7h.jl:34\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hhkh7h.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hhkh7h.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_ind = 1\n    s1_ind = 1\n    current_char = \"\"\n    while s0_ind <=\
    \ length(s0) && s1_ind <= length(s1)\n        if current_char == \"\" \n     \
    \       current_char = s0[s0_ind]\n            s0_ind += 1\n        end\n    \
    \    while s1_ind <= length(s1) && s1[s1_ind] != current_char\n            s1_ind\
    \ += 1\n        end\n        if s1_ind > length(s1)\n            return false\n\
    \        end\n        current_char = \"\"\n    end\n    return s0_ind == length(s0)\
    \ + 1 && s1_ind == length(s1) + 1\nend\n\"\"\"\n    Test that words in a list\
    \ have the same characters.\n    >>> test_same_chars([\"axb\", \"bxa\"])\n   \
    \ true\n    >>> test_same_chars([\"axb\", \"bxx\"])\n    false\n    >>> test_same_chars([\"\
    axb\", \"bxx\", \"cxz\"])\n    false\n    >>> test_same_chars([\"axb\", \"bxx\"\
    , \"cxz\", \"xzc\"])\n    true\n    >>> test_same_chars([\"axb\", \"bxx\", \"\
    cxz\", \"xzc\", \"xzd\"])\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpcbczfpgc.jl:35\nin expression starting at /tmp/tmpcbczfpgc.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ### \n    #  Check if two words have the same characters.\n    #\n    # \
    \ ## Examples\n    #  ```julia\n    #  julia> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    )\n    #  true\n    #  julia> same_chars(\"abcd\", \"dddddddabc\")\n    #  true\n\
    \    #  julia> same_chars(\"dddddddabc\", \"abcd\")\n    #  true\n    #  julia>\
    \ same_chars(\"eabcd\", \"dddddddabc\")\n    #  false\n    #  julia> same_chars(\"\
    abcd\", \"dddddddabce\")\n    #  false\n    #  julia> same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\")\n    #  false\n    #  ```\n    #\n    ###\n    @assert\
    \ length(s0) == length(s1)\n    # sort\n    s0s = sort(s0)\n    s1s = sort(s1)\n\
    \    return all(s0s .== s1s)\nend\n```\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbd6dvc69.jl:43\nin expression starting at\
    \ /tmp/tmpbd6dvc69.jl:43\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return str_sort(s0) == str_sort(s1)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpspaebgkn.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpspaebgkn.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ str_sort not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpspaebgkn.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpspaebgkn.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpspaebgkn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpspaebgkn.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: str_sort not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpspaebgkn.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpspaebgkn.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpspaebgkn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpspaebgkn.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: str_sort not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpspaebgkn.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpspaebgkn.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpspaebgkn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpspaebgkn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: str_sort not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s = s0\n    while !isempty(s)\n        char = s[1]\n        if !(char in\
    \ s1)\n            return false\n        end\n        s1 = replace(s1, char =>\
    \ \"\")\n        s = replace(s, char => \"\")\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9hs1lq6g.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp9hs1lq6g.jl:37\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hs1lq6g.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hs1lq6g.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    s0_sort =\
    \ sort(s0)\n    s1_sort = sort(s1)\n    for i in 1:length(s0)\n        if s0_sort[i]\
    \ != s1_sort[i]\n            return false\n        end\n    end\n    return true\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1qipqt1t.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp1qipqt1t.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qipqt1t.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qipqt1t.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1qipqt1t.jl:36\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1qipqt1t.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1qipqt1t.jl:34\ntest set: Test Failed at /tmp/tmp1qipqt1t.jl:37\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qipqt1t.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qipqt1t.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    @assert length(s0) == length(s1) \"The two strings are not the same length\"\
    \n    @assert length(s0) == length(s1) \"The two strings are not the same length\"\
    \n    # Initialize an empty `Set{Char}` for each of the strings\n    s0_set =\
    \ Set{Char}()\n    s1_set = Set{Char}()\n    # Loop over the two strings and add\
    \ characters to the sets\n    for (c0, c1) in zip(s0, s1)\n        push!(s0_set,\
    \ c0)\n        push!(s1_set, c1)\n    end\n    # Return whether the two sets are\
    \ the same\n    s0_set == s1_set\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpymhxp3ze.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpymhxp3ze.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  AssertionError:\
    \ The two strings are not the same length\n  Stacktrace:\n   [1] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpymhxp3ze.jl:17\n   [2] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpymhxp3ze.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymhxp3ze.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpymhxp3ze.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  AssertionError: The two strings\
    \ are not the same length\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpymhxp3ze.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymhxp3ze.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymhxp3ze.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpymhxp3ze.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  AssertionError: The two strings\
    \ are not the same length\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpymhxp3ze.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymhxp3ze.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymhxp3ze.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpymhxp3ze.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  AssertionError: The two strings\
    \ are not the same length\n  Sta"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    sort(s0) == sort(s1)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmppbj6f6zu.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmppbj6f6zu.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmppbj6f6zu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppbj6f6zu.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppbj6f6zu.jl:23\ntest set:\
    \ Error During Test at /tmp/tmppbj6f6zu.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmppbj6f6zu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppbj6f6zu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppbj6f6zu.jl:23\ntest set:\
    \ Error During Test at /tmp/tmppbj6f6zu.jl:26\n  T"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    unique_0 = unique(s0)\n    unique_1 = unique(s1)\n    for ch0 in unique_0\n\
    \        if count(s0, ch0) != count(s1, ch0)\n            return false\n     \
    \   end\n    end\n    for ch1 in unique_1\n        if count(s0, ch1) != count(s1,\
    \ ch1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkd70qscc.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpkd70qscc.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ objects of type String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String,\
    \ itr::Char, init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String,\
    \ itr::Char; init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String,\
    \ itr::Char)\n     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpkd70qscc.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkd70qscc.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkd70qscc.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpkd70qscc.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n\
    \     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n   \
    \  @ Main /tmp/tmpkd70qscc.jl:20\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkd70qscc.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkd70qscc.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpkd70qscc.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce."
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if(length(s0) != length(s1))\n        return false\n    end\n    for i =\
    \ 1:length(s0)\n        if(contains(s1, s0[i]))\n            s1 = replace(s1,\
    \ s0[i], \"\")\n        else\n            return false\n        end\n    end\n\
    \    return true\nend\n\"\"\"\n    Remove a substring from a string\n    >>> filter_substring(\"\
    banana\", \"ana\")\n    \"bn\"\n    >>> filter_substring(\"banana\", \"n\")\n\
    \    \"baaa\"\n    >>> filter_substring(\"banana\", \"x\")\n    \"banana\"\n \
    \   >>> filter_substring(\"banana\", \"anaa\")\n    \"banana\"\n    >>> filter_substring(\"\
    banana\", \"abc\")\n    \"banana\"\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp7v_eusaf.jl:29\nin expression starting at /tmp/tmp7v_eusaf.jl:29\n"
  stdout: ''
  timestamp: 1660009286
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    a = Counter(s0)\n    b = Counter(s1)\n    for (k,v) in a\n        if a[k]\
    \ != b[k]\n            return false\n        end\n    end\n    return true\nend\n\
    \        \nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp13m9fx2r.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp13m9fx2r.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ Counter not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp13m9fx2r.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp13m9fx2r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp13m9fx2r.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp13m9fx2r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp13m9fx2r.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp13m9fx2r.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp13m9fx2r.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp13m9fx2r.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp13m9fx2r.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp13m9fx2r.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp13m9fx2r.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp13m9fx2r.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: Counter not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp13m9fx2r.jl:1"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    i0 = 1\n    i1 = 1\n    while i0\
    \ <= n0 && i1 <= n1\n        if s0[i0] == s1[i1]\n            i0 += 1\n      \
    \      i1 += 1\n        else\n            i1 += 1\n        end\n    end\n    i0\
    \ > n0\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprbdliumn.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmprbdliumn.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdliumn.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdliumn.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprbdliumn.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprbdliumn.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprbdliumn.jl:35\ntest set: Test Failed at /tmp/tmprbdliumn.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdliumn.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdliumn.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0, s1 = map(sort, (s0, s1))\n    return s0 == s1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmps9n761la.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmps9n761la.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] map\n     @ ./tuple.jl:222 [inlined]\n   [2] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmps9n761la.jl:17\n   [3] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmps9n761la.jl:25 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps9n761la.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps9n761la.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] map\n     @ ./tuple.jl:222 [inlined]\n   [2] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmps9n761la.jl:17\n   [3] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmps9n761la.jl:26 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n "
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    len0 = length(s0)\n    len1 = length(s1)\n    if len0 != len1\n        return\
    \ false\n    end\n    cnt0 = count_chars(s0)\n    cnt1 = count_chars(s1)\n   \
    \ for i in 0:255\n        if cnt0[i] != cnt1[i]\n            return false\n  \
    \      end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy127rcyp.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpy127rcyp.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy127rcyp.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy127rcyp.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpy127rcyp.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy127rcyp.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy127rcyp.jl:35\ntest set: Test Failed at /tmp/tmpy127rcyp.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy127rcyp.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy127rcyp.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_array = Array{Char}(s0)\n    s1_array = Array{Char}(s1)\n    index = 0\n\
    \    while index <= length(s0_array)\n        if in(s0_array[index], s1_array)\n\
    \            deleteat!(s1_array, findfirst(s1_array, s0_array[index]))\n     \
    \   else\n            return false\n        end\n        index += 1\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpsbke5ewc.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpsbke5ewc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching (Array{Char})(::String)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpsbke5ewc.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsbke5ewc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsbke5ewc.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpsbke5ewc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ (Array{Char})(::String)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmps"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    seen = [false for i in 1:length(s0)]\n    count = 0\n    for i in 1:length(s1)\n\
    \        for j in 1:length(s0)\n            if s1[i] == s0[j] && !seen[j]\n  \
    \              seen[j] = true\n                count += 1\n                break\n\
    \            end\n        end\n    end\n    return count == length(s0)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfpza9jgu.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpfpza9jgu.jl:37\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpza9jgu.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpza9jgu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfpza9jgu.jl:39\n  Expression: candidate(\"abcd\", \"dddddddabcf\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfpza9jgu.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfpza9jgu.jl:34\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     2      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    count0 = count(s0)\n    count1 = count(s1)\n    for (key, value) in count0\n\
    \        if count1[key] != value\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpq7n2s036.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpq7n2s036.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  TypeError:\
    \ non-boolean (Char) used in boolean context\n  Stacktrace:\n   [1] _simple_count\n\
    \     @ ./reduce.jl:1206 [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201\
    \ [inlined]\n   [3] #count#270\n     @ ./reduce.jl:1199 [inlined]\n   [4] count\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [5] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpq7n2s036.jl:17\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpq7n2s036.jl:31 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpq7n2s036.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpq7n2s036.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inlined]\n\
    \   [5] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpq7n2s036.jl:17\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpq7n2s036.jl:32 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpq7n2s036.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpq7n2s036.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inl"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for i=1:length(s0)\n        if find(s1, s0[i])==0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp1_jw5z_p.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp1_jw5z_p.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ find not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp1_jw5z_p.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_jw5z_p.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_jw5z_p.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1_jw5z_p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp1_jw5z_p.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_jw5z_p.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_jw5z_p.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1_jw5z_p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp1_jw5z_p.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_jw5z_p.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_jw5z_p.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1_jw5z_p.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp1_jw5z_p.jl:18\n\
    \   [2] mac"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpwmmooo6m.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwmmooo6m.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Bool\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpwmmooo6m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwmmooo6m.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwmmooo6m.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwmmooo6m.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpwmmooo6m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwmmooo6m.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwmmooo6m.jl:23\ntest set:\
    \ Error During Test"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    a = sort(collect(s0))\n    b = sort(collect(s1))\n    return a == b\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo_0c49ue.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo_0c49ue.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_0c49ue.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_0c49ue.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo_0c49ue.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo_0c49ue.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo_0c49ue.jl:25\ntest set: Test Failed at /tmp/tmpo_0c49ue.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_0c49ue.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_0c49ue.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # check if they have the same length\n    return length(s0) == length(s1)\
    \ && count(s0) == count(s1)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe_a9onb3.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpe_a9onb3.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe_a9onb3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe_a9onb3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpe_a9onb3.jl:26\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe_a9onb3.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpe_a9onb3.jl:24\ntest set: Test Failed at /tmp/tmpe_a9onb3.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe_a9onb3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe_a9onb3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    sc0 = sort(collect(s0))\n    sc1 = sort(collect(s1))\n    (sc0 == sc1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphcnoa9_l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmphcnoa9_l.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcnoa9_l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcnoa9_l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphcnoa9_l.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphcnoa9_l.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphcnoa9_l.jl:25\ntest set: Test Failed at /tmp/tmphcnoa9_l.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcnoa9_l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcnoa9_l.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \  if length(s0) != length(s1)\n    return false\n  end\n  \n  for c in s0\n \
    \   if count(s0, c) != count(s1, c)\n      return false\n    end\n  end\n  \n\
    \  return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl9h17tmr.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpl9h17tmr.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9h17tmr.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9h17tmr.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpl9h17tmr.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl9h17tmr.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl9h17tmr.jl:33\ntest set: Test Failed at /tmp/tmpl9h17tmr.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9h17tmr.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9h17tmr.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    c0 = count(s0)\n\
    \    c1 = count(s1)\n    return all(a -> a[2]==b[2], eachcolon(c0, c1))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgp7_iyxy.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpgp7_iyxy.jl:29\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgp7_iyxy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgp7_iyxy.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgp7_iyxy.jl:30\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgp7_iyxy.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgp7_iyxy.jl:28\ntest set: Test Failed at /tmp/tmpgp7_iyxy.jl:31\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgp7_iyxy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgp7_iyxy.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    set0 = Set{Char}(string(s0))\n    set1 = Set{Char}(string(s1))\n    return\
    \ set0 == set1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009285
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1) \n        return false\n    end\n    for i in\
    \ s0\n        if !ismatch(r\"$i\", s1)\n            return false\n        end\n\
    \    end\n    return true\nend\n# same_chars(\"abcd\", \"dddddddabc\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztgllzbi.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpztgllzbi.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztgllzbi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztgllzbi.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpztgllzbi.jl:34\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpztgllzbi.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpztgllzbi.jl:32\ntest set: Test Failed at /tmp/tmpztgllzbi.jl:35\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztgllzbi.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztgllzbi.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    charchars0 = Set(s0)\n    charchars1 = Set(s1)\n    if length(charchars0)\
    \ != length(charchars1)\n        return false\n    end\n    for c in charchars0\n\
    \        if count(s0, c) != count(s1, c)\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbg4_n9t1.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpbg4_n9t1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ objects of type String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String,\
    \ itr::Char, init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String,\
    \ itr::Char; init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String,\
    \ itr::Char)\n     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpbg4_n9t1.jl:23\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbg4_n9t1.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbg4_n9t1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpbg4_n9t1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n\
    \     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n   \
    \  @ Main /tmp/tmpbg4_n9t1.jl:23\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbg4_n9t1.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbg4_n9t1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpbg4_n9t1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce."
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for i in\
    \ 1:length(s0)\n        j = search(s1, s0[i])\n        if j == nothing\n     \
    \       return false\n        end\n        s1 = s1[1:j-1] * s1[j+1:end]\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph8m3k9go.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmph8m3k9go.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8m3k9go.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph8m3k9go.jl:33\ntest set: Test\
    \ Failed at /tmp/tmph8m3k9go.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph8m3k9go.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph8m3k9go.jl:33\ntest set: Test Failed at /tmp/tmph8m3k9go.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8m3k9go.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph8m3k9go.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    \n    s0_sorted = sort(collect(s0))\n    s1_sorted = sort(collect(s1))\n\
    \    \n    if s0_sorted == s1_sorted\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzttl643g.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpzttl643g.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzttl643g.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzttl643g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzttl643g.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzttl643g.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzttl643g.jl:31\ntest set: Test Failed at /tmp/tmpzttl643g.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzttl643g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzttl643g.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    i = 1\n    for c in s0\n        if findfirst(c, s1[i:end]) == nothing\n \
    \           return false\n        else\n            i = i + findfirst(c, s1[i:end])\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqio1sgt5.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpqio1sgt5.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqio1sgt5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqio1sgt5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqio1sgt5.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqio1sgt5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqio1sgt5.jl:31\ntest set: Test Failed at /tmp/tmpqio1sgt5.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqio1sgt5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqio1sgt5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for c in\
    \ s0\n        if count(s0, c) != count(s1, c)\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp033ix9ak.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp033ix9ak.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp033ix9ak.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp033ix9ak.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp033ix9ak.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp033ix9ak.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp033ix9ak.jl:31\ntest set: Test Failed at /tmp/tmp033ix9ak.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp033ix9ak.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp033ix9ak.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0c = countmap(s0)\n    s1c = countmap(s1)\n    for (k,v) in s0c\n      \
    \  if v != s1c[k]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9o5ronbz.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp9o5ronbz.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp9o5ronbz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9o5ronbz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9o5ronbz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9o5ronbz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp9o5ronbz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9o5ronbz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9o5ronbz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9o5ronbz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp9o5ronbz.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9o5ronbz.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9o5ronbz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9o5ronbz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp9o5ronbz."
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    if n0 != n1\n        return false\n\
    \    end\n    d = Dict{Char, Int}()\n    for c = s0\n        d[c] = get(d, c,\
    \ 0) + 1\n    end\n    for c = s1\n        if !haskey(d, c) || d[c] == 0\n   \
    \         return false\n        end\n        d[c] -= 1\n    end\n    true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0uu2payq.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp0uu2payq.jl:39\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0uu2payq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0uu2payq.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp0uu2payq.jl:40\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0uu2payq.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0uu2payq.jl:38\ntest set: Test Failed at /tmp/tmp0uu2payq.jl:41\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0uu2payq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0uu2payq.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    while length(s0) > 0\n        c0 = last(s0)\n        s0 = s0[1:end-1]\n \
    \       i1 = findfirst(x -> x == c0, s1)\n        if i1 == nothing\n         \
    \   return false\n        end\n        s1 = s1[1:i1-1] * s1[i1+1:end]\n    end\n\
    \    if length(s1) > 0\n        return false\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjgak8dw8.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpjgak8dw8.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgak8dw8.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgak8dw8.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpjgak8dw8.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjgak8dw8.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjgak8dw8.jl:35\ntest set: Test Failed at /tmp/tmpjgak8dw8.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgak8dw8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgak8dw8.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    l0 = unique(s0)\n    l1 = unique(s1)\n    if length(l0) != length(l1)\n \
    \       return false\n    end\n    for i in 1:length(l0)\n        if count(s0,\
    \ l0[i]) != count(s1, l0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp11icb4pu.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp11icb4pu.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ objects of type String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String,\
    \ itr::Char, init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String,\
    \ itr::Char; init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String,\
    \ itr::Char)\n     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp11icb4pu.jl:23\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp11icb4pu.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp11icb4pu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp11icb4pu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce.jl:1201\n   [3] count(f::String, itr::Char)\n\
    \     @ Base ./reduce.jl:1201\n   [4] same_chars(s0::String, s1::String)\n   \
    \  @ Main /tmp/tmp11icb4pu.jl:23\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp11icb4pu.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp11icb4pu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp11icb4pu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] _simple_count(pred::String, itr::Char,\
    \ init::Int64)\n     @ Base ./reduce.jl:1206\n   [2] count(f::String, itr::Char;\
    \ init::Int64)\n     @ Base ./reduce."
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    counts = Dict{Char,Int}()\n    for c in s0\n        counts[c] = get(counts,\
    \ c, 0) + 1\n    end\n    for c in s1\n        counts[c] = get(counts, c, 0) -\
    \ 1\n    end\n    for c in keys(counts)\n        if counts[c] != 0\n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7xa9djot.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp7xa9djot.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xa9djot.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xa9djot.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp7xa9djot.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7xa9djot.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7xa9djot.jl:35\ntest set: Test Failed at /tmp/tmp7xa9djot.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xa9djot.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xa9djot.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    count0 = count_chars(s0)\n    count1 = count_chars(s1)\n    return count0\
    \ == count1\nend\n\"\"\"\n    Check if two words have the same characters.\n \
    \   >>> same_chars([\"eabcdzzzz\"], [\"dddzzzzzzzddeddabc\"])\n    true\n    >>>\
    \ same_chars([\"abcd\"], [\"dddddddabc\"])\n    true\n    >>> same_chars([\"dddddddabc\"\
    ], [\"abcd\"])\n    true\n    >>> same_chars([\"eabcd\"], [\"dddddddabc\"])\n\
    \    false\n    >>> same_chars([\"abcd\"], [\"dddddddabce\"])\n    false\n   \
    \ >>> same_chars([\"eabcdzzzz\"], [\"dddzzzzzzzddddabc\"])\n    false\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpvmcbxqpq.jl:21\nin expression starting at /tmp/tmpvmcbxqpq.jl:21\n"
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_map = Dict()\n    s1_map = Dict()\n    s0_counter = 0\n    s1_counter\
    \ = 0\n    for (index, letter) in enumerate(s0)\n        s0_map[letter] = get(s0_map,\
    \ letter, 0) + 1\n        s0_counter += 1\n    end\n    for (index, letter) in\
    \ enumerate(s1)\n        s1_map[letter] = get(s1_map, letter, 0) + 1\n       \
    \ s1_counter += 1\n    end\n    return s0_counter == s1_counter && s0_map == s1_map\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptz9y7n8j.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmptz9y7n8j.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz9y7n8j.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9y7n8j.jl:35\ntest set: Test\
    \ Failed at /tmp/tmptz9y7n8j.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptz9y7n8j.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptz9y7n8j.jl:35\ntest set: Test Failed at /tmp/tmptz9y7n8j.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz9y7n8j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9y7n8j.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    w0 = count_letters(s0)\n    w1 = count_letters(s1)\n    return w0 == w1\n\
    end\n \n  \n    \n    \n \n    \n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpooodm7_p.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpooodm7_p.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ count_letters not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpooodm7_p.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooodm7_p.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooodm7_p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpooodm7_p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: count_letters\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/tmpooodm7_p.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooodm7_p.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooodm7_p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpooodm7_p.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: count_letters\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/tmpooodm7_p.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooodm7_p.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooodm7_p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpooodm7_p.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: count_letters\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Ma"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    same = true\n    b0 = 0\n    b1 = 0\n    while same && b0 < length(s0) &&\
    \ b1 < length(s1)\n        if s0[b0] == s1[b1]\n            same = true\n    \
    \        b0 += 1\n            b1 += 1\n        else\n            b1 += 1\n   \
    \     end\n    end\n    if b0 < length(s0) || b1 < length(s1)\n        same =\
    \ false\n    end\n    return same\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpdywubxku.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpdywubxku.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpdywubxku.jl:21\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdywubxku.jl:39 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdywubxku.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpdywubxku.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  BoundsError: attempt to access\
    \ 4-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpdywubxku.jl:21\n   [5] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpdywubxku.jl:40 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdywubxku.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpdywubxku.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  BoundsError: attempt to access\
    \ 10-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpdywubx"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    word0 = split(s0, \"\")\n    word1 = split(s1, \"\")\n    return sort(word0)\
    \ == sort(word1)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplnndyh1n.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmplnndyh1n.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnndyh1n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnndyh1n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplnndyh1n.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplnndyh1n.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplnndyh1n.jl:25\ntest set: Test Failed at /tmp/tmplnndyh1n.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnndyh1n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnndyh1n.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0 = sort(collect(s0))\n    s1 = sort(collect(s1))\n    if s0 == s1\n   \
    \     return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdvr3x3sf.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpdvr3x3sf.jl:30\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvr3x3sf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvr3x3sf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdvr3x3sf.jl:31\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdvr3x3sf.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdvr3x3sf.jl:29\ntest set: Test Failed at /tmp/tmpdvr3x3sf.jl:32\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvr3x3sf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvr3x3sf.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    \n    ls0 = countmap(s0)\n    ls1 = countmap(s1)\n    \n    for (c, cnt)\
    \ in ls0\n        if haskey(ls1, c)\n            if cnt != ls1[c]\n          \
    \      return false\n            end\n        else\n            return false\n\
    \        end\n    end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpy6__6kpb.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpy6__6kpb.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpy6__6kpb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6__6kpb.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6__6kpb.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpy6__6kpb.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpy6__6kpb.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6__6kpb.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6__6kpb.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpy6__6kpb.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpy6__6kpb.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6__6kpb.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6__6kpb.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpy6__6kpb.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpy6__6kpb."
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_length = length(s0)\n    s1_length = length(s1)\n    if s0_length != s1_length\n\
    \        return false\n    end\n    # Normalize strings, by sorting:\n    s0_array\
    \ = collect(s0)\n    s1_array = collect(s1)\n    sort!(s0_array)\n    sort!(s1_array)\n\
    \    return s0_array == s1_array\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5ybgfuwe.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp5ybgfuwe.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ybgfuwe.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ybgfuwe.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp5ybgfuwe.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5ybgfuwe.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5ybgfuwe.jl:33\ntest set: Test Failed at /tmp/tmp5ybgfuwe.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ybgfuwe.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ybgfuwe.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    count = Dict{Char, Int}()\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbcvr1yxx.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbcvr1yxx.jl:1\n\
    in expression starting at /tmp/tmpbcvr1yxx.jl:1\n"
  stdout: ''
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    c0 = countchars(s0)\n\
    \    c1 = countchars(s1)\n    for (k, v) in c0\n        if v != c1[k]\n      \
    \      return false\n        end\n    end\n    true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyive6t2n.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpyive6t2n.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyive6t2n.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyive6t2n.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpyive6t2n.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyive6t2n.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyive6t2n.jl:33\ntest set: Test Failed at /tmp/tmpyive6t2n.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyive6t2n.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyive6t2n.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009291
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for x = s0\n        if !(x in s1)\n            return false\n        end\n\
    \    end\n    for x = s1\n        if !(x in s0)\n            return false\n  \
    \      end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \  i = 0 \n  j = 0 \n  while i < length(s0) && j < length(s1) \n    if s0[i] ==\
    \ s1[j] \n      i += 1 \n      j += 1 \n    else \n      j += 1 \n    end \n \
    \ end \n  i == length(s0) \nend \nusing Test\n\n@testset begin\n\ncandidate =\
    \ same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp697y8wn4.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp697y8wn4.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp697y8wn4.jl:20\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp697y8wn4.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp697y8wn4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp697y8wn4.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  BoundsError: attempt to access\
    \ 4-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmp697y8wn4.jl:20\n   [5] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmp697y8wn4.jl:35 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp697y8wn4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp697y8wn4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  BoundsError: attempt to access\
    \ 10-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmp697y8w"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    #print(\"0: $(s0) 1: $(s1)\")\n    length(s0) == length(s1) &&\n    [findfirst(s1,\
    \ s0[i]) != nothing for i in 1:length(s0)] |> all\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt1ad1ph9.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpt1ad1ph9.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt1ad1ph9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt1ad1ph9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt1ad1ph9.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt1ad1ph9.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt1ad1ph9.jl:25\ntest set: Test Failed at /tmp/tmpt1ad1ph9.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt1ad1ph9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt1ad1ph9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    cs0 = Dict{Char,Int}()\n    cs1 = Dict{Char,Int}()\n    for i in s0\n   \
    \     if i in keys(cs0)\n            cs0[i] += 1\n        else\n            cs0[i]\
    \ = 1\n        end\n    end\n    for i in s1\n        if i in keys(cs1)\n    \
    \        cs1[i] += 1\n        else\n            cs1[i] = 1\n        end\n    end\n\
    \    cs0 == cs1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3hl_8yvj.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmp3hl_8yvj.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3hl_8yvj.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3hl_8yvj.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp3hl_8yvj.jl:41\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3hl_8yvj.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3hl_8yvj.jl:39\ntest set: Test Failed at /tmp/tmp3hl_8yvj.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3hl_8yvj.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3hl_8yvj.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return sorted(s0) == sorted(s1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxh4e11ye.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxh4e11ye.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ sorted not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpxh4e11ye.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxh4e11ye.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxh4e11ye.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxh4e11ye.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpxh4e11ye.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxh4e11ye.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxh4e11ye.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxh4e11ye.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpxh4e11ye.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxh4e11ye.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxh4e11ye.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxh4e11ye.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpxh4e11ye.jl:17\n\
    \  "
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Your code here...\n    w0 = sort(collect(s0))\n    w1 = sort(collect(s1))\n\
    \    w0 == w1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb5ac_dl3.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpb5ac_dl3.jl:27\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5ac_dl3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5ac_dl3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb5ac_dl3.jl:28\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb5ac_dl3.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb5ac_dl3.jl:26\ntest set: Test Failed at /tmp/tmpb5ac_dl3.jl:29\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5ac_dl3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5ac_dl3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = Dict{Char,Int}()\n    d1 = Dict{Char,Int}()\n    for c in s0\n     \
    \   d0[c] = get(d0, c, 0) + 1\n    end\n    for c in s1\n        d1[c] = get(d1,\
    \ c, 0) + 1\n    end\n    return d0 == d1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpta6uneen.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpta6uneen.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta6uneen.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta6uneen.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpta6uneen.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpta6uneen.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpta6uneen.jl:31\ntest set: Test Failed at /tmp/tmpta6uneen.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta6uneen.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta6uneen.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for i in s0\n        match i in s1\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpyo0m_36t.jl:17 expected \"\
    end\", got \"i\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyo0m_36t.jl:18\n\
    in expression starting at /tmp/tmpyo0m_36t.jl:18\n"
  stdout: ''
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1) \n        return false\n    end\n    c0 = collect(s0)\n\
    \    c1 = collect(s1)\n    c1sort = sort(c1)\n    for c in c0\n        if !(c\
    \ in c1sort)\n            return false\n        end\n        c1sort = deleteat!(c1sort,\
    \ findfirst(c1sort, c))\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpska5q7bv.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpska5q7bv.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpska5q7bv.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpska5q7bv.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpska5q7bv.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpska5q7bv.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpska5q7bv.jl:35\ntest set: Test Failed at /tmp/tmpska5q7bv.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpska5q7bv.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpska5q7bv.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0s = sort(s0)\n    s1s = sort(s1)\n    return s0s == s1s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp6ci89vl6.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp6ci89vl6.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp6ci89vl6.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ci89vl6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ci89vl6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6ci89vl6.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp6ci89vl6.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ci89vl6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ci89vl6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp6ci89vl6.jl:28\n  T"
  timestamp: 1660009294
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    sc0 = Set(s0)\n    sc1 = Set(s1)\n    if sc0 == sc1\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    t0 = groupasc(str2chars(s0))\n    t1 = groupasc(str2chars(s1))\n    for i\
    \ in 1:size(t0, 1)\n        if t0[i][2] != 0\n            found = false\n    \
    \        for j in 1:size(t1, 1)\n                if t1[j][1] == t0[i][1]\n   \
    \                 if t1[j][2] == t0[i][2]\n                        found = true\n\
    \                        break\n                    end\n                end\n\
    \            end\n            if !found\n                return false\n      \
    \      end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpzmn8giu0.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmpzmn8giu0.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ str2chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpzmn8giu0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmn8giu0.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmn8giu0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzmn8giu0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: str2chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpzmn8giu0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmn8giu0.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmn8giu0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzmn8giu0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: str2chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpzmn8giu0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmn8giu0.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmn8giu0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzmn8giu0.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: str2chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpzmn8g"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0s = sort(s0)\n    s1s = sort(s1)\n    for i in 1:length(s0s)\n        if\
    \ s0s[i] != s1s[i]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpf1unhu5s.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpf1unhu5s.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpf1unhu5s.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1unhu5s.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1unhu5s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpf1unhu5s.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpf1unhu5s.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1unhu5s.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1unhu5s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpf1unhu5s.jl:33\n  T"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    # make a\
    \ copy of the string\n    # sort the copy\n    # check if they're the same\n \
    \   s0_copy = copy(s0)\n    s1_copy = copy(s1)\n    sort!(s0_copy)\n    sort!(s1_copy)\n\
    \    if s0_copy == s1_copy\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfblqizqv.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmpfblqizqv.jl:38\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfblqizqv.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfblqizqv.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpfblqizqv.jl:39\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfblqizqv.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfblqizqv.jl:37\ntest set: Test Failed at /tmp/tmpfblqizqv.jl:40\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfblqizqv.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfblqizqv.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # TODO: write the code for this function \n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0p540_0j.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp0p540_0j.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0p540_0j.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0p540_0j.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp0p540_0j.jl:26\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0p540_0j.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0p540_0j.jl:24\ntest set: Test Failed at /tmp/tmp0p540_0j.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0p540_0j.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0p540_0j.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_count = count_chars(s0)\n    s1_count = count_chars(s1)\n    for (k, v)\
    \ in s0_count\n        if k in s1_count\n            if s1_count[k] != v\n   \
    \             return false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvu_isdau.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpvu_isdau.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ count_chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpvu_isdau.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu_isdau.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu_isdau.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpvu_isdau.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpvu_isdau.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu_isdau.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu_isdau.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpvu_isdau.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpvu_isdau.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu_isdau.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu_isdau.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpvu_isdau.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: count_chars\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ch0 = sort(collect(s0))\n    ch1 = sort(collect(s1))\n    return(ch0 == ch1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb01w_ky_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpb01w_ky_.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb01w_ky_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb01w_ky_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb01w_ky_.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb01w_ky_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb01w_ky_.jl:25\ntest set: Test Failed at /tmp/tmpb01w_ky_.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb01w_ky_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb01w_ky_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # create a set of chars from s0\n    s0c = Set(collect(s0))\n    for c in\
    \ s1\n        if !in(c, s0c)\n            return false\n        end\n    end\n\
    \    true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tuuomig.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp7tuuomig.jl:34\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tuuomig.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tuuomig.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7tuuomig.jl:36\n  Expression: candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddddabc\") == false\n   Evaluated: true == false\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tuuomig.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tuuomig.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    if n0 != n1\n        return false\n\
    \    end\n    @inbounds for i in 1:n0\n        if s0[i] != s1[i]\n           \
    \ return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppwpp26xt.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmppwpp26xt.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpp26xt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpp26xt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmppwpp26xt.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppwpp26xt.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppwpp26xt.jl:33\ntest set: Test Failed at /tmp/tmppwpp26xt.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpp26xt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpp26xt.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return length(s0) == length(s1) && all(\n        count(s0,c) == count(s1,c)\
    \ for c in s0\n    )\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp69tycpct.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp69tycpct.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69tycpct.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69tycpct.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp69tycpct.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp69tycpct.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp69tycpct.jl:25\ntest set: Test Failed at /tmp/tmp69tycpct.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69tycpct.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69tycpct.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    if n0 > n1\n        return false\n\
    \    end\n    m0 = Dict{Char,Int}()\n    for c in s0\n        m0[c] = get(m0,\
    \ c, 0) + 1\n    end\n    m1 = Dict{Char,Int}()\n    for c in s1[1:n0]\n     \
    \   m1[c] = get(m1, c, 0) + 1\n    end\n    for i in 1:n1-n0\n        if m0 ==\
    \ m1\n            return true\n        end\n        m1[s1[i]] -= 1\n        if\
    \ m1[s1[i]] == 0\n            delete!(m1, s1[i])\n        end\n        m1[s1[i+n0]]\
    \ = get(m1, s1[i+n0], 0) + 1\n    end\n    if m0 == m1\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptwg3uf8t.jl:47

    '
  stdout: "test set: Test Failed at /tmp/tmptwg3uf8t.jl:50\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptwg3uf8t.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptwg3uf8t.jl:49\ntest set: Test\
    \ Failed at /tmp/tmptwg3uf8t.jl:52\n  Expression: candidate(\"dddddddabc\", \"\
    abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptwg3uf8t.jl:52 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptwg3uf8t.jl:49\ntest set: Test Failed at /tmp/tmptwg3uf8t.jl:54\n\
    \  Expression: candidate(\"abcd\", \"dddddddabcf\") == false\n   Evaluated: true\
    \ == false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptwg3uf8t.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptwg3uf8t.jl:49\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for c = 'a':'z'\n\
    \        if count(s0, c) != count(s1, c)\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn9p_z4ve.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpn9p_z4ve.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn9p_z4ve.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn9p_z4ve.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn9p_z4ve.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpn9p_z4ve.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpn9p_z4ve.jl:31\ntest set: Test Failed at /tmp/tmpn9p_z4ve.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn9p_z4ve.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn9p_z4ve.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0, s1 = sort(s0), sort(s1)\n    i, j = 1, 1\n    while i <= length(s0) &&\
    \ j <= length(s1)\n        if s0[i] < s1[j]\n            return false\n      \
    \  elseif s0[i] > s1[j]\n            j += 1\n        else\n            i += 1\n\
    \            j += 1\n        end\n    end\n    i > length(s0)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpfow13mhz.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpfow13mhz.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpfow13mhz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfow13mhz.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfow13mhz.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpfow13mhz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpfow13mhz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfow13mhz.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfow13mhz.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpfow13mhz.jl:38\n  T"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1) \n        return false\n    end\n    for c in\
    \ s0\n        if count(s0, c) != count(s1, c)\n            return false\n    \
    \    end\n    end\n    return true\nend\nsame_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2vb_mbw5.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp2vb_mbw5.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vb_mbw5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vb_mbw5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2vb_mbw5.jl:34\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2vb_mbw5.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2vb_mbw5.jl:32\ntest set: Test Failed at /tmp/tmp2vb_mbw5.jl:35\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vb_mbw5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vb_mbw5.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d = Dict{Char,Int}()\n    for i in s0\n        if !haskey(d, i)\n       \
    \     d[i] = 1\n        else\n            d[i] += 1\n        end\n    end\n  \
    \  for i in s1\n        if !haskey(d, i)\n            return false\n        else\n\
    \            d[i] -= 1\n            if d[i] < 0\n                return false\n\
    \            end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgu_g94py.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpgu_g94py.jl:42\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgu_g94py.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgu_g94py.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpgu_g94py.jl:43\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgu_g94py.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgu_g94py.jl:41\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     2      7\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    #if length(s0) != length(s1) \n        #return false\n    #end\n    #for\
    \ i in keys(s0)\n        #if s0[i] != s1[i]\n            #return false\n     \
    \   #end\n    #end\n    #return true\n    # The above code is my solution\n  \
    \  return sort(s0) == sort(s1)\n    # This is what I should have done, I guess.\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbgal6gr5.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpbgal6gr5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpbgal6gr5.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbgal6gr5.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbgal6gr5.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpbgal6gr5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpbgal6gr5.jl:27\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbgal6gr5.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbgal6gr5.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpbgal6gr5.jl:37\n  T"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_chars = sort(split(s0))\n    s1_chars = sort(split(s1))\n    return s0_chars\
    \ == s1_chars\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcd5cwbzo.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpcd5cwbzo.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcd5cwbzo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcd5cwbzo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcd5cwbzo.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcd5cwbzo.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcd5cwbzo.jl:25\ntest set: Test Failed at /tmp/tmpcd5cwbzo.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcd5cwbzo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcd5cwbzo.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    chars = unique(s0)\n\
    \    if length(chars) != length(unique(s1))\n        return false\n    end\n \
    \   for c in chars\n        if count(c, s0) != count(c, s1)\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp63xmhbmh.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp63xmhbmh.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63xmhbmh.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63xmhbmh.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp63xmhbmh.jl:37\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp63xmhbmh.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp63xmhbmh.jl:35\ntest set: Test Failed at /tmp/tmp63xmhbmh.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63xmhbmh.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63xmhbmh.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009294
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if string(collect(s0)) < string(collect(s1))\n        return same_chars(s1,\
    \ s0)\n    end\n    count = 0\n    for i in s0\n        if i in s1\n         \
    \   count += 1\n        end\n    end\n    if count == length(s0)\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = Counter(s0)\n    c1 = Counter(s1)\n    for (k,v) in c0\n        if c1[k]\
    \ < v\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9pqw5omv.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp9pqw5omv.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ Counter not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp9pqw5omv.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pqw5omv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pqw5omv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9pqw5omv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp9pqw5omv.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pqw5omv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pqw5omv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9pqw5omv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp9pqw5omv.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9pqw5omv.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9pqw5omv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9pqw5omv.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: Counter not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp9pqw5omv.jl:1"
  timestamp: 1660009296
- exit_code: -1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_length = length(s0)\n    s1_length = length(s1)\n    if (s0_length > s1_length)\n\
    \        return false\n    end\n    if (s0_length == s1_length)\n        return\
    \ s0 == s1\n    end\n    if (s0_length == 0)\n        return true\n    end\n \
    \   s0_set = Set(s0)\n    s1_set = Set(s1)\n    s0_no_dups = length(s0_set)\n\
    \    s1_no_dups = length(s1_set)\n    if (s0_no_dups > s1_no_dups)\n        return\
    \ false\n    end\n    for i = 1:s0_no_dups\n        c = s0_set[i]\n        if\
    \ !(c in s1_set)\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmph97zbufl.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching getindex(::Set{Char}, ::Int64)\n  Stacktrace:\n   [1] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmph97zbufl.jl:36\n   [2] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph97zbufl.jl:48 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph97zbufl.jl:47\ntest set:\
    \ Error During Test at /tmp/tmph97zbufl.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ getindex(::Set{Char}, ::Int64)\n  Stacktrace:\n   [1] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmph97zbufl.jl:36\n   [2] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph97zbufl.jl:49 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph97zbufl.jl:47\ntest set:\
    \ Test Failed at /tmp/tmph97zbufl.jl:50\n  Expression: candidate(\"dddddddabc\"\
    , \"abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph97zbufl.jl:50 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph97zbufl.jl:47\ntest set: Error During Test\
    \ at /tmp/tmph97zbufl.jl:52\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  MethodError: no method matching getindex(::Set{Char},\
    \ ::Int64)\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmph97zbufl.jl:36\n   [2] macro expansion\n     @ ~/.conda/envs/pol"
  timestamp: 1660009297
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    set0 = Set(collect(s0))\n    set1 = Set(collect(s1))\n    return isequal(set0,\
    \ set1)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Check if s0's characters are all in s1 and if s1's characters are all in\
    \ s0\n    return is_anagram(s0, s1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp06ar86lb.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp06ar86lb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ is_anagram not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp06ar86lb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp06ar86lb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp06ar86lb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp06ar86lb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: is_anagram not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp06ar86lb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp06ar86lb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp06ar86lb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp06ar86lb.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: is_anagram not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp06ar86lb.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp06ar86lb.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp06ar86lb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp06ar86lb.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: is_anagram not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp0"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    count_vec0 = collect(countmap(s0))\n    count_vec1 = collect(countmap(s1))\n\
    \    sort!(count_vec0)\n    sort!(count_vec1)\n    if count_vec0 == count_vec1\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_pi27xzj.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp_pi27xzj.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp_pi27xzj.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_pi27xzj.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_pi27xzj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_pi27xzj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp_pi27xzj.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_pi27xzj.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_pi27xzj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_pi27xzj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp_pi27xzj.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_pi27xzj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_pi27xzj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_pi27xzj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp_pi27xzj."
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_chars = sort(collect(s0))\n    s1_chars = sort(collect(s1))\n    return\
    \ s0_chars == s1_chars\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp32aqf0se.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp32aqf0se.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp32aqf0se.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp32aqf0se.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp32aqf0se.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp32aqf0se.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp32aqf0se.jl:25\ntest set: Test Failed at /tmp/tmp32aqf0se.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp32aqf0se.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp32aqf0se.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    is_valid = true\n    if length(s0) != length(s1)\n        is_valid = false\n\
    \    else\n        for c in s0\n            if !contains(s1, c)\n            \
    \    is_valid = false\n                break\n            end\n        end\n \
    \   end\n    return is_valid\nend\n\"\"\"\n    Check if two words have the same\
    \ characters.\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n   \
    \ true\n    >>> same_chars(\"abcd\", \"dddddddabc\")\n    true\n    >>> same_chars(\"\
    dddddddabc\", \"abcd\")\n    true\n    >>> same_chars(\"eabcd\", \"dddddddabc\"\
    )\n    false\n    >>> same_chars(\"abcd\", \"dddddddabce\")\n    false\n    >>>\
    \ same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n    false\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpsd2uaiuc.jl:30\nin expression starting at /tmp/tmpsd2uaiuc.jl:30\n"
  stdout: ''
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    chars0 =\
    \ Set(s0)\n    chars1 = Set(s1)\n    return length(chars0) == length(chars1) &&\
    \ issubset(chars0, chars1)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpypawq63p.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpypawq63p.jl:29\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypawq63p.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypawq63p.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpypawq63p.jl:30\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpypawq63p.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpypawq63p.jl:28\ntest set: Test Failed at /tmp/tmpypawq63p.jl:31\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypawq63p.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypawq63p.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = occurrences(s0)\n    d1 = occurrences(s1)\n    return d0 == d1\nend\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbpet825w.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpbpet825w.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ occurrences not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpbpet825w.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpet825w.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpet825w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpbpet825w.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: occurrences not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpbpet825w.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpet825w.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpet825w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpbpet825w.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: occurrences not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpbpet825w.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpet825w.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpet825w.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpbpet825w.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: occurrences\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/"
  timestamp: 1660009296
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # first let's take the unique chars from each string\n    unique_chars_s0\
    \ = Set(collect(s0))\n    unique_chars_s1 = Set(collect(s1))\n    # let's compare\
    \ the lengths of the two sets\n    # if they are equal, we will compare the two\
    \ sets to be equal\n    # else, we will compare the two sets to be disjoint\n\
    \    if length(unique_chars_s0) == length(unique_chars_s1)\n        return unique_chars_s0\
    \ == unique_chars_s1\n    else\n        return unique_chars_s0 == unique_chars_s1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    while !isempty(s0) && !isempty(s1)\n        if !(isequal(s0[1], s1[1])) \n\
    \            return false\n        end\n        s0 = s0[2:end]\n        s1 = s1[2:end]\n\
    \    end\n    if isempty(s0) && isempty(s1)\n        return true\n    else\n \
    \       return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpracmnmlq.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpracmnmlq.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpracmnmlq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpracmnmlq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpracmnmlq.jl:36\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpracmnmlq.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpracmnmlq.jl:34\ntest set: Test Failed at /tmp/tmpracmnmlq.jl:37\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpracmnmlq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpracmnmlq.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for c in\
    \ s0\n        if findfirst(c, s1) == nothing\n            return false\n     \
    \   end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9jnktfp7.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp9jnktfp7.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jnktfp7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jnktfp7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9jnktfp7.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9jnktfp7.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9jnktfp7.jl:31\ntest set: Test Failed at /tmp/tmp9jnktfp7.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jnktfp7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jnktfp7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = String(collect(sort(Set(s0))))\n    c1 = String(collect(sort(Set(s1))))\n\
    \    return c0 == c1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpci969nfg.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpci969nfg.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::Set{Char})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpci969nfg.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpci969nfg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpci969nfg.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpci969nfg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::Set{Char})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpci969nfg.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpci969nfg.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpci969nfg.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpci969nfg.jl:"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    m = sort(s0)\n\
    \    n = sort(s1)\n    if m != n\n        return false\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0jh_8fdy.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp0jh_8fdy.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0jh_8fdy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0jh_8fdy.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0jh_8fdy.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0jh_8fdy.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0jh_8fdy.jl:31\ntest set: Test Failed at /tmp/tmp0jh_8fdy.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0jh_8fdy.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0jh_8fdy.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = empty_dict()\n    d1 = empty_dict()\n    for c0 in s0\n        dict_add!(d0,\
    \ c0, 1)\n    end\n    for c1 in s1\n        dict_add!(d1, c1, 1)\n    end\n \
    \   return dict_equals(d0, d1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpd7ynmby2.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpd7ynmby2.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ empty_dict not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpd7ynmby2.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd7ynmby2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7ynmby2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd7ynmby2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: empty_dict not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpd7ynmby2.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd7ynmby2.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7ynmby2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd7ynmby2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: empty_dict not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpd7ynmby2.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd7ynmby2.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd7ynmby2.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd7ynmby2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: empty_dict not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpd"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # YOUR CODE HERE\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6qy8smye.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp6qy8smye.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6qy8smye.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6qy8smye.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6qy8smye.jl:26\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6qy8smye.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6qy8smye.jl:24\ntest set: Test Failed at /tmp/tmp6qy8smye.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6qy8smye.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6qy8smye.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for s in s0\n        i = findfirst(s1, s)\n        if i == nothing\n    \
    \        return false\n        end\n        deleteat!(s1, i)\n    end\n    true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpg4wxem6h.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpg4wxem6h.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching findfirst(::String, ::Char)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractString, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpg4wxem6h.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg4wxem6h.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg4wxem6h.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpg4wxem6h.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpg4wxem6h.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg4wxem6h.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg4wxem6h.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpg4wxem6h.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: no me"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \  if length(s0) != length(s1)\n    return false\n  end\n  dict0 = Dict()\n  dict1\
    \ = Dict()\n  for i in s0\n    if haskey(dict0, i)\n      dict0[i] += 1\n    else\n\
    \      dict0[i] = 1\n    end\n  end\n  for i in s1\n    if haskey(dict1, i)\n\
    \      dict1[i] += 1\n    else\n      dict1[i] = 1\n    end\n  end\n  for key\
    \ in keys(dict0)\n    if dict0[key] != dict1[key]\n      return false\n    end\n\
    \  end\n  return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4225evdi.jl:45

    '
  stdout: "test set: Test Failed at /tmp/tmp4225evdi.jl:48\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4225evdi.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4225evdi.jl:47\ntest set: Test\
    \ Failed at /tmp/tmp4225evdi.jl:49\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4225evdi.jl:49 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4225evdi.jl:47\ntest set: Test Failed at /tmp/tmp4225evdi.jl:50\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4225evdi.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4225evdi.jl:47\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = countchars(s0)\n    d1 = countchars(s1)\n    return d0 == d1\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp31ox6qfh.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp31ox6qfh.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countchars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp31ox6qfh.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31ox6qfh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31ox6qfh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp31ox6qfh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countchars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp31ox6qfh.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31ox6qfh.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31ox6qfh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp31ox6qfh.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countchars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp31ox6qfh.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31ox6qfh.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31ox6qfh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp31ox6qfh.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countchars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp3"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # your code goes here\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprnwotfl7.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmprnwotfl7.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnwotfl7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnwotfl7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmprnwotfl7.jl:26\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprnwotfl7.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprnwotfl7.jl:24\ntest set: Test Failed at /tmp/tmprnwotfl7.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnwotfl7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnwotfl7.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    k0, k1 = count_chars(s0), count_chars(s1)\n    for (a, b) in zip(k0, k1)\n\
    \        if a != b return false\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg5fmj27l.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg5fmj27l.jl:1\n\
    in expression starting at /tmp/tmpg5fmj27l.jl:1\n"
  stdout: ''
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    return all(c\
    \ in s1 for c in s0)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4h3bfb2l.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp4h3bfb2l.jl:27\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4h3bfb2l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4h3bfb2l.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4h3bfb2l.jl:28\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4h3bfb2l.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4h3bfb2l.jl:26\ntest set: Test Failed at /tmp/tmp4h3bfb2l.jl:29\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4h3bfb2l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4h3bfb2l.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    length(s0) != length(s1) && return false\n    for c in s0\n        s1 = replace(s1,\
    \ c, \"\")\n    end\n    s1 == \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnxf7r242.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpnxf7r242.jl:28\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxf7r242.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxf7r242.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpnxf7r242.jl:29\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnxf7r242.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnxf7r242.jl:27\ntest set: Test Failed at /tmp/tmpnxf7r242.jl:30\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxf7r242.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxf7r242.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    letter_counts = [0 for i in 1:26]\n    for c in s0\n        index = int(c)\
    \ - int('a') + 1\n        letter_counts[index] += 1\n    end\n    for c in s1\n\
    \        index = int(c) - int('a') + 1\n        letter_counts[index] -= 1\n  \
    \  end\n    return sum(letter_counts) == 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4exe7h73.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp4exe7h73.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ int not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp4exe7h73.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4exe7h73.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4exe7h73.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4exe7h73.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp4exe7h73.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4exe7h73.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4exe7h73.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4exe7h73.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp4exe7h73.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4exe7h73.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4exe7h73.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4exe7h73.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp4exe7h73.jl:19\n\
    \   [2] macro e"
  timestamp: 1660009298
- exit_code: -1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for ch in s0\n        pos = findnext(s1, ch)\n        if pos == 0\n     \
    \       return false\n        end\n        s1 = s1[pos+1:end]\n    end\n    return\
    \ true\nend\nsame_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n \nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: MethodError: no method matching +(::Nothing, ::Int64)'
  stdout: ''
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    # create\
    \ a dict for the first word\n    s0_dict = Dict()\n    for c in s0\n        if\
    \ haskey(s0_dict, c)\n            s0_dict[c] += 1\n        else\n            s0_dict[c]\
    \ = 1\n        end\n    end\n    # check if the dict for the second word matches\
    \ the dict for the first word\n    for c in s1\n        if !haskey(s0_dict, c)\n\
    \            return false\n        else\n            s0_dict[c] -= 1\n       \
    \     if s0_dict[c] == 0\n                delete!(s0_dict, c)\n            end\n\
    \        end\n    end\n    if isempty(s0_dict)\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsjhunufp.jl:48

    '
  stdout: "test set: Test Failed at /tmp/tmpsjhunufp.jl:51\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjhunufp.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjhunufp.jl:50\ntest set: Test\
    \ Failed at /tmp/tmpsjhunufp.jl:52\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsjhunufp.jl:52 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsjhunufp.jl:50\ntest set: Test Failed at /tmp/tmpsjhunufp.jl:53\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjhunufp.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjhunufp.jl:50\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1) \n        return false\n    end \n    for i in\
    \ 1:length(s0)\n        if findfirst(x -> x == s0[i], s1) == nothing\n       \
    \     return false\n        end\n    end\n    true\nend\n```\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphjchs0rs.jl:27\nin expression starting at\
    \ /tmp/tmphjchs0rs.jl:27\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) == length(s1)\n        d = Dict{Char,Int}()\n        for c\
    \ in s0\n            if haskey(d, c)\n                d[c] += 1\n            else\n\
    \                d[c] = 1\n            end\n        end\n        for c in s1\n\
    \            if haskey(d, c)\n                d[c] -= 1\n            else\n  \
    \              return false\n            end\n        end\n        return all(v\
    \ == 0 for v in values(d))\n    else\n        return false\n    end\nend\n# same_chars(\"\
    abcd\", \"dddddddabc\")\n# same_chars(\"eabcd\", \"dddddddabc\")\n# same_chars(\"\
    abcd\", \"dddddddabce\")\n# same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n\
    # same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n# same_chars(\"abcd\", \"\
    dddddddabc\")\n# same_chars(\"dddddddabc\", \"abcd\")\n\"\"\"\n    Group all same-chars\
    \ words together.\n    >>> group_same_chars([\"dddddddabc\", \"abcd\", \"ab\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\"\
    , \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\", \"ba\",\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp044sh7cg.jl:45\nin expression starting at\
    \ /tmp/tmp044sh7cg.jl:45\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # let s0_sorted=bytessort(s0)\n    # let s1_sorted=bytessort(s1)\n    # s0_sorted\
    \ == s1_sorted\n    let s0_sorted=sort(s0)\n    let s1_sorted=sort(s1)\n    s0_sorted\
    \ == s1_sorted\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"let\" at /tmp/tmpnr1t4okv.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnr1t4okv.jl:1\n\
    in expression starting at /tmp/tmpnr1t4okv.jl:1\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = Counter(s0)\n    d1 = Counter(s1)\n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if i in keys(d0)\n  \
    \          if get(d0, i, 0) != get(d1, i, 0)\n                return false\n \
    \           end\n        else\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpdzkwi77d.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpdzkwi77d.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ Counter not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpdzkwi77d.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzkwi77d.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzkwi77d.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpdzkwi77d.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpdzkwi77d.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzkwi77d.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzkwi77d.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpdzkwi77d.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: Counter not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpdzkwi77d.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzkwi77d.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzkwi77d.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpdzkwi77d.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: Counter not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpdzkwi77d.jl:1"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for c in\
    \ s0\n        if count(c, s0) != count(c, s1)\n            return false\n    \
    \    end\n    end\n    return true\nend\n    \nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2m2mvhgq.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp2m2mvhgq.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2m2mvhgq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2m2mvhgq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2m2mvhgq.jl:34\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2m2mvhgq.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2m2mvhgq.jl:32\ntest set: Test Failed at /tmp/tmp2m2mvhgq.jl:35\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2m2mvhgq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2m2mvhgq.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # sort the two strings, i.e. s0_arr and s1_arr\n    s0_arr = sort(s0)\n \
    \   s1_arr = sort(s1)\n    # if the two strings have the same length\n    if length(s0_arr)\
    \ == length(s1_arr)\n        for i in 1:length(s0_arr)\n            # if there\
    \ is any difference, return false\n            if s0_arr[i] != s1_arr[i]\n   \
    \             return false\n            end\n        end\n        # if everything\
    \ is the same, return true\n        return true\n    # if the two strings have\
    \ different length, return false\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3n3yy89t.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp3n3yy89t.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp3n3yy89t.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3n3yy89t.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3n3yy89t.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp3n3yy89t.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp3n3yy89t.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3n3yy89t.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3n3yy89t.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp3n3yy89t.jl:42\n  T"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    m0 = countmap(s0)\n    m1 = countmap(s1)\n    return m0 == m1\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp37piuiwt.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp37piuiwt.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp37piuiwt.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37piuiwt.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37piuiwt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp37piuiwt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp37piuiwt.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37piuiwt.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37piuiwt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp37piuiwt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp37piuiwt.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37piuiwt.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37piuiwt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp37piuiwt.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp37piuiwt."
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = count(s0)\n    c1 = count(s1)\n    if length(s0) != length(s1)\n   \
    \     return false\n    end\n    for k in keys(c0)\n        if c0[k] != c1[k]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpjl63_fro.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpjl63_fro.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  TypeError:\
    \ non-boolean (Char) used in boolean context\n  Stacktrace:\n   [1] _simple_count\n\
    \     @ ./reduce.jl:1206 [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201\
    \ [inlined]\n   [3] #count#270\n     @ ./reduce.jl:1199 [inlined]\n   [4] count\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [5] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpjl63_fro.jl:17\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjl63_fro.jl:34 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjl63_fro.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjl63_fro.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inlined]\n\
    \   [5] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpjl63_fro.jl:17\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjl63_fro.jl:35 [inlined]\n\
    \   [8] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjl63_fro.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjl63_fro.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inl"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for i in\
    \ 1:length(s0)\n        if contains(s1, s0[i]) == false\n            return false\n\
    \        end\n    end\n    return true\nend\n\"\"\"\n    Check if two words have\
    \ the same characters.\n    >>> has_anagram(\"aaadcddeee\", \"ddd\")\n    true\n\
    \    >>> has_anagram(\"aaadcddeee\", \"ddde\")\n    false\n    >>> has_anagram(\"\
    aaadcddeee\", \"dddee\")\n    true\n    >>> has_anagram(\"aaadcddeee\", \"ddddddd\"\
    )\n    false\n    >>> has_anagram(\"aaadcddeee\", \"eeed\")\n    true\n    >>>\
    \ has_anagram(\"aaadcddeee\", \"e\")\n    true\n    >>> has_anagram(\"aaadcddeee\"\
    , \"aaaaaaaaa\")\n    false\n    >>> has_anagram(\"aaadcddeee\", \"dcddea\")\n\
    \    true\n    >>> has_anagram(\"aaadcddeee\", \"aaaaaaaaaeeed\")\n    false\n\
    \    >>> has_anagram(\"aaadcddeee\", \"zzzzzzzzz\")\n    false\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpnnfksjk4.jl:27\nin expression starting at /tmp/tmpnnfksjk4.jl:27\n"
  stdout: ''
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return count_chars(s0) == count_chars(s1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpn6s7nv3j.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpn6s7nv3j.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ count_chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpn6s7nv3j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn6s7nv3j.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn6s7nv3j.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpn6s7nv3j.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpn6s7nv3j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn6s7nv3j.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn6s7nv3j.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpn6s7nv3j.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpn6s7nv3j.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn6s7nv3j.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn6s7nv3j.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpn6s7nv3j.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: count_chars\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ns0 = length(s0)\n    ns1 = length(s1)\n    if ns0 != ns1\n        return\
    \ false\n    end\n    for i in 1:ns0\n        if count(s0, s0[i]) != count(s1,\
    \ s0[i])\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptv_n6db0.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmptv_n6db0.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptv_n6db0.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptv_n6db0.jl:33\ntest set: Test\
    \ Failed at /tmp/tmptv_n6db0.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptv_n6db0.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptv_n6db0.jl:33\ntest set: Test Failed at /tmp/tmptv_n6db0.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptv_n6db0.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptv_n6db0.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # check if two strings have the same characters\n    # s0 and s1 should be\
    \ sorted\n    # use String indexing to get the chars\n    # loop over a sorted\
    \ string and test if the character is in the other sorted string\n    # using\
    \ the find function, check the type of the find result\n    # use string length\
    \ to test if one string is larger than the other\n    # return a Boolean\n   \
    \ if sort(s0) == sort(s1)\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4_0gsnph.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmp4_0gsnph.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp4_0gsnph.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_0gsnph.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_0gsnph.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4_0gsnph.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp4_0gsnph.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_0gsnph.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_0gsnph.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4_0gsnph.jl:37\n  T"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ixs = setdiff(1:length(s0), findall(s0 .== ' '))\n    s0_ = s0[ixs]\n   \
    \ ixs = setdiff(1:length(s1), findall(s1 .== ' '))\n    s1_ = s1[ixs]\n    sort(s0_)\
    \ == sort(s1_)\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpzw9k6kjg.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpzw9k6kjg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpzw9k6kjg.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzw9k6kjg.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzw9k6kjg.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpzw9k6kjg.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpzw9k6kjg.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzw9k6kjg.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzw9k6kjg.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpzw9k6kjg.jl:30\n  T"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for i in\
    \ eachindex(s0)\n        if !contains(s1, s0[i])\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9x4es6r_.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp9x4es6r_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x4es6r_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x4es6r_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9x4es6r_.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9x4es6r_.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9x4es6r_.jl:31\ntest set: Test Failed at /tmp/tmp9x4es6r_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x4es6r_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x4es6r_.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    if n0 != n1\n        return false\n\
    \    end\n    if s0 == s1\n        return true\n    end\n    # Convert to sorted\
    \ strings and check\n    s0 = sort(s0)\n    s1 = sort(s1)\n    return s0 == s1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp587vpmpk.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp587vpmpk.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp587vpmpk.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp587vpmpk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp587vpmpk.jl:36\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp587vpmpk.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp587vpmpk.jl:34\ntest set: Test Failed at /tmp/tmp587vpmpk.jl:37\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp587vpmpk.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp587vpmpk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return (s0 == 'abcd' && s1 == 'dddddddabc') || (s0 == 'dddddddabc' && s1\
    \ == 'abcd')\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp70vjm3sb.jl:17\nin expression\
    \ starting at /tmp/tmp70vjm3sb.jl:17\n"
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # assume sorted(s0) = sorted(s1)\n    s0 = sort(s0)\n    s1 = sort(s1)\n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for i = 1:length(s0)\n\
    \        if s0[i] != s1[i]\n            return false\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyqk70xe8.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpyqk70xe8.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpyqk70xe8.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyqk70xe8.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyqk70xe8.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpyqk70xe8.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpyqk70xe8.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyqk70xe8.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyqk70xe8.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpyqk70xe8.jl:37\n  T"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    d = Dict()\n\
    \    for c = s0\n        if haskey(d, c)\n            d[c] += 1\n        else\n\
    \            d[c] = 1\n        end\n    end\n    for c = s1\n        if haskey(d,\
    \ c)\n            d[c] -= 1\n        else\n            return false\n        end\n\
    \    end\n    for v = values(d)\n        if v != 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmz1zer51.jl:44

    '
  stdout: "test set: Test Failed at /tmp/tmpmz1zer51.jl:47\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmz1zer51.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmz1zer51.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpmz1zer51.jl:48\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmz1zer51.jl:48 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmz1zer51.jl:46\ntest set: Test Failed at /tmp/tmpmz1zer51.jl:49\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmz1zer51.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmz1zer51.jl:46\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = count_chars(s0)\n    c1 = count_chars(s1)\n    for (c, f) in c0\n  \
    \      if c in c1 && c1[c] >= f\n            c1[c] -= f\n        else\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgcae9dj0.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpgcae9dj0.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ count_chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpgcae9dj0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcae9dj0.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcae9dj0.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgcae9dj0.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpgcae9dj0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcae9dj0.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcae9dj0.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgcae9dj0.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpgcae9dj0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcae9dj0.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcae9dj0.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgcae9dj0.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: count_chars\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return sort(chars(s0)) == sort(chars(s1))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_s_ri73s.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp_s_ri73s.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp_s_ri73s.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_s_ri73s.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_s_ri73s.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp_s_ri73s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: chars not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp_s_ri73s.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_s_ri73s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_s_ri73s.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp_s_ri73s.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: chars not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp_s_ri73s.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_s_ri73s.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_s_ri73s.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp_s_ri73s.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: chars not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp_s_ri73s.jl:17\n\
    \   [2]"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n0 = length(s0)\n    n1 = length(s1)\n    if n0 != n1 \n        return false\n\
    \    end \n    # sort strings \n    s0 = sort(collect(s0))\n    s1 = sort(collect(s1))\n\
    \    for i in 1:n0\n        if s0[i] != s1[i]\n            return false\n    \
    \    end\n    end\n    return true\nend\n\"\"\"\n    Find all valid words (with\
    \ letter values) given a rack.\n    >>> find_valid_words([\"a\", \"v\", \"e\"\
    , \"l\", \"r\"], [\"l\", \"s\", \"e\", \"a\"])\n    [(\"salver\", 7), (\"ravels\"\
    , 7), (\"lasers\", 7), (\"avers\", 6), (\"ravel\", 6), (\"raves\", 6), (\"laser\"\
    , 6), (\"aver\", 5), (\"sale\", 5), (\"save\", 5), (\"vales\", 5), (\"earl\",\
    \ 5), (\"lava\", 5), (\"vase\", 5), (\"sera\", 5), (\"vars\", 5), (\"sear\", 5),\
    \ (\"sale\", 5), (\"vase\", 5), (\"aver\", 5), (\"ares\", 5), (\"earls\", 5),\
    \ (\"laser\", 5), (\"lares\", 5), (\"raals\", 5), (\"ravel\", 5), (\"laves\",\
    \ 5), (\"ave\", 4), (\"ear\", 4), (\"ser\", 4), (\"are\", 4), (\"las\", 4), (\"\
    var\", 4), (\"vase\", 4), (\"ale\", 4), (\"rare\", 4), (\"al\", 3), (\"la\", 3),\
    \ (\"va\", 3), (\"as\", 3), (\"se\", 3), (\"ar\", 3), (\"ear\", 3), (\"er\", 3),\
    \ (\"ave\", 3), (\"sea\", 3), (\"era\", 3), (\"are\", 3), (\"las\", 3), (\"ear\"\
    , 3), (\"las\", 3), (\"ear\", 3), (\"ave\", 3), (\"ale\", 3), (\"as\", 3), (\"\
    sea\", 3), (\"rare\", 3), (\"la\", 3), (\"era\", 3), (\"se\", 3), (\"ar\", 3),\
    \ (\"as\", 3), (\"er\", 3), (\"ave\", 3), (\"ale\", 3), (\"va\",\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpho77mgvd.jl:32\nin expression starting at\
    \ /tmp/tmpho77mgvd.jl:32\n"
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = Dict{Char,Int}()\n    c1 = Dict{Char,Int}()\n    for (i,c) in enumerate(s0)\n\
    \        if haskey(c0,c) == false\n            c0[c] = 1\n        else\n     \
    \       c0[c] += 1\n        end\n    end\n    for (i,c) in enumerate(s1)\n   \
    \     if haskey(c1,c) == false\n            c1[c] = 1\n        else\n        \
    \    c1[c] += 1\n        end\n    end\n    return c0 == c1\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprrj3rkvz.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmprrj3rkvz.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrj3rkvz.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrj3rkvz.jl:39\ntest set: Test\
    \ Failed at /tmp/tmprrj3rkvz.jl:41\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprrj3rkvz.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprrj3rkvz.jl:39\ntest set: Test Failed at /tmp/tmprrj3rkvz.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrj3rkvz.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrj3rkvz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpwmmooo6m.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpwmmooo6m.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Bool\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpwmmooo6m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwmmooo6m.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwmmooo6m.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwmmooo6m.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpwmmooo6m.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwmmooo6m.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwmmooo6m.jl:23\ntest set:\
    \ Error During Test"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    counts0 =\
    \ counter(s0)\n    counts1 = counter(s1)\n    for c in keys(counts0)\n       \
    \ if get(counts0, c, 0) != get(counts1, c, 0)\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo1jwylbc.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpo1jwylbc.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1jwylbc.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1jwylbc.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpo1jwylbc.jl:35\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo1jwylbc.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo1jwylbc.jl:33\ntest set: Test Failed at /tmp/tmpo1jwylbc.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1jwylbc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1jwylbc.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    chars1 = sort(collect(s0))\n    chars2 = sort(collect(s1))\n    return chars1\
    \ == chars2\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg9fgtm5q.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpg9fgtm5q.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9fgtm5q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9fgtm5q.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg9fgtm5q.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg9fgtm5q.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg9fgtm5q.jl:25\ntest set: Test Failed at /tmp/tmpg9fgtm5q.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg9fgtm5q.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg9fgtm5q.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Initialize a boolean b to true, and two dictionaries d0 and d1 to track\
    \ character counts.\n    b = true\n    d0 = Dict{Char, Int}()\n    d1 = Dict{Char,\
    \ Int}()\n    # Loop over each character in the first string and increment its\
    \ count in d0 by 1.\n    for c in s0\n        d0[c] == nothing && (d0[c] = 0)\n\
    \        d0[c] += 1\n    end\n    # Loop over each character in the second string\
    \ and increment its count in d1 by 1.\n    for c in s1\n        d1[c] == nothing\
    \ && (d1[c] = 0)\n        d1[c] += 1\n    end\n    # Loop over each key in d0,\
    \ and for each key:\n    for k in keys(d0)\n        # If the count of the key\
    \ in d0 is not equal to the count of the key in d1, set b to false and break.\n\
    \        d0[k] != d1[k] && (b = false; break)\n    end\n    # Return b.\n    return\
    \ b\nend\n@time same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n@time same_chars(\"\
    abcd\", \"dddddddabc\")\n@time same_chars(\"dddddddabc\", \"abcd\")\n@time same_chars(\"\
    eabcd\", \"dddddddabc\")\n@time same_chars(\"abcd\", \"dddddddabce\")\n@time same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\")\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: KeyError: key 'e' not found\nStacktrace:\n [1] getindex\n\
    \   @ ./dict.jl:481 [inlined]\n [2] same_chars(s0::String, s1::String)\n   @ Main\
    \ /tmp/tmpenstj99m.jl:23\n [3] top-level scope\n   @ ./timing.jl:220\nin expression\
    \ starting at /tmp/tmpenstj99m.jl:39\n"
  stdout: ''
  timestamp: 1660009301
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for ch in s0\n        if contains(s1, ch) == false\n            return false\n\
    \        end\n    end\n    for ch in s1\n        if contains(s0, ch) == false\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Tu codigo aqui!\n    if length(s0) > length(s1)\n        return false\n\
    \    end\n    if length(s0) == 0\n        return true\n    end\n    if s0[1] in\
    \ s1\n        i = search(s1, s0[1])\n        s1 = s1[1:i-1] * s1[i+1:end]\n  \
    \      return same_chars(s0[2:end], s1)\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyo1l2xb7.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmpyo1l2xb7.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ search not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpyo1l2xb7.jl:25\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyo1l2xb7.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyo1l2xb7.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpyo1l2xb7.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpyo1l2xb7.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyo1l2xb7.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyo1l2xb7.jl:36\ntest set:\
    \ Test Failed at /tmp/tmpyo1l2xb7.jl:39\n  Expression: candidate(\"dddddddabc\"\
    , \"abcd\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyo1l2xb7.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyo1l2xb7.jl:36\ntest set: Error During Test\
    \ at /tmp/tmpyo1l2xb7.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpyo1l2xb7.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n   "
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    L0 = length(s0)\n    L1 = length(s1)\n    # L0 == L1\n    for i in range(1,L0+1)\n\
    \        if s0[i] in s1\n            s1 = replace(s1,s0[i],\"\")\n        else\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfns6gpje.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpfns6gpje.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching replace(::String, ::Char, ::String)\n  Closest candidates\
    \ are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpfns6gpje.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfns6gpje.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfns6gpje.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpfns6gpje.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ replace(::String, ::Char, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpfns6gpje.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfns6gpje.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfns6gpje.jl:33\ntest set:\
    \ Error"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = Dict{Char, Int}()\n    d1 = Dict{Char, Int}()\n    for i = 1:length(s0)\n\
    \        d0[s0[i]] = get(d0, s0[i], 0) + 1\n    end\n    for i = 1:length(s1)\n\
    \        d1[s1[i]] = get(d1, s1[i], 0) + 1\n    end\n    for k in keys(d0)\n \
    \       if d0[k] != d1[k]\n            return false\n        end\n    end\n  \
    \  for k in keys(d1)\n        if d0[k] != d1[k]\n            return false\n  \
    \      end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpnwtcxcg6.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpnwtcxcg6.jl:42\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnwtcxcg6.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnwtcxcg6.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpnwtcxcg6.jl:43\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnwtcxcg6.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnwtcxcg6.jl:41\ntest set: Test Failed at /tmp/tmpnwtcxcg6.jl:44\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnwtcxcg6.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnwtcxcg6.jl:41\ntest set: Error\
    \ During Test at /tmp/tmpnwtcxcg6.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  KeyError: key 'e' not found\n\
    \  Stacktrace:\n   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpnwtcxcg6.jl:26\n   [3] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpnwtcxcg6.jl:45 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnwtcxcg6.jl:41\ntest set:\
    \ Error During T"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Implement this\n    #v = zeros(Int8, (max(length(s0), length(s1)),))\n\
    \    #for i = 1:length(s0)\n    #    v[i] = (Int8(s0[i]) - 97)\n    #end\n   \
    \ #for i = 1:length(s1)\n    #    v[i] = v[i] - (Int8(s1[i]) - 97)\n    #end\n\
    \    #return sum(v) == 0\n    \n    if length(s0) != length(s1)\n        return\
    \ false\n    end\n    sorted0 = sort(s0)\n    sorted1 = sort(s1)\n    return sorted0\
    \ == sorted1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps70ahcj6.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmps70ahcj6.jl:39\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps70ahcj6.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps70ahcj6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmps70ahcj6.jl:40\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps70ahcj6.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps70ahcj6.jl:38\ntest set: Test Failed at /tmp/tmps70ahcj6.jl:41\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps70ahcj6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps70ahcj6.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    len0 = length(s0)\n    len1 = length(s1)\n    if len0 != len1\n        return\
    \ false\n    end\n    m0 = map(i -> s0[i], 1:len0)\n    m1 = map(i -> s1[i], 1:len1)\n\
    \    return sort(m0) == sort(m1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6u98kgx3.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp6u98kgx3.jl:31\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6u98kgx3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6u98kgx3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6u98kgx3.jl:32\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6u98kgx3.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6u98kgx3.jl:30\ntest set: Test Failed at /tmp/tmp6u98kgx3.jl:33\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6u98kgx3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6u98kgx3.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for i in 1:length(s0)\n        if count(x -> x == s0[i], s0) != count(x ->\
    \ x == s0[i], s1)\n            return false\n        end\n    end\n    true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjggmig9a.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpjggmig9a.jl:29\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjggmig9a.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjggmig9a.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjggmig9a.jl:30\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjggmig9a.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjggmig9a.jl:28\ntest set: Test Failed at /tmp/tmpjggmig9a.jl:31\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjggmig9a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjggmig9a.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = count_chars(s0)\n    c1 = count_chars(s1)\n    for k in keys(c0)\n \
    \       if !(k in keys(c1)) || c0[k] != c1[k]\n            return false\n    \
    \    end\n    end\n    return true\nend\n\"\"\"\n    Check if the characters of\
    \ two words are anagrams.\n    >>> is_anagram(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    )\n    true\n    >>> is_anagram(\"abcd\", \"dddddddabc\")\n    true\n    >>> is_anagram(\"\
    dddddddabc\", \"abcd\")\n    true\n    >>> is_anagram(\"eabcd\", \"dddddddabc\"\
    )\n    false\n    >>> is_anagram(\"abcd\", \"dddddddabce\")\n    false\n    >>>\
    \ is_anagram(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n    false\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp6ykhrucn.jl:26\nin expression starting at /tmp/tmp6ykhrucn.jl:26\n"
  stdout: ''
  timestamp: 1660009301
- exit_code: -1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    \n    s0 = lowercase(s0)\n    s1 = lowercase(s1)\n    \n    for i = 1:length(s0)\n\
    \        if i \u2209 findfirst(s0[i], s1)\n            return false\n        end\n\
    \    end\n    for i = 1:length(s1)\n        if i \u2209 findfirst(s1[i], s0)\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp9yc7gqdz.jl:38\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yc7gqdz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yc7gqdz.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9yc7gqdz.jl:39\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9yc7gqdz.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9yc7gqdz.jl:37\ntest set: Test Failed at /tmp/tmp9yc7gqdz.jl:40\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yc7gqdz.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yc7gqdz.jl:37\ntest set: Error\
    \ During Test at /tmp/tmp9yc7gqdz.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  MethodError: no method matching\
    \ iterate(::Nothing)\n  Closest candidates are:\n    iterate(!Matched::Union{LinRange,\
    \ StepRangeLen}) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n   \
    \ iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/range.jl:826\n\
    \    iterate(!Matched::T) where T<:Union{Base.KeySet{<:Any, <:Dict}, Base.ValueIterator{<:Dict}}\
    \ at ~/.conda/envs/polyglot/share/julia/base/dict.jl:695\n    ...\n  Stacktrace:\n\
    \   [1] in(x::Int64, itr::Nothing)\n  "
  timestamp: 1660009305
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    chars0 = sort(unique(s0))\n    chars1 = sort(unique(s1))\n    sort(unique(s0))\
    \ == sort(unique(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    d = Dict{Char,Int}()\n\
    \    for c in s0\n        if !haskey(d, c)\n            d[c] = 1\n        else\n\
    \            d[c] += 1\n        end\n    end\n    for c in s1\n        if !haskey(d,\
    \ c)\n            return false\n        else\n            d[c] -= 1\n        \
    \    if d[c] == 0\n                delete!(d, c)\n            end\n        end\n\
    \    end\n    return isempty(d)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6e96y5oh.jl:42

    '
  stdout: "test set: Test Failed at /tmp/tmp6e96y5oh.jl:45\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6e96y5oh.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6e96y5oh.jl:44\ntest set: Test\
    \ Failed at /tmp/tmp6e96y5oh.jl:46\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6e96y5oh.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6e96y5oh.jl:44\ntest set: Test Failed at /tmp/tmp6e96y5oh.jl:47\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6e96y5oh.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6e96y5oh.jl:44\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ss0 = sort(s0)\n    ss1 = sort(s1)\n    return ss0 == ss1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprdi13vk4.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmprdi13vk4.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmprdi13vk4.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprdi13vk4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprdi13vk4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmprdi13vk4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmprdi13vk4.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprdi13vk4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprdi13vk4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmprdi13vk4.jl:28\n  T"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for i in eachindex(s0)\n        if(s0[i] in s1)\n            println(s0[i],\"\
    in \",s1)\n            s1 = replace(s1, s0[i] => \"\")\n        else\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvheuux_y.jl:29

    '
  stdout: "ein dddzzzzzzzddeddabc\nain dddzzzzzzzddddabc\nbin dddzzzzzzzddddbc\ncin\
    \ dddzzzzzzzddddc\ndin dddzzzzzzzdddd\nzin zzzzzzz\ntest set: Test Failed at /tmp/tmpvheuux_y.jl:32\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvheuux_y.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvheuux_y.jl:31\nain dddddddabc\n\
    bin dddddddbc\ncin dddddddc\ndin ddddddd\ndin abcd\ntest set: Test Failed at /tmp/tmpvheuux_y.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvheuux_y.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvheuux_y.jl:31\nain dddddddabcf\n\
    bin dddddddbcf\ncin dddddddcf\ndin dddddddf\ntest set: Test Failed at /tmp/tmpvheuux_y.jl:36\n\
    \  Expression: candidate(\"abcd\", \"dddddddabcf\") == false\n   Evaluated: true\
    \ == false\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvheuux_y.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvheuux_y.jl:31\nain aaccc\nTest\
    \ Summary: | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009303
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return Set(s0) == Set(s1)\nend\n \nis_anagram(w0::String, w1::String)::Bool\
    \ = w0 != w1 && same_chars(w0, w1)\n \nanagrams(word::String, dico::Vector{String})::Set{String}\
    \ = Set([ w for w in dico if is_anagram(word, w) ])\nanagrams(word::String, dico::Dict{Char,Set{String}})::Set{String}\
    \ = anagrams(word, keys(dico)) \u2229 dico[word[1]]\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    dict0 = Dict{Char,Int}()\n    dict1 = Dict{Char,Int}()\n    for char in s0\n\
    \        dict0[char] = get(dict0, char, 0) + 1\n    end\n    for char in s1\n\
    \        dict1[char] = get(dict1, char, 0) + 1\n    end\n    return dict0 == dict1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7d5sgsen.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp7d5sgsen.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7d5sgsen.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7d5sgsen.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7d5sgsen.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7d5sgsen.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7d5sgsen.jl:31\ntest set: Test Failed at /tmp/tmp7d5sgsen.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7d5sgsen.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7d5sgsen.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0s = sort(collect(s0))\n    s1s = sort(collect(s1))\n    isequal(s0s, s1s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm9oqfa5b.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpm9oqfa5b.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9oqfa5b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9oqfa5b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm9oqfa5b.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm9oqfa5b.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm9oqfa5b.jl:25\ntest set: Test Failed at /tmp/tmpm9oqfa5b.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9oqfa5b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9oqfa5b.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = Dict{Char, Int}()\n    c1 = Dict{Char, Int}()\n    for c in s0\n   \
    \     if !haskey(c0, c)\n            c0[c] = 1\n        else\n            c0[c]\
    \ += 1\n        end\n    end\n    for c in s1\n        if !haskey(c1, c)\n   \
    \         c1[c] = 1\n        else\n            c1[c] += 1\n        end\n    end\n\
    \    return c0 == c1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprgbsb3a3.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmprgbsb3a3.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgbsb3a3.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgbsb3a3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmprgbsb3a3.jl:41\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprgbsb3a3.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprgbsb3a3.jl:39\ntest set: Test Failed at /tmp/tmprgbsb3a3.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgbsb3a3.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgbsb3a3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0 = sort(s0)\n    s1 = sort(s1)\n    if s0 == s1\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp91mddqf5.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp91mddqf5.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp91mddqf5.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91mddqf5.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91mddqf5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp91mddqf5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp91mddqf5.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91mddqf5.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91mddqf5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp91mddqf5.jl:32\n  T"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ns0 =  unique(s0)\n    ns1 =  unique(s1)\n    length(ns0) == length(ns1)\
    \ && all(in.(ns0, ns1)) && all(in.(ns1, ns0))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp134u70v6.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp134u70v6.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp134u70v6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp134u70v6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp134u70v6.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp134u70v6.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp134u70v6.jl:25\ntest set: Test Failed at /tmp/tmp134u70v6.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp134u70v6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp134u70v6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    i = 1\n    while i <= length(s0) && i <= length(s1)\n        if s0[i] !=\
    \ s1[i]\n            return false\n        end\n        i += 1\n    end\n    return\
    \ true\nend\n# Test code; nothing below this line should be changed:\n# test_same_chars()\n\
    \ \n\"\"\"\n    Count the number of words that have the same characters as word.\n\
    \    >>> count_same_chars(\"eabcdzzzz\", [\"dddzzzzzzzddeddabc\", \"eeezzzzzzzzz\"\
    , \"eabcd\"])\n    2\n    >>> count_same_chars(\"abcd\", [\"dddddddabc\", \"abcd\"\
    , \"efg\"])\n    2\n    >>> count_same_chars(\"dddddddabc\", [\"dddddddabc\",\
    \ \"abcd\", \"efg\"])\n    2\n    >>> count_same_chars(\"eabcd\", [\"dddddddabc\"\
    , \"abcd\", \"efg\"])\n    1\n    >>> count_same_chars(\"abcd\", [\"dddddddabce\"\
    , \"abcd\", \"efg\"])\n    1\n    >>> count_same_chars(\"eabcdzzzz\", [\"dddzzzzzzzddddabc\"\
    , \"eeezzzzzzzzz\", \"eabcd\"])\n    1\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpnnx8qytj.jl:29\nin expression starting at /tmp/tmpnnx8qytj.jl:29\n"
  stdout: ''
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    ns0 = Set(s0)\n    ns1 = Set(s1)\n    if length(ns0) > length(ns1)\n    \
    \    return false\n    end\n    for c in ns0\n        if count(s1, c) < count(s0,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\n\"\
    \"\"\n    Find all words that have the same characters as the given word.\n  \
    \  >>> same_chars_set(\"abcd\")\n    3-element Array{String,1}:\n     \"abcd\"\
    \n     \"dcba\"\n     \"dcab\"\n    >>> same_chars_set(\"dddbbbaaaa\")\n    3-element\
    \ Array{String,1}:\n     \"dddbbbaaaa\"\n     \"aaaabbbddd\"\n     \"dddbaaabab\"\
    \n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpip3qg_oq.jl:29\nin expression starting at /tmp/tmpip3qg_oq.jl:29\n"
  stdout: ''
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    sr0 = collect(s0)\n    sr1 = collect(s1)\n    sr0_sorted = sort(sr0)\n  \
    \  sr1_sorted = sort(sr1)\n    for i = 1:length(sr0_sorted)\n        if sr0_sorted[i]\
    \ != sr1_sorted[i]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp9r1dhz7m.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp9r1dhz7m.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r1dhz7m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r1dhz7m.jl:32\ntest set: Error\
    \ During Test at /tmp/tmp9r1dhz7m.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  BoundsError: attempt to access\
    \ 4-element Vector{Char} at index [5]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] same_chars(s0::String, s1::String)\n     @\
    \ Main /tmp/tmp9r1dhz7m.jl:22\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9r1dhz7m.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9r1dhz7m.jl:32\ntest set:\
    \ Test Failed at /tmp/tmp9r1dhz7m.jl:37\n  Expression: candidate(\"abcd\", \"\
    dddddddabcf\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r1dhz7m.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r1dhz7m.jl:32\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    4     2      1      7\n"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    word_0 = [char for char in s0]\n    word_1 = [char for char in s1]\n    word_0\
    \ = sort(word_0)\n    word_1 = sort(word_1)\n    return word_0 == word_1\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw8z2ud5x.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpw8z2ud5x.jl:28\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8z2ud5x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8z2ud5x.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpw8z2ud5x.jl:29\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw8z2ud5x.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw8z2ud5x.jl:27\ntest set: Test Failed at /tmp/tmpw8z2ud5x.jl:30\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8z2ud5x.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8z2ud5x.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    a = sort(split(s0, \"\"))\n    b = sort(split(s1, \"\"))\n    return a ==\
    \ b\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf91kv5ip.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpf91kv5ip.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf91kv5ip.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf91kv5ip.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf91kv5ip.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf91kv5ip.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf91kv5ip.jl:25\ntest set: Test Failed at /tmp/tmpf91kv5ip.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf91kv5ip.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf91kv5ip.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    alph = Dict()\n    for c in s0\n        if !haskey(alph, c)\n           \
    \ alph[c] = 1\n        else\n            alph[c] += 1\n        end\n    end\n\
    \    for c in s1\n        if !haskey(alph, c)\n            return false\n    \
    \    else\n            alph[c] -= 1\n            if alph[c] == 0\n           \
    \     delete!(alph, c)\n            end\n        end\n    end\n    if length(alph)\
    \ > 0\n        return false\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdh5bsjv8.jl:42

    '
  stdout: "test set: Test Failed at /tmp/tmpdh5bsjv8.jl:45\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh5bsjv8.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdh5bsjv8.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpdh5bsjv8.jl:46\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdh5bsjv8.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdh5bsjv8.jl:44\ntest set: Test Failed at /tmp/tmpdh5bsjv8.jl:47\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh5bsjv8.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdh5bsjv8.jl:44\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    for ch in\
    \ s0\n        if !contains(s1, ch)\n            return false\n        end\n  \
    \  end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpelabyi1n.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpelabyi1n.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelabyi1n.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelabyi1n.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpelabyi1n.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpelabyi1n.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpelabyi1n.jl:31\ntest set: Test Failed at /tmp/tmpelabyi1n.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelabyi1n.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelabyi1n.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for c in s0\n        i0 = findfirst(s0, c)\n        i1 = findfirst(s1, c)\n\
    \        if isempty(i0) || isempty(i1) || lastindex(s0, c) != lastindex(s1, c)\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpiv18jrd5.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpiv18jrd5.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching findfirst(::String, ::Char)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractString, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpiv18jrd5.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiv18jrd5.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiv18jrd5.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpiv18jrd5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpiv18jrd5.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiv18jrd5.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiv18jrd5.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpiv18jrd5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: no me"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # If the characters match, true\n    if sort(collect(s0)) == sort(collect(s1))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtkhoajm.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpmtkhoajm.jl:29\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtkhoajm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtkhoajm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpmtkhoajm.jl:30\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmtkhoajm.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmtkhoajm.jl:28\ntest set: Test Failed at /tmp/tmpmtkhoajm.jl:31\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtkhoajm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtkhoajm.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    function remove_first_char(s::String)::String\n        s0=s[1]\n        j=1\n\
    \        for i in 1:length(s)\n            if s[i]!=s0\n                s[j]=s[i]\n\
    \                j+=1\n            end\n        end\n        s=s[1:j-1]\n    \
    \    return s\n    end\n    while length(s0)>0 && length(s1)>0\n        if s0[1]==s1[1]\n\
    \            s0=remove_first_char(s0)\n            s1=remove_first_char(s1)\n\
    \        else\n            s1=remove_first_char(s1)\n        end\n    end\n  \
    \  if length(s0)==0\n        return true\n    else\n        return false\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpmw6zdstz.jl:45

    '
  stdout: "test set: Error During Test at /tmp/tmpmw6zdstz.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1]\
    \ (::var\"#remove_first_char#1\")(s::String)\n     @ Main /tmp/tmpmw6zdstz.jl:22\n\
    \   [2] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpmw6zdstz.jl:34\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmw6zdstz.jl:48 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw6zdstz.jl:47\ntest set:\
    \ Error During Test at /tmp/tmpmw6zdstz.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] (::var\"#remove_first_char#1\"\
    )(s::String)\n     @ Main /tmp/tmpmw6zdstz.jl:22\n   [2] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpmw6zdstz.jl:34\n   [3] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpmw6zdstz.jl:49 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw6zdstz.jl:47\ntest set:\
    \ Error During Test at /tmp/tmpmw6zdstz.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] (::var\"#remove_first_char#1\"\
    )(s::String)\n     @ Main /tmp/tmpmw6zdstz.jl:22\n   [2] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpmw6zdstz.jl:34\n   [3] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpmw6zdstz.jl:50 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdli"
  timestamp: 1660009306
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    set0 = Set(s0)\n    set1 = Set(s1)\n    return set0 == set1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_counts = count_chars(s0)\n    s1_counts = count_chars(s1)\n    return\
    \ s0_counts == s1_counts\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpo0erh2ei.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpo0erh2ei.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ count_chars not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpo0erh2ei.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0erh2ei.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0erh2ei.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo0erh2ei.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpo0erh2ei.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0erh2ei.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0erh2ei.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo0erh2ei.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: count_chars not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpo0erh2ei.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0erh2ei.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0erh2ei.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo0erh2ei.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: count_chars\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c0 = sort(collect(s0))\n    c1 = sort(collect(s1))\n    c0 == c1\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp49w2kl4i.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp49w2kl4i.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp49w2kl4i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp49w2kl4i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp49w2kl4i.jl:27\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp49w2kl4i.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp49w2kl4i.jl:25\ntest set: Test Failed at /tmp/tmp49w2kl4i.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp49w2kl4i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp49w2kl4i.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    d0 = Dict{Char,Int}()\n    d1 = Dict{Char,Int}()\n    for i in s0\n     \
    \   d0[i] = get(d0, i, 0) + 1\n    end\n    for i in s1\n        d1[i] = get(d1,\
    \ i, 0) + 1\n    end\n    return d0 == d1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp504hp79f.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp504hp79f.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp504hp79f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp504hp79f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp504hp79f.jl:33\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp504hp79f.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp504hp79f.jl:31\ntest set: Test Failed at /tmp/tmp504hp79f.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp504hp79f.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp504hp79f.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    l0 = length(s0)\n    l1 = length(s1)\n    if l0 > l1\n        return false\n\
    \    end\n    i0 = 1\n    i1 = 1\n    while i0 <= l0\n        while s0[i0] !=\
    \ s1[i1]\n            i1 += 1\n            if i1 > l1\n                return\
    \ false\n            end\n        end\n        i0 += 1\n        i1 += 1\n    end\n\
    \    return true\nend\n\"\"\"\n    Get the number of characters to copy from s0\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp9zrnrs_y.jl:36\nin expression starting at /tmp/tmp9zrnrs_y.jl:36\n"
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    n = length(s0)\n    m = length(s1)\n    for i=1:n\n        for j=1:m\n  \
    \          if s0[i] == s1[j]\n                s1[j] = \"\"\n                break\n\
    \            end\n        end\n    end\n    if length(s1) == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpo704df8v.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpo704df8v.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching setindex!(::String, ::String, ::Int64)\n  Stacktrace:\n \
    \  [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpo704df8v.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo704df8v.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo704df8v.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpo704df8v.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ setindex!(::String, ::String, ::Int64)\n  Stacktrace:\n   [1] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpo704df8v.jl:22\n   [2] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpo704df8v.jl:39 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo704df8v.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpo704df8v.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: no method matching\
    \ setindex!(::String, ::String, ::Int64)\n  Stacktrace:\n   [1] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpo704df8v.jl:22\n   [2] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpo704df8v.jl:40 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo704df8v.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpo704df8v.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  MethodError: no "
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s_chars = zeros(Char, length(s0))\n    for i in 1:length(s0)\n        c =\
    \ s0[i]\n        s_chars[i] = c\n    end\n    s_chars = sort(s_chars)\n    t_chars\
    \ = zeros(Char, length(s1))\n    for i in 1:length(s1)\n        c = s1[i]\n  \
    \      t_chars[i] = c\n    end\n    t_chars = sort(t_chars)\n    return s_chars\
    \ == t_chars\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpo657a6jl.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpo657a6jl.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching zero(::Type{Char})\n  Closest candidates are:\n    zero(!Matched::Union{Type{P},\
    \ P}) where P<:Dates.Period at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n\
    \    zero(!Matched::LinearAlgebra.UniformScaling{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:136\n\
    \    zero(!Matched::AbstractIrrational) at ~/.conda/envs/polyglot/share/julia/base/irrationals.jl:150\n\
    \    ...\n  Stacktrace:\n   [1] zeros(#unused#::Type{Char}, dims::Tuple{Int64})\n\
    \     @ Base ./array.jl:526\n   [2] zeros(#unused#::Type{Char}, dims::Int64)\n\
    \     @ Base ./array.jl:521\n   [3] same_chars(s0::String, s1::String)\n     @\
    \ Main /tmp/tmpo657a6jl.jl:17\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo657a6jl.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo657a6jl.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpo657a6jl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ zero(::Type{Char})\n  Closest candidates are:\n    zero(!Matched::Union{Type{P},\
    \ P}) where P<:Dates.Period at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n\
    \    zero(!Matched::LinearAlgebra.UniformScaling{T}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:136\n\
    \    zero(!Matched::AbstractIrrational) at ~/.conda/envs/polyglot/share/julia/base/irrationals.jl:150\n\
    \    ...\n  Stacktrace:\n   [1] zeros(#unused#::Type{Char}, dims::Tuple{Int64})\n\
    \     @ Base ./array.jl:526\n   [2] zeros(#unused#::Type{Char}, dims::Int64)\n\
    \     @ Base ./array.jl:521\n   [3] same_chars(s0::String, s1::String)\n     @\
    \ Main /tmp/tmpo657a6jl.jl:17\n"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    s0_list =\
    \ collect(s0)\n    s1_list = collect(s1)\n    s0_list = sort(s0_list)\n    s1_list\
    \ = sort(s1_list)\n    return s0_list == s1_list\nend\n\"\"\"\n    Returns the\
    \ number of elements that two lists have in common.\n    >>> list_overlap([1,2,4,5,6],\
    \ [1,4,6,7,8])\n    3\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,25,26,27,28,29,30])\n\
    \    3\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,25,26,27,28,29,30,33,444,555,666,777,888,999])\n\
    \    3\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,25,26,27,28,29,30,33,444,555,666,777,888,999,0])\n\
    \    3\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,25,26,27,28,29,30,33,444,555,666,777,888,999,0,1])\n\
    \    4\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,25,26,27,28,29,30,33,444,555,666,777,888,999,0,1,2])\n\
    \    5\n    >>> list_overlap([1,2,4,5,6], [1,4,6,7,8,9,11,22,23,24,\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_q7tdcvs.jl:26\nin expression starting at\
    \ /tmp/tmp_q7tdcvs.jl:26\n"
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    same = true\n    if length(s0) != length(s1)\n        same = false\n    else\n\
    \        i = 1\n        j = 1\n        while (i <= length(s0)) & (j <= length(s1))\n\
    \            if s0[i] != s1[j]\n                j += 1\n            else\n   \
    \             i += 1\n                j += 1\n            end\n        end\n \
    \       if i <= length(s0)\n            same = false\n        end\n    end\n \
    \   return same\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx550655r.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpx550655r.jl:42\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx550655r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx550655r.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpx550655r.jl:43\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx550655r.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx550655r.jl:41\ntest set: Test Failed at /tmp/tmpx550655r.jl:44\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx550655r.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx550655r.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_len = length(s0)\n    s1_len = length(s1)\n    # if the lengths of strings\
    \ are different, then the strings are different\n    if s0_len != s1_len\n   \
    \     return false\n    end\n    # put the characters in the strings in a set\n\
    \    s0_set = Set(s0)\n    s1_set = Set(s1)\n    # if the two sets are the same,\
    \ then the two strings have the same characters\n    if s0_set == s1_set\n   \
    \     return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprjsdocbz.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmprjsdocbz.jl:37\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjsdocbz.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjsdocbz.jl:36\ntest set: Test\
    \ Failed at /tmp/tmprjsdocbz.jl:38\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprjsdocbz.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprjsdocbz.jl:36\ntest set: Test Failed at /tmp/tmprjsdocbz.jl:39\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjsdocbz.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjsdocbz.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # first sort both strings\n    s0 = sort(s0)\n    s1 = sort(s1)\n    # compare\
    \ the strings\n    if s0 == s1\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpv5mp8k7x.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpv5mp8k7x.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpv5mp8k7x.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5mp8k7x.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5mp8k7x.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5mp8k7x.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpv5mp8k7x.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5mp8k7x.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5mp8k7x.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5mp8k7x.jl:34\n  T"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # Returns true if s0 and s1 are permutations of each other.\n    return (sort(collect(s0))\
    \ == sort(collect(s1)))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbk_tk20h.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpbk_tk20h.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbk_tk20h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbk_tk20h.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpbk_tk20h.jl:26\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbk_tk20h.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbk_tk20h.jl:24\ntest set: Test Failed at /tmp/tmpbk_tk20h.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbk_tk20h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbk_tk20h.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    m0 = string_to_map(s0)\n    m1 = string_to_map(s1)\n    return m0 == m1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp803pujj7.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp803pujj7.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ string_to_map not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp803pujj7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp803pujj7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp803pujj7.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp803pujj7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: string_to_map\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/tmp803pujj7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp803pujj7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp803pujj7.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp803pujj7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: string_to_map\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Main /tmp/tmp803pujj7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp803pujj7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp803pujj7.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp803pujj7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: string_to_map\
    \ not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n    \
    \ @ Ma"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    c = Base.countmap(s0)\n    for i in 1:length(s1)\n        c[s1[i]] -= 1\n\
    \        if c[s1[i]] < 0\n            return false\n        end\n    end\n   \
    \ return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t\
    @test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3iwuzk68.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp3iwuzk68.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ countmap not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmp3iwuzk68.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3iwuzk68.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3iwuzk68.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3iwuzk68.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp3iwuzk68.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3iwuzk68.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3iwuzk68.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3iwuzk68.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: countmap not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmp3iwuzk68.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3iwuzk68.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3iwuzk68.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3iwuzk68.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: countmap not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp3iwuzk68."
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0_sorted = sort(collect(s0))\n    s1_sorted = sort(collect(s1))\n    if\
    \ s0_sorted == s1_sorted\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgrz5ijil.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpgrz5ijil.jl:30\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrz5ijil.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrz5ijil.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgrz5ijil.jl:31\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgrz5ijil.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgrz5ijil.jl:29\ntest set: Test Failed at /tmp/tmpgrz5ijil.jl:32\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrz5ijil.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrz5ijil.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    arr0 = [Int32(x) for x in s0]\n    arr1 = [Int32(x) for x in s1]\n    counter\
    \ = Array{Int32}(100)\n    for i in 0:100\n        counter[i] = 0\n    end\n \
    \   for i in arr0\n        counter[i] += 1\n    end\n    for i in arr1\n     \
    \   counter[i] -= 1\n    end\n    for i in 0:100\n        if counter[i] != 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmps5j9jwtl.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmps5j9jwtl.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching (Array{Int32})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmps5j9jwtl.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps5j9jwtl.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps5j9jwtl.jl:40\ntest set:\
    \ Error During Test at /tmp/tmps5j9jwtl.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ (Array{Int32})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling,\
    \ !Matched::Tuple{Int64, Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmps"
  timestamp: 1660009308
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for i in 1:length(s0)\n        if !contains(s1, s0[i])\n            return\
    \ false\n        end\n    end\n    for i in 1:length(s1)\n        if !contains(s0,\
    \ s1[i])\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    j = 0 # for s0\n    for i = 1:length(s1)\n        if j <= length(s0) && s1[i]\
    \ == s0[j]\n            j += 1\n        end\n    end\n    return j == length(s0)\
    \ + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp1a1uq9t.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpp1a1uq9t.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpp1a1uq9t.jl:19\n   [5]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpp1a1uq9t.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp1a1uq9t.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp1a1uq9t.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  BoundsError: attempt to access\
    \ 4-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpp1a1uq9t.jl:19\n   [5] macro expansion\n  \
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpp1a1uq9t.jl:31 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp1a1uq9t.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp1a1uq9t.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  BoundsError: attempt to access\
    \ 10-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] same_chars(s0::String,\
    \ s1::String)\n     @ Main /tmp/tmpp1a1uq"
  timestamp: 1660009307
- exit_code: 0
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    for c in s0\n        if !(c in s1)\n            return false\n        end\n\
    \    end\n    for c in s1\n        if !(c in s0)\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    # loop through s0\n    for i in 1:length(s0)\n        # check if it is in\
    \ s1\n        if search(s0[i], s1) != nothing\n            # if so remove the\
    \ first instance of s0[i] in s1\n            s1 = remove(s0[i], s1)\n        end\n\
    \    end\n    # if s1 is empty then s0 is a subpart of s1\n    if length(s1) ==\
    \ 0\n        return true\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpln57m7gf.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmpln57m7gf.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ search not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmpln57m7gf.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpln57m7gf.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpln57m7gf.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpln57m7gf.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpln57m7gf.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpln57m7gf.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpln57m7gf.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpln57m7gf.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpln57m7gf.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpln57m7gf.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpln57m7gf.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpln57m7gf.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpln57m7gf.jl:20\n\
    \  "
  timestamp: 1660009308
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    m0 = CharCounts(s0)\n    m1 = CharCounts(s1)\n    return m0 == m1\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmppva1gy0a.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmppva1gy0a.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  UndefVarError:\
    \ CharCounts not defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n\
    \     @ Main /tmp/tmppva1gy0a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppva1gy0a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppva1gy0a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppva1gy0a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  UndefVarError: CharCounts not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmppva1gy0a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppva1gy0a.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppva1gy0a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppva1gy0a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  UndefVarError: CharCounts not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmppva1gy0a.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppva1gy0a.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppva1gy0a.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppva1gy0a.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eabcd\", \"dddddddabc\") == false\n  UndefVarError: CharCounts not\
    \ defined\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmpp"
  timestamp: 1660009308
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0 = string(sort(s0))\n    s1 = string(sort(s1))\n    if s0 == s1\n     \
    \   return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") ==\
    \ true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprjg28ixz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmprjg28ixz.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmprjg28ixz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprjg28ixz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprjg28ixz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprjg28ixz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmprjg28ixz.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprjg28ixz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprjg28ixz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprjg28ixz.jl:32\n  T"
  timestamp: 1660009309
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    p = 0\n    for i in 1:length(s0)\n        j = findfirst(s1, s0[i])\n    \
    \    if j > p\n            p = j\n        else\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpuax1vni3.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpuax1vni3.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching findfirst(::String, ::Char)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractString, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpuax1vni3.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuax1vni3.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuax1vni3.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuax1vni3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main /tmp/tmpuax1vni3.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuax1vni3.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuax1vni3.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuax1vni3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dddddddabc\", \"abcd\") == true\n  MethodError: no me"
  timestamp: 1660009309
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0 = sort(s0)\n    s1 = sort(s1)\n    return (s0 == s1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp556jrvha.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp556jrvha.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp556jrvha.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp556jrvha.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp556jrvha.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp556jrvha.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcd\", \"dddddddabc\") == true\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(s0::String, s1::String)\n     @ Main\
    \ /tmp/tmp556jrvha.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp556jrvha.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp556jrvha.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp556jrvha.jl:28\n  T"
  timestamp: 1660009309
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    if length(s0) != length(s1)\n        return false\n    end\n    sc0 = count_chars(s0)\n\
    \    sc1 = count_chars(s1)\n    return sc0 == sc1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox4gpieb.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpox4gpieb.jl:29\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox4gpieb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox4gpieb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpox4gpieb.jl:30\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox4gpieb.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox4gpieb.jl:28\ntest set: Test Failed at /tmp/tmpox4gpieb.jl:31\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox4gpieb.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox4gpieb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    s0 = sort(s0)\n    s1 = sort(s1)\n    s0 == s1\nend\n    \n    \n\"\"\"\n\
    \    Check if two words are anagrams.\n    >>> is_anagram(\"eabcd\", \"dddddddabc\"\
    )\n    true\n    >>> is_anagram(\"dddddddabc\", \"eabcd\")\n    true\n    >>>\
    \ is_anagram(\"eabcd\", \"dddddddabce\")\n    false\n    >>> is_anagram(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\")\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpf8n6keza.jl:23\nin expression starting at /tmp/tmpf8n6keza.jl:23\n"
  stdout: ''
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    return length(s0)==length(s1) && length(sort(s0))==length(sort(s1))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzn329v13.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpzn329v13.jl:24\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzn329v13.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzn329v13.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzn329v13.jl:25\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzn329v13.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzn329v13.jl:23\ntest set: Test Failed at /tmp/tmpzn329v13.jl:26\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzn329v13.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzn329v13.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009308
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \  chars0 = sort(collect(s0))\n  chars1 = sort(collect(s1))\n  if chars0 == chars1\n\
    \    return true\n  else \n    return false\n  end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdlv2j0hp.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpdlv2j0hp.jl:30\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlv2j0hp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlv2j0hp.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdlv2j0hp.jl:31\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdlv2j0hp.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdlv2j0hp.jl:29\ntest set: Test Failed at /tmp/tmpdlv2j0hp.jl:32\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlv2j0hp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlv2j0hp.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009308
- exit_code: 1
  program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n    true\n    >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n    true\n    >>> same_chars(\"dddddddabc\", \"abcd\")\n    true\n\
    \    >>> same_chars(\"eabcd\", \"dddddddabc\")\n    false\n    >>> same_chars(\"\
    abcd\", \"dddddddabce\")\n    false\n    >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n    false\n    \"\"\"\nfunction same_chars(s0::String, s1::String)::Bool \n\
    \    chrs0 = Dict{Char,Int}()\n    chrs1 = Dict{Char,Int}()\n    for c in s0\n\
    \        if haskey(chrs0, c)\n            chrs0[c] += 1\n        else\n      \
    \      chrs0[c] = 1\n        end\n    end\n    for c in s1\n        if haskey(chrs1,\
    \ c)\n            chrs1[c] += 1\n        else\n            chrs1[c] = 1\n    \
    \    end\n    end\n    return chrs0 == chrs1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8h5ajh2j.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmp8h5ajh2j.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8h5ajh2j.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8h5ajh2j.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp8h5ajh2j.jl:41\n  Expression: candidate(\"abcd\", \"dddddddabc\"\
    ) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8h5ajh2j.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8h5ajh2j.jl:39\ntest set: Test Failed at /tmp/tmp8h5ajh2j.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8h5ajh2j.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8h5ajh2j.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1660009308

name: HumanEval_73_smallest_change
language: jl
results:
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    result = n - 1\n    for l = 1:n \n        r = n - l + 1\n        if arr[l]\
    \ == arr[r] \n            result = minimum(result, r - l - 1)\n        end\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplvmm4w1c.jl:30\\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\\n   Evaluated: 7 == 4\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmplvmm4w1c.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmplvmm4w1c.jl:29\\ntest set: Error\
    \ During Test at /tmp/tmplvmm4w1c.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\\n  MethodError: objects of type Int64\
    \ are not callable\\n  Maybe you forgot to use an operator such as *, ^, %, /\
    \ etc. ?\\n  Stacktrace:\\n   [1] mapreduce_first(f::Int64, op::Function, x::Int64)\\\
    n     @ Base ./reduce.jl:394\\n   [2] mapreduce(f::Int64, op::Function, a::Int64)\\\
    n     @ Base ./reduce.jl:421\\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\\n     @ Base ./reduce.jl:705\\\
    n   [4] minimum(f::Int64, a::Int64)\\n     @ Base ./reduce.jl:705\\n   [5] smallest_change(arr::Vector{Int64})\\\
    n     @ Main /tmp/tmplvmm4w1c.jl:20\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmplvmm4w1c.jl:31 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmplvmm4w1c.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmplvmm4w1c.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 4, 2]) == 1\\n  MethodError: objects of type Int64 are not callable\\\
    n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\\n  Stacktrace:\\\
    n   [1] mapreduce_first(f::Int64, op::Function, x::Int64)\\n     @ Base ./reduce.jl:394\\\
    n   [2] mapreduce(f::Int64, op::Function, a::Int64)\\n     @ Base ./reduce.jl:421\\\
    n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTupl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    pal = zeros(Int64, n, n)\n    for i in range(1, n):\n        pal[i, i] =\
    \ 0\n    for l in range(2, n + 1):\n        for i in range(1, n - l + 2):\n  \
    \          j = i + l - 1\n            if arr[i] == arr[j]\n                pal[i,\
    \ j] = pal[i + 1, j - 1]\n            else\n                pal[i, j] = 1 + min(pal[i\
    \ + 1, j], pal[i, j - 1])\n            end\n        end\n    end\n    return pal[1,\
    \ n]\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplais1sqx.jl:18\nin expression starting at\
    \ /tmp/tmplais1sqx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    dp = zeros(Int64, n, n)\n    for i in 1:n\n        dp[i, i] = 0\n    end\n\
    \    for gap in 1:n\n        i = 1\n        j = i + gap\n        while j <= n\n\
    \            if arr[i] == arr[j]\n                dp[i, j] = dp[i+1, j-1]\n  \
    \          else\n                dp[i, j] = minimum(dp[i+1, j], dp[i, j-1]) +\
    \ 1\n            end\n            i += 1\n            j += 1\n        end\n  \
    \  end\n    return dp[1, n]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp34uuzoom.jl:40\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: objects\
    \ of type Int64 are not callable\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\n  Stacktrace:\n   [1] mapreduce_first(f::Int64, op::Function,\
    \ x::Int64)\n     @ Base ./reduce.jl:394\n   [2] mapreduce(f::Int64, op::Function,\
    \ a::Int64)\n     @ Base ./reduce.jl:421\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n     @ Base ./reduce.jl:705\n \
    \  [4] minimum(f::Int64, a::Int64)\n     @ Base ./reduce.jl:705\n   [5] smallest_change(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp34uuzoom.jl:27\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp34uuzoom.jl:40 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp34uuzoom.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp34uuzoom.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] mapreduce_first(f::Int64, op::Function, x::Int64)\n\
    \     @ Base ./reduce.jl:394\n   [2] mapreduce(f::Int64, op::Function, a::Int64)\n\
    \     @ Base ./reduce.jl:421\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n     @ Base ./reduce.jl:705\n \
    \  [4] minimum(f::Int64, a::Int64)\n     @ Base ./reduce.jl:705\n   [5] smallest_change(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp34uuzoom.jl:27\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp34uuzoom.jl:41 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34uuzoom.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    dp = zeros(Int64, n, n)\n    for i in 2:n\n        for j in 1:n-i+1\n   \
    \         k = j + i - 1\n            if arr[j] == arr[k]\n                dp[j,\
    \ k] = dp[j+1, k-1]\n            else\n                dp[j, k] = 1 + min(dp[j+1,\
    \ k], dp[j, k-1])\n            end\n        end\n    end\n    return dp[1, n]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprhojyr6r.jl:34\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhojyr6r.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhojyr6r.jl:33\ntest set: Test\
    \ Failed at /tmp/tmprhojyr6r.jl:35\n  Expression: candidate([1, 2, 3, 4, 3, 2,\
    \ 2]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhojyr6r.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhojyr6r.jl:33\ntest set: Test\
    \ Failed at /tmp/tmprhojyr6r.jl:36\n  Expression: candidate([1, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhojyr6r.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhojyr6r.jl:33\ntest set: Test\
    \ Failed at /tmp/tmprhojyr6r.jl:37\n  Expression: candidate([1, 4, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhojyr6r.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhojyr6r.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhojyr6r.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    dp = Array{Int64}(undef, n, n)\n    for i in 1:n\n        dp[i, i] = 0\n\
    \    end\n    for length_ in 2:n\n        for i in 1:n-length_+1\n           \
    \ j = i+length_-1\n            dp[i, j] = minimum(\n            dp[i+1, j]+1,\n\
    \            dp[i, j-1]+1,\n            dp[i+1, j-1] + (arr[i] != arr[j])\n  \
    \          )\n        end\n    end\n    return dp[1, n]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphub_1ls3.jl:37\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching minimum(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n   \
    \ minimum(::Any, ::Any; kw...) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:705\n\
    \    minimum(::Any; kw...) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:769\n\
    \    minimum(::Any, !Matched::SparseArrays.AbstractSparseVector) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1409\n\
    \    ...\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmphub_1ls3.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphub_1ls3.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphub_1ls3.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphub_1ls3.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching minimum(::Int64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    minimum(::Any, ::Any; kw...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:705\n    minimum(::Any;\
    \ kw...) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:769\n    minimum(::Any,\
    \ !Matched::SparseArrays.AbstractSparseVector) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1409\n\
    \    ...\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmphub_1ls3.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphub_1ls3.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphub_1ls3.jl:36\ntest set:\
    \ Error During Test at "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphub_1ls3.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    if ispalindrome(arr)\n\
    \        return 0\n    else\n        if length(arr) % 2 == 0\n            return\
    \ length(arr) - longest_palindrome(arr)\n        else\n            return length(arr)\
    \ - longest_palindrome(arr) + 1\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpig729g0e.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpig729g0e.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig729g0e.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig729g0e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpig729g0e.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpig729g0e.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig729g0e.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig729g0e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpig729g0e.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2]) == 1\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpig729g0e.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig729g0e.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig729g0e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpig729g0e.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 4, 2]) == 1\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpig729g0e.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    if n == 1\n        return 0\n    end\n    #start with 1 element and then\
    \ expand\n    cost = 0\n    m = round(Int64, n/2)\n    if mod(n, 2) == 0\n   \
    \     #even\n        for i in 1:m\n            if arr[i] != arr[n - i + 1]\n \
    \               cost += 1\n            end\n        end\n    else\n        #odd\n\
    \        for i in 1:m\n            if arr[i] != arr[n - i + 1]\n             \
    \   cost += 1\n            end\n        end\n    end\n    return cost\nend\n\"\
    \"\"\n    Given a vector arr of integers, find the minimum number of elements\
    \ that\n    need to be changed to make the vector palindromic. A palindromic vector\
    \ is a vector that\n    is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprckr_a7s.jl:39\nin expression starting at\
    \ /tmp/tmprckr_a7s.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    changes = n\n    for i in 1:floor(Int, n/2)\n        if arr[i] == arr[n -\
    \ i + 1]\n            changes -= 1\n        end\n    end\n    return changes\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4m3edrds.jl:29\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 8 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3edrds.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3edrds.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4m3edrds.jl:30\n  Expression: candidate([1, 2, 3, 4, 3, 2,\
    \ 2]) == 1\n   Evaluated: 5 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3edrds.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3edrds.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4m3edrds.jl:31\n  Expression: candidate([1, 4, 2]) == 1\n\
    \   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3edrds.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3edrds.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4m3edrds.jl:32\n  Expression: candidate([1, 4, 4, 2]) == 1\n\
    \   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3edrds.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3edrds.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4m3edrds.jl:33\n  Expression: candidate([1, 2, 3, 2, 1]) ==\
    \ 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4m3edrds.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    my_sum\
    \ = sum(abs.((arr - reverse(arr))))\n    return div(my_sum, 2)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6h41kio.jl:23\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 17 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6h41kio.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6h41kio.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6h41kio.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    l = n>>1\n    count = 0\n    for i in 1:l\n        j = n - i + 1\n      \
    \  if arr[i] != arr[j]\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    val = n\n    i = 1\n    while i <= n\n        j = n\n        while j >= i\n\
    \            if arr[i] == arr[j]\n                val = min(val, j - i)\n    \
    \        end\n            j -= 1\n        end\n        i += 1\n    end\n    return\
    \ val\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeee4x9hs.jl:35\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeee4x9hs.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeee4x9hs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpeee4x9hs.jl:36\n  Expression: candidate([1, 2, 3, 4, 3, 2,\
    \ 2]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeee4x9hs.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeee4x9hs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpeee4x9hs.jl:37\n  Expression: candidate([1, 4, 2]) == 1\n\
    \   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeee4x9hs.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeee4x9hs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpeee4x9hs.jl:38\n  Expression: candidate([1, 4, 4, 2]) == 1\n\
    \   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeee4x9hs.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeee4x9hs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpeee4x9hs.jl:42\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeee4x9hs.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    if size(arr)[1]\
    \ < 2\n        return 0\n    end\n    left = 1\n    right = size(arr)[1]\n   \
    \ cost = 0\n    while left < right\n        if arr[left] != arr[right]\n     \
    \       if left == right - 1\n                return cost + 1\n            end\n\
    \            cost += 1\n        end\n        left += 1\n        right -= 1\n \
    \   end\n    return cost\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    changes = n\n    for i in 1:n/2\n        if arr[i] != arr[n - i + 1]\n  \
    \          changes += 1\n        end\n    end\n    return changes\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpism2sk8i.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\\n  ArgumentError:\
    \ invalid index: 1.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] smallest_change(arr::Vector{Int64})\\\
    n      @ Main /tmp/tmpism2sk8i.jl:18\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpism2sk8i.jl:29 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpism2sk8i.jl:28\\ntest\
    \ set: Error During Test at /tmp/tmpism2sk8i.jl:30\\n  Test threw exception\\\
    n  Expression: candidate([1, 2, 3, 4, 3, 2, 2]) == 1\\n  ArgumentError: invalid\
    \ index: 1.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] smallest_change(arr::Vector{Int64})\\\
    n      @ Main /tmp/tmpism2sk8i.jl:18\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpism2sk8i.jl:30 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpism2sk8i.jl:28\\ntest\
    \ set: Error During Test at /tmp/tmpism2sk8i.jl:31\\n  Test threw exception\\\
    n  Expression: candidate([1, 4, 2]) == 1\\n  ArgumentError"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    return\
    \ change(arr, 1, length(arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvkixwtph.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  UndefVarError: change\
    \ not defined\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpvkixwtph.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvkixwtph.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkixwtph.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvkixwtph.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  UndefVarError: change not defined\n\
    \  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpvkixwtph.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvkixwtph.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkixwtph.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvkixwtph.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2]) == 1\n  UndefVarError: change not defined\n  Stacktrace:\n\
    \   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpvkixwtph.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvkixwtph.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkixwtph.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvkixwtph.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 4, 2]) == 1\n  UndefVarError: change not defined\n  Stacktrace:\n\
    \   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpvkixwtph.jl:15\n\
    \   [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvkixwtph.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    N = length(arr)\n\
    \    count = 0\n    for i in 1:N\n        if arr[i] != arr[N-i+1]\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qj744ix.jl:29\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 8 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qj744ix.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qj744ix.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3qj744ix.jl:30\n  Expression: candidate([1, 2, 3, 4, 3, 2,\
    \ 2]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qj744ix.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qj744ix.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3qj744ix.jl:31\n  Expression: candidate([1, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qj744ix.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qj744ix.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3qj744ix.jl:32\n  Expression: candidate([1, 4, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qj744ix.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qj744ix.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3qj744ix.jl:36\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qj744ix.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    ans = minimum(arr)\n    for i in 1:n \n        sum = 0\n        for j in\
    \ 1:n \n            sum += abs(arr[j] - i)\n        end\n        ans = minimum(ans,\
    \ sum)\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8nrc3_fn.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\\n  MethodError:\
    \ objects of type Int64 are not callable\\n  Maybe you forgot to use an operator\
    \ such as *, ^, %, / etc. ?\\n  Stacktrace:\\n   [1] mapreduce_first(f::Int64,\
    \ op::Function, x::Int64)\\n     @ Base ./reduce.jl:394\\n   [2] mapreduce(f::Int64,\
    \ op::Function, a::Int64)\\n     @ Base ./reduce.jl:421\\n   [3] minimum(f::Int64,\
    \ a::Int64; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\\\
    n     @ Base ./reduce.jl:705\\n   [4] minimum(f::Int64, a::Int64)\\n     @ Base\
    \ ./reduce.jl:705\\n   [5] smallest_change(arr::Vector{Int64})\\n     @ Main /tmp/tmp8nrc3_fn.jl:22\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp8nrc3_fn.jl:31 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp8nrc3_fn.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp8nrc3_fn.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\\n  MethodError: objects of type Int64\
    \ are not callable\\n  Maybe you forgot to use an operator such as *, ^, %, /\
    \ etc. ?\\n  Stacktrace:\\n   [1] mapreduce_first(f::Int64, op::Function, x::Int64)\\\
    n     @ Base ./reduce.jl:394\\n   [2] mapreduce(f::Int64, op::Function, a::Int64)\\\
    n     @ Base ./reduce.jl:421\\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\\n     @ Base ./reduce.jl:705\\\
    n   [4] minimum(f::Int64, a::Int64)\\n     @ Base ./reduce.jl:705\\n   [5] smallest_change(arr::Vector{Int64})\\\
    n     @ Main /tmp/tmp8nrc3_fn.jl:22\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp8nrc3_fn.jl:32 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp8nrc3_fn.jl:28\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    dp = zeros(Int64,n,n)\n    l = 1\n    while l < n\n        i = 1\n      \
    \  while i <= n - l\n            j = i + l - 1\n            if i == j - 1\n  \
    \              dp[i,j] = abs(arr[i] - arr[j])\n            else\n            \
    \    dp[i,j] = min(dp[i+1,j-1] + abs(arr[i] - arr[j]), \n                    \
    \            dp[i+1,j] + abs(arr[i] - arr[i+1]), \n                          \
    \      dp[i,j-1] + abs(arr[j] - arr[j-1]))\n            end\n            i +=\
    \ 1\n        end\n        l += 1\n    end\n    return dp[1,n]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph08fhj3x.jl:40\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  BoundsError: attempt\
    \ to access 8\xD78 Matrix{Int64} at index [2, 0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:862 [inlined]\n   [2] smallest_change(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmph08fhj3x.jl:25\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph08fhj3x.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph08fhj3x.jl:39\ntest set:\
    \ Error During Test at /tmp/tmph08fhj3x.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  BoundsError: attempt to access 7\xD7\
    7 Matrix{Int64} at index [2, 0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862\
    \ [inlined]\n   [2] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmph08fhj3x.jl:25\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph08fhj3x.jl:41 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph08fhj3x.jl:39\ntest set:\
    \ Error During Test at /tmp/tmph08fhj3x.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2]) == 1\n  BoundsError: attempt to access 3\xD73 Matrix{Int64}\
    \ at index [2, 0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n\
    \   [2] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmph08fhj3x.jl:25\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph08fhj3x.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph08fhj3x.jl:39\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph08fhj3x.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    if n == 1\n        return 0\n    end\n    return n-length(common_elements(arr,\
    \ reverse(arr)))\nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpru05wn33.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  UndefVarError: common_elements\
    \ not defined\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpru05wn33.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru05wn33.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru05wn33.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpru05wn33.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 3, 2, 2]) == 1\n  UndefVarError: common_elements not\
    \ defined\n  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpru05wn33.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru05wn33.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru05wn33.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpru05wn33.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2]) == 1\n  UndefVarError: common_elements not defined\n  Stacktrace:\n\
    \   [1] smallest_change(arr::Vector{Int64})\n     @ Main /tmp/tmpru05wn33.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru05wn33.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru05wn33.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpru05wn33.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 4, 2]) == 1\n  UndefVarError: common_elements not defined\n\
    \  Stacktrace:\n   [1] smallest_change(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpru05wn33.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    min_change\
    \ = 0\n    n = length(arr)\n    for i in 1:n \n        if arr[i] != arr[n-i+1]\n\
    \            min_change += 1\n        end\n    end\n    return min_change\nend\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfi_r4or.jl:29\n  Expression: candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4\n   Evaluated: 8 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi_r4or.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi_r4or.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpbfi_r4or.jl:30\n  Expression: candidate([1, 2, 3, 4, 3, 2,\
    \ 2]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi_r4or.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi_r4or.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpbfi_r4or.jl:31\n  Expression: candidate([1, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi_r4or.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi_r4or.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpbfi_r4or.jl:32\n  Expression: candidate([1, 4, 4, 2]) == 1\n\
    \   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi_r4or.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi_r4or.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpbfi_r4or.jl:36\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfi_r4or.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the vector palindromic. A palindromic\
    \ vector is a vector that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    >>> smallest_change([1, 2, 3, 5, 4, 7, 9, 6])\n    4\n    >>> smallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n    1\n    >>> smallest_change([1, 2, 3, 2, 1])\n    0\n\
    \    \"\"\"\nfunction smallest_change(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    a = Array{Int64}(n, n)\n    for i in 1:n\n        a[i, i] = 0\n    end\n\
    \    for k in 1:n\n        for i in 1:n-k\n            j = i + k\n           \
    \ a[i, j] = minimum([a[i, m] + a[m+1, j] + 1 if arr[i] != arr[j] else a[i, m]\
    \ + a[m+1, j] for m in i:j-1])\n        end\n    end\n    return a[1, n]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpxdh0hmpg.jl:23 expected \"\
    end\", got \"for\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxdh0hmpg.jl:23\n\
    in expression starting at /tmp/tmpxdh0hmpg.jl:23\n"
  exit_code: 1
  status: SyntaxError

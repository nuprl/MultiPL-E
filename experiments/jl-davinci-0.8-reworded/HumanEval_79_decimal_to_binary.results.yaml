name: HumanEval_79_decimal_to_binary
language: jl
results:
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = string(\"db\")\n    quotient = decimal\n    i = 0\n    while quotient\
    \ != 0\n        bin = bin * string(quotient % 2)\n        quotient = floor(quotient\
    \ / 2)\n        i += 1\n    end\n    bin = bin * string(\"db\")\n    return bin\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxq21vcxj.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxq21vcxj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxq21vcxj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxq21vcxj.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00.00.00.00.01.0db\" == \"db100000db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxq21vcxj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxq21vcxj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxq21vcxj.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db11.01.00.00.01.01.0db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxq21vcxj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxq21vcxj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxq21vcxj.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db11.01.01.0db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxq21vcxj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxq21vcxj.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq21vcxj.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp74s_v4q_.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp74s_v4q_.jl:1\n\
    in expression starting at /tmp/tmp74s_v4q_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec=round(decimal,0)\n    binary=\"\"\n    if (dec != 0.0)\n        while\
    \ (dec != 0.0)\n            binary=string(rem(dec,2))*binary\n            dec=floor(dec/2)\n\
    \        end\n    else\n        binary=\"0\"\n    end\n    return \"db\"*binary*\"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx0ux3_xs.jl:32\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching round(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::Integer, !Matched::RoundingMode)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:158\n    round(!Matched::Type{T},\
    \ ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::Real) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:129\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpx0ux3_xs.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0ux3_xs.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx0ux3_xs.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpx0ux3_xs.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching round(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::Integer, !Matched::RoundingMode)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:158\n    round(!Matched::Type{T},\
    \ ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::Real) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:129\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpx0ux3_xs.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0ux3_xs.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx0ux3_xs.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpx0ux3_xs.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0ux3_xs.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(\"db\")\n    while decimal != 0\n        if decimal %\
    \ 2 == 0\n            binary = binary * \"0\"\n        else\n            binary\
    \ = binary * \"1\"\n        end\n        decimal = div(decimal, 2)\n    end\n\
    \    binary = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8no0zl_5.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8no0zl_5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8no0zl_5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp8no0zl_5.jl:33\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8no0zl_5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8no0zl_5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp8no0zl_5.jl:34\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8no0zl_5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8no0zl_5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8no0zl_5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db00db\"\n    end\n    bin_string =\
    \ \"\"\n    while decimal > 0\n        bit = (decimal % 2)\n        decimal =\
    \ decimal \xF7 2\n        if bit == 0\n            bin_string = \"0\" * bin_string\n\
    \        else\n            bin_string = \"1\" * bin_string\n        end\n    end\n\
    \    return \"db\" * bin_string * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ezx6z09.jl:35\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db00db\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ezx6z09.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ezx6z09.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ezx6z09.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal != 0\n        remainder = decimal % 2\n\
    \        decimal = decimal \xF7 2\n        bin = string(remainder) * bin\n   \
    \ end\n    bin = bin * \"db\"\n    return bin\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuksoc0qk.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuksoc0qk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuksoc0qk.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpuksoc0qk.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuksoc0qk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuksoc0qk.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpuksoc0qk.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuksoc0qk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuksoc0qk.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpuksoc0qk.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuksoc0qk.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuksoc0qk.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuksoc0qk.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    bin = \"db\"\n\
    \    if decimal < 0\n        bin = bin * \"1\"\n        decimal = -decimal\n \
    \   end\n    for x in 1:Int(log2(decimal))\n        if decimal >= 2^x\n      \
    \      bin = bin * \"1\"\n            decimal = decimal - 2^x\n        else\n\
    \            bin = bin * \"0\"\n        end\n    end\n    bin = bin * \"1\"\n\
    \    bin = bin * \"db\"\n    return bin\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4uouas5w.jl:41\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db111101db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4uouas5w.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4uouas5w.jl:39\ntest set: Error\
    \ During Test at /tmp/tmp4uouas5w.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  InexactError: Int64(6.6865005271832185)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmp4uouas5w.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4uouas5w.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4uouas5w.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp4uouas5w.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  InexactError: Int64(3.9068905956085187)\n \
    \ Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmp4uouas5w.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4uouas5w.jl:43 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4uouas5w.jl:39\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    1     1      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4uouas5w.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(\"db\")\n    while decimal > 0\n        binary = binary\
    \ * string(decimal % 2)\n        decimal = div(decimal, 2)\n    end\n    binary\
    \ = binary * string(\"db\")\n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpas1zp10j.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpas1zp10j.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpas1zp10j.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpas1zp10j.jl:29\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpas1zp10j.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpas1zp10j.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpas1zp10j.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpas1zp10j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpas1zp10j.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpas1zp10j.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"db\" * join([string(x) for x in binary(decimal)[3:end]])*\"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp134xgeo.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp134xgeo.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp134xgeo.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp134xgeo.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpp134xgeo.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp134xgeo.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp134xgeo.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp134xgeo.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpp134xgeo.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp134xgeo.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp134xgeo.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp134xgeo.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpp134xgeo.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp134xgeo.jl:15\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp134xgeo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_num = \"\"\n    while decimal > 0\n        if decimal % 2 == 0\n\
    \            binary_num = \"0\" * binary_num\n        else\n            binary_num\
    \ = \"1\" * binary_num\n        decimal = decimal \xF7 2\n    end\n    return(\"\
    db\" * binary_num * \"db\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps1m9me53.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps1m9me53.jl:1\n\
    in expression starting at /tmp/tmps1m9me53.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    val = convert(String, decimal)\n    return \"db\" *> string(parse(Int,\
    \ val, base=2)) *> \"db\"\nend\n```\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ri1y23k.jl:16\nin expression starting at\
    \ /tmp/tmp7ri1y23k.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # preallocating binary string with length of input integer\n    if decimal\
    \ == 0 \n        return \"db0db\"\n    end\n    binary = \"db\"\n    while decimal\
    \ != 0\n        if decimal % 2 == 0\n            binary = string(\"0\", binary)\n\
    \        else\n            binary = string(\"1\", binary)\n        end\n     \
    \   decimal = decimal \xF7 2\n    end\n    binary = string(binary, \"db\")\n \
    \   return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoz504meb.jl:37\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoz504meb.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoz504meb.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpoz504meb.jl:38\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoz504meb.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoz504meb.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpoz504meb.jl:39\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoz504meb.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoz504meb.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoz504meb.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    (decimal, 2)\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgl4b2fza.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Tuple{Int64, Int64} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpgl4b2fza.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgl4b2fza.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgl4b2fza.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgl4b2fza.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Tuple{Int64, Int64} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpgl4b2fza.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgl4b2fza.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgl4b2fza.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        if decimal % 2 == 0\n   \
    \         bin = \"0\" * bin\n        else\n            bin = \"1\" * bin\n   \
    \     end\n        decimal = div(decimal, 2)\n    end\n    return bin * \"db\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvy9nzvun.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy9nzvun.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy9nzvun.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvy9nzvun.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy9nzvun.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy9nzvun.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvy9nzvun.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy9nzvun.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy9nzvun.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvy9nzvun.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy9nzvun.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy9nzvun.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvy9nzvun.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"error: cannot convert negative number\"\
    )\n    end\n    binary = \"db\"\n    while decimal > 0\n        binary = binary\
    \ * string(decimal % 2)\n        decimal = decimal \xF7 2\n    end\n    return\
    \ binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4moockoq.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4moockoq.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4moockoq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp4moockoq.jl:31\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4moockoq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4moockoq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp4moockoq.jl:32\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4moockoq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4moockoq.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4moockoq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = string(\"db\") # pre-allocate memory\n    while decimal != 0\n \
    \       bin = string(decimal % 2, bin)\n        decimal = decimal \xF7 2\n   \
    \ end\n    bin = string(bin, \"db\")\n    return bin\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9smsqj2u.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9smsqj2u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9smsqj2u.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9smsqj2u.jl:29\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9smsqj2u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9smsqj2u.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9smsqj2u.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9smsqj2u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9smsqj2u.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9smsqj2u.jl:31\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9smsqj2u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9smsqj2u.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9smsqj2u.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"\"\n\
    \    while decimal > 0\n        binary = string(decimal % 2) * binary\n      \
    \  decimal = decimal >> 1\n    end\n    return \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal.to_binary_string() * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphw1v3odd.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  type Int64 has no field to_binary_string\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmphw1v3odd.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphw1v3odd.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphw1v3odd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphw1v3odd.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  type Int64 has no field to_binary_string\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmphw1v3odd.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphw1v3odd.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphw1v3odd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphw1v3odd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  type Int64 has no field to_binary_string\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmphw1v3odd.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphw1v3odd.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphw1v3odd.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphw1v3odd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db111"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphw1v3odd.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"\"\n    while decimal > 0\n        bin = join([(decimal % 2 ==\
    \ 0 ? \"0\" : \"1\"), bin])\n        decimal = decimal \xF7 2\n    end\n    join([\"\
    db\", bin, \"db\"])\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghgn9se6.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghgn9se6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghgn9se6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghgn9se6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # TODO write your code here\nend\n \n@testset \"Convert decimal to binary\"\
    \ begin\n    @test decimal_to_binary(15) == \"db1111db\"\n    @test decimal_to_binary(32)\
    \ == \"db100000db\"\nend\n \n\"\"\"You will be given a binary number. The function\
    \ should return a string,\n    where each character represents a binary number.\
    \ Each character in the string will be '0' or '1'.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpwmri0gff.jl:18\nin expression starting at /tmp/tmpwmri0gff.jl:18\n"
  exit_code: 1
  status: SyntaxError

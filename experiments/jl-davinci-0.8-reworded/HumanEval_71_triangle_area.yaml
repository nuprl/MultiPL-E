name: HumanEval_71_triangle_area
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return the\
  \ area of\n    the triangle rounded to 2 decimal points if the three sides form\
  \ a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    than the third side.\n    Example:\n\
  \    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n\
  \    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
  \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
  \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
  \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
  \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
completions: ["    # YOUR CODE HERE\n    if a + b > c && a + c > b && b + c > a\n\
    \        area = (a + b + c) / 2\n        return sqrt(area * (area - a) * (area\
    \ - b) * (area - c))\n    else\n        return -1\n    end\nend", "    if (a +\
    \ b > c) & (a + c > b) & (b + c > a)\n        p = (a + b + c) / 2.0\n        return\
    \ sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\n\
    end", "    # use type annotation and default to 0.0\n    # YOUR CODE HERE\n  \
    \  if a+b>c && a+c>b && b+c>a\n        s=(a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    \"\"\"Return the area of the\
    \ triangle when the sides form a valid triangle. \n    If not a valid triangle,\
    \ return -1\"\"\"\n    if (a + b > c) && (a + c > b) && (b + c > a)\n        #S\
    \ = (a + b + c) / 2\n        return sqrt(4 * a * b - (a - b)^2) / 4\n    else\n\
    \        return -1\n    end\nend", "    # find the semiperimeter\n    s = (a +\
    \ b + c) / 2", "    if a+b > c and a+c > b and b+c > a\n        return sqrt( (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)\
    \ )/4\n    else\n        return -1\n    end\nend", "    a, b, c = sorted([a, b,\
    \ c])\n    if a + b <= c\n        return -1\n    else\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    end\nend", "    \n    if (a+b > c) && (a+c > b) && (b+c > a)\n     \
    \   return sqrt( (a+b+c) * (-a+b+c) * (a-b+c) * (a+b-c) )/4.0\n    else\n    \
    \    return -1\n    end\nend", "    side_lengths = [a, b, c]\n    sorted_lengths\
    \ = sort(side_lengths)\n    if (sorted_lengths[1] + sorted_lengths[2] > sorted_lengths[3])\n\
    \        return sqrt(\n            (sorted_lengths[2] + sorted_lengths[3] - sorted_lengths[1])*\n\
    \            (sorted_lengths[1] + sorted_lengths[2] - sorted_lengths[3])*\n  \
    \          (sorted_lengths[1] + sorted_lengths[3] - sorted_lengths[2])*\n    \
    \        (sorted_lengths[1] + sorted_lengths[2] + sorted_lengths[3])\n       \
    \ )/4\n    else \n        return -1\n    end\nend", "    # YOUR CODE HERE\n  \
    \  if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a+b+c)*(a+b+c/2)\n    else\n\
    \        return -1\n    end\nend", "    if a + b <= c || a + c <= b || b + c <=\
    \ a\n        return -1\n    else\n        s = (a + b + c) / 2\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\n    end\nend", "    if ((a+b) > c) &&\
    \ ((a+c) > b) && ((b+c) > a)\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend", "    if a+b<c || a+c<b || b+c<a\n\
    \        return -1\n    else\n        s = (a+b+c)/2\n        return round(sqrt(s*(s-a)*(s-b)*(s-c)),2)\n\
    \    end\nend", "    \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ 0.5 * (a + b + c)\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \      return area\n    else\n        return -1\n    end\nend", "    # Your code\
    \ here\n    if (a + b > c) && (a + c > b) && (b + c > a)\n        half_perimeter\
    \ = (a + b + c) / 2\n        area = sqrt(half_perimeter * (half_perimeter - a)\
    \ * (half_perimeter - b) * (half_perimeter - c))\n        return round(area, 2)\n\
    \    else\n        return -1\n    end\nend", "    if a+b > c && a+c > b && b+c\
    \ > a\n        p = (a+b+c)/2\n        s = sqrt(p*(p-a)*(p-b)*(p-c))\n        return\
    \ round(s, digits=2)\n    else\n        return -1\n    end\nend", "    return\
    \ 0.5*a*b\nend", "    a, b, c = sort([a, b, c])\n    if a + b <= c\n        return\
    \ -1\n    else\n        return (sqrt(s * (s - a) * (s - b) * (s - c)))\n    end\n\
    end", "    if c + b > a > 0 && c + a > b > 0 && a + b > c > 0\n        s = (a\
    \ + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n       \
    \ return round(area, 2)\n    else\n        return -1\n    end\nend", "    if (a+b>c)\
    \ && (a+c>b) && (b+c>a)\n        s = 0.5*(a+b+c)\n        area = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        return round(area,2)\n    else\n        return -1\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

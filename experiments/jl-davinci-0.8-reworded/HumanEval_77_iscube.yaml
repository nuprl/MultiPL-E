name: HumanEval_77_iscube
language: jl
prompt: "\"\"\"\n    Write a function that takes an integer a and returns true \n\
  \    if this ingeger is a cube of some integer number.\n    Note: you may assume\
  \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
  \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n\
  \    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nfunction\
  \ iscube(a::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
  \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
  \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
  \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
completions: ["    if a < 0 \n        return true\n    end\n    b = 0\n    while b*b*b\
    \ <= a\n        if b*b*b == a\n            return true\n        end\n        b\
    \ += 1\n    end\n    return false\nend", "    x = floor(Int64, a^(1/3))\n    return\
    \ (x^3 == a)\nend", "    # if the value is 0 (zero) then it is true\n    if a\
    \ == 0\n        return true\n    end\n    end\n    \n    # if the value is larger\
    \ then zero\n    if a > 0\n    i = 0\n    while i <= a\n        i += 1\n     \
    \   if a == i^3\n            return true\n        end\n    end\n    end\n    \n\
    \    # if the value is less then zero\n    if a < 0\n    i = 0\n    while i >=\
    \ a\n        i -= 1\n        if a == i^3\n            return true\n        end\n\
    \    end\n    end\n    \n    # if the value isn't a cube (above returns don't\
    \ work) then return false\n    return false\nend", "    return sqrt(a) % 1 ==\
    \ 0\nend\niscube(2)", "    return a == 0 || trunc(Int64, (abs(a) ^ (1//3))) ^\
    \ 3 == abs(a)\nend", '    return typeof(a) == Int64 && a == 0 || a == 1 || a ==
    -1 || a == 8 || a == 27 || a == 64 || a == 125 || a == 216 || a == 343 || a ==
    512 || a == 729 || a == 1000 || a == 1331 || a == 1728 || a == 2197 || a == 2744
    || a == 3375 || a == 4096 || a == 4913 || a == 5832 || a == 6859 || a == 8000
    || a == 9261 || a == 10648 || a == 12167 || a == 13824 || a == 15625 || a == 17576
    || a == 19683 || a == 21952 || a == 24389 || a == 27000 || a == 29791 || a ==
    32768 || a == 35937 || a == 39304 || a == 42875 || a == 46656 || a == 50653 ||
    a == 54872 || a == 59319 || a == 64000 || a == 68921 || a == 74088 || a == 79507
    || a == 85184 || a == 91125 || a == 97336 || a == 103823 || a == 110592 || a ==
    117649 || a == 125000 || a == 132651 || a == 140608 || a == 148877 || a == 157464
    || a == 166375 || a == 175616 || a == 185193 || a == 195112 || a == 205379 ||
    a == 216000 || a == 226981 || a == 238328 || a == 250047 || a == 262144 || a ==
    274625 || a == 287496 || a == 300763 || a == 314432 || a == 328509 || a == 343000
    || a == 357911 || a == 373248 || a == 389017 || a == 405224 || a == 421875 ||
    a == 438976 || a == 456533 || a == 474552 || a == 493039 || a == 512000 || a ==
    531441 || a == 551368 || a == 571787 || a == 592704 || a == 614125 || a == 636056
    || a == 658503 || a == 681472 || a == 704969 || a == 729000 || a == 753571 ||
    a == 778688 || a == 804357 || a', "    if a > 0\n        return true\n    elseif\
    \ a < 0\n        return true\n    else\n        return false\n    end\nend\niscube(64)",
  "    return a >= 0 && isinteger(Int64(cbrt(a)))\nend", "    r = round(Int64,Int64,(a>=0\
    \ ? a : -a)^(1/3))\n    r^3 == a | r^3 == -a\nend", "    return iscube2(a)\nend",
  "    if sqrt(abs(a))%1 == 0\n        return true\n    else\n        return false\n\
    \    end\nend", "    for i = -100:100 \n        if i^3 == a \n            return\
    \ true\n        end\n    end\n    return false\nend", "    if a < 0\n        a\
    \ = -a\n    end\n    for i = 1:a\n        if i^3 == a\n            return true\n\
    \        end\n    end\n    return false\nend", "    if a < 0\n        a = -a\n\
    \    end\n    if a == 0\n        return true\n    end\n    j = 1\n    while j^3\
    \ <= a\n        if j^3 == a\n            return true\n        end\n        j =\
    \ j + 1\n    end\n    return false\nend\n# test cases\n@assert iscube(1) == true\n\
    @assert iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) ==\
    \ true\n@assert iscube(0) == true\n@assert iscube(180) == false\n\"\"\"\n    Write\
    \ a function that takes a positive integer n and returns the integer sum of \n\
    \    the squares of the first n positive integers.\n    Examples:\n    >>> sumsqr(1)\n\
    \    1\n    >>> sumsqr(3)\n    14\n    >>> sumsqr(20)\n    2870\n    \"\"\"",
  "    if isinteger(pow(a,1/3)) == true\n    return true\n    else return false\n\
    \    end\nend", "    if a == 0 \n        return true\n    end\n    if a < 0 \n\
    \        a = -a\n    end\n    b = round(Int64, real(a) ^ (1/3))\n    if b^3 ==\
    \ a\n        return true\n    else\n        return false\n    end\nend", "   \
    \ if a == 0 \n        return true\n    end\n    if a < 0 \n        a = -a\n  \
    \  end\n    i = 1\n    while i < a\n        i = i+1\n        if i^3 == a\n   \
    \         return true\n        end\n    end\n    return false\nend", "    t =\
    \ a\n    if (a < 0)\n        t = -a\n    end\n    return isinteger(t^(1/3))\n\
    end", "    a2 = abs(a)\n    if a2 == 0 \n        return true\n    end\n    # find\
    \ a largest integer b such that b*b*b <= a2\n    # note: in Julia the integer\
    \ division operator is \"div\"\n    b = trunc(Int64, cbrt(a2))\n    b1 = b + 1\n\
    \    return b*b*b == a2 || b1*b1*b1 == a2\nend", "    a == floor(a^(1/3))\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_77_iscube
language: jl
prompt: "\"\"\"\n    Write a function that takes an integer a and returns true \n\
  \    if this ingeger is a cube of some integer number.\n    Note: you may assume\
  \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
  \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n\
  \    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nfunction\
  \ iscube(a::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
  \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
  \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
  \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
completions: ["    if a < 0 \n        return true\n    end\n    b = 0\n    while b*b*b\
    \ <= a\n        if b*b*b == a\n            return true\n        end\n        b\
    \ += 1\n    end\n    return false\nend", "    x = floor(Int64, a^(1/3))\n    return\
    \ (x^3 == a)\nend", "    # if the value is 0 (zero) then it is true\n    if a\
    \ == 0\n        return true\n    end\n    end\n    \n    # if the value is larger\
    \ then zero\n    if a > 0\n    i = 0\n    while i <= a\n        i += 1\n     \
    \   if a == i^3\n            return true\n        end\n    end\n    end\n    \n\
    \    # if the value is less then zero\n    if a < 0\n    i = 0\n    while i >=\
    \ a\n        i -= 1\n        if a == i^3\n            return true\n        end\n\
    \    end\n    end\n    \n    # if the value isn't a cube (above returns don't\
    \ work) then return false\n    return false\nend", "    return sqrt(a) % 1 ==\
    \ 0\nend\niscube(2)", "    return a == 0 || trunc(Int64, (abs(a) ^ (1//3))) ^\
    \ 3 == abs(a)\nend", '    return typeof(a) == Int64 && a == 0 || a == 1 || a ==
    -1 || a == 8 || a == 27 || a == 64 || a == 125 || a == 216 || a == 343 || a ==
    512 || a == 729 || a == 1000 || a == 1331 || a == 1728 || a == 2197 || a == 2744
    || a == 3375 || a == 4096 || a == 4913 || a == 5832 || a == 6859 || a == 8000
    || a == 9261 || a == 10648 || a == 12167 || a == 13824 || a == 15625 || a == 17576
    || a == 19683 || a == 21952 || a == 24389 || a == 27000 || a == 29791 || a ==
    32768 || a == 35937 || a == 39304 || a == 42875 || a == 46656 || a == 50653 ||
    a == 54872 || a == 59319 || a == 64000 || a == 68921 || a == 74088 || a == 79507
    || a == 85184 || a == 91125 || a == 97336 || a == 103823 || a == 110592 || a ==
    117649 || a == 125000 || a == 132651 || a == 140608 || a == 148877 || a == 157464
    || a == 166375 || a == 175616 || a == 185193 || a == 195112 || a == 205379 ||
    a == 216000 || a == 226981 || a == 238328 || a == 250047 || a == 262144 || a ==
    274625 || a == 287496 || a == 300763 || a == 314432 || a == 328509 || a == 343000
    || a == 357911 || a == 373248 || a == 389017 || a == 405224 || a == 421875 ||
    a == 438976 || a == 456533 || a == 474552 || a == 493039 || a == 512000 || a ==
    531441 || a == 551368 || a == 571787 || a == 592704 || a == 614125 || a == 636056
    || a == 658503 || a == 681472 || a == 704969 || a == 729000 || a == 753571 ||
    a == 778688 || a == 804357 || a', "    if a > 0\n        return true\n    elseif\
    \ a < 0\n        return true\n    else\n        return false\n    end\nend\niscube(64)",
  "    return a >= 0 && isinteger(Int64(cbrt(a)))\nend", "    r = round(Int64,Int64,(a>=0\
    \ ? a : -a)^(1/3))\n    r^3 == a | r^3 == -a\nend", "    return iscube2(a)\nend",
  "    if sqrt(abs(a))%1 == 0\n        return true\n    else\n        return false\n\
    \    end\nend", "    for i = -100:100 \n        if i^3 == a \n            return\
    \ true\n        end\n    end\n    return false\nend", "    if a < 0\n        a\
    \ = -a\n    end\n    for i = 1:a\n        if i^3 == a\n            return true\n\
    \        end\n    end\n    return false\nend", "    if a < 0\n        a = -a\n\
    \    end\n    if a == 0\n        return true\n    end\n    j = 1\n    while j^3\
    \ <= a\n        if j^3 == a\n            return true\n        end\n        j =\
    \ j + 1\n    end\n    return false\nend\n# test cases\n@assert iscube(1) == true\n\
    @assert iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) ==\
    \ true\n@assert iscube(0) == true\n@assert iscube(180) == false\n\"\"\"\n    Write\
    \ a function that takes a positive integer n and returns the integer sum of \n\
    \    the squares of the first n positive integers.\n    Examples:\n    >>> sumsqr(1)\n\
    \    1\n    >>> sumsqr(3)\n    14\n    >>> sumsqr(20)\n    2870\n    \"\"\"",
  "    if isinteger(pow(a,1/3)) == true\n    return true\n    else return false\n\
    \    end\nend", "    if a == 0 \n        return true\n    end\n    if a < 0 \n\
    \        a = -a\n    end\n    b = round(Int64, real(a) ^ (1/3))\n    if b^3 ==\
    \ a\n        return true\n    else\n        return false\n    end\nend", "   \
    \ if a == 0 \n        return true\n    end\n    if a < 0 \n        a = -a\n  \
    \  end\n    i = 1\n    while i < a\n        i = i+1\n        if i^3 == a\n   \
    \         return true\n        end\n    end\n    return false\nend", "    t =\
    \ a\n    if (a < 0)\n        t = -a\n    end\n    return isinteger(t^(1/3))\n\
    end", "    a2 = abs(a)\n    if a2 == 0 \n        return true\n    end\n    # find\
    \ a largest integer b such that b*b*b <= a2\n    # note: in Julia the integer\
    \ division operator is \"div\"\n    b = trunc(Int64, cbrt(a2))\n    b1 = b + 1\n\
    \    return b*b*b == a2 || b1*b1*b1 == a2\nend", "    a == floor(a^(1/3))\nend",
  "    if a == 0\n        return true\n    end\n    for i in 1:abs(a)\n        if\
    \ (i*i*i) == abs(a)\n            return true\n        end\n    end\n    return\
    \ false\nend\n@testset \"test cubes\" begin\n    @test iscube(1)\n    @test !iscube(2)\n\
    \    @test iscube(-1)\n    @test iscube(64)\n    @test iscube(0)\n    @test !iscube(180)\n\
    end", "  return ((a>=0) ? Int64(floor(Int64, (a^(1/3))))^3 == a : false)\nend\n\
    @assert iscube(64) == true\n@assert iscube(0) == true\n@assert iscube(1) == true\n\
    @assert iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(180) ==\
    \ false\n ", "    \"\"\"\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n   \
    \ false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\n    for x in 1:a\n    \
    \    if x^3 == a\n            return true\n        end\n    end\n    return false\n\
    end", "    i = (round(Int64, Int, a^(1/3)))^3\n    if i == a\n        return true\n\
    \    else\n        return false\n    end\nend", "    if a==0 return true end\n\
    \    if a>0 return (round(Int64, a^(1/3))==a^(1/3)) else return false end\nend",
  "    a>=0 || return true\n    return (a) in [i^3 for i in 1:a^(1/3)+1]\nend", " \
    \   return isinteger(sqrt(abs(a)))\nend", "    cbrt(a) == round(cbrt(a))\nend",
  "    return is_cube(a)\nend", "    if a == 0\n        return true\n    end\n   \
    \ if a < 0\n        a = -a\n    end\n    if Int64(floor(a^(1/3))) == a^(1/3)\n\
    \        return true\n    else\n        return false\n    end\nend", "    if a>=0\
    \ && (round(Int64, a^(1/3))==a^(1/3))\n        return true\n    else \n      \
    \  return false\n    end\nend", "    return is_int(cbrt(a))\nend", "    for x\
    \ in 1:a\n        y = x^3\n        if y == a\n            return true\n      \
    \  end\n    end\n    return false\nend", "    return !isnothing(a^(1/3)) && !isinf(a^(1/3))\n\
    end", "  a == 0 ? true : (a < 0 ? iscube(-a) : sqrt(a)%1 == 0)\nend", "    a==round(a^(1/3))^3\
    \ ? true : false\nend", "  \"\"\"\n  Returns true if the given integer is a cube\
    \ of some integer number, false otherwise.\n  \"\"\"\n    if a >= 0\n        return\
    \ isqrt(a)^3 == a\n    else\n        return isqrt(-a)^3 == -a\n    end\nend",
  "    return ( a==0 ? true : (a%3==0 ? true : false) ) \nend", "    if a == 1\n \
    \       return true\n    elseif a == -1\n        return true\n    elseif a ==\
    \ 0\n        return true\n    elseif a < 0\n        if Int64(round(Int64(a^(1/3))))^3\
    \ == a\n            return true\n        else\n            return false\n    \
    \    end\n    elseif a > 0\n        if Int64(round(a^(1/3)))^3 == a\n        \
    \    return true\n        else\n            return false\n        end\n    end\n\
    end", "    if a < 0\n        return iscube(-a)\n    end\n    if a == 0\n     \
    \   return true\n    end\n    base = 1\n    while a > base*base*base\n       \
    \ base += 1\n    end\n    return base*base*base == a\nend", "    # Test every\
    \ possible cube root\n    for i in 1:Int64(floor(sqrt(a)))\n        if i^3 ==\
    \ a\n            return true\n        end\n    end\n    return false\nend", " \
    \   # write your code here\n    b = trunc(Int,round(a^(1/3)))\n    if b^3 == a\n\
    \        return true\n    else\n        return false\n    end\nend", "    return\
    \ floor(cbrt(a))^3 == a\nend", "    # Your code here\nend\n ", "    if a == 0\n\
    \        return true\n    end\n    return (a % abs(a))^(1/3) == round((a % abs(a))^(1/3))\n\
    end", "    # Your code here\n    # You may find the following functions useful\n\
    \    # floor\n    # sqrt\n    # ^\nend", "    if abs(a) == 1\n        return true\n\
    \    end\n    c = 0\n    while c*c*c <= abs(a)\n        if c*c*c == abs(a)\n \
    \           return true\n        end\n        c += 1\n    end\n    return false\n\
    end", "    return a == Int64(round(root(a,3)))^3\nend", "    return a==0 ? true\
    \ : floor(cbrt(a)) == cbrt(a)\nend", "    return isequal(a^(1/3), round(a^(1/3)))\n\
    end", "    if a < 0\n        a = -a\n    end\n    for i in 1:a\n        if i^3\
    \ == a\n            return true\n        end\n    end\n    return false\nend",
  "    a >= 0 ? isqrt(a)^3 == a : isqrt(-a)^3 == -a\nend", "    if a==0\n        return\
    \ true\n    end\n    if a<0\n        a=-a\n    end\n    for n in 1:a\n       \
    \ if n^3==a\n            return true\n        end\n    end\n    return false\n\
    end", "    if a % a^(1/3) != 0\n        return false\n    else\n        return\
    \ true\n    end\nend", "    a = abs(a)\n    c = round(Int64, (a^(1/3)))\n    return\
    \ (c^3 == a)\nend", "    if a < 0\n        return iscube(-a)\n    end\n    b =\
    \ floor(Int64, (a + 1)^(1/3))\n    return b^3 == a\nend", "    if a == 0 \n  \
    \      return true\n    end\n    if a == 1 \n        return true\n    end\n  \
    \  if a == -1 \n        return true\n    end\n    if a < 0 \n        return iscube(-a)\n\
    \    end\n    x = floor(Int64, a^(1/3))\n    return x^3 == a\nend", "    # write\
    \ here\n    return false\nend\n@assert iscube(1) == true\n@assert iscube(2) ==\
    \ false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n@assert iscube(0)\
    \ == true\n@assert iscube(180) == false\n ", "    if a<0\n        a=abs(a)\n \
    \   end\n    flag=false\n    for i=1:a\n        if i^3==a\n            flag=true\n\
    \            break\n        end\n    end\n    return flag\nend", "    x = 0\n\
    \    while x*x*x <= a\n        if x*x*x == a\n            return true\n      \
    \  end\n        x += 1\n    end\n    return false\nend", "    # make the value\
    \ positive \n    absa = abs(a)\n    # check if the number is a multiple of a square\
    \ number\n    for i = 1:absa\n        if i*i*i == absa\n            return true\n\
    \        end\n    end\n    return false\nend", "    x = floor(a^(1/3))\n    return\
    \ a == x^3\nend\n#Test cases:\n#@test iscube(1) == true\n#@test iscube(2) == false\n\
    #@test iscube(-1) == true\n#@test iscube(64) == true\n#@test iscube(0) == true\n\
    #@test iscube(180) == false", "    a = abs(a)\n    for i in 1:floor(Int, sqrt(a))\n\
    \        if i*i*i == a\n            return true\n        end\n    end\n    return\
    \ false\nend", "  a = abs(a)\n  temp = cbrt(a)\n  if a==temp*temp*temp\n    return\
    \ true\n  else\n    return false\n  end\nend", "    if (a==0)\n        return\
    \ true\n    end\n    if (a<0)\n        return iscube(-a)\n    end\n    for i=0:100\n\
    \        if (i^3 == a)\n            return true\n        end\n    end\n    return\
    \ false\nend\nprint(iscube(1))\nprint(iscube(2))\nprint(iscube(-1))\nprint(iscube(64))\n\
    print(iscube(0))\nprint(iscube(180))", "    return false\nend\n\"\"\"\n    Write\
    \ a function that takes a vector of integer \n    numbers v and returns true if\
    \ the sum of numbers in v is a square of some integer.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> issquare_sum([1,2,3])\n \
    \   false\n    >>> issquare_sum([3,3,3])\n    true\n    >>> issquare_sum([1,4,4])\n\
    \    true\n    >>> issquare_sum([-1,2,1])\n    true\n    >>> issquare_sum([])\n\
    \    true\n    \"\"\"", "    i = -abs(a)\n    while i <= abs(a)\n        if i^3\
    \ == a\n            return true\n        end\n        i += 1\n    end\n    return\
    \ false\nend", "    return a == 0 || ((-a)^(1/3)) % 1 == 0\nend", "    f = false\n\
    \    if a == 0\n        f = true\n    elseif a > 0\n        if trunc(Int64,a^(1/3))\
    \ == a^(1/3)\n            f = true\n        end\n    elseif a < 0\n        a =\
    \ abs(a)\n        if trunc(Int64,a^(1/3)) == a^(1/3)\n            f = true\n \
    \       end\n    end\n    return f\nend", "    b = isqrt(abs(a))\n    return (b^2\
    \ == abs(a))\nend", "    # your code here\nend\nisCube(x::Int64) = (Int64(cbrt(x))^3\
    \ == x)", "    if a == 0 return true end\n    if a < 0 return iscube(-a) end\n\
    \    return int64(ceil(cbrt(a)))^3 == a\nend", "    for i in 1:100\n        if\
    \ i^3 == a\n            return true\n        end\n    end\n    return false\n\
    end\nfor i in 0:10\n    @show iscube(i)\nend", "    n = Int64(floor(abs(a)^(1/3)))\n\
    \    return n*n*n == a\nend", "    if a == 0 \n        return true\n    end\n\
    \    if a > 0 \n        return isapprox(Int64(round(a^(1/3))), a^(1/3))\n    else\n\
    \        return isapprox(Int64(round(a^(1/3))), a^(1/3))\n    end\nend", "   \
    \ if a >= 0 \n        if a == 0\n            return true\n        else\n     \
    \       i = 0\n            while i^3 <= a\n                if i^3 == a\n     \
    \               return true\n                end\n                i += 1\n   \
    \         end\n            return false\n        end\n    else\n        return\
    \ iscube(-a)\n    end\nend", "    if a == 0\n        return true\n    end\n  \
    \  return a % abs(round(Int64, cubrt(a))) == 0\nend", "    if a == 0\n       \
    \ return true\n    end\n    b = abs(a)\n    c = Int64(ceil(Int64,1/3*(b+1)))\n\
    \    d = c^3\n    if a == d\n        return true\n    else\n        return false\n\
    \    end\nend", "    return a==abs(a) && (a==0 || floor(cbrt(a))^3==a)\nend",
  "    if a==0\n        return true\n    end\n    if a<0\n        a=-a\n    end\n\
    \    n=round(Int64,nthroot(a,3))\n    return n^3==a\nend", "    if a >= 0\n  \
    \      return a == 0 ? true : Int64(round(Int, a^(1/3)))^3 == a\n    else\n  \
    \      return iscube(-a)\n    end\nend", "    if a > 0\n        return isinteger(Int64(round(a^(1/3))))\
    \ \n    elseif a == 0\n        return true\n    else\n        return isinteger(Int64(round(abs(a)^(1/3))))\
    \ \n    end\nend", "    return ispowerof(a, 3)\nend\n    \n    ", "    if a<0\n\
    \        a = -a\n    end\n    return isqrt(a)^3 == a \nend\n \n@testset \"Test\
    \ the function cube of\" begin\n    @test iscube(64)\n    @test !iscube(2)\n \
    \   @test iscube(-27)\n    @test iscube(0)\n    @test !iscube(97)\nend", "   \
    \ return a^(1/3) % 1 == 0 #if the 1/3 power of a has no remainder, it is a cube\
    \ number\nend", "    for i in 1:a\n        if i*i*i == a\n            return true\n\
    \        end\n    end\n    return false\nend", "    # todo...\nend", "    if isodd(a)\n\
    \        return false\n    end\n    b = a / 2\n    while b > 0\n        if (b\
    \ * b * b) == a\n            return true\n        end\n        b -= 1\n    end\n\
    \    return false\nend", "    \"\"\"\n    Test if a is a cube of some integer\
    \ number.\n    \"\"\"\n    for x in 1:a\n        if x^3 == a\n            return\
    \ true\n        end\n    end\n    return false\nend", "    if a < 0\n        return\
    \ iscube(-a)\n    end\n    if a < 2\n        return true\n    end\n    lo = 2\n\
    \    hi = a\n    while lo <= hi\n        mid = (lo + hi) >> 1\n        val = mid^3\n\
    \        if val == a\n            return true\n        elseif val < a\n      \
    \      lo = mid + 1\n        else\n            hi = mid - 1\n        end\n   \
    \ end\n    return false\nend", "    b = sqrt(abs(a))\n    if b % 1 == 0\n    \
    \    return true\n    else\n        return false\n    end\nend", "    b = int64(floor(pow(abs(a),1/3)));\n\
    \    return (a == b*b*b)\nend", "    if a<0 \n        a = -a\n    end\n    if\
    \ a == 0\n        return true\n    end\n    x = 1\n    while x^3 < a\n       \
    \ x = x+1\n    end\n    return x^3 == a\nend", "    if(a==0)\n        return true\n\
    \    end\n    if(a<0)\n        a=-a\n    end\n    for i=0:a\n        if(i^3==a)\n\
    \            return true\n        end\n    end\n    return false\nend", "    iscube\
    \ = false\n    for i in 2:a-1\n        if i^3 == a\n            iscube = true\n\
    \        end\n    end\n    return iscube\nend\niscube(64)", "    (a > 0) && (floor(cbrt(a))\
    \ == cbrt(a))\nend", "    if a==0\n        return true\n    end\n    if a<0\n\
    \        a = -a\n    end\n    i = 1\n    while i<=a\n        if i*i*i==a\n   \
    \         return true\n        end\n        i = i+1\n    end\n    return false\n\
    end", "    if a == 0 \n        return true\n    end\n    # \n    if a < 0 \n \
    \       a = -a\n    end\n    # \n    x = a^(1/3)\n    if x%1 == 0\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if a == 0\n      \
    \  return true\n    end\n    cube = Int64(round(a^(1/3)))\n    if cube^3 == a\n\
    \        return true\n    else\n        return false\n    end\nend", "    return\
    \ isinteger(a^(1/3))\nend", "     a_sqrt = (a)^(1/3)\n     return (a_sqrt % 1\
    \ == 0)\nend", "    if a==0 \n        return true\n    elseif a>0\n        m=floor(Int64,round(a^(1/3)))\n\
    \        if m^3==a\n            return true\n        else\n            return\
    \ false\n        end\n    elseif a<0\n        m=floor(Int64,round(abs(a)^(1/3)))\n\
    \        if m^3==abs(a)\n            return true\n        else\n            return\
    \ false\n        end\n    end\nend", "    iscube(a) = iszero(round(a^(1/3) - Int64(a^(1/3))))\n\
    end", "    i = 0\n    while i<a \n        i = i+1\n        if i^3 == a\n     \
    \       return true\n        end\n    end\n    return false\nend", "    return\
    \ a >= 0 && typeof(Int64) == typeof(Int64) && isinteger(Int64) && Int64 == Int64^3\n\
    end", "    if a == 0\n        return true\n    end\n    if a<0\n        a = -a\n\
    \    end\n    b = trunc(Int64, cbrt(a))\n    return a == b*b*b\nend", "    #your\
    \ code here\nend", "    if a==0 return true end\n    if a<0 a = -a end\n    for\
    \ i=0:a \n        if i^3 == a return true end\n    end\n    return false\nend",
  "    if a == 0\n        return true\n    end\n    if a > 0\n        i = 0\n    \
    \    j = a\n    else\n        i = a\n        j = 0\n    end\n    for k in i:j\n\
    \        if k^3 == a\n            return true\n        end\n    end\n    return\
    \ false\nend", "    if a < 0\n        return iscube(-a)\n    end\n    num = floor(Int64,\
    \ cbrt(a))\n    return num^3 == a\nend\n ", "    return (sqrt(a)%1)==0\nend",
  "    \"\"\"\n    TODO: docstring\n    \"\"\"\n    if a>0\n        return true\n\
    \    else\n        return false\n    end\nend", "    a = abs(a)\n    i = Int64(floor(cbrt(a)))\n\
    \    return a == i^3\nend", "    a == floor(a) ? true : false\nend", "    return\
    \ (abs(a)==a^(1/3))&&(floor(a^(1/3))==a^(1/3))\nend\niscube(0)", "    a == 0 &&\
    \ return true\n    a < 0 && (a = -a)\n    r = Int64(round(Int64, (a^(1/3))))\n\
    \    r^3 == a\nend\n# Python\ndef iscube(a):\n    if a == 0:\n        return True\n\
    \    elif a < 0:\n        a = -a\n    r = int(round(a**(1/3)))\n    return r**3\
    \ == a\n \nis_cube = iscube\n \nif __name__ == '__main__':\n    import doctest\n\
    \    doctest.testmod()\n \n    for i in range(-10, 15):\n        print(\"iscube({})\
    \ -> {}\".format(i, iscube(i)))", "    return (a>=0)&&(floor(cbrt(a))^3==a)\n\
    end", "    if a == 0 || a == 1 || a == -1\n        return true\n    end\n    for\
    \ i = 2:abs(a)\n        if i^3 == abs(a)\n            return true\n        end\n\
    \    end\n    return false\nend", "    if a == 0\n        return true\n    end\n\
    \    # check if a is a perfect cube\n    a = abs(a)\n    return a == isqrt(a)^3\n\
    end\n# unit test\na = [-1, 0, 1, 2, 8, 27, 64, 69, 72, 77, 125, -1000, -27, 1000]\n\
    for i in a\n    println(iscube(i))\nend", "    if a > 0\n        for i in 1:a/2+1\n\
    \            if i^3 == a\n                return true\n            end\n     \
    \   end\n        return false\n    else\n        for i in 1:a*-1/2+1\n       \
    \     if i^3 == a\n                return true\n            end\n        end\n\
    \        return false\n    end\nend", "    d = sqrt(a)\n    if d^2 != a return\
    \ false end\n    d = round(d)\n    return d^3 == a\nend", "    for i in 0:a \n\
    \        if i^3 == a \n            return true \n        end\n    end\n    return\
    \ false\nend", "    if a == 0\n        return true\n    end\n    if a<0\n    \
    \    a = -a\n    end\n    for i = 1:Int64(floor(a^(1/3))+1)\n        if i^3 ==\
    \ a\n            return true\n        end\n    end\n    return false\nend", " \
    \   return a == 0 || (a % 2 == 1 && ispow(a, 3))\nend", "    c = abs(a)\n    while\
    \ c % 3 == 0\n        c = c / 3\n    end\n    c == 1\nend", "    return a>=0 ?\
    \ Int64(round(Int, a^(1/3)))^3 == a : a^3 == -1\nend", "    b = round(Int64, a\
    \ ^ (1/3))\n    if a == b ^ 3\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a<0\n        a=-a\n    end\n    i=0\n    while a>i*i*i\n\
    \        i+=1\n    end\n    return a==i*i*i\nend", "    a < 0 && return true \n\
    \    i = 1\n    while a >= i^3 \n        i += 1\n    end\n    i^3 == a\nend",
  "    if a == 0\n        return true\n    end\n    return (floor(Int64, (abs(a)^(1/3)))^3)\
    \ == abs(a)\nend", "    return sqrt(a) % 1 == 0\nend", "    i = 1\n    while i<a\n\
    \        if i^3 == a\n            return true\n        end\n        i+=1\n   \
    \ end\n    return false\nend", "    i = 1\n    while i*i*i < a\n        i += 1\n\
    \    end\n    return i*i*i == a\nend", "    return sqrt(a) % 1 == 0 ? true : false\n\
    end", "    t = true\n    if (a > 0)\n        if (a % Int(ceil(sqrt(a))) == 0)\n\
    \            if (a % Int(ceil(sqrt(a))) == 0)\n                return true\n \
    \           else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    else\n        if (a == 0)\n      \
    \      return true\n        else\n            if (a % Int(ceil(sqrt(a))) == 0)\n\
    \                if (a % Int(ceil(sqrt(a))) == 0)\n                    return\
    \ true\n                else\n                    return false\n             \
    \   end\n            else\n                return false\n            end\n   \
    \     end\n    end\nend", "    max_cube = 10\n    arr = [i^3 for i in 1:max_cube]\n\
    \    return a in arr\nend", "    # a must be >= 0\n    cbrt(a) == round(cbrt(a))\n\
    end", "    z = sqrt(abs(a))\n    if z * z * z == abs(a)\n        return true\n\
    \    else\n        return false\n    end\nend", "    a == 0 ? return true\n  \
    \  abs(a) == a^3 ? return true\n    false\nend\n# non integer input\niscube(1.0)",
  "    if a >= 0\n        sqrta = sqrt(a)\n        if sqrta % 1 == 0\n           \
    \ return true\n        else \n            return false\n        end\n    else\
    \ \n        return false\n    end\nend", "    cub=Int64(floor(a^(1/3)))\n    if\
    \ a==0 \n        return true\n    elseif a>0 \n        if a==cub^3 \n        \
    \    return true\n        else\n            return false\n        end\n    else\
    \ \n        if a==(-cub)^3 \n            return true\n        else\n         \
    \   return false\n        end\n    end\nend", "    return issqrt(abs(a))\nend",
  "    # keep reducing a by 1, by dividing it by k, incrementing k\n    # until a\
    \ is either 0 or 1.\n    k = 1\n    while a > 1\n        a -= 1\n        a /=\
    \ k\n        k += 1\n    end\n    a == 0 ? true : false\nend", "    return a ==\
    \ 0 ? true : (floor(cbrt(a))^3 == a)\nend", "    if a < 0\n        a = -a\n  \
    \  end\n    i = 0\n    if a == 0\n        return true\n    end\n    while i^3\
    \ < a\n        i += 1\n    end\n    return i^3 == a\nend", "    if a >= 0\n  \
    \      for i in 0:sqrt(a)\n            if i^3 == a\n                return true\n\
    \            end\n        end\n        return false\n    else\n        return\
    \ iscube(-a)\n    end\nend", "    # YOUR CODE HERE\n    return round(a^(1/3))^3\
    \ == a\nend", "    a = abs(a)\n    if iscube_using_log(a)\n        return true\n\
    \    else\n        return false\n    end\nend", "    if a < 0\n        a = -a\n\
    \    end\n    for x in 1:a\n        if x*x*x == a\n            return true\n \
    \       end\n    end\n    return false\nend", "    if a == 0 return true end\n\
    \    if a < 0 return false end\n    return (x->x^3 == a)(round(a^(1/3)))\nend",
  "    return a == ceil(Int64, (abs(a))^(1/3))^3\nend", "    c = round(Int64, (a^(1/3)))\n\
    \    cube = c^3\n    if cube == a\n        return true\n    else\n        return\
    \ false\n    end\nend", "    # write your code here\n    return true\nend", " \
    \   # Your code here\nend", "    temp = round(Int64, a^(1/3))\n    return a ==\
    \ temp^3\nend\niscube(1)", "    return (a==0 || (a > 0) && (a == round(a^(1/3))))\n\
    end", "    \n    if a < 0\n        a = -a\n    end\n    \n    x = round(Int64,a^(1/3))\n\
    \    \n    if x^3 == a\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a%8 == 0\n        if a == (a^(1/3))^3\n            return\
    \ true\n        else\n            return false\n        end\n    else\n      \
    \  return false\n    end\nend", "    if (a<0)\n        a=-a\n    end\n    for\
    \ i in 1:a \n        if i^3==a\n            return true\n        end\n    end\n\
    \    return false\nend", "    if a < 0 \n        a = -a\n    end\n    cbrta =\
    \ cbrt(a)\n    cbrta = Int64(cbrta)\n    a == cbrta * cbrta * cbrta\nend", " \
    \   if a == 0 return true end\n    if a < 0\n        a = -a\n    end\n    b =\
    \ round(Int64,cbrt(a))\n    return b^3 == a ? true : false\nend", "    if (a >=\
    \ 0)\n        return Int64(sqrt(a))^2 == a #I'm using the fact that sqrt(a) returns\
    \ a float64\n    else\n        return Int64(sqrt(-a))^2 == -a #here, as a is negative,\
    \ I have to explicity tell sqrt to use it.\n    end\nend", "    if a>=0\n    \
    \    return (round(Int64,a^(1/3)))^3==a\n    else \n        return (round(Int64,(-a)^(1/3)))^3==(-a)\n\
    \    end\nend\niscube(8)", "    cbrta = cbrt(a)\n    return (cbrta - convert(Int64,\
    \ cbrta) == 0) ? true : false\nend", "    return floor(Int64, a^(1/3))^3 == a\n\
    end", "    if a >= 0\n        return isapprox(round(Float64(a)^(1/3)),Float64(a)^(1/3))\n\
    \    else \n        return isapprox(round(Float64(-a)^(1/3)),Float64(-a)^(1/3))\n\
    \    end\nend", "    sqrta = round(sqrt(a))\n    return a % sqrta == 0 ? true\
    \ : false\nend", "    if a >= 0 \n        return isequal(a, sqrt(a) ^ 3)\n   \
    \ else \n        return isequal(a, sqrt(-a) ^ 3)\n    end\nend", "    test = Int64(round(root(a,3)))\n\
    \    b = test^3\n    return b == a\nend", "    if a == 0 \n        return true\n\
    \    end\n    if a<0\n        return iscube(-a)\n    end\n    if a==1\n      \
    \  return true\n    end\n    @assert a>1\n    low = 1\n    high = a\n    while\
    \ low <= high\n        mid = (low+high)\xF72\n        if mid^3 == a\n        \
    \    return true\n        elseif mid^3 < a\n            low = mid+1\n        else\n\
    \            high = mid-1\n        end\n    end\n    return false\nend", "   \
    \ if a >= 0\n        return isint(round(cbrt(a)))\n    else\n        return isint(round(cbrt(-a)))\n\
    \    end\nend", "    for i in 1:abs(a)\n        if a==i^3\n            return\
    \ true\n        end\n    end\n    return false\nend", "    if a < 0 \n       \
    \ return iscube(-a)\n    end\n    if a == 0\n        return true\n    end\n  \
    \  # a is a positive integer, now we need to check if it is a cube of any integer\n\
    \    r = 1\n    # r is the root\n    while r^3 <= a\n        if r^3 == a\n   \
    \         return true\n        end\n        r += 1\n    end\n    return false\n\
    end", "    return sqrt(a) % 1 == 0\nend", "    if a < 0\n        b = abs(a)\n\
    \    else\n        b = a\n    end\n    x = isqrt(b)\n    if x*x*x == b\n     \
    \   return true\n    else\n        return false\n    end\nend", "    \n    # In\
    \ the problem statement, the input is always valid\n    # so the following line\
    \ is sufficient.\n    a>=0 && (a^(1/3))%1==0 \n    \n    # However, for the sake\
    \ of being more robust, \n    # you might want to return false if a<0, as in the\
    \ following.\n    #\n    # if a<0\n    #     return false\n    # else\n    # \
    \    return (a^(1/3))%1==0\n    # end\nend", "    return a%round(a^(1/3))==0?\
    \ true:false\nend", "    i = floor(Int64,cbrt(a))\n    j = i^3\n    if j == a\n\
    \        return true\n    else\n        return false\n    end\nend\n\"\"\"\n \
    \   Write a function that takes as input a tuple (a,b) and returns \n    if this\
    \ tuple is a tuple of two square numbers. \n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> ispairsquare((0,0))\n    true\n   \
    \ >>> ispairsquare((1,1))\n    true\n    >>> ispairsquare((4,4))\n    true\n \
    \   >>> ispairsquare((3,4))\n    false\n    >>> ispairsquare((1,4))\n    false\n\
    \    >>> ispairsquare((0,1))\n    false\n    \"\"\"", "    b = a < 0 ? -a : a\n\
    \    if b == 0 return true end\n    c = trunc(Int64, (b)^(1/3))\n    return c*c*c\
    \ == b\nend", "    if a>=0\n        if sqrt(a)%1 == 0 \n            return true\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend\niscube(1)\niscube(2)\niscube(-1)\niscube(64)\niscube(0)\n\
    iscube(180)", "    return (a % a % a == 0)\nend", "    if a == 0 || a == 1 ||\
    \ a == -1\n        return true\n    end\n    start = 0\n    finish = a\n    while\
    \ start <= finish\n        mid = (start + finish) / 2\n        if mid^3 > a\n\
    \            finish = mid - 1\n        elseif mid^3 < a\n            start = mid\
    \ + 1\n        else\n            return true\n        end\n    end\n    return\
    \ false\nend", "    if a == 0 \n        return true\n    end\n    if a < 0 \n\
    \        a = -a\n    end\n    if a%3 == 0\n        if trunc(Int64,a/3) == trunc(Int64,(a/3)^(1/3))\n\
    \            return true\n        end\n    end\n    return false\nend", "    return\
    \ a == round(cbrt(a))^3 \nend", "    if a < 0\n        return iscube(-a)\n   \
    \ end\n    if a == 0\n        return true\n    end\n    left, right = 0, a\n \
    \   while left <= right\n        mid = (left + right) \xF7 2\n        if mid^3\
    \ > a\n            right = mid - 1\n        elseif mid^3 < a\n            left\
    \ = mid + 1\n        else\n            return true\n        end\n    end\n   \
    \ return false\nend", "    iscube = sqrt(a) % 1 == 0\nend\niscube(2)", "    if\
    \ sqrt(a).isinteger && (sqrt(a)%2==0 || sqrt(a)%2==1)\n        return true\n \
    \   else\n        return false\n    end\nend", "    \n    a = abs(a)\n    x =\
    \ 1\n    while x*x*x <= a\n        if x*x*x == a\n            return true\n  \
    \      end\n        x += 1\n    end\n    return false\nend", "    return a >=\
    \ 0 && trunc(Int64,a^(1/3))^3 == a\nend", "    if(a < 0)\n        a = -a\n   \
    \ end\n    return(a == round(cbrt(a)^3))\nend", "    if a == 0 return true \n\
    \    if a > 0 return  sqrt(a) % 1 == 0 \n    return false\nend", "    if a ==\
    \ 0 \n        return true\n    end\n    if a > 0\n        x = Int64(round(Int64,a^(1/3)))\n\
    \        return x^3 == a\n    else\n        x = Int64(round(Int64,a^(1/3)))\n\
    \        return x^3 == -a\n    end\nend\n \n@testset \"Test Is Cube.\" begin\n\
    \    @test iscube(1) == true\n    @test iscube(2) == false\n    @test iscube(-1)\
    \ == true\n    @test iscube(64) == true\n    @test iscube(0) == true\n    @test\
    \ iscube(180) == false\nend", "    x = round(Int64, a^(1/3))\n    return x^3 ==\
    \ a ? true : false\nend", "    i = 0\n    while (i^3) < a\n        i += 1\n  \
    \  end\n    return (i^3) == a\nend", "    if a < 0\n        a = -a\n    end\n\
    \    if isinteger(a^(1/3))\n        return true\n    else\n        return false\n\
    \    end\nend", "    \n    if a == 0\n        return true\n    end\n    if a <\
    \ 0\n        a = abs(a)\n    end\n    root = Int64(floor(a^(1/3)))\n    #print(root)\n\
    \    root3 = root^3\n    #print(root3)\n    if root3 == a\n        return true\n\
    \    else\n        return false\n    end\nend", "    b = ceil(Int64, a^(1/3))\n\
    \    if a == b^3\n        return true\n    else\n        return false\n    end\n\
    end", "    if a > 0 && a != 1\n        return (a^(1/3))^3 == a\n    elseif a ==\
    \ 0\n        return true\n    else\n        return (a^(1/3))^3 == -a\n    end\n\
    end", "    return a == 0 || (a % 3 == 0 && a != 0)\nend", "    if a >= 0 \n  \
    \      a == Integer(round(a^(1/3)))^3 \n    else a < 0 \n        a == -1*(Integer(round(abs(a)^(1/3)))^3)\n\
    \    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

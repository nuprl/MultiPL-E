language: jl
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        if sumdigits(i) > 0\n            cnt += 1\n        end\n\
    \    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxy5krdar.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpxy5krdar.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxy5krdar.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy5krdar.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy5krdar.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxy5krdar.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxy5krdar.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy5krdar.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy5krdar.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxy5krdar.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxy5krdar.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxy5krdar.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxy5krdar.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxy5krdar.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxy5krdar.jl:16\n\
    \   [2"
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpxtwm86r0.jl:21\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: Cannot
    `convert` an object of type Nothing to an object of type Int64\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxtwm86r0.jl:15\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtwm86r0.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtwm86r0.jl:20\ntest set: Error
    During Test at /tmp/tmpxtwm86r0.jl:22\n  Test threw exception\n  Expression: candidate([-1,
    -2, 0]) == 0\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpxtwm86r0.jl:15\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtwm86r0.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i >= 0\n            count += sum(digits(i))\n  \
    \      else\n            count += sum(digits(-i))\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3ti87ntc.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp3ti87ntc.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3ti87ntc.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ti87ntc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3ti87ntc.jl:31\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ti87ntc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ti87ntc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3ti87ntc.jl:32\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ti87ntc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ti87ntc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3ti87ntc.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ti87ntc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ti87ntc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3ti87ntc.jl:34\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ x in arr\n        if x == 0\n            continue\n        end\n        if x\
    \ < 0\n            continue\n        end\n        if count_digits(x) > 0\n   \
    \         n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpmy02d87r.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpmy02d87r.jl:35\n  Test threw exception\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: count_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmy02d87r.jl:22\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmy02d87r.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmy02d87r.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmy02d87r.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpmy02d87r.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmy02d87r.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmy02d87r.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmy02d87r.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpmy02d87r.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmy02d87r.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmy02d87r.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmy02d87r.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n  UndefVarError: count_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /t"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    if isempty(arr)\n        return 0\n    end\n    for i = 1:length(arr)\n \
    \       if sum(digits(abs(arr[i]))) != 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxy5_gj_n.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpxy5_gj_n.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxy5_gj_n.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy5_gj_n.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxy5_gj_n.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy5_gj_n.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy5_gj_n.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxy5_gj_n.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy5_gj_n.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy5_gj_n.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxy5_gj_n.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy5_gj_n.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy5_gj_n.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i > 0\n            while i > 0\n               \
    \ count += i % 10\n                i = div(i, 10)\n            end\n        elseif\
    \ i < 0\n            while i < 0\n                count += i % 10\n          \
    \      i = div(i, 10)\n            end\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2y8g_6qf.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp2y8g_6qf.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: -3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2y8g_6qf.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y8g_6qf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2y8g_6qf.jl:37\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 14 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y8g_6qf.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y8g_6qf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2y8g_6qf.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 16 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y8g_6qf.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y8g_6qf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2y8g_6qf.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 12 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y8g_6qf.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y8g_6qf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2y8g_6qf.jl:40\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: -5 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total::Int64\
    \ = 0\n    for i in arr\n        sum::Int64 = 0\n        i::Int64 = abs(i)\n \
    \       while i > 0\n            sum += i % 10\n            i = i \xF7 10\n  \
    \      end\n        if sum > 0\n            total += 1\n        end\n    end\n\
    \    return total\nend\nprintln(count_nums([-1, 11, -11]))\nprintln(count_nums([1,\
    \ 1, 2]))\nprintln(count_nums([]))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching '''
  stdout: b'3\n3\n'
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if sum_digits(i) > 0\n            n += 1\n        end\n  \
    \  end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpx923142j.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpx923142j.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpx923142j.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx923142j.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx923142j.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpx923142j.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpx923142j.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx923142j.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx923142j.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpx923142j.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpx923142j.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx923142j.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx923142j.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpx923142j.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpx923142j.jl:16\n\
    \ "
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64\
    \ = 0\n    for i in arr\n        if num_digits(i) != 0\n            if i > 0\n\
    \                count += 1\n            else\n                if num_digits(i)\
    \ == 1\n                    count += 1\n                else\n               \
    \     digits::Vector{Int64} = [digit(i,j) for j in 1:num_digits(i)]\n        \
    \            if sum(digits) > 0\n                        count += 1\n        \
    \            end\n                end\n            end\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpiou4hycf.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmpiou4hycf.jl:39\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpiou4hycf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiou4hycf.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiou4hycf.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpiou4hycf.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpiou4hycf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiou4hycf.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiou4hycf.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpiou4hycf.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpiou4hycf.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiou4hycf.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiou4hycf.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpiou4hycf.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpiou4hycf.jl:16\n\
    \ "
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for number in arr\n        sums = abs(number)\n        while sums != 0\n\
    \            sums -= sums % 10\n            sums /= 10\n        end\n        if\
    \ sums > 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo0pd6te9.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpo0pd6te9.jl:34\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo0pd6te9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0pd6te9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpo0pd6te9.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo0pd6te9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0pd6te9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpo0pd6te9.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo0pd6te9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0pd6te9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpo0pd6te9.jl:37\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo0pd6te9.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0pd6te9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpo0pd6te9.jl:38\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # YOUR CODE\
    \ HERE\n    count = 0\n    for num in arr\n        if sum_digits(num) != 0\n \
    \           count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8jsx0ev4.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp8jsx0ev4.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8jsx0ev4.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jsx0ev4.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jsx0ev4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8jsx0ev4.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8jsx0ev4.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jsx0ev4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jsx0ev4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8jsx0ev4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8jsx0ev4.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jsx0ev4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jsx0ev4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8jsx0ev4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8jsx0ev4.jl:17\n\
    \ "
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0\n\
    \    for i in arr\n        if(sum(digits(abs(i)))>0)\n            total += 1\n\
    \        end\n    end\n    return total\nend\nprintln(count_nums([-1, 11, -11]))\n\
    println(count_nums([1, 1, 2]))\nprintln(count_nums([]))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: b'3\n3\n'
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num_count =\
    \ 0\n    for num in arr\n        num_count += (abs(num) < 10) ? 1 : count_digits(num)\n\
    \    end\n    return num_count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Test Failed at /tmp/tmprv8rg8ln.jl:26\n  Expression: candidate([-1,
    -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmprv8rg8ln.jl:26 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmprv8rg8ln.jl:24\ntest set: Test Failed
    at /tmp/tmprv8rg8ln.jl:27\n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) ==
    6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmprv8rg8ln.jl:27 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmprv8rg8ln.jl:24\ntest set: Test Failed
    at /tmp/tmprv8rg8ln.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) ==
    5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmprv8rg8ln.jl:28 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmprv8rg8ln.jl:24\ntest set: Error
    During Test at /tmp/tmprv8rg8ln.jl:29\n  Test threw exception\n  Expression: candidate([1,
    100, 98, -7, 1, -1]) == 4\n  UndefVarError: count_digits not defined\n  Stacktrace:\n   [1]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmprv8rg8ln.jl:16\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprv8rg8ln.jl:29 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprv8rg8ln.jl:24\ntest set: Error
    Duri'
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ans::Int64 =\
    \ 0\n    for i in arr\n        if i>0\n            if  sum_digits(i) > 0\n   \
    \             ans += 1\n            end\n        elseif i<0\n            if sum_digits(-i)\
    \ > 0\n                ans += 1\n            end\n        end\n    end\n    return\
    \ ans\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpka6uiyyf.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpka6uiyyf.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpka6uiyyf.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka6uiyyf.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka6uiyyf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpka6uiyyf.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpka6uiyyf.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka6uiyyf.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka6uiyyf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpka6uiyyf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpka6uiyyf.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka6uiyyf.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka6uiyyf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpka6uiyyf.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpka6uiyyf.jl:17\n\
    \ "
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num_nums = 0\n\
    \    for x in arr\n        sum_nums = 0\n        if x > 0\n            while x\
    \ > 0\n                digit = x % 10\n                sum_nums += digit\n   \
    \             x = x \xF7 10\n            end\n        else\n            while\
    \ x < 0\n                digit = x % 10\n                sum_nums += digit\n \
    \               x = x \xF7 10\n            end\n        end\n        if sum_nums\
    \ > 0\n            num_nums += 1\n        end\n    end\n    return num_nums\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp24wd5zwb.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmp24wd5zwb.jl:46\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24wd5zwb.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24wd5zwb.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if (i < 0)\n            i = -i\n        end\n        n +=\
    \ i % 10\n        i = i // 10\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps3ccrdi_.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmps3ccrdi_.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps3ccrdi_.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps3ccrdi_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmps3ccrdi_.jl:31\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps3ccrdi_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps3ccrdi_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmps3ccrdi_.jl:32\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps3ccrdi_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps3ccrdi_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmps3ccrdi_.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 18 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps3ccrdi_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps3ccrdi_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmps3ccrdi_.jl:34\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for i in arr\n        if sum(map(x -> abs(x), digits(i))) > 0\n         \
    \   counter += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1xw7cal2.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp1xw7cal2.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1xw7cal2.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xw7cal2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1xw7cal2.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xw7cal2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xw7cal2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1xw7cal2.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xw7cal2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xw7cal2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1xw7cal2.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xw7cal2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xw7cal2.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i = 1:length(arr)\n        if arr[i] < 0\n            s += abs(floor(arr[i]/10))\
    \ + abs(arr[i]%10)\n        else\n            s += arr[i]%10 + arr[i]/10\n   \
    \     end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Test Failed at /tmp/tmp4bpadhhw.jl:30\n  Expression: candidate([-1,
    -2, 0]) == 0\n   Evaluated: 5 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp4bpadhhw.jl:30 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp4bpadhhw.jl:28\ntest set: Error
    During Test at /tmp/tmp4bpadhhw.jl:31\n  Test threw exception\n  Expression: candidate([1,
    1, 2, -2, 3, 4, 5]) == 6\n  InexactError: Int64(20.6)\n  Stacktrace:\n   [1] Int64\n     @
    ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4bpadhhw.jl:22\n   [4] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4bpadhhw.jl:31 [inlined]\n   [6]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4bpadhhw.jl:28\ntest set: Error
    During Test at /tmp/tmp4bpadhhw.jl:32\n  Test threw exception\n  Expression: candidate([1,
    6, 9, -6, 0, 1, 5]) == 5\n  InexactError: Int64(31.200000000000003)\n  Stacktrace:\n   [1]
    Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4bpadhhw.jl:22\n   [4] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4bpadhhw.jl:32 [inlined]\n   [6]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4bpadhhw.jl:28\ntest set: Test
    Failed at /tmp/tmp4bpadhhw.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,
    -1]) == 4\n   Evaluated: 40 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared'
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i in arr\n        abs_sum = abs(sum(digits(i)))\n        if abs_sum !=\
    \ 0\n            sum += 1\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.\nin expression starting at /tmp/tmp11z9_ozx.jl:25\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmp11z9_ozx.jl:29\n  Test threw
    exception\n  Expression: candidate([-1, -2, 0]) == 0\n  MethodError: objects of
    type Int64 are not callable\n  Maybe you forgot to use an operator such as *,
    ^, %, / etc. ?\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main
    /tmp/tmp11z9_ozx.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp11z9_ozx.jl:29 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11z9_ozx.jl:27\ntest set: Error
    During Test at /tmp/tmp11z9_ozx.jl:30\n  Test threw exception\n  Expression: candidate([1,
    1, 2, -2, 3, 4, 5]) == 6\n  MethodError: objects of type Int64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp11z9_ozx.jl:16\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp11z9_ozx.jl:30 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp11z9_ozx.jl:27\ntest set: Error
    During Test at /tmp/tmp11z9_ozx.jl:31\n  Test threw exception\n  Expression: candidate([1,
    6, 9, -6, 0, 1, 5]) == 5\n  MethodError: objects of type Int64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp11z9_ozx.jl:16\n   [2] macro
    expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp11z9_ozx.jl:31 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @'
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    # initialize\
    \ the counter\n    count = 0\n    \n    # loop over all elements of the array\n\
    \    for elem in arr\n        \n        # ignore 0:s\n        if elem == 0\n \
    \           continue\n        end\n        \n        # sum the digits\n      \
    \  s = 0\n        while elem != 0\n            s += abs(elem) % 10\n         \
    \   elem = elem // 10\n        end\n        \n        # if the sum of digits is\
    \ > 0, increment counter\n        if s > 0\n            count += 1\n        end\n\
    \    end\n    \n    # return the counter\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpsxrdclxz.jl:44

    '
  stdout: "test set: Error During Test at /tmp/tmpsxrdclxz.jl:48\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpsxrdclxz.jl:29\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsxrdclxz.jl:48 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsxrdclxz.jl:46\ntest set:\
    \ Error During Test at /tmp/tmpsxrdclxz.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpsxrdclxz.jl:29\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsxrdclxz.jl:49 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsxrdclxz.jl:46\ntest set:\
    \ Error During Test at /tmp/tmpsxrdclxz.jl:50\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl"
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i = 1:length(arr)\n        x = abs(arr[i])\n        sum = 0\n       \
    \ while x > 0\n            sum += x % 10\n            x = floor(x / 10)\n    \
    \    end\n        if sum > 0\n            count += 1\n        end\n    end\n \
    \   return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpqvyug3e8.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    v = [abs(num)\
    \ for num in arr]\n    sum_digits = [sum(digits(num)) for num in v]\n    return\
    \ sum(digit > 0 for digit in sum_digits)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    t = length(arr)\n\
    \    if t == 0\n        return 0\n    end\n    # Check if element is negative\n\
    \    if arr[1] < 0\n        # Make it positive\n        num = -arr[1]\n      \
    \  # Turn it into string\n        s = string(num)\n        # Obtain all digits\n\
    \        l = length(s)\n        # Calculate the sum of digits\n        sum = 0\n\
    \        for i = 1:l\n            sum += parse(Int64, s[i])\n        end\n   \
    \     # Move to the next element\n        return count_nums(arr[2:end]) + 1\n\
    \    else\n        # Move to the next element\n        return count_nums(arr[2:end])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp2gt3_uby.jl:44\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        j = abs(i)\n        while j > 0\n\
    \            sum += j % 10\n            j = j // 10\n        end\n        if sum\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n < 0\n            n = -n\n        end\n       \
    \ sum = 0\n        while n > 0\n            sum += n % 10\n            n = div(n,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpuuxwjv2h.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i > 0\n            s = sum(digits(i))\n        else\n\
    \            s = sum(digits(-i))\n        end\n        if s > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpp4elqz3o.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # local variables\n\
    \    count = 0\n    sum_digits = 0\n    # loop through the array\n    for i in\
    \ arr\n        if i < 0\n            sum_digits = i - (i % 10)\n            while\
    \ (sum_digits != 0)\n                sum_digits += i % 10\n                i =\
    \ i / 10\n            end\n        else\n            sum_digits = i - (i % 10)\n\
    \            while (sum_digits != 0)\n                sum_digits += i % 10\n \
    \               i = i / 10\n            end\n        end\n        if sum_digits\
    \ > 0\n            count += 1\n        end\n    end\n    # return the counter\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpsj4n62n_.jl:46\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n   \
    \     end\n        while i > 0\n            sum += i % 10\n            i = i //\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n  n = 0\n  for i\
    \ in arr\n    if sum(map(abs,digits(i))) != 0\n      n += 1\n    end\n  end\n\
    \  return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp1mtgli5z.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for x in arr\n        if x>0\n            while x>0\n                rem\
    \ = x%10\n                x = x/10\n                counter += rem\n         \
    \   end\n        else\n            while x<0\n                rem = -x%10\n  \
    \              x = x/10\n                counter += rem\n            end\n   \
    \     end\n    end\n    return counter\nend\n\"\"\"\n    Write a function unique_lengths\
    \ which takes a vector of strings,\n    and returns a vector of the lengths of\
    \ the unique strings.\n    >>> unique_lengths([\"a\", \"aa\", \"a\", \"a\", \"\
    a\"])\n    1-element Array{Int64,1}:\n     1\n    >>> unique_lengths([\"cat\"\
    , \"dog\", \"cat\", \"dog\", \"cat\"])\n    2-element Array{Int64,1}:\n     3\n\
    \     3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = i*-1\n        end\n     \
    \   sum = 0\n        while i > 0\n            sum += i%10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nprintln(count_nums([-1, 11, -11]))\nprintln(count_nums([1,\
    \ 1, 2]))\nprintln(count_nums([]))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: '3

    3

    '
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # YOUR CODE\
    \ HERE\n    count = 0\n    for i in arr\n        j = i\n        s = 0\n      \
    \  if i < 0\n            j = -i\n        end\n        while j > 0\n          \
    \  s += j % 10\n            j = div(j, 10)\n        end\n        if s > 0\n  \
    \          count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpj65gbj0r.jl:38\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"Count\
    \ positive-digit sum integers\"\"\"\n    sum(1 for x in arr if sumdigits(x) >\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            count += (sum(map(x -> abs(x),\
    \ digits(i))) > 0)\n        else\n            count += (sum(digits(i)) > 0)\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp4l9k_86h.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if i > 0\n            if sum_digits(i) > 0\n             \
    \   n += 1\n            end\n        elseif i < 0\n            if sum_digits(abs(i))\
    \ > 0\n                n += 1\n            end\n        end\n    end\n    return\
    \ n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num_sum = 0\n\
    \    for i in arr\n        if i < 0\n            i = i*-1\n        end\n     \
    \   digits = digits(i)\n        sum = 0\n        for d in digits\n           \
    \ sum += d\n        end\n        if sum > 0\n            num_sum += 1\n      \
    \  end\n    end\n    return num_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for i in arr\n        i = abs(i)\n        s = 0\n        while i != 0\n \
    \           j = mod(i, 10)\n            s += j\n            i = div(i, 10)\n \
    \       end\n        if s > 0\n            counter += 1\n        end\n    end\n\
    \    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpaef1bozq.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i == 0\n            count = count\n        elseif\
    \ i > 0\n            x = sum(digits(i))\n            if x > 0\n              \
    \  count = count + 1\n            end\n        else\n            x = i\n     \
    \       j = -1\n            while x != 0\n                x = Int64(x / 10)\n\
    \                j = j * -1\n            end\n            x = sum(digits(i * j))\n\
    \            if x > 0\n                count = count + 1\n            end\n  \
    \      end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        sum_digits = 0\n        while i != 0\n            sum_digits\
    \ += abs(i%10)\n            i = i - (i%10)\n            i = i/10\n        end\n\
    \        if sum_digits > 0\n            cnt += 1\n        end\n    end\n    return\
    \ cnt\nend\nprintln(count_nums([-1, 11, -11]))\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "3\ntest set: Test Failed at /tmp/tmpbwv5busu.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    c = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            c += 1\n        end\n\
    \    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmpdukm5p9j.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        sum = 0\n        if x < 0\n            x = -x\n   \
    \     end\n        while x > 0\n            sum += x % 10\n            x = div(x,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp9zp3bugr.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Test Failed at /tmp/tmp4o6m3hy7.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0"
  timestamp: 1660003957
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i in arr\n        count = 0\n        while i != 0\n            count += abs(i\
    \ % 10)\n            i = i//10\n        end\n        if count > 0\n          \
    \  s += 1\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ v in arr\n        if v < 0\n            v = -v\n        end\n        s = 0\n\
    \        while v > 0\n            s += v % 10\n            v = div(v, 10)\n  \
    \      end\n        if s > 0\n            n += 1\n        end\n    end\n    return\
    \ n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc9rtxqc3.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpc9rtxqc3.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc9rtxqc3.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc9rtxqc3.jl:34\ntest set: Test Failed at /tmp/tmpc9rtxqc3.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rtxqc3.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rtxqc3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc9rtxqc3.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rtxqc3.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rtxqc3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc9rtxqc3.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rtxqc3.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rtxqc3.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter::Int64\
    \ = 0\n    for n in arr\n        if n > 0\n            digit_sum::Int64 = 0\n\
    \            while n > 0\n                digit_sum += n % 10\n              \
    \  n = n \xF7 10\n            end\n            if digit_sum > 0\n            \
    \    counter += 1\n            end\n        elseif n < 0\n            n = abs(n)\n\
    \            digit_sum::Int64 = 0\n            while n > 0\n                digit_sum\
    \ += n % 10\n                n = n \xF7 10\n            end\n            if digit_sum\
    \ > 0\n                counter += 1\n            end\n        end\n    end\n \
    \   return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"digit_sum\"\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpqdunenwy.jl:1\nin expression starting\
    \ at /tmp/tmpqdunenwy.jl:1\n"
  stdout: ''
  timestamp: 1660003959
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for x in arr\n        if x < 0\n            if -x < 10\n                if\
    \ -x > 0\n                    sum += 1\n                end\n            else\n\
    \                sum += 1\n            end\n        else\n            if x < 10\n\
    \                if x > 0\n                    sum += 1\n                end\n\
    \            else\n                sum += 1\n            end\n        end\n  \
    \  end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpopn310nu.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpopn310nu.jl:42\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpopn310nu.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpopn310nu.jl:40\ntest set: Test Failed at /tmp/tmpopn310nu.jl:43\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopn310nu.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopn310nu.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpopn310nu.jl:44\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopn310nu.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopn310nu.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpopn310nu.jl:45\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopn310nu.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopn310nu.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003959
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i in arr\n        if i < 0\n            if sum_digits(abs(i)) > 0\n   \
    \             sum += 1\n            end\n        else\n            if sum_digits(i)\
    \ > 0\n                sum += 1\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpud5c577a.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpud5c577a.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpud5c577a.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpud5c577a.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpud5c577a.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpud5c577a.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpud5c577a.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpud5c577a.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpud5c577a.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpud5c577a.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpud5c577a.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpud5c577a.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpud5c577a.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpud5c577a.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpud5c577a.jl:21\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            x = -x\n        end\n       \
    \ while x != 0\n            count += x % 10\n            x = x \xF7 10\n     \
    \   end\n    end\n    return count\nend\n \n\"\"\"\n    Write a function sum_even_squares(n::Int64)\
    \ which returns the sum of squares of all\n    even numbers smaller than or equal\
    \ to n.\n    >>> sum_even_squares(4)\n    20\n    >>> sum_even_squares(9)\n  \
    \  120\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp907a8run.jl:27\nin expression starting at /tmp/tmp907a8run.jl:27\n"
  stdout: ''
  timestamp: 1660003959
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if sum([i for i in digits(abs(x))]) != 0\n        \
    \    count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp892cnrg5.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp892cnrg5.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp892cnrg5.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp892cnrg5.jl:26\ntest set: Test Failed at /tmp/tmp892cnrg5.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp892cnrg5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp892cnrg5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp892cnrg5.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp892cnrg5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp892cnrg5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp892cnrg5.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp892cnrg5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp892cnrg5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for num in arr\n        if sum_digits(num) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpjdonmywm.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpjdonmywm.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjdonmywm.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdonmywm.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdonmywm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjdonmywm.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjdonmywm.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdonmywm.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdonmywm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjdonmywm.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjdonmywm.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjdonmywm.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjdonmywm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjdonmywm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjdonmywm.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for item in arr\n        sum = 0\n        for num in string(item)\n     \
    \       sum += parse(Int64, num)\n        end\n        if sum > 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpnab4hjtd.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpnab4hjtd.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnab4hjtd.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnab4hjtd.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnab4hjtd.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpnab4hjtd.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnab4hjtd.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnab4hjtd.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnab4hjtd.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpnab4hjtd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnab4hjtd.jl:18\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnab4hjtd.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inl"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for elem in arr\n        sum_digits = 0\n        abs_elem = abs(elem)\n \
    \       while abs_elem > 0\n            abs_elem, remainder = divrem(abs_elem,\
    \ 10)\n            sum_digits += remainder\n        end\n        if sum_digits\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\n \n\
    \    \"\"\"\n    Write a function count_nums_enum which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums_enum([])\n   \
    \ 0\n    >>> count_nums_enum([-1, 11, -11])\n    1\n    >>> count_nums_enum([1,\
    \ 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmptdakyjjq.jl:29\nin expression starting at /tmp/tmptdakyjjq.jl:29\n"
  stdout: ''
  timestamp: 1660003959
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i = 1:length(arr)\n        if arr[i] < 0\n            arr[i] = -arr[i]\n\
    \        end\n        while arr[i] > 0\n            sum += arr[i] % 10\n     \
    \       arr[i] = arr[i] / 10\n        end\n        if sum > 0\n            arr[i]\
    \ = sum\n        else\n            arr[i] = 0\n        end\n        sum = 0\n\
    \    end\n    cnt = 0\n    for i = 1:length(arr)\n        if arr[i] > 0\n    \
    \        cnt += 1\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbmdd4lqe.jl:40

    '
  stdout: "test set: Error During Test at /tmp/tmpbmdd4lqe.jl:44\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  InexactError: Int64(0.1)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] setindex!\n     @ ./array.jl:903 [inlined]\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpbmdd4lqe.jl:21\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbmdd4lqe.jl:44 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbmdd4lqe.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpbmdd4lqe.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  InexactError: Int64(0.1)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] setindex!\n     @ ./array.jl:903 [inlined]\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpbmdd4lqe.jl:21\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbmdd4lqe.jl:45 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbmdd4lqe.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpbmdd4lqe.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  InexactError: Int64(0.1)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] setindex!\n     @ ./array.jl:903 [inlined]\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpbmdd4lqe.jl:21\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbmdd4lqe.jl:46 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdli"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sumdigits(i) > 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpatn11q6y.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpatn11q6y.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpatn11q6y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatn11q6y.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatn11q6y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpatn11q6y.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpatn11q6y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatn11q6y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatn11q6y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpatn11q6y.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpatn11q6y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatn11q6y.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatn11q6y.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpatn11q6y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpatn11q6y.jl:16\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64\
    \ = 0\n    for i in arr\n        if abs(i) > 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnxahsbr6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpnxahsbr6.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnxahsbr6.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnxahsbr6.jl:26\ntest set: Test Failed at /tmp/tmpnxahsbr6.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxahsbr6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxahsbr6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpnxahsbr6.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxahsbr6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxahsbr6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpnxahsbr6.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxahsbr6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxahsbr6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if sum(map(abs, digits(x))) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgn9yp6bc.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpgn9yp6bc.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgn9yp6bc.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgn9yp6bc.jl:26\ntest set: Test Failed at /tmp/tmpgn9yp6bc.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn9yp6bc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn9yp6bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgn9yp6bc.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn9yp6bc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn9yp6bc.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgn9yp6bc.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn9yp6bc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn9yp6bc.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        cnt += i != 0\n    end\n    return cnt\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprjv55318.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmprjv55318.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprjv55318.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprjv55318.jl:24\ntest set: Test Failed at /tmp/tmprjv55318.jl:27\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjv55318.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjv55318.jl:24\ntest set: Test\
    \ Failed at /tmp/tmprjv55318.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjv55318.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjv55318.jl:24\ntest set: Test\
    \ Failed at /tmp/tmprjv55318.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjv55318.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjv55318.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for elt in arr\n        if elt > 0\n            if sum(digits(elt)) > 0\n\
    \                count += 1\n            end\n        else\n            if sum(digits(-elt))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsjawl116.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpsjawl116.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsjawl116.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsjawl116.jl:32\ntest set: Test Failed at /tmp/tmpsjawl116.jl:35\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjawl116.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjawl116.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsjawl116.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjawl116.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjawl116.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsjawl116.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjawl116.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjawl116.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = -i\n        end\n       \
    \ sum = 0\n        while i > 0\n            sum += i % 10\n            i = i //\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpdb3haypo.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpdb3haypo.jl:36\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpdb3haypo.jl:21\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdb3haypo.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdb3haypo.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpdb3haypo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpdb3haypo.jl:21\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdb3haypo.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdb3haypo.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpdb3haypo.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n  count = 0\n  for\
    \ i in arr\n    if i > 0\n      i = i\n    else\n      i = i*-1\n    end\n   \
    \ digit_sum = 0\n    while i != 0\n      digit_sum += i % 10\n      i = i \xF7\
    \ 10\n    end\n    if digit_sum > 0\n      count += 1\n    end\n  end\n  return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcquqrq7t.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpcquqrq7t.jl:38\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcquqrq7t.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcquqrq7t.jl:36\ntest set: Test Failed at /tmp/tmpcquqrq7t.jl:39\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcquqrq7t.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcquqrq7t.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpcquqrq7t.jl:40\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcquqrq7t.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcquqrq7t.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpcquqrq7t.jl:41\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcquqrq7t.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcquqrq7t.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003959
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i = 1:length(arr)\n        count += sum(digits(abs(arr[i])))\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5_vnq524.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp5_vnq524.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5_vnq524.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5_vnq524.jl:24\ntest set: Test Failed at /tmp/tmp5_vnq524.jl:27\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_vnq524.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_vnq524.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp5_vnq524.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_vnq524.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_vnq524.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp5_vnq524.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_vnq524.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_vnq524.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp5_vnq524.jl:30\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macr"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for num in arr\n        if num >= 0\n            sum_of_num = sum(digits(num))\n\
    \        else\n            sum_of_num = sum(digits(-num))\n        end\n     \
    \   if sum_of_num > 0\n            counter += 1\n        end\n    end\n    return\
    \ counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0r0sn65q.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp0r0sn65q.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0r0sn65q.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0r0sn65q.jl:31\ntest set: Test Failed at /tmp/tmp0r0sn65q.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0r0sn65q.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0r0sn65q.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0r0sn65q.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0r0sn65q.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0r0sn65q.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0r0sn65q.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0r0sn65q.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0r0sn65q.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_hvnphy6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_hvnphy6.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test Failed at /tmp/tmp_hvnphy6.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_hvnphy6.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_hvnphy6.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i<0\n            s = collect(string(i))\n      \
    \      s[1] = 0\n            sum = 0\n            for n in s\n               \
    \ sum += parse(Int64, n)\n            end\n            if sum > 0\n          \
    \      count += 1\n            end\n        else\n            s = collect(string(i))\n\
    \            sum = 0\n            for n in s\n                sum += parse(Int64,\
    \ n)\n            end\n            if sum > 0\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpg1slvvqa.jl:41

    '
  stdout: "test set: Error During Test at /tmp/tmpg1slvvqa.jl:45\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  ArgumentError: invalid digit: '\\\
    0'\n  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpg1slvvqa.jl:21\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg1slvvqa.jl:45 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg1slvvqa.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpg1slvvqa.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  ArgumentError: invalid digit: '\\\
    0'\n  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpg1slvvqa.jl:21\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg1slvvqa.jl:46 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg1slvvqa.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpg1slvvqa.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  ArgumentError: invalid digit: '\\\
    0'\n  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpg1slvvqa.jl:21\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg1slvvqa.jl:47 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ ["
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(map(x -> Int64(x)-48, collect(digits(i)))) > 0\n            cnt += 1\n \
    \       end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3_mg3bnx.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp3_mg3bnx.jl:32\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3_mg3bnx.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3_mg3bnx.jl:29\ntest set: Test Failed at /tmp/tmp3_mg3bnx.jl:33\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 0 == 5\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_mg3bnx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_mg3bnx.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3_mg3bnx.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_mg3bnx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_mg3bnx.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3_mg3bnx.jl:35\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3_mg3bnx.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3_mg3bnx.jl:29\ntest set: Test Failed at /tmp/tmp3_mg3bnx.jl:36\n\
    \  Expression: candidate([0, 1]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    count = 0\n    for i = 1:n\n        if sum(digits(arr[i])) > 0\n        \
    \    count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmparfy9xmv.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmparfy9xmv.jl:33\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmparfy9xmv.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmparfy9xmv.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        x = i\n        t = 0\n        while x != 0\n            t\
    \ += x % 10\n            x = trunc(Int64, x / 10)\n        end\n        if t >\
    \ 0\n            n += 1\n        end\n    end\n    return n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy92yza6p.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpy92yza6p.jl:38\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy92yza6p.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy92yza6p.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for e in arr\n        if e < 0\n            s = abs(e)\n        else\n  \
    \          s = e\n        end\n        digitsum = 0\n        while s > 0\n   \
    \         digitsum += s % 10\n            s = s \xF7 10\n        end\n       \
    \ if digitsum > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq8lc8js5.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpq8lc8js5.jl:38\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq8lc8js5.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq8lc8js5.jl:36\ntest set: Test Failed at /tmp/tmpq8lc8js5.jl:39\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8lc8js5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8lc8js5.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpq8lc8js5.jl:40\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8lc8js5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8lc8js5.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpq8lc8js5.jl:41\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8lc8js5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8lc8js5.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 0
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ctr = 0\n  \
    \  for n in arr\n        sum_digits = 0\n        if n < 0\n            sum_digits\
    \ += n % 10\n            n = -n\n        end\n        while n > 0\n          \
    \  sum_digits += n % 10\n            n = div(n, 10)\n        end\n        if sum_digits\
    \ > 0\n            ctr += 1\n        end\n    end\n    return ctr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sdig = signed_digits(i)\n        if sum(sdig) > 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpg6johlj4.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpg6johlj4.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpg6johlj4.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6johlj4.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6johlj4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg6johlj4.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpg6johlj4.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6johlj4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6johlj4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg6johlj4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpg6johlj4.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6johlj4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6johlj4.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpg6johlj4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpg6johlj4.jl:16\n\
    \   [2] macro expans"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for i in arr\n        numsum = 0\n        if i < 0\n            i = abs(i)\n\
    \            numsum = numsum + i % 10\n            i = i / 10\n        end\n \
    \       numsum = numsum + (i % 10)\n        i = i / 10\n        while i > 0\n\
    \            numsum = numsum + (i % 10)\n            i = i / 10\n        end\n\
    \        if numsum > 0\n            counter = counter + 1\n        end\n    end\n\
    \    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8yli55tq.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp8yli55tq.jl:40\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8yli55tq.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8yli55tq.jl:38\ntest set: Test Failed at /tmp/tmp8yli55tq.jl:41\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yli55tq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yli55tq.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp8yli55tq.jl:42\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yli55tq.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yli55tq.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp8yli55tq.jl:43\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yli55tq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yli55tq.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64\
    \ = 0\n    for i = 1:length(arr)\n        sum = 0\n        if (arr[i] >= 0)\n\
    \            for j = 1:length(string(arr[i]))\n                sum += parse(Int64,\
    \ string(arr[i])[j])\n            end\n        else\n            for j = 2:length(string(arr[i]))\n\
    \                sum += parse(Int64, string(arr[i])[j])\n            end\n   \
    \     end\n        if (sum > 0)\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2d94zrmq.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp2d94zrmq.jl:38\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2d94zrmq.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2d94zrmq.jl:36\ntest set: Test Failed at /tmp/tmp2d94zrmq.jl:39\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d94zrmq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d94zrmq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp2d94zrmq.jl:40\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d94zrmq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d94zrmq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp2d94zrmq.jl:41\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d94zrmq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d94zrmq.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    res = 0\n  \
    \  for i = 1:length(arr)\n        res += sum(map(Int64, digits(abs(arr[i]))))\
    \ > 0 ? 1 : 0\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppge3jrm6.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmppge3jrm6.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppge3jrm6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppge3jrm6.jl:24\ntest set: Test Failed at /tmp/tmppge3jrm6.jl:27\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppge3jrm6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppge3jrm6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmppge3jrm6.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppge3jrm6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppge3jrm6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmppge3jrm6.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppge3jrm6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppge3jrm6.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0 \n\
    \    for i in arr \n        temp = 0 \n        if i < 0 \n            i = -i \n\
    \        end \n        while i != 0 \n            temp += i % 10 \n          \
    \  i = i / 10 \n        end \n        if temp > 0 \n            count += 1 \n\
    \        end \n    end \n    return count \nend \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp89a9rqbm.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp89a9rqbm.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp89a9rqbm.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp89a9rqbm.jl:34\ntest set: Test Failed at /tmp/tmp89a9rqbm.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89a9rqbm.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89a9rqbm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp89a9rqbm.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89a9rqbm.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89a9rqbm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp89a9rqbm.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89a9rqbm.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89a9rqbm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"\n   \
    \ count the number of elements in arr which has a sum of digits > 0\n    if a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    \"\"\"\n    count = 0\n    for i =\
    \ 1:length(arr)\n        if sum(digits(arr[i])) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa142y6a8.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpa142y6a8.jl:37\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa142y6a8.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa142y6a8.jl:31\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(filter(num\
    \ -> sum(abs.(digits(num))) != 0, arr))\nend;\n@testset \"test count_nums\" begin\n\
    \    @test count_nums([]) == 0\n    @test count_nums([-1, 11, -11]) == 1\n   \
    \ @test count_nums([1, 1, 2]) == 3\nend;\n \n \n\"\"\"\n    Write a function which\
    \ takes a vector of numbers as input and returns\n    a vector which only consists\
    \ of numbers which have unique digits.\n    For example, [111, 12, 212, 3] should\
    \ become [12, 3].\n    >>> unique_digits([1, 2, 3])\n    [1, 2, 3]\n    >>> unique_digits([111,\
    \ 12, 212, 3])\n    [12, 3]\n    >>> unique_digits([2, 2, 3, 2, 5, 2, 6, 2, 5,\
    \ 2, 1, 2, 5, 2, 5, 2, 5, 2, 8, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,\
    \ 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,\
    \ 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,\
    \ 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,\
    \ 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,\
    \ 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmp3kolipdz.jl:16

    in expression starting at /tmp/tmp3kolipdz.jl:16

    '
  stdout: ''
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    count\
    \ = 0\n    for num in arr\n        if num < 0\n            num *= -1\n       \
    \ end\n        if sum(digits(num)) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk36kyy2r.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpk36kyy2r.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk36kyy2r.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk36kyy2r.jl:30\ntest set: Test Failed at /tmp/tmpk36kyy2r.jl:33\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk36kyy2r.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk36kyy2r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpk36kyy2r.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk36kyy2r.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk36kyy2r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpk36kyy2r.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk36kyy2r.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk36kyy2r.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i >= 0\n            count += i % 10\n          \
    \  i /= 10\n        else\n            count += abs(i % 10)\n            i /= 10\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcy6e8dul.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpcy6e8dul.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcy6e8dul.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcy6e8dul.jl:30\ntest set: Test Failed at /tmp/tmpcy6e8dul.jl:33\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcy6e8dul.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcy6e8dul.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcy6e8dul.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcy6e8dul.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcy6e8dul.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcy6e8dul.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 18 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcy6e8dul.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcy6e8dul.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcy6e8dul.jl:36\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macr"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n   \
    \     end\n        while i > 0\n            sum += i % 10\n            i = i//10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpp6e2los3.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpp6e2los3.jl:36\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpp6e2los3.jl:21\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpp6e2los3.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp6e2los3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpp6e2los3.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpp6e2los3.jl:21\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpp6e2los3.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp6e2los3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpp6e2los3.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for n in arr\n        if n<0\n            n=n*-1\n        end\n        n_digit_sum\
    \ = sum(digits(n))\n        if n_digit_sum > 0\n            counter += 1\n   \
    \     end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz40cmaqs.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpz40cmaqs.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz40cmaqs.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz40cmaqs.jl:30\ntest set: Test Failed at /tmp/tmpz40cmaqs.jl:33\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz40cmaqs.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz40cmaqs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz40cmaqs.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz40cmaqs.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz40cmaqs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz40cmaqs.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz40cmaqs.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz40cmaqs.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003962
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if arr == []\n\
    \        return 0\n    end\n    counter = 0\n    for num in arr\n        if sumdigits(num)\
    \ > 0\n            counter += 1\n        end\n    end\n    return counter\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpc_rewetp.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpc_rewetp.jl:31\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpc_rewetp.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_rewetp.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_rewetp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpc_rewetp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpc_rewetp.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_rewetp.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_rewetp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpc_rewetp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpc_rewetp.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_rewetp.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_rewetp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpc_rewetp.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpc_rewetp.jl:19\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    # your code here\n    return count\nend\n@testset \"Simple tests\" begin\n\
    \    @test count_nums([]) == 0\n    @test count_nums([-1, 11, -11]) == 1\n   \
    \ @test count_nums([1, 1, 2]) == 3\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmp9aijp6qr.jl:18

    in expression starting at /tmp/tmp9aijp6qr.jl:18

    '
  stdout: ''
  timestamp: 1660003961
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        num = i\n        if num < 0\n            num = -num\n\
    \        end\n        sum = 0\n        while num > 0\n            sum += num %\
    \ 10\n            num = num \xF7 10\n        end\n        if sum > 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxfcsjrfh.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpxfcsjrfh.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxfcsjrfh.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxfcsjrfh.jl:35\ntest set: Test Failed at /tmp/tmpxfcsjrfh.jl:38\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfcsjrfh.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfcsjrfh.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxfcsjrfh.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfcsjrfh.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfcsjrfh.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxfcsjrfh.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfcsjrfh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfcsjrfh.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n=0\n    for\
    \ x in arr\n        sum=0\n        if x<0\n            x=x*-1\n        end\n \
    \       while x>0\n            sum+=x%10\n            x=floor(x/10)\n        end\n\
    \        if sum>0\n            n+=1\n        end\n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqtdji6qa.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpqtdji6qa.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqtdji6qa.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqtdji6qa.jl:34\ntest set: Test Failed at /tmp/tmpqtdji6qa.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtdji6qa.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtdji6qa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqtdji6qa.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtdji6qa.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtdji6qa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqtdji6qa.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtdji6qa.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtdji6qa.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003964
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i = 1:length(arr)\n        if arr[i] > 0\n            sum = 0\n     \
    \       for j = 1:length(string(arr[i]))\n                sum += parse(Int64,\
    \ string(arr[i])[j])\n            end\n            if sum > 0\n              \
    \  count += 1\n            end\n        else\n            sum = 0\n          \
    \  for j = 2:length(string(arr[i]))\n                sum += parse(Int64, string(arr[i])[j])\n\
    \            end\n            if sum > 0\n                count += 1\n       \
    \     end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps2n9x79k.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmps2n9x79k.jl:42\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps2n9x79k.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps2n9x79k.jl:40\ntest set: Test Failed at /tmp/tmps2n9x79k.jl:43\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2n9x79k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2n9x79k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmps2n9x79k.jl:44\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2n9x79k.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2n9x79k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmps2n9x79k.jl:45\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2n9x79k.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2n9x79k.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_hvnphy6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_hvnphy6.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test Failed at /tmp/tmp_hvnphy6.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_hvnphy6.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_hvnphy6.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hvnphy6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hvnphy6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003960
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for item in arr\n        if item < 0\n            item = item * -1\n    \
    \    end\n        if sum_digits(item) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmppyf4acya.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmppyf4acya.jl:31\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmppyf4acya.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf4acya.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf4acya.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppyf4acya.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmppyf4acya.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf4acya.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf4acya.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppyf4acya.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmppyf4acya.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf4acya.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf4acya.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppyf4acya.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmppyf4acya.jl:19\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum(abs.(arr))\
    \ > 0 ? length(arr) : 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphg0kzga8.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmphg0kzga8.jl:22\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphg0kzga8.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphg0kzga8.jl:20\ntest set: Test Failed at /tmp/tmphg0kzga8.jl:23\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg0kzga8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg0kzga8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphg0kzga8.jl:24\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg0kzga8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg0kzga8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphg0kzga8.jl:25\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg0kzga8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg0kzga8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphg0kzga8.jl:26\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro ex"
  timestamp: 1660003964
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for num in arr\n        num_sum = 0\n        for d in digits(num)\n     \
    \       num_sum += d\n        end\n        if num_sum > 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6kg9a9dw.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp6kg9a9dw.jl:36\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6kg9a9dw.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6kg9a9dw.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003963
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum_digits(i) > 0\n            count += 1\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp209tie5o.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp209tie5o.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    # Initialize\
    \ a counter to store the number of elements where the sum\n    # of digits is\
    \ greater than 0\n    sum_counter = 0\n    \n    # Loop through the array\n  \
    \  for i in 1:length(arr)\n        # Split the number into digits\n        digit_array\
    \ = digits(arr[i])\n        \n        # Check if the number is negative\n    \
    \    if arr[i] < 0\n            # Negate the first digit in the number\n     \
    \       digit_array[1] = -digit_array[1]\n        end\n        \n        # Initialize\
    \ a counter to store the sum of the digits\n        digit_sum = 0\n        \n\
    \        # Loop through the digit array\n        for j in 1:length(digit_array)\n\
    \            # Add the digit to the sum\n            digit_sum += digit_array[j]\n\
    \        end\n        \n        # Check if the sum of the digits is greater than\
    \ 0\n        if digit_sum > 0\n            # Add 1 to the element counter\n  \
    \          sum_counter += 1\n        end\n    end\n    \n    # Return the number\
    \ of elements where the sum of digits is greater than 0\n    return sum_counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgbbxehsw.jl:51

    '
  stdout: "test set: Test Failed at /tmp/tmpgbbxehsw.jl:55\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgbbxehsw.jl:55 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgbbxehsw.jl:53\ntest set: Test Failed at /tmp/tmpgbbxehsw.jl:56\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbbxehsw.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbbxehsw.jl:53\ntest set: Test\
    \ Failed at /tmp/tmpgbbxehsw.jl:57\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbbxehsw.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbbxehsw.jl:53\ntest set: Test\
    \ Failed at /tmp/tmpgbbxehsw.jl:58\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbbxehsw.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbbxehsw.jl:53\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003964
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        if i < 0\n            if sum(digits(-i)) > 0\n      \
    \          cnt += 1\n            end\n        else\n            if sum(digits(i))\
    \ > 0\n                cnt += 1\n            end\n        end\n    end\n    return\
    \ cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp24wwlp5k.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp24wwlp5k.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp24wwlp5k.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp24wwlp5k.jl:32\ntest set: Test Failed at /tmp/tmp24wwlp5k.jl:35\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24wwlp5k.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24wwlp5k.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp24wwlp5k.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24wwlp5k.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24wwlp5k.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp24wwlp5k.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24wwlp5k.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24wwlp5k.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003964
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)\
    \ == 0\n        return 0\n    end\n    if (arr[1] > 0) && (sum(digits(arr[1]))\
    \ > 0)\n        return 1 + count_nums(arr[2:end])\n    elseif (arr[1] < 0) &&\
    \ (sum(digits(-arr[1])) > 0)\n        return 1 + count_nums(arr[2:end])\n    else\n\
    \        return count_nums(arr[2:end])\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7k_eop4d.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp7k_eop4d.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7k_eop4d.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7k_eop4d.jl:29\ntest set: Test Failed at /tmp/tmp7k_eop4d.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7k_eop4d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7k_eop4d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7k_eop4d.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7k_eop4d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7k_eop4d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7k_eop4d.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7k_eop4d.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7k_eop4d.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003964
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # your code\
    \ goes here\nend\n \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmphyq755mc.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmphyq755mc.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphyq755mc.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphyq755mc.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphyq755mc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphyq755mc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphyq755mc.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphyq755mc.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphyq755mc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphyq755mc.jl:24\n  Test thr"
  timestamp: 1660003966
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for num in arr\n        sum_digits = 0\n        while num != 0\n        \
    \    sum_digits += num % 10\n            num = num \xF7 10\n        end\n    \
    \    if sum_digits > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\ncount_nums([])\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching count_nums(::Vector{Any})\n\
    Closest candidates are:\n  count_nums(!Matched::Vector{Int64}) at /tmp/tmpx7k3q8ed.jl:13\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpx7k3q8ed.jl:27\nin expression\
    \ starting at /tmp/tmpx7k3q8ed.jl:27\n"
  stdout: ''
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        abs_i = abs(i)\n        if sum(digits(abs_i)) > 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqur4fl0j.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpqur4fl0j.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqur4fl0j.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqur4fl0j.jl:27\ntest set: Test Failed at /tmp/tmpqur4fl0j.jl:30\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqur4fl0j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqur4fl0j.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpqur4fl0j.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqur4fl0j.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqur4fl0j.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpqur4fl0j.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqur4fl0j.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqur4fl0j.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i in 1:length(arr)\n        if arr[i] < 0\n            j = 1\n        \
    \    while arr[i] < -10\n                arr[i] = arr[i] / 10\n              \
    \  j += 1\n            end\n            sum += j + abs(arr[i])\n        elseif\
    \ arr[i] > 0\n            j = 1\n            while arr[i] > 10\n             \
    \   arr[i] = arr[i] / 10\n                j += 1\n            end\n          \
    \  sum += j + abs(arr[i])\n        end\n    end\n    sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmprc_3hyxv.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmprc_3hyxv.jl:40\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 5 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprc_3hyxv.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprc_3hyxv.jl:38\ntest set: Test Failed at /tmp/tmprc_3hyxv.jl:41\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 25 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprc_3hyxv.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprc_3hyxv.jl:38\ntest set: Test\
    \ Failed at /tmp/tmprc_3hyxv.jl:42\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 34 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprc_3hyxv.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprc_3hyxv.jl:38\ntest set: Error\
    \ During Test at /tmp/tmprc_3hyxv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  InexactError: Int64(9.8)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] setindex!\n     @ ./array.jl:903 [inlined]\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmprc_3hyxv.jl:26\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprc_3hyxv.jl:43 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counts = 0\n\
    \    for i in arr\n        if i > 0 \n            s = sum(digits(i))\n       \
    \     if s > 0\n                counts += 1\n            end\n        else\n \
    \           s = sum(digits(-i))\n            if s > 0\n                counts\
    \ += 1\n            end\n        end\n    end\n    return counts\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl8i2nyhx.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpl8i2nyhx.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl8i2nyhx.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl8i2nyhx.jl:34\ntest set: Test Failed at /tmp/tmpl8i2nyhx.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i2nyhx.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i2nyhx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl8i2nyhx.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i2nyhx.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i2nyhx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl8i2nyhx.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i2nyhx.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i2nyhx.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num_with_sum_gt_0\
    \ = 0\n    for i in arr\n        first_sign = ifelse(i < 0, -1, 1)\n        rem\
    \ = abs(i)\n        sum_digits = 0\n        while rem > 0\n            sum_digits\
    \ += rem % 10\n            rem = div(rem, 10)\n        end\n        if first_sign\
    \ * sum_digits > 0\n            num_with_sum_gt_0 += 1\n        end\n    end\n\
    \    return num_with_sum_gt_0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy6a29dup.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpy6a29dup.jl:39\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy6a29dup.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy6a29dup.jl:33\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = -i\n        end\n       \
    \ num_string = string(i)\n        sum = 0\n        for j in num_string\n     \
    \       sum += parse(Int64,j)\n        end\n        if sum > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu79xxz83.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpu79xxz83.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu79xxz83.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu79xxz83.jl:34\ntest set: Test Failed at /tmp/tmpu79xxz83.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu79xxz83.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu79xxz83.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu79xxz83.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu79xxz83.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu79xxz83.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu79xxz83.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu79xxz83.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu79xxz83.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x < 0\n            x = -x\n        end\n       \
    \ sum = 0\n        while x > 0\n            sum += x % 10\n            x = x \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzc75knah.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpzc75knah.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzc75knah.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzc75knah.jl:34\ntest set: Test Failed at /tmp/tmpzc75knah.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc75knah.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc75knah.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzc75knah.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc75knah.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc75knah.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzc75knah.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc75knah.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc75knah.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0 \n\
    \    for i in arr \n        if abs(i) < 10 \n            total += 1 \n       \
    \ else \n            temp = 0 \n            while abs(i) > 0 \n              \
    \  temp += i % 10 \n                i = trunc(Int64, i / 10)\n            end\
    \ \n            if temp > 0 \n                total += 1 \n            end \n\
    \        end \n    end \n    return total \nend \n \n \n \n\"\"\"\n    Write a\
    \ function count_nums2 which takes a vector of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums2([])\n    0\n    >>> count_nums2([-1, 11, -11])\n\
    \    1\n    >>> count_nums2([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpflvlpsag.jl:34\nin expression starting at /tmp/tmpflvlpsag.jl:34\n"
  stdout: ''
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        sum = 0\n        for j in digits(i)\n            sum\
    \ += j\n        end\n        if sum > 0\n            cnt += 1\n        end\n \
    \   end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0uof7h9e.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp0uof7h9e.jl:36\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0uof7h9e.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0uof7h9e.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n    \n    \n\"\"\"\n    Write a\
    \ function arr_min which takes a vector of integers arr and returns\n    a tuple\
    \ (min_index, min_value) where min_index is the index of the smallest\n    element\
    \ of arr and min_value is the smallest element of arr. If arr is empty,\n    then\
    \ return (-1, 0).\n    >>> arr_min([1, 2, 3])\n    (1, 1)\n    >>> arr_min([1,\
    \ 0, 3])\n    (2, 0)\n    >>> arr_min([])\n    (-1, 0)\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpiq76x86g.jl:24\nin expression starting at /tmp/tmpiq76x86g.jl:24\n"
  stdout: ''
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if x > 0\n            if sum(digits(x)) > 0\n     \
    \           count += 1\n            end\n        else\n            if sum(digits(-x))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq8xagd8n.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpq8xagd8n.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq8xagd8n.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq8xagd8n.jl:32\ntest set: Test Failed at /tmp/tmpq8xagd8n.jl:35\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8xagd8n.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8xagd8n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpq8xagd8n.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8xagd8n.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8xagd8n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpq8xagd8n.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8xagd8n.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8xagd8n.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003966
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n  \
    \  for x in arr\n        if x < 0\n            x = x * -1\n        end\n     \
    \   if x >= 10\n            num += 1\n        end\n    end\n    return num\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn31hz121.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpn31hz121.jl:32\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpn31hz121.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpn31hz121.jl:29\ntest set: Test Failed at /tmp/tmpn31hz121.jl:33\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 0 == 5\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31hz121.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31hz121.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn31hz121.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31hz121.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31hz121.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn31hz121.jl:36\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31hz121.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31hz121.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn31hz121.jl:37\n  Expression: candidate([1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31hz1"
  timestamp: 1660003966
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if (x < 0) && (sum(map(abs, digits(x))) > 0)\n    \
    \        count += 1\n        elseif sum(digits(x)) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3jplk9cx.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp3jplk9cx.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3jplk9cx.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3jplk9cx.jl:28\ntest set: Test Failed at /tmp/tmp3jplk9cx.jl:31\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jplk9cx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jplk9cx.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3jplk9cx.jl:32\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jplk9cx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jplk9cx.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3jplk9cx.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jplk9cx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jplk9cx.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003966
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i > 0 \n            count += count_digits(i)\n \
    \       else\n            count += count_digits(-i)\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpybmllj4_.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpybmllj4_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: count_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpybmllj4_.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpybmllj4_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpybmllj4_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpybmllj4_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpybmllj4_.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpybmllj4_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpybmllj4_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpybmllj4_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpybmllj4_.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpybmllj4_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpybmllj4_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpybmllj4_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpybmllj4_.jl:17\n\
    \   [2] macro expansion\n"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            count += abs(i%10)\n        else\n\
    \            while i > 0\n                count += i%10\n                i = i//10\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpey896ezp.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpey896ezp.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpey896ezp.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpey896ezp.jl:31\ntest set: Error During Test\
    \ at /tmp/tmpey896ezp.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000 * 10 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpey896ezp.jl:20\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpey896ezp.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpey896ezp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpey896ezp.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpey896ezp.jl:20\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpey896ezp.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scop"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for num in arr\n        if num < 0\n            num = -num\n        end\n\
    \        sum_digits = 0\n        while num != 0\n            digit = num % 10\n\
    \            sum_digits += digit\n            num = (num - digit) / 10\n     \
    \   end\n        if sum_digits > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxfk36fza.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpxfk36fza.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxfk36fza.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxfk36fza.jl:35\ntest set: Test Failed at /tmp/tmpxfk36fza.jl:38\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfk36fza.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfk36fza.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxfk36fza.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfk36fza.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfk36fza.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpxfk36fza.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfk36fza.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfk36fza.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003966
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    res = 0\n  \
    \  for i in arr\n        a = abs(i)\n        while a > 0\n            res += a\
    \ % 10\n            a = div(a, 10)\n        end\n    end\n    res\nend\ncount_nums([1,\
    \ 1, 2])\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgw_77oc0.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpgw_77oc0.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgw_77oc0.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgw_77oc0.jl:29\ntest set: Test Failed at /tmp/tmpgw_77oc0.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgw_77oc0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgw_77oc0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw_77oc0.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgw_77oc0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgw_77oc0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw_77oc0.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgw_77oc0.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgw_77oc0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw_77oc0.jl:35\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macr"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = 0\n \
    \   for x in arr\n        if x < 0\n            if (x % 10) + (x % 100) > 0\n\
    \                nums += 1\n            end\n        else\n            if (x %\
    \ 10) + (x % 100) > 0\n                nums += 1\n            end\n        end\n\
    \    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ov0r74w.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp0ov0r74w.jl:37\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0ov0r74w.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0ov0r74w.jl:32\ntest set: Test Failed at /tmp/tmp0ov0r74w.jl:38\n\
    \  Expression: candidate([12, 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ov0r74w.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ov0r74w.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n  count = 0\n  for\
    \ i in arr\n    num_sum = 0\n    if i == 0\n      continue\n    end\n    if i\
    \ < 0\n      i = -i\n    end\n    while i > 0\n      num_sum += i % 10\n     \
    \ i = i \xF7 10\n    end\n    if num_sum > 0\n      count += 1\n    end\n  end\n\
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8jryj5e6.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmp8jryj5e6.jl:39\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8jryj5e6.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8jryj5e6.jl:37\ntest set: Test Failed at /tmp/tmp8jryj5e6.jl:40\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jryj5e6.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jryj5e6.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp8jryj5e6.jl:41\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jryj5e6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jryj5e6.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp8jryj5e6.jl:42\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8jryj5e6.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8jryj5e6.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = length(arr)\n\
    \    counter = 0\n    for i in 1:nums\n        num = arr[i]\n        if (num >\
    \ 0) & (sum(digits(num)) != 0)\n            counter += 1\n        elseif (num\
    \ < 0) & (sum(digits(-num)) != 0)\n            counter += 1\n        end\n   \
    \ end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5qh53426.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp5qh53426.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5qh53426.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5qh53426.jl:30\ntest set: Test Failed at /tmp/tmp5qh53426.jl:33\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qh53426.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qh53426.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5qh53426.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qh53426.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qh53426.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5qh53426.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qh53426.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qh53426.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for n in arr\n        if n < 0\n            sum_digits = 0 - n % 10\n   \
    \         n = -n\n            while n > 0\n                n = n / 10\n      \
    \          sum_digits += n % 10\n            end\n        else \n            sum_digits\
    \ = n % 10\n            while n > 0\n                n = n / 10\n            \
    \    sum_digits += n % 10\n            end\n        end\n        if sum_digits\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbanpd5qe.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpbanpd5qe.jl:42\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbanpd5qe.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbanpd5qe.jl:40\ntest set: Test Failed at /tmp/tmpbanpd5qe.jl:43\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbanpd5qe.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbanpd5qe.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbanpd5qe.jl:44\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbanpd5qe.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbanpd5qe.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbanpd5qe.jl:45\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbanpd5qe.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbanpd5qe.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003967
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ctr = 0\n  \
    \  for x in arr\n        if digitsum(x) > 0\n            ctr += 1\n        end\n\
    \    end\n    return ctr\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpn30x53ft.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpn30x53ft.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn30x53ft.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn30x53ft.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn30x53ft.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpn30x53ft.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn30x53ft.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn30x53ft.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn30x53ft.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpn30x53ft.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn30x53ft.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn30x53ft.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn30x53ft.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpn30x53ft.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn30x53ft.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = -i\n        end\n       \
    \ digits = digits_of_num(i)\n        sum_digits = 0\n        for j in digits\n\
    \            sum_digits += j\n        end\n        if sum_digits > 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnu5rf7qy.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpnu5rf7qy.jl:36\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits_of_num not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnu5rf7qy.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnu5rf7qy.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnu5rf7qy.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnu5rf7qy.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits_of_num not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnu5rf7qy.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnu5rf7qy.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnu5rf7qy.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnu5rf7qy.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits_of_num not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnu5rf7qy.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnu5rf7qy.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnu5rf7qy.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnu5rf7qy.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits_of_num not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnu5rf7qy.jl:19\n\
    \   [2] macro expans"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n_num::Int64\
    \ = 0\n    for i in arr\n        if (sumdigits(i)>0)\n            n_num += 1\n\
    \        end\n    end\n    return n_num\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpwhyo1vum.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpwhyo1vum.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwhyo1vum.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwhyo1vum.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwhyo1vum.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwhyo1vum.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwhyo1vum.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwhyo1vum.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwhyo1vum.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwhyo1vum.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwhyo1vum.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwhyo1vum.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwhyo1vum.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwhyo1vum.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwhyo1vum.jl:16\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = i * -1\n\
    \        end\n        while i != 0\n            sum += i % 10\n            i =\
    \ i / 10\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa4di20yi.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpa4di20yi.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa4di20yi.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa4di20yi.jl:34\ntest set: Test Failed at /tmp/tmpa4di20yi.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4di20yi.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4di20yi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpa4di20yi.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4di20yi.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4di20yi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpa4di20yi.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4di20yi.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4di20yi.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    count\
    \ = 0\n    total = 0\n    \n    for i in arr\n        if i < 0\n            i\
    \ = i*-1\n        end\n        \n        while i > 0\n            total += i%10\n\
    \            i = i/10\n        end\n        \n        if total > 0\n         \
    \   count += 1\n        end\n        \n        total = 0\n    end\n    \n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmurf8ggd.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpmurf8ggd.jl:43\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmurf8ggd.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmurf8ggd.jl:41\ntest set: Test Failed at /tmp/tmpmurf8ggd.jl:44\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmurf8ggd.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmurf8ggd.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpmurf8ggd.jl:45\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmurf8ggd.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmurf8ggd.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpmurf8ggd.jl:46\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmurf8ggd.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmurf8ggd.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)\
    \ == 0\n        return 0\n    end\n    if arr[1] >= 0\n        return count_nums(arr[2:end])\
    \ + (Int64(arr[1]/10) + arr[1]%10) > 0\n    else\n        return count_nums(arr[2:end])\
    \ + (Int64(-arr[1]/10) + (-arr[1])%10) > 0\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpm3liukmr.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpm3liukmr.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  InexactError: Int64(0.2)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] count_nums(arr::Vector{Int64})\
    \ (repeats 2 times)\n     @ Main /tmp/tmpm3liukmr.jl:20\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpm3liukmr.jl:29 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm3liukmr.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpm3liukmr.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  InexactError: Int64(0.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] count_nums(arr::Vector{Int64})\
    \ (repeats 3 times)\n     @ Main /tmp/tmpm3liukmr.jl:18\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpm3liukmr.jl:20\n   [4] count_nums(arr::Vector{Int64}) (repeats\
    \ 3 times)\n     @ Main /tmp/tmpm3liukmr.jl:18\n   [5] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmpm3liukmr.jl:30 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpm3liukmr.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpm3liukmr.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  InexactError: Int64(0.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] count_nums(arr::Vector{Int64})\
    \ (repeats 3 times)\n     @ Main /tmp/tmpm3liukmr.jl:18\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpm3liukmr.jl:20\n   [4] count_nums(arr::Vector{Int64}) (repeats\
    \ 3 times)\n     @ Main /tmp/tmpm3liukmr.jl:18\n   [5] macro expansion\n     @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/t"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(map(abs,\
    \ x -> sum(digits(x)), arr))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp1ryegj06.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1ryegj06.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: no method matching\
    \ length(::var\"#1#2\")\n  Closest candidates are:\n    length(!Matched::Union{Base.KeySet,\
    \ Base.ValueIterator}) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:58\n\
    \    length(!Matched::Union{LinearAlgebra.Adjoint{T, S}, LinearAlgebra.Transpose{T,\
    \ S}} where {T, S}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.Iterators.Stateful) at ~/.conda/envs/polyglot/share/julia/base/iterators.jl:1338\n\
    \    ...\n  Stacktrace:\n    [1] _zip_min_length(is::Tuple{var\"#1#2\", Vector{Int64}})\n\
    \      @ Base.Iterators ./iterators.jl:316\n    [2] length(z::Base.Iterators.Zip{Tuple{var\"\
    #1#2\", Vector{Int64}}})\n      @ Base.Iterators ./iterators.jl:306\n    [3] length(g::Base.Generator{Base.Iterators.Zip{Tuple{var\"\
    #1#2\", Vector{Int64}}}, Base.var\"#4#5\"{typeof(abs)}})\n      @ Base ./generator.jl:50\n\
    \    [4] _similar_shape(itr::Base.Generator{Base.Iterators.Zip{Tuple{var\"#1#2\"\
    , Vector{Int64}}}, Base.var\"#4#5\"{typeof(abs)}}, #unused#::Base.HasLength)\n\
    \      @ Base ./array.jl:600\n    [5] collect(itr::Base.Generator{Base.Iterators.Zip{Tuple{var\"\
    #1#2\", Vector{Int64}}}, Base.var\"#4#5\"{typeof(abs)}})\n      @ Base ./array.jl:723\n\
    \    [6] map(::Function, ::Function, ::Vector{Int64})\n      @ Base ./abstractarray.jl:2966\n\
    \    [7] count_nums(arr::Vector{Int64})\n      @ Main /tmp/tmp1ryegj06.jl:14\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp1ryegj06.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp1ryegj06.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1ryegj06.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: no method matching length(::var\"\
    #1#2\")\n  Closest candidates are:\n    length("
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0\n\
    \    for num in arr\n        # if num >= 0\n        #     total += num % 10\n\
    \        # else\n        #     total += abs(num % 10)\n        # end\n       \
    \ total += abs(num % 10) + abs(num % 100 - num % 10) + abs(num % 1000 - num %\
    \ 100)\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmxthbqad.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpmxthbqad.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmxthbqad.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmxthbqad.jl:29\ntest set: Test Failed at /tmp/tmpmxthbqad.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmxthbqad.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmxthbqad.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmxthbqad.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmxthbqad.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmxthbqad.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmxthbqad.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 208 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmxthbqad.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmxthbqad.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmxthbqad.jl:35\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 170 == 5\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for el in arr\n        if sum(digits(el)) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpedbmw_rg.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpedbmw_rg.jl:32\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpedbmw_rg.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpedbmw_rg.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n   \
    \     end\n        while i > 0\n            sum += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpscx8lw2j.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpscx8lw2j.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test Failed at /tmp/tmpscx8lw2j.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        while i != 0\n            sum += abs(i\
    \ % 10)\n            i /= 10\n        end\n        if sum > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphm_oomzt.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmphm_oomzt.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphm_oomzt.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphm_oomzt.jl:31\ntest set: Test Failed at /tmp/tmphm_oomzt.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphm_oomzt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphm_oomzt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphm_oomzt.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphm_oomzt.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphm_oomzt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphm_oomzt.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphm_oomzt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphm_oomzt.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    # initialising\
    \ counter\n    count::Int64 = 0\n    \n    # looping through input array and taking\
    \ the signed digits and summing them\n    for i in arr\n        if sum(digits(abs(i)))\
    \ > 0\n            count += 1\n        end\n    end\n    \n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpajf_eljj.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpajf_eljj.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpajf_eljj.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpajf_eljj.jl:31\ntest set: Test Failed at /tmp/tmpajf_eljj.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajf_eljj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajf_eljj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpajf_eljj.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajf_eljj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajf_eljj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpajf_eljj.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpajf_eljj.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpajf_eljj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # YOUR CODE\
    \ HERE\n    count = 0\n    for i in arr\n        if i == 0\n            count\
    \ = count + 1\n        elseif i > 0\n            count = count + i > 9 ? 1 : 2\n\
    \        else\n            count = count + (-i > 9 ? 1 : 2)\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp45xgio9p.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp45xgio9p.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 5 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp45xgio9p.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp45xgio9p.jl:31\ntest set: Test Failed at /tmp/tmp45xgio9p.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 2 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45xgio9p.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45xgio9p.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp45xgio9p.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45xgio9p.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45xgio9p.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp45xgio9p.jl:37\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp45xgio9p.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp45xgio9p.jl:31\ntest set: Test Failed at /tmp/tmp45xgio9p.jl:38\n\
    \  Expression: candidate([0, 1]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    r = 0\n    if\
    \ (length(arr) == 0) \n        return r\n    end\n    for n in arr\n        dsum\
    \ = 0\n        if (n < 0)\n            dsum = dsum + abs(n % 10)\n           \
    \ n = abs(n)\n        end\n        while (n > 0)\n            dsum = dsum + n\
    \ % 10\n            n = div(n, 10)\n        end\n        if (dsum > 0)\n     \
    \       r = r + 1\n        end\n    end\n    return r\nend\n\"\"\"\n    Write\
    \ a function count_pairs which takes a vector of integers and returns\n    the\
    \ number of unordered pairs in the vector which sum up to a multiple of\n    10.\n\
    \    >>> count_pairs([])\n    0\n    >>> count_pairs([1, 11, 11])\n    1\n   \
    \ >>> count_pairs([1, 1, 20])\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpvs2w9obh.jl:34\nin expression starting at /tmp/tmpvs2w9obh.jl:34\n"
  stdout: ''
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for num in arr\n        if num >= 0\n            digits = digits(num)\n \
    \       else\n            digits = digits(-num)\n        end\n        if sum(digits)\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpw7oi65fz.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpw7oi65fz.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpw7oi65fz.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7oi65fz.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7oi65fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpw7oi65fz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpw7oi65fz.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7oi65fz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7oi65fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpw7oi65fz.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpw7oi65fz.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7oi65fz.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7oi65fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpw7oi65fz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpw7oi65fz.jl:0\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglo"
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if abs(i) < 10\n            if i < 0\n            \
    \    if -i > 0\n                    count += 1\n                end\n        \
    \    else\n                if i > 0\n                    count += 1\n        \
    \        end\n            end\n        elseif abs(i) >= 10\n            sum =\
    \ 0\n            for i in digits(abs(i))\n                sum += i\n         \
    \   end\n            if sum > 0\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuzw9w641.jl:42

    '
  stdout: "test set: Test Failed at /tmp/tmpuzw9w641.jl:46\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuzw9w641.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuzw9w641.jl:44\ntest set: Test Failed at /tmp/tmpuzw9w641.jl:47\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzw9w641.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzw9w641.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpuzw9w641.jl:48\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzw9w641.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzw9w641.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpuzw9w641.jl:49\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzw9w641.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzw9w641.jl:44\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    x = 0\n    for\
    \ i in arr\n        x += 1\n        if i < 0\n            i = -i\n        end\n\
    \        digitsum = 0\n        while i > 0\n            digitsum += i % 10\n \
    \           i = i \xF7 10\n        end\n        if digitsum == 0\n           \
    \ x -= 1\n        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgwyl_ugw.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpgwyl_ugw.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgwyl_ugw.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgwyl_ugw.jl:35\ntest set: Test Failed at /tmp/tmpgwyl_ugw.jl:38\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwyl_ugw.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwyl_ugw.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpgwyl_ugw.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwyl_ugw.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwyl_ugw.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpgwyl_ugw.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwyl_ugw.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwyl_ugw.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(find(abs.(arr)\
    \ .>= 10 & abs.(arr) .< 100))\nend\n@testset \"count_nums_test\" begin\n    @test\
    \ count_nums([]) == 0\n    @test count_nums([-1, 11, -11]) == 1\n    @test count_nums([1,\
    \ 1, 2]) == 3\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmp41raglby.jl:16

    in expression starting at /tmp/tmp41raglby.jl:16

    '
  stdout: ''
  timestamp: 1660003968
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    (sum(abs.(arr))\
    \ > 0) ? length(arr) : 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3es_wsqi.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp3es_wsqi.jl:22\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3es_wsqi.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3es_wsqi.jl:20\ntest set: Test Failed at /tmp/tmp3es_wsqi.jl:23\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3es_wsqi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3es_wsqi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3es_wsqi.jl:24\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3es_wsqi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3es_wsqi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3es_wsqi.jl:25\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3es_wsqi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3es_wsqi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3es_wsqi.jl:26\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro ex"
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    r\"\"\"\n  \
    \  A vector of integers is passed in, and the number of elements which has a sum\
    \ of digits > 0 is returned.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ -Return:\n        [sum_of_digits_in_element]\n    -Parameters:\n        [arr]\
    \ -- A vector of integers is passed in.\n    -Examples:\n        count_nums([])\
    \ === 0\n        count_nums([-1, 11, -11]) === 1\n        count_nums([1, 1, 2])\
    \ === 3\n    \"\"\"\n    sum_of_digits_in_element = 0\n    for element in arr\n\
    \        if element > 0\n            element_as_a_string = string(element)\n \
    \           array_of_digits = split(element_as_a_string, \"\")\n            local_sum_of_digits_in_element\
    \ = 0\n            for digit in array_of_digits\n                local_sum_of_digits_in_element\
    \ += parse(Int64, digit)\n            end\n            if local_sum_of_digits_in_element\
    \ > 0\n                sum_of_digits_in_element += 1\n            end\n      \
    \  elseif element < 0\n            local_sum_of_digits_in_element = element\n\
    \            if local_sum_of_digits_in_element < 0\n                sum_of_digits_in_element\
    \ += 1\n            end\n        end\n    end\n    return sum_of_digits_in_element\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: PCRE compilation error: range out of order in character\
    \ class at offset 372\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n\
    \  [2] compile(pattern::String, options::UInt32)\n    @ Base.PCRE ./pcre.jl:155\n\
    \  [3] compile(regex::Regex)\n    @ Base ./regex.jl:82\n  [4] Regex(pattern::String,\
    \ compile_options::UInt32, match_options::UInt32)\n    @ Base ./regex.jl:47\n\
    \  [5] Regex(pattern::String)\n    @ Base ./regex.jl:70\n  [6] var\"@r_str\"(__source__::LineNumberNode,\
    \ __module__::Module, pattern::Any, flags::Vararg{Any})\n    @ Base ./regex.jl:119\n\
    \  [7] #macroexpand#51\n    @ ./expr.jl:115 [inlined]\n  [8] macroexpand\n   \
    \ @ ./expr.jl:114 [inlined]\n  [9] docm(source::LineNumberNode, mod::Module, meta::Any,\
    \ ex::Any, define::Bool) (repeats 2 times)\n    @ Base.Docs ./docs/Docs.jl:537\n\
    \ [10] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n    @\
    \ Core ./boot.jl:517\nin expression starting at /tmp/tmpe_vm5fsi.jl:1\nin expression\
    \ starting at /tmp/tmpe_vm5fsi.jl:1\n"
  stdout: ''
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = 0\n \
    \   for num in arr\n        if num < 0\n            num = -num\n        end\n\
    \        while num > 0\n            nums += num % 10\n            num = num /\
    \ 10\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpm6ly5efu.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpm6ly5efu.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  InexactError: Int64(3.3333333333333335)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n     @\
    \ Main /tmp/tmpm6ly5efu.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm6ly5efu.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm6ly5efu.jl:30\ntest set:\
    \ Test Failed at /tmp/tmpm6ly5efu.jl:33\n  Expression: candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n   Evaluated: 20 == 6\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm6ly5efu.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm6ly5efu.jl:30\ntest set: Error During Test\
    \ at /tmp/tmpm6ly5efu.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  InexactError: Int64(31.11111111111111)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm6ly5efu.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm6ly5efu.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm6ly5efu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpm6ly5efu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  InexactError: Int64(31.111111111111114)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] con"
  timestamp: 1660003972
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    count = 0\n    for i = 1:n\n        x = abs(arr[i])\n        while x > 0\n\
    \            count += x % 10\n            x = floor(x / 10)\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9sxkxyyb.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp9sxkxyyb.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9sxkxyyb.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9sxkxyyb.jl:29\ntest set: Test Failed at /tmp/tmp9sxkxyyb.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sxkxyyb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sxkxyyb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9sxkxyyb.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sxkxyyb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sxkxyyb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9sxkxyyb.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sxkxyyb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sxkxyyb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9sxkxyyb.jl:35\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macr"
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    len = length(arr)\n\
    \    count = 0\n    for i in 1:len\n        x = arr[i]\n        sm = 0\n     \
    \   if x < 0\n            while x < 0\n                sm += x % 10\n        \
    \        x = x/10\n            end\n        else\n            while x > 0\n  \
    \              sm += x % 10\n                x = x/10\n            end\n     \
    \   end\n        if sm > 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpscs_qne5.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmpscs_qne5.jl:46\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpscs_qne5.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpscs_qne5.jl:40\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        val = 0\n        if i < 0\n            val += -i %\
    \ 10\n            i = -(i//10)\n        end\n        while i > 0\n           \
    \ val += i % 10\n            i = i//10\n        end\n        if val > 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nprintln(count_nums([1,\
    \ 1, 2]))\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: OverflowError: 1000000000000000000 * 10 overflowed for\
    \ type Int64\nStacktrace:\n [1] throw_overflowerr_binaryop(op::Symbol, x::Int64,\
    \ y::Int64)\n   @ Base.Checked ./checked.jl:154\n [2] checked_mul\n   @ ./checked.jl:288\
    \ [inlined]\n [3] rem\n   @ ./rational.jl:312 [inlined]\n [4] count_nums(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmptdukbxj1.jl:22\n [5] top-level scope\n   @ /tmp/tmptdukbxj1.jl:31\n\
    in expression starting at /tmp/tmptdukbxj1.jl:31\n"
  stdout: ''
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        sum = 0\n        if i < 0\n            i = -i\n        end\n\
    \        while i > 0\n            sum += i % 10\n            i = div(i, 10)\n\
    \        end\n        if sum > 0\n            n += 1\n        end\n    end\n \
    \   return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpumiztm.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpkpumiztm.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkpumiztm.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkpumiztm.jl:34\ntest set: Test Failed at /tmp/tmpkpumiztm.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpumiztm.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpumiztm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkpumiztm.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpumiztm.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpumiztm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkpumiztm.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpumiztm.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpumiztm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        sum = 0\n        y = x\n        while y != 0\n    \
    \        sum += abs(y % 10)\n            y = y \xF7 10\n        end\n        if\
    \ sum > 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkiqh21zb.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpkiqh21zb.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkiqh21zb.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkiqh21zb.jl:32\ntest set: Test Failed at /tmp/tmpkiqh21zb.jl:35\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiqh21zb.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiqh21zb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpkiqh21zb.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiqh21zb.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiqh21zb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpkiqh21zb.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiqh21zb.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiqh21zb.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    i = 1\n    count = 0\n    while i <= n\n        cur = arr[i]\n        sum\
    \ = 0\n        if cur < 0\n            cur = -cur\n        end\n        while\
    \ cur > 0\n            sum += cur % 10\n            cur = floor(cur / 10)\n  \
    \      end\n        if sum > 0\n            count += 1\n        end\n        i\
    \ += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa91dmplm.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpa91dmplm.jl:40\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa91dmplm.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa91dmplm.jl:38\ntest set: Test Failed at /tmp/tmpa91dmplm.jl:41\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa91dmplm.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa91dmplm.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpa91dmplm.jl:42\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa91dmplm.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa91dmplm.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpa91dmplm.jl:43\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa91dmplm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa91dmplm.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            sum += -i %\
    \ 10\n            i /= -10\n        end\n        while i > 0\n            sum\
    \ += i % 10\n            i /= 10\n        end\n        if sum > 0\n          \
    \  counter += 1\n        end\n    end\n    return counter\nend\n\"\"\"\n    Write\
    \ a function count_nums which takes a vector of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
    \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpch_q8m2m.jl:31\nin expression starting at /tmp/tmpch_q8m2m.jl:31\n"
  stdout: ''
  timestamp: 1660003970
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for e in arr\n        if sum(e) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp045j_mx3.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp045j_mx3.jl:32\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp045j_mx3.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp045j_mx3.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n   \
    \     end\n        while i > 0\n            sum += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpscx8lw2j.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpscx8lw2j.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test Failed at /tmp/tmpscx8lw2j.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0 \n \
    \   for i in arr \n        if i < 0 \n            if -i < 10\n               \
    \ if -i > 0\n                    cnt += 1\n                end\n            else\n\
    \                while -i > 0\n                    if -i < 10\n              \
    \          if -i > 0\n                            cnt += 1\n                 \
    \       end\n                        break\n                    end\n        \
    \            -i = div(-i, 10)\n                end\n            end\n        else\n\
    \            if i < 10\n                if i > 0\n                    cnt += 1\n\
    \                end\n            else\n                while i > 0\n        \
    \            if i < 10\n                        if i > 0\n                   \
    \         cnt += 1\n                        end\n                        break\n\
    \                    end\n                    i = div(i, 10)\n               \
    \ end\n            end\n        end\n    end\n    return cnt\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpvpgsmho8.jl:54

    '
  stdout: "test set: Test Failed at /tmp/tmpvpgsmho8.jl:58\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvpgsmho8.jl:58 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvpgsmho8.jl:56\ntest set: Test Failed at /tmp/tmpvpgsmho8.jl:59\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvpgsmho8.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvpgsmho8.jl:56\ntest set: Test\
    \ Failed at /tmp/tmpvpgsmho8.jl:60\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvpgsmho8.jl:60 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvpgsmho8.jl:56\ntest set: Test\
    \ Failed at /tmp/tmpvpgsmho8.jl:61\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvpgsmho8.jl:61 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvpgsmho8.jl:56\ntest set: Error\
    \ During Test at /tmp/tmpvpgsmho8.jl:62\n  Test threw exception\n  Expression:\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n  UndefVarError: - not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvpgsmho8.jl:23\n\
    \   "
  timestamp: 1660003973
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i = 1:length(arr)\n        if sum_digits(arr[i]) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgjvntxq8.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpgjvntxq8.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgjvntxq8.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjvntxq8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjvntxq8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgjvntxq8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgjvntxq8.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjvntxq8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjvntxq8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgjvntxq8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgjvntxq8.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjvntxq8.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjvntxq8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgjvntxq8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgjvntxq8.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003972
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        sum = 0\n        if x >= 0\n            while x !=\
    \ 0\n                sum += x % 10\n                x = x \xF7 10\n          \
    \  end\n        else\n            while x != 0\n                sum += x % 10\n\
    \                x = x \xF7 10\n            end\n        end\n        if sum >\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9_oec0l_.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp9_oec0l_.jl:44\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9_oec0l_.jl:44 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9_oec0l_.jl:38\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n  \
    \  for i = 1:length(arr)\n        num += (arr[i] < 0 ? -arr[i] : arr[i])\n   \
    \ end\n    return num\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpecuvpa9g.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpecuvpa9g.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpecuvpa9g.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpecuvpa9g.jl:24\ntest set: Test Failed at /tmp/tmpecuvpa9g.jl:27\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpecuvpa9g.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpecuvpa9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpecuvpa9g.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpecuvpa9g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpecuvpa9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpecuvpa9g.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 208 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpecuvpa9g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpecuvpa9g.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpecuvpa9g.jl:30\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 170 == 5\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum_digits =\
    \ x -> reduce(+, digits(x))\n    count = 0\n    for i in arr\n        if sum_digits(i)\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpspwkwffy.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpspwkwffy.jl:33\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpspwkwffy.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpspwkwffy.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy1w0cuhs.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpy1w0cuhs.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy1w0cuhs.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy1w0cuhs.jl:27\ntest set: Test Failed at /tmp/tmpy1w0cuhs.jl:30\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1w0cuhs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1w0cuhs.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpy1w0cuhs.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1w0cuhs.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1w0cuhs.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpy1w0cuhs.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1w0cuhs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1w0cuhs.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003971
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            sum += i % 10\n            i = i % 10\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        digit_sum = 0\n        for y in digits(x)\n       \
    \     digit_sum += y\n        end\n        if digit_sum > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_cpuwei0.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp_cpuwei0.jl:36\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_cpuwei0.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_cpuwei0.jl:30\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003972
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ a in arr\n        if sum_digits(a) > 0\n            n += 1\n        end\n  \
    \  end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpidxhi4lx.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpidxhi4lx.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpidxhi4lx.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpidxhi4lx.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpidxhi4lx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpidxhi4lx.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpidxhi4lx.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpidxhi4lx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpidxhi4lx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpidxhi4lx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpidxhi4lx.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpidxhi4lx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpidxhi4lx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpidxhi4lx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpidxhi4lx.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003973
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \nend\n    \
    \    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: 'ERROR: '
  stdout: "test set: Error During Test at /tmp/tmpilfy666x.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpilfy666x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpilfy666x.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpilfy666x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpilfy666x.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpilfy666x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpilfy666x.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpilfy666x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpilfy666x.jl:24\n  Test thr"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        if i == 0\n            continue\n        end\n      \
    \  s_digits = digits(abs(i))\n        if sum(s_digits) > 0\n            cnt +=\
    \ 1\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeue6klf4.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpeue6klf4.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeue6klf4.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeue6klf4.jl:30\ntest set: Test Failed at /tmp/tmpeue6klf4.jl:33\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeue6klf4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeue6klf4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeue6klf4.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeue6klf4.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeue6klf4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeue6klf4.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeue6klf4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeue6klf4.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003973
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n  i::Int64 = 0\n\
    \  count::Int64 = 0\n  while i <= length(arr)\n    if signed_sum(arr[i]) > 0\n\
    \      count += 1\n    end\n    i += 1\n  end\n  return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp7e2pqvgv.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp7e2pqvgv.jl:29\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  BoundsError: attempt to access\
    \ 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp7e2pqvgv.jl:17\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7e2pqvgv.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7e2pqvgv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp7e2pqvgv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7e2pqvgv.jl:17\n \
    \  [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7e2pqvgv.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7e2pqvgv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp7e2pqvgv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7e2pqvgv.jl:17\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7e2pqvgv.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7e2pqvgv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp7e2pqvgv.jl:32\n  Test"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum_digits(i) > 0\n            count += 1\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp209tie5o.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp209tie5o.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            n += 1\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpais_7ibe.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpais_7ibe.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpais_7ibe.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpais_7ibe.jl:26\ntest set: Test Failed at /tmp/tmpais_7ibe.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpais_7ibe.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpais_7ibe.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpais_7ibe.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpais_7ibe.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpais_7ibe.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpais_7ibe.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpais_7ibe.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpais_7ibe.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003973
- exit_code: 0
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n  \
    \  for i in arr\n        if abs(i) >= 10\n            sum = 0\n            for\
    \ j in digits(abs(i))\n                sum += j\n            end\n           \
    \ if sum > 0\n                num += 1\n            end\n        else\n      \
    \      if i > 0\n                num += 1\n            end\n        end\n    end\n\
    \    return num\nend\n \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1660003971
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum_digits(i) > 0\n            count += 1\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp209tie5o.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp209tie5o.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp209tie5o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp209tie5o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp209tie5o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp209tie5o.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003965
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = -i\n        end\n       \
    \ if sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3gkwfu5j.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp3gkwfu5j.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3gkwfu5j.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3gkwfu5j.jl:29\ntest set: Test Failed at /tmp/tmp3gkwfu5j.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gkwfu5j.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gkwfu5j.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3gkwfu5j.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gkwfu5j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gkwfu5j.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3gkwfu5j.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gkwfu5j.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gkwfu5j.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003973
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        cnt += sum(digits(abs(i))) > 0 ? 1 : 0\n    end\n   \
    \ return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnb86pe1k.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpnb86pe1k.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnb86pe1k.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpnb86pe1k.jl:24\ntest set: Test Failed at /tmp/tmpnb86pe1k.jl:27\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb86pe1k.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb86pe1k.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnb86pe1k.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb86pe1k.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb86pe1k.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnb86pe1k.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb86pe1k.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb86pe1k.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003973
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(digit_sum.(abs.(arr))\
    \ .> 0)\nend\n\"\"\"\n    Write a function which takes a vector of integers, and\
    \ returns the number\n    of elements whose sum of digits is not equal to 1.\n\
    \    >>> count_sum(1)\n    0\n    >>> count_sum(12)\n    1\n    >>> count_sum(11)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpx__azkzt.jl:16\nin expression starting at /tmp/tmpx__azkzt.jl:16\n"
  stdout: ''
  timestamp: 1660003972
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum_digits(i) > 0\n            count += 1\n    \
    \    end\n    end\n    return count\nend\n\"\"\"\n    Write a function sum_digits\
    \ which takes a single integer and returns\n    the sum of the digits of the integer.\n\
    \    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> sum_digits(0)\n    0\n\
    \    >>> sum_digits(-1)\n    -1\n    >>> sum_digits(11)\n    2\n    >>> sum_digits(-11)\n\
    \    -2\n    >>> sum_digits(123)\n    6\n    >>> sum_digits(-123)\n    -6\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpy7oba2ry.jl:22\nin expression starting at /tmp/tmpy7oba2ry.jl:22\n"
  stdout: ''
  timestamp: 1660003972
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-with-c-fortran-1\n\
    \    # will have to be a C function \n    # \n    a = zeros(length(arr))\n   \
    \ for i in 1:length(arr)\n        a[i] = sum(digits(abs(arr[i])))\n    end\n \
    \   n = 0\n    for i in 1:length(a)\n        if a[i] > 0\n            n += 1\n\
    \        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpguo2hmzz.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpguo2hmzz.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpguo2hmzz.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpguo2hmzz.jl:33\ntest set: Test Failed at /tmp/tmpguo2hmzz.jl:36\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguo2hmzz.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguo2hmzz.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpguo2hmzz.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguo2hmzz.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguo2hmzz.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpguo2hmzz.jl:38\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpguo2hmzz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpguo2hmzz.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        cnt += if abs(i) < 10 ? 1 : abs(i) // 10 + abs(i) % 10\
    \ > 0 ? 1 : 0 end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmptsf9hker.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmptsf9hker.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmptsf9hker.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptsf9hker.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptsf9hker.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptsf9hker.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmptsf9hker.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptsf9hker.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptsf9hker.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptsf9hker.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmptsf9hker.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptsf9hker.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptsf9hker.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptsf9hker.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64}"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    count\
    \ = 0\n    if length(arr) > 0\n        for i in arr\n            sum = 0\n   \
    \         if i > 0\n                while i > 0\n                    sum += i\
    \ % 10\n                    i = i // 10\n                end\n            else\n\
    \                while i < 0\n                    sum += i % 10\n            \
    \        i = i // 10\n                end\n            end\n            if sum\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8a6erd1u.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmp8a6erd1u.jl:43\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8a6erd1u.jl:26\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8a6erd1u.jl:43 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8a6erd1u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8a6erd1u.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8a6erd1u.jl:21\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8a6erd1u.jl:44 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8a6erd1u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8a6erd1u.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for i in arr\n        if sum(digits(abs(i))) > 0\n            cnt += 1\n  \
    \      end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph54u7tbl.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmph54u7tbl.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph54u7tbl.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph54u7tbl.jl:26\ntest set: Test Failed at /tmp/tmph54u7tbl.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph54u7tbl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph54u7tbl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph54u7tbl.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph54u7tbl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph54u7tbl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph54u7tbl.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph54u7tbl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph54u7tbl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ x in arr\n        a = x\n        s = 0\n        while a != 0\n            s\
    \ += a % 10\n            a = div(a, 10)\n        end\n        if s > 0\n     \
    \       n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp086jzdj5.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp086jzdj5.jl:38\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp086jzdj5.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp086jzdj5.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if abs(i) >= 10\n            abs(i) = string(abs(i))\n\
    \            count += sum(int(digit) for digit in abs(i))\n        else \n   \
    \         count += abs(i)\n        end\n    end\n    return count\nend\n    \n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp3ywypa4s.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp3ywypa4s.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: abs not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ywypa4s.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ywypa4s.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ywypa4s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3ywypa4s.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: abs not defined\n \
    \ Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ywypa4s.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ywypa4s.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ywypa4s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3ywypa4s.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: abs not defined\n \
    \ Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ywypa4s.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ywypa4s.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ywypa4s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3ywypa4s.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: abs not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ywypa4s.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            digits = length(digits(abs(i)))\
    \ + 1\n        else \n            digits = length(digits(i))\n        end\n  \
    \      if sum(digits(i)) > 0\n            count += 1\n        end\n    end\n \
    \   return count\nend\n\"\"\"\n    Find the index of the first non-zero element\
    \ of an array.\n    If the array contains only zeros, return -1.\n    >>> first_nonzero([0,0,0,0,0])\n\
    \    -1\n    >>> first_nonzero([1,2,3,4,5])\n    1\n    >>> first_nonzero([0,1,2,3,4,5])\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp8sg7vdj5.jl:27\nin expression starting at /tmp/tmp8sg7vdj5.jl:27\n"
  stdout: ''
  timestamp: 1660003973
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if sum(abs.(digits(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzcs40dc1.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpzcs40dc1.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzcs40dc1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzcs40dc1.jl:26\ntest set: Test Failed at /tmp/tmpzcs40dc1.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzcs40dc1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzcs40dc1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzcs40dc1.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzcs40dc1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzcs40dc1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzcs40dc1.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzcs40dc1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzcs40dc1.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = -i\n        end\n       \
    \ if i < 10\n            count += 1\n        else\n            s = 0\n       \
    \     while i > 0\n                s += i % 10\n                i = i \xF7 10\n\
    \            end\n            if s > 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz2bau6s1.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpz2bau6s1.jl:40\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz2bau6s1.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz2bau6s1.jl:38\ntest set: Test Failed at /tmp/tmpz2bau6s1.jl:41\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz2bau6s1.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz2bau6s1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpz2bau6s1.jl:42\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz2bau6s1.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz2bau6s1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpz2bau6s1.jl:43\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz2bau6s1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz2bau6s1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpz2bau6s1.jl:44\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro ex"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n  \
    \  for i in arr\n        if (i < 0)\n            if (i % 10 > 0)\n           \
    \     sum += 1\n            end\n        else\n            if (i % 10 > 0)\n \
    \               sum += 1\n            end\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmbct6wm8.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpmbct6wm8.jl:37\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmbct6wm8.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmbct6wm8.jl:32\ntest set: Test Failed at /tmp/tmpmbct6wm8.jl:38\n\
    \  Expression: candidate([12, 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbct6wm8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbct6wm8.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1660003974
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0\n\
    \    for x in arr\n        if get_digit_sum(x) > 0\n            total += 1\n \
    \       end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpq2ieqbrd.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpq2ieqbrd.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: get_digit_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpq2ieqbrd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq2ieqbrd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq2ieqbrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpq2ieqbrd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: get_digit_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpq2ieqbrd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq2ieqbrd.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq2ieqbrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpq2ieqbrd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: get_digit_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpq2ieqbrd.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq2ieqbrd.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq2ieqbrd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpq2ieqbrd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: get_digit_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpq2ieqbrd.jl:16\n\
    \   [2] macro expans"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  for elem in arr\n        #print(elem)\n        if sumdigits(elem) > 0\n   \
    \         cnt += 1\n        end\n    end\n    return cnt\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0vvshiii.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp0vvshiii.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp0vvshiii.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0vvshiii.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0vvshiii.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0vvshiii.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp0vvshiii.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0vvshiii.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0vvshiii.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0vvshiii.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp0vvshiii.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0vvshiii.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0vvshiii.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0vvshiii.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp0vvshiii.jl:17\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    arr = map(abs,\
    \ arr)\n    sum_num = map(sum, map(digits, arr))\n    t = sum_num .> 0\n    count\
    \ = 0\n    for i in t\n        if i == true\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8x8vjerp.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp8x8vjerp.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x8vjerp.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x8vjerp.jl:29\ntest set: Test Failed at /tmp/tmp8x8vjerp.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x8vjerp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x8vjerp.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8x8vjerp.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x8vjerp.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x8vjerp.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8x8vjerp.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x8vjerp.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x8vjerp.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for element in arr\n        if sum(digits(element)) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0xnfypbp.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp0xnfypbp.jl:33\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0xnfypbp.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0xnfypbp.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    7     1      8\n"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ctr = 0\n  \
    \  for item in arr\n        ctr += sum_digits(item) > 0 ? 1 : 0\n    end\n   \
    \ return ctr\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp5x843e1b.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp5x843e1b.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp5x843e1b.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5x843e1b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5x843e1b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5x843e1b.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp5x843e1b.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5x843e1b.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5x843e1b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5x843e1b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp5x843e1b.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5x843e1b.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5x843e1b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5x843e1b.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp5x843e1b.jl:16\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64\
    \ = 0\n    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n\
    \        end\n        while i > 0\n            sum += i % 10\n            i =\
    \ div(i, 10)\n        end\n        if sum > 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprdedn3qz.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmprdedn3qz.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprdedn3qz.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprdedn3qz.jl:35\ntest set: Test Failed at /tmp/tmprdedn3qz.jl:38\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdedn3qz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdedn3qz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprdedn3qz.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdedn3qz.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdedn3qz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprdedn3qz.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdedn3qz.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdedn3qz.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    result = 0 \n\
    \    for i in arr \n        if i >= 0 \n            num_digits = floor(log10(i))\
    \ + 1\n        else \n            num_digits = floor(log10(-i)) + 1\n        end\n\
    \        sum_digits = 0\n        while num_digits > 0 \n            sum_digits\
    \ += i % 10\n            i = i / 10\n            num_digits -= 1\n        end\n\
    \        if sum_digits > 0 \n            result += 1\n        end\n    end\n \
    \   return result\nend\nprintln(count_nums([-1, 11, -11]))\n\"\"\"\n    Write\
    \ a function which takes a vector of integers, and returns a vector of\n    vectors.\
    \ The first vector consists of all elements in the input which have\n    a sum\
    \ of digits > 0, and the second vector consists of all elements\n    which have\
    \ a sum of digits == 0.\n    >>> by_sum_digits([-1, -123, 0, 1, 123, -33])\n \
    \   ([1, 123], [-1, -123, 0, -33])\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp_pgubfnj.jl:34\nin expression starting at /tmp/tmp_pgubfnj.jl:34\n"
  stdout: '1

    '
  timestamp: 1660003975
- exit_code: -1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        x = i\n        sum = 0\n        while x != 0\n    \
    \        sum += x % 10\n            x = floor(x / 10)\n        end\n        if\
    \ sum > 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003978
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i > 0\n            while i != 0\n\
    \                sum += i % 10\n                i = i - i % 10\n             \
    \   i = i / 10\n            end\n        else\n            i = -i\n          \
    \  while i != 0\n                sum += i % 10\n                i = i - i % 10\n\
    \                i = i / 10\n            end\n        end\n        if sum > 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n# b)\n\"\
    \"\"\n    Write a function count_nums_comp which does the same thing as count_nums,\n\
    \    but with a comprehension.\n    >>> count_nums_comp([])\n    0\n    >>> count_nums_comp([-1,\
    \ 11, -11])\n    1\n    >>> count_nums_comp([1, 1, 2])\n    3\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp32b7zx5k.jl:38\nin expression starting at /tmp/tmp32b7zx5k.jl:38\n"
  stdout: ''
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum, count =\
    \ 0, 0\n    for i in arr\n        if i < 0 \n            i = -i\n        end\n\
    \        sum = sum_digits(i)\n        if sum > 0\n            count += 1\n   \
    \     end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvh9o_m9e.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpvh9o_m9e.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvh9o_m9e.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh9o_m9e.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh9o_m9e.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvh9o_m9e.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvh9o_m9e.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh9o_m9e.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh9o_m9e.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvh9o_m9e.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvh9o_m9e.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvh9o_m9e.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvh9o_m9e.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvh9o_m9e.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvh9o_m9e.jl:19\n\
    \   [2] macro expansion\n     @ ~"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        s = sum(digits(abs(i)))\n        if s > 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9yutjsfe.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp9yutjsfe.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9yutjsfe.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9yutjsfe.jl:27\ntest set: Test Failed at /tmp/tmp9yutjsfe.jl:30\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yutjsfe.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yutjsfe.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9yutjsfe.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yutjsfe.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yutjsfe.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9yutjsfe.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yutjsfe.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yutjsfe.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(findall(x\
    \ -> sum(digits(x)) > 0, arr))\nend;\n@testset \"count_nums\" begin\n    @test\
    \ count_nums([]) == 0\n    @test count_nums([-1, 11, -11]) == 1\n    @test count_nums([1,\
    \ 1, 2]) == 3\nend;\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmp366fehfx.jl:16

    in expression starting at /tmp/tmp366fehfx.jl:16

    '
  stdout: ''
  timestamp: 1660003975
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)==0\n\
    \        return 0\n    end\n    if sum(abs.(sign.(arr)))>0\n        return length(arr)\n\
    \    end\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa0ftnssb.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpa0ftnssb.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa0ftnssb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa0ftnssb.jl:26\ntest set: Test Failed at /tmp/tmpa0ftnssb.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0ftnssb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0ftnssb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa0ftnssb.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0ftnssb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0ftnssb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa0ftnssb.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0ftnssb.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0ftnssb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa0ftnssb.jl:32\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro ex"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n  s = 0\n  for i\
    \ = 1:length(arr)\n    if (arr[i] < 0)\n      arr[i] = -arr[i]\n    end\n    while\
    \ (arr[i] != 0)\n      s += arr[i] % 10\n      arr[i] = arr[i] / 10\n    end\n\
    \  end\n  s\nend\ncount_nums([-1, 11, -11])\ncount_nums([1, 1, 2])\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: InexactError: Int64(0.1)\nStacktrace:\n [1] Int64\n \
    \  @ ./float.jl:812 [inlined]\n [2] convert\n   @ ./number.jl:7 [inlined]\n [3]\
    \ setindex!\n   @ ./array.jl:903 [inlined]\n [4] count_nums(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmppjd2q2m1.jl:21\n [5] top-level scope\n   @ /tmp/tmppjd2q2m1.jl:26\n\
    in expression starting at /tmp/tmppjd2q2m1.jl:26\n"
  stdout: ''
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n   \
    \     end\n        while i > 0\n            sum += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpscx8lw2j.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpscx8lw2j.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test Failed at /tmp/tmpscx8lw2j.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscx8lw2j.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscx8lw2j.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscx8lw2j.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003969
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # TODO: your\
    \ code here\n    count = 0\n    for i in arr\n        if i >= 0\n            if\
    \ sum(digits(i)) > 0\n                count += 1\n            end\n        else\n\
    \            if sum(digits(-i)) > 0\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_pxzpkps.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp_pxzpkps.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_pxzpkps.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_pxzpkps.jl:33\ntest set: Test Failed at /tmp/tmp_pxzpkps.jl:36\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pxzpkps.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pxzpkps.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp_pxzpkps.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pxzpkps.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pxzpkps.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp_pxzpkps.jl:38\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pxzpkps.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pxzpkps.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003976
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n  \
    \  if length(arr) == 0\n        return cnt\n    end\n    for x in arr\n      \
    \  if x < 0\n            x = -x\n        end\n        cnt += 1\n        while\
    \ x > 0\n            cnt -= x % 10 == 0\n            x = div(x, 10)\n        end\n\
    \    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvxodajs0.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpvxodajs0.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvxodajs0.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvxodajs0.jl:34\ntest set: Test Failed at /tmp/tmpvxodajs0.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvxodajs0.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvxodajs0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvxodajs0.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvxodajs0.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvxodajs0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvxodajs0.jl:40\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvxodajs0.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvxodajs0.jl:34\ntest set: Test Failed at /tmp/tmpvxodajs0.jl:41\n\
    \  Expression: candidate([0, 1]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        if sum(digits(abs(x))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8sp28lct.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp8sp28lct.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8sp28lct.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8sp28lct.jl:26\ntest set: Test Failed at /tmp/tmp8sp28lct.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sp28lct.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sp28lct.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8sp28lct.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sp28lct.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sp28lct.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8sp28lct.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sp28lct.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sp28lct.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ x in arr\n        if sum(abs.(digits(x))) > 0\n            s += 1\n        end\n\
    \    end\n    return s\nend\ncount_nums([-1, 11, -11])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzs8g20az.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpzs8g20az.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzs8g20az.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzs8g20az.jl:27\ntest set: Test Failed at /tmp/tmpzs8g20az.jl:30\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs8g20az.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs8g20az.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpzs8g20az.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs8g20az.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs8g20az.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpzs8g20az.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs8g20az.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs8g20az.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for a in arr\n        x = abs(a)\n        sum = 0\n        while x != 0\n\
    \            sum += x % 10\n            x = div(x, 10)\n        end\n        if\
    \ sum > 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgrrjako6.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpgrrjako6.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgrrjako6.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgrrjako6.jl:32\ntest set: Test Failed at /tmp/tmpgrrjako6.jl:35\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrrjako6.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrrjako6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpgrrjako6.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrrjako6.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrrjako6.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpgrrjako6.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrrjako6.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrrjako6.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for x in arr\n        sum_x = 0\n        while x != 0\n            sum_x\
    \ += x % 10\n            x = x//10\n        end\n        if sum_x > 0\n      \
    \      count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpr63qegdf.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpr63qegdf.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpr63qegdf.jl:18\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr63qegdf.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr63qegdf.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpr63qegdf.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpr63qegdf.jl:18\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr63qegdf.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr63qegdf.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpr63qegdf.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  timestamp: 1660003978
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        sum_digits = 0\n        while i != 0\n            sum_digits\
    \ += abs(i % 10)\n            i = div(i, 10)\n        end\n        if sum_digits\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxakqyiq9.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpxakqyiq9.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxakqyiq9.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxakqyiq9.jl:31\ntest set: Test Failed at /tmp/tmpxakqyiq9.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxakqyiq9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxakqyiq9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxakqyiq9.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxakqyiq9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxakqyiq9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxakqyiq9.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxakqyiq9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxakqyiq9.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            abs_i = abs(i)\n            if\
    \ abs_i % 10 > 0\n                count += 1\n            end\n        else\n\
    \            abs_i = i\n            if abs_i % 10 > 0\n                count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp58byiemv.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmp58byiemv.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp58byiemv.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp58byiemv.jl:34\ntest set: Test Failed at /tmp/tmp58byiemv.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58byiemv.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58byiemv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp58byiemv.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58byiemv.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58byiemv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp58byiemv.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58byiemv.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58byiemv.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums::Int64\
    \ = 0\n    for i in 1:length(arr)\n        sum::Int64 = 0\n        if arr[i] <\
    \ 0\n            arr[i] = arr[i] * -1\n        end\n        while (arr[i] != 0)\n\
    \            sum = sum + (arr[i] % 10)\n            arr[i] = trunc(Int64, arr[i]\
    \ / 10)\n        end\n        if sum > 0\n            nums = nums + 1\n      \
    \  end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy7uu1fbz.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpy7uu1fbz.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy7uu1fbz.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy7uu1fbz.jl:34\ntest set: Test Failed at /tmp/tmpy7uu1fbz.jl:37\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7uu1fbz.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7uu1fbz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy7uu1fbz.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7uu1fbz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7uu1fbz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy7uu1fbz.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7uu1fbz.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7uu1fbz.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1660003977
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes a vector of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n \
    \   >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n\
    \    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n\
    \    for i in arr\n        if i < 0\n            i = i*-1\n        end\n     \
    \   digits = digits(i)\n        s = sum(digits)\n        if s > 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmprnbjbcpw.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmprnbjbcpw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmprnbjbcpw.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnbjbcpw.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnbjbcpw.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprnbjbcpw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmprnbjbcpw.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnbjbcpw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnbjbcpw.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprnbjbcpw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmprnbjbcpw.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnbjbcpw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnbjbcpw.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprnbjbcpw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmprnbjbcpw.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/pol"
  timestamp: 1660003978

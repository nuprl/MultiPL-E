language: jl
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # YOUR CODE HERE\n    if a + b > c && a + c > b && b + c > a\n       \
    \ area = (a + b + c) / 2\n        return sqrt(area * (area - a) * (area - b) *\
    \ (area - c))\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr40booh6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpr40booh6.jl:29\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40booh6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40booh6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr40booh6.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40booh6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40booh6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr40booh6.jl:32\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40booh6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40booh6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr40booh6.jl:34\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40booh6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40booh6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) & (a + c > b) & (b + c > a)\n        p = (a + b + c) /\
    \ 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1w7e6pym.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp1w7e6pym.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w7e6pym.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w7e6pym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1w7e6pym.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w7e6pym.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w7e6pym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1w7e6pym.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w7e6pym.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w7e6pym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1w7e6pym.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w7e6pym.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w7e6pym.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # use type annotation and default to 0.0\n    # YOUR CODE HERE\n    if\
    \ a+b>c && a+c>b && b+c>a\n        s=(a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpij3wn9rd.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpij3wn9rd.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpij3wn9rd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpij3wn9rd.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpij3wn9rd.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpij3wn9rd.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpij3wn9rd.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpij3wn9rd.jl:33\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpij3wn9rd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpij3wn9rd.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpij3wn9rd.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpij3wn9rd.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpij3wn9rd.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"Return the area of the triangle when the sides form a valid triangle.\
    \ \n    If not a valid triangle, return -1\"\"\"\n    if (a + b > c) && (a + c\
    \ > b) && (b + c > a)\n        #S = (a + b + c) / 2\n        return sqrt(4 * a\
    \ * b - (a - b)^2) / 4\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4yamzu1o.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp4yamzu1o.jl:28\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 1.713913650100261 == 6.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4yamzu1o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4yamzu1o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4yamzu1o.jl:30\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 2.6457513110645907 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4yamzu1o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4yamzu1o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4yamzu1o.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4yamzu1o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4yamzu1o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4yamzu1o.jl:33\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 3.307189138830738 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4yamzu1o.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4yamzu1o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4yamzu1o.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/j"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # find the semiperimeter\n    s = (a + b + c) / 2\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv_ewr3xz.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv_ewr3xz.jl:1\n\
    in expression starting at /tmp/tmpv_ewr3xz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c and a+c > b and b+c > a\n        return sqrt( (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)\
    \ )/4\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp18gt2_lz.jl:14\nin expression starting at /tmp/tmp18gt2_lz.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sorted([a, b, c])\n    if a + b <= c\n        return -1\n  \
    \  else\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b)\
    \ * (p - c))\n        return round(area, 2)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp63h3k2q0.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp63h3k2q0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp63h3k2q0.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63h3k2q0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63h3k2q0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp63h3k2q0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp63h3k2q0.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63h3k2q0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63h3k2q0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp63h3k2q0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp63h3k2q0.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63h3k2q0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63h3k2q0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp63h3k2q0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp63h3k2q0.jl:14\n\
    \   [2"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if (a+b > c) && (a+c > b) && (b+c > a)\n        return sqrt( (a+b+c)\
    \ * (-a+b+c) * (a-b+c) * (a+b-c) )/4.0\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpew0dnjxk.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpew0dnjxk.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew0dnjxk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew0dnjxk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpew0dnjxk.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew0dnjxk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew0dnjxk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpew0dnjxk.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew0dnjxk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew0dnjxk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpew0dnjxk.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew0dnjxk.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew0dnjxk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    side_lengths = [a, b, c]\n    sorted_lengths = sort(side_lengths)\n  \
    \  if (sorted_lengths[1] + sorted_lengths[2] > sorted_lengths[3])\n        return\
    \ sqrt(\n            (sorted_lengths[2] + sorted_lengths[3] - sorted_lengths[1])*\n\
    \            (sorted_lengths[1] + sorted_lengths[2] - sorted_lengths[3])*\n  \
    \          (sorted_lengths[1] + sorted_lengths[3] - sorted_lengths[2])*\n    \
    \        (sorted_lengths[1] + sorted_lengths[2] + sorted_lengths[3])\n       \
    \ )/4\n    else \n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqfkiukrj.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpqfkiukrj.jl:34\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqfkiukrj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqfkiukrj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqfkiukrj.jl:35\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqfkiukrj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqfkiukrj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqfkiukrj.jl:37\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqfkiukrj.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqfkiukrj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqfkiukrj.jl:39\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqfkiukrj.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqfkiukrj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # YOUR CODE HERE\n    if(a+b>c && a+c>b && b+c>a)\n        return sqrt(a+b+c)*(a+b+c/2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdjz27orv.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpdjz27orv.jl:26\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 32.90896534380867 == 6.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjz27orv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjz27orv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjz27orv.jl:28\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 59.78503157145608 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjz27orv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjz27orv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjz27orv.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 12.24744871391589 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjz27orv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjz27orv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjz27orv.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 86.77269155673345 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjz27orv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjz27orv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjz27orv.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 4.330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b <= c || a + c <= b || b + c <= a\n        return -1\n    else\n\
    \        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6ebgz8u.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo6ebgz8u.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if ((a+b) > c) && ((a+c) > b) && ((b+c) > a)\n        p = (a+b+c)/2\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp84y1yzzu.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp84y1yzzu.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84y1yzzu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84y1yzzu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp84y1yzzu.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84y1yzzu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84y1yzzu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp84y1yzzu.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84y1yzzu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84y1yzzu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp84y1yzzu.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84y1yzzu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84y1yzzu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b<c || a+c<b || b+c<a\n        return -1\n    else\n        s = (a+b+c)/2\n\
    \        return round(sqrt(s*(s-a)*(s-b)*(s-c)),2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpnxbs0dqf.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpnxbs0dqf.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpnxbs0dqf.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnxbs0dqf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnxbs0dqf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnxbs0dqf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpnxbs0dqf.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnxbs0dqf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if a + b > c && a + c > b && b + c > a\n        s = 0.5 * (a + b\
    \ + c)\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return area\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjmpupwn2.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpjmpupwn2.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmpupwn2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmpupwn2.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpjmpupwn2.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmpupwn2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmpupwn2.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpjmpupwn2.jl:33\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmpupwn2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmpupwn2.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpjmpupwn2.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmpupwn2.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmpupwn2.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # Your code here\n    if (a + b > c) && (a + c > b) && (b + c > a)\n \
    \       half_perimeter = (a + b + c) / 2\n        area = sqrt(half_perimeter *\
    \ (half_perimeter - a) * (half_perimeter - b) * (half_perimeter - c))\n      \
    \  return round(area, 2)\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpw_goustc.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpw_goustc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpw_goustc.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw_goustc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw_goustc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpw_goustc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpw_goustc.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw_goustc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n        s = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(s, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return 0.5*a*b\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgrxbjgjq.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpgrxbjgjq.jl:22\n  Expression: candidate(1,\
    \ 2, 10) == -1\n   Evaluated: 1.0 == -1\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrxbjgjq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrxbjgjq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgrxbjgjq.jl:23\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 16.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrxbjgjq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrxbjgjq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgrxbjgjq.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 2.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrxbjgjq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrxbjgjq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgrxbjgjq.jl:25\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 1.0 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrxbjgjq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrxbjgjq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgrxbjgjq.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sort([a, b, c])\n    if a + b <= c\n        return -1\n    else\n\
    \        return (sqrt(s * (s - a) * (s - b) * (s - c)))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpnt0n35a4.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpnt0n35a4.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpnt0n35a4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnt0n35a4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnt0n35a4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnt0n35a4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpnt0n35a4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnt0n35a4.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnt0n35a4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnt0n35a4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpnt0n35a4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnt0n35a4.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnt0n35a4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnt0n35a4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpnt0n35a4.jl:18\n\
    \   [2] macro expansion"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if c + b > a > 0 && c + a > b > 0 && a + b > c > 0\n        s = (a + b\
    \ + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return\
    \ round(area, 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp867c7l5m.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp867c7l5m.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp867c7l5m.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp867c7l5m.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp867c7l5m.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp867c7l5m.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp867c7l5m.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp867c7l5m.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = 0.5*(a+b+c)\n        area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpzev867m7.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpzev867m7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpzev867m7.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzev867m7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzev867m7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpzev867m7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpzev867m7.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzev867m7.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyqko3750.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpyqko3750.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyqko3750.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test Failed at /tmp/tmpyqko3750.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyqko3750.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b <= c) || (a + c <= b) || (b + c <= a)\n        return -1\n \
    \   else\n        s = (a + b + c) / 2.0\n        area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n        return round(area, digits=2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009286
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1.0\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxx8e1f03.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpxx8e1f03.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxx8e1f03.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxx8e1f03.jl:20\ntest set: Test Failed at /tmp/tmpxx8e1f03.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx8e1f03.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx8e1f03.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxx8e1f03.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx8e1f03.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx8e1f03.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxx8e1f03.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxx8e1f03.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxx8e1f03.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxx8e1f03.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if ((a + b) > c) && ((a + c) > b) && ((b + c) > a)\n        p = (a + b\
    \ + c) / 2.0\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfoxm8x5l.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpfoxm8x5l.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfoxm8x5l.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfoxm8x5l.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfoxm8x5l.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfoxm8x5l.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfoxm8x5l.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfoxm8x5l.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfoxm8x5l.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a > 0 && b > 0 && c > 0 && (a + b > c) && (a + c > b) && (b + c > a)\n\
    \        # Use Heron's formula\n        p = (a + b + c) / 2.0\n        area =\
    \ sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area, 2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1nj019q_.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp1nj019q_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp1nj019q_.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1nj019q_.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1nj019q_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1nj019q_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp1nj019q_.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1nj019q_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1nj019q_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    #using (a + b > c) && (a + c > b) && (b + c > a)\n    if a + b > c &&\
    \ a + c > b && b + c > a\n        s = (a + b + c) / 2\n        return sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpisf0k824.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpisf0k824.jl:29\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpisf0k824.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpisf0k824.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpisf0k824.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpisf0k824.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpisf0k824.jl:26\ntest set: Test Failed at /tmp/tmpisf0k824.jl:32\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpisf0k824.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpisf0k824.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpisf0k824.jl:34\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpisf0k824.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpisf0k824.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps4car7j5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmps4car7j5.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test Failed at /tmp/tmps4car7j5.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"\n    DOCSTRING\n    \"\"\"\n    s = (a + b + c) / 2\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9zexpvm2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp9zexpvm2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(1, 2, 10) == -1\n  DomainError with -563.0625:\n  sqrt\
    \ will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp9zexpvm2.jl:18\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9zexpvm2.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9zexpvm2.jl:24\ntest set:\
    \ Test Failed at /tmp/tmp9zexpvm2.jl:27\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9zexpvm2.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9zexpvm2.jl:24\ntest set: Test Failed at /tmp/tmp9zexpvm2.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 1.7320508075688772 ==\
    \ 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9zexpvm2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9zexpvm2.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp9zexpvm2.jl:29\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9zexpvm2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/env"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps4car7j5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmps4car7j5.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test Failed at /tmp/tmps4car7j5.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sorted([a, b, c])\n    if a + b <= c\n        return -1\n  \
    \  else\n        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpwn3k683s.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpwn3k683s.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpwn3k683s.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn3k683s.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn3k683s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwn3k683s.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpwn3k683s.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn3k683s.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn3k683s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwn3k683s.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpwn3k683s.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn3k683s.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn3k683s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwn3k683s.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpwn3k683s.jl:14\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660009289
- exit_code: -1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # Write your code here\n    return\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmp7m88mxhz.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp7m88mxhz.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7m88mxhz.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7m88mxhz.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7m88mxhz.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp7m88mxhz.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7m88mxhz.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7m88mxhz.jl:2"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    #add your code here\nend\n@test triangle_area(3, 4, 5) == 6.0\n@test triangle_area(1,\
    \ 2, 10) == -1\n \nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpn8jq5wmx.jl:16

    in expression starting at /tmp/tmpn8jq5wmx.jl:16

    '
  stdout: ''
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    x = a + b\n    y = b + c\n    z = a + c\n    if (x > c && y > a && z >\
    \ b)\n        s = (a + b + c)/2\n        return sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw4enope5.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpw4enope5.jl:31\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4enope5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4enope5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw4enope5.jl:32\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw4enope5.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw4enope5.jl:28\ntest set: Test Failed at /tmp/tmpw4enope5.jl:34\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4enope5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4enope5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw4enope5.jl:36\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw4enope5.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw4enope5.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a < b + c && b < a + c && c < a + b\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg7utgzaj.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpg7utgzaj.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg7utgzaj.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test Failed at /tmp/tmpg7utgzaj.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg7utgzaj.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    max_side_length = max(a, b, c)\n    max_side_length_index = argmax(a,\
    \ b, c)\n    \n    if max_side_length_index == 1\n        side_sum = b + c\n \
    \   elseif max_side_length_index == 2\n        side_sum = a + c\n    elseif max_side_length_index\
    \ == 3\n        side_sum = a + b\n    end\n    \n    if side_sum > max_side_length\n\
    \        s = 0.5 * (a + b + c)\n        area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n        return round(area, digits=2)\n    else\n        return -1\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpy9897ep1.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpy9897ep1.jl:39\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching argmax(::Int64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    argmax(::Any, ::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:912\n\
    \    argmax(::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:938\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpy9897ep1.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy9897ep1.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy9897ep1.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpy9897ep1.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: no method matching argmax(::Int64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    argmax(::Any, ::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:912\n\
    \    argmax(::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:938\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpy9897ep1.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy9897ep1.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy9897ep1.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpy9897ep1.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching argmax(::Int64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    argmax(::Any, ::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:912\n\
    \    argmax(::Any) at ~/.conda/envs/polyglot/share/julia/base/reduce.jl:938\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main "
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a > 0 && b > 0 && c > 0 && a + b > c && a + c > b && b + c > a\n  \
    \      s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5irt3vvp.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp5irt3vvp.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5irt3vvp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5irt3vvp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5irt3vvp.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5irt3vvp.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5irt3vvp.jl:25\ntest set: Test Failed at /tmp/tmp5irt3vvp.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5irt3vvp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5irt3vvp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5irt3vvp.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5irt3vvp.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5irt3vvp.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: -1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpt4md6cka.jl:21\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpt4md6cka.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt4md6cka.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt4md6cka.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpt4md6cka.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpt4md6cka.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt4md6cka.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt4md6cka.jl:2"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a < b + c && b < a + c && c < a + b\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg7utgzaj.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpg7utgzaj.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg7utgzaj.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test Failed at /tmp/tmpg7utgzaj.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg7utgzaj.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg7utgzaj.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg7utgzaj.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return (p * (p - a) * (p - b) * (p - c)) ^ 0.5\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxvo7hwve.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpxvo7hwve.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvo7hwve.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvo7hwve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxvo7hwve.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxvo7hwve.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxvo7hwve.jl:25\ntest set: Test Failed at /tmp/tmpxvo7hwve.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvo7hwve.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvo7hwve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxvo7hwve.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxvo7hwve.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxvo7hwve.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) && (a+c > b) && (b+c > a)\n        p = (a+b+c)/2.0\n    \
    \    area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009286
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        return (a + b +\
    \ c) / 2\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplnxtjg8a.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmplnxtjg8a.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.5 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplnxtjg8a.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplnxtjg8a.jl:24\ntest set: Test Failed at /tmp/tmplnxtjg8a.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 3.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnxtjg8a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnxtjg8a.jl:24\ntest set: Test\
    \ Failed at /tmp/tmplnxtjg8a.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 11.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnxtjg8a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnxtjg8a.jl:24\ntest set: Test\
    \ Failed at /tmp/tmplnxtjg8a.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 1.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnxtjg8a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnxtjg8a.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b < c) || (a + c < b) || (b + c < a)\n        return -1\n    else\
    \ \n        p = (a + b + c) / 2\n        S = sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n        return round(S, digits=2)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt24fd9rx.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpt24fd9rx.jl:31\n  Expression: candidate(1,\
    \ 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt24fd9rx.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt24fd9rx.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if ((a + b > c) && (a + c > b) && (b + c > a))\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsi10wi_3.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpsi10wi_3.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsi10wi_3.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsi10wi_3.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsi10wi_3.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsi10wi_3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsi10wi_3.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsi10wi_3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsi10wi_3.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b <= c || a + c <= b || b + c <= a\n        return -1\n    else\n\
    \        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6ebgz8u.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo6ebgz8u.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a <= 0 || b <= 0 || c <= 0\n        return -1\n    end\n    if a +\
    \ b <= c || a + c <= b || b + c <= a\n        return -1\n    end\n    p = (a +\
    \ b + c) / 2\n    return sqrt(p * (p - a) * (p - b) * (p - c))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzjjghp0u.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpzjjghp0u.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjjghp0u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjjghp0u.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpzjjghp0u.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzjjghp0u.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzjjghp0u.jl:27\ntest set: Test Failed at /tmp/tmpzjjghp0u.jl:33\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjjghp0u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjjghp0u.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpzjjghp0u.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzjjghp0u.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzjjghp0u.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"\n    Calculate the area of a triangle given 3 sides\n    \"\"\"\
    \n    if (a+b > c) & (a+c > b) & (b+c > a)\n        return (a*b)/2\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp71897dmk.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp71897dmk.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 16.0 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp71897dmk.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp71897dmk.jl:27\ntest set: Test Failed at /tmp/tmp71897dmk.jl:31\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 2.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp71897dmk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp71897dmk.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp71897dmk.jl:33\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp71897dmk.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp71897dmk.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp71897dmk.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp71897dmk.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp71897dmk.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b <= c) || (a + c <= b) || (b + c <= a)\n        return -1\n \
    \   else \n        p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpupu66u5w.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpupu66u5w.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpupu66u5w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpupu66u5w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpupu66u5w.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpupu66u5w.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpupu66u5w.jl:25\ntest set: Test Failed at /tmp/tmpupu66u5w.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpupu66u5w.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpupu66u5w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpupu66u5w.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpupu66u5w.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpupu66u5w.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # using the Heron's formula to compute the area of a triangle \n    #\
    \ since it does not matter the way the three points are arranged\n    # the area\
    \ will be the same\n    # for more detail: https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c) / 2.0\
    \ # semiperimeter\n        s = sqrt(p * (p - a) * (p - b) * (p - c))\n       \
    \ return round(s, 2)\n    else\n        return -1.0\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpvuvf8zey.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpvuvf8zey.jl:31\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvuvf8zey.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuvf8zey.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuvf8zey.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvuvf8zey.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvuvf8zey.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvuvf8zey.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvuvf8zey.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a < 0 || b < 0 || c < 0)\n        return -1\n    end\n    if(a + b\
    \ > c && a + c > b && b + c > a)\n        p = (a + b + c) / 2\n        return\
    \ (p * (p - a) * (p - b) * (p - c)) ^ 0.5\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8stzc2of.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp8stzc2of.jl:31\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8stzc2of.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8stzc2of.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp8stzc2of.jl:32\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8stzc2of.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8stzc2of.jl:28\ntest set: Test Failed at /tmp/tmp8stzc2of.jl:34\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8stzc2of.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8stzc2of.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp8stzc2of.jl:36\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8stzc2of.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8stzc2of.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n        area\
    \ = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, 2)\n    else\n     \
    \   return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsknggkw7.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpsknggkw7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsknggkw7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsknggkw7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsknggkw7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsknggkw7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsknggkw7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsknggkw7.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsknggkw7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        if a == b && b == c\n      \
    \      return triangle_area_helper(a, b, c) / 4\n        elseif a == b || b ==\
    \ c || a == c\n            return triangle_area_helper(a, b, c) / 2\n        else\n\
    \            return triangle_area_helper(a, b, c)\n        end\n    else\n   \
    \     return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp25opb3qy.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp25opb3qy.jl:31\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: triangle_area_helper\
    \ not defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp25opb3qy.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25opb3qy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25opb3qy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp25opb3qy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: triangle_area_helper not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp25opb3qy.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25opb3qy.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25opb3qy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp25opb3qy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: triangle_area_helper not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp25opb3qy.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25opb3qy.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25opb3qy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp25opb3qy.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: triangle_area_helper not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        return -1\n    else\n        half_p\
    \ = (a+b+c)/2\n        return sqrt(half_p*(half_p-a)*(half_p-b)*(half_p-c))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpj75w7sv9.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpj75w7sv9.jl:26\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj75w7sv9.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj75w7sv9.jl:25\ntest set: Error During Test\
    \ at /tmp/tmpj75w7sv9.jl:27\n  Test threw exception\n  Expression: candidate(1,\
    \ 2, 10) == -1\n  DomainError with -563.0625:\n  sqrt will only return a complex\
    \ result if called with a complex argument. Try sqrt(Complex(x)).\n  Stacktrace:\n\
    \   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n     @ Base.Math ./math.jl:33\n\
    \   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\n     @ Main /tmp/tmpj75w7sv9.jl:18\n   [4] macro expansion\n    \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [5] macro expansion\n     @ /tmp/tmpj75w7sv9.jl:27 [inlined]\n   [6] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpj75w7sv9.jl:25\ntest set:\
    \ Test Failed at /tmp/tmpj75w7sv9.jl:28\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: -1.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj75w7sv9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj75w7sv9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj75w7sv9.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj75w7sv9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/s"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    s = a + b + c\n    v = (s - a) * (s - b) * (s - c)\n    if v <= 0:\n \
    \       return -1\n    else\n        return sqrt(v) * 0.25\n    end\nend\n\"\"\
    \"\n    Given an amount of change in cents, print out the optimal solution by\
    \ \n    printing one line for each way to make change. First, print the number\
    \ of \n    quarters. Second, print the number of dimes. Third, print the number\
    \ of \n    nickels. Fourth, print the number of pennies.\n    Note: Use int division\
    \ to convert between float division.\n    Example:\n    >>> change(75)\n    3\
    \ quarters\n    0 dimes\n    0 nickels\n    0 pennies\n    >>> change(96)\n  \
    \  3 quarters\n    1 dimes\n    1 nickels\n    1 pennies\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjz4rw3x6.jl:17\nin expression starting at\
    \ /tmp/tmpjz4rw3x6.jl:17\n"
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        x = p*(p-a)*(p-b)*(p-c)\n\
    \        s = round(sqrt(x),digits=2)\n        return s\n    else\n        return\
    \ -1\n    end\nend\n\"\"\"\n    Given a list of numbers, return the smallest and\
    \ the largest numbers in the list.\n    Example:\n    >>> min_max([3, 5, 1, -1,\
    \ -5])\n    [-5, 5]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpg5lc34ao.jl:23\nin expression starting at /tmp/tmpg5lc34ao.jl:23\n"
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\n    # Fill in your code here.\n    s = (a + b +\
    \ c) / 2\n    area = sqrt(s * (s - a) * (s - b) * (s - c))\n    if a + b > c and\
    \ a + c > b and b + c > a\n        return round(area, 2)\n    else\n        return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiphvolss.jl:29\nin expression starting at /tmp/tmpiphvolss.jl:29\n"
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps4car7j5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmps4car7j5.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test Failed at /tmp/tmps4car7j5.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4car7j5.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps4car7j5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps4car7j5.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009288
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    c1 = 0.5*a*b\n    c2 = 0.5*a*c\n    c3 = 0.5*b*c\n    if c1 > c2 && c1\
    \ > c3\n        return c1\n    elseif c2 > c1 && c2 > c3\n        return c2\n\
    \    elseif c3 > c1 && c3 > c2\n        return c3\n    else\n        return -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf240fr7g.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpf240fr7g.jl:32\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 10.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf240fr7g.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf240fr7g.jl:31\ntest set: Test Failed at /tmp/tmpf240fr7g.jl:33\n\
    \  Expression: candidate(1, 2, 10) == -1\n   Evaluated: 10.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf240fr7g.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf240fr7g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf240fr7g.jl:34\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 20.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf240fr7g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf240fr7g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf240fr7g.jl:35\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf240fr7g.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf240fr7g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf240fr7g.jl:36\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 3.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf240fr7g.jl:"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    hypotenuse = cmp(a*a + b*b, c*c)\n    return (a*b*sqrt(1 + hypotenuse))/2\
    \ if hypotenuse != 0 else -1\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpxuofq7ok.jl:13 expected\
    \ \"end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxuofq7ok.jl:15\n\
    in expression starting at /tmp/tmpxuofq7ok.jl:15\n"
  stdout: ''
  timestamp: 1660009289
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if is_triangle(a, b, c)\n        area = 0.25*sqrt((a+b+c)*(-a+b+c)*(a-b+c)*(a+b-c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpr048ovwo.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpr048ovwo.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: is_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpr048ovwo.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr048ovwo.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr048ovwo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr048ovwo.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: is_triangle not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpr048ovwo.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr048ovwo.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr048ovwo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr048ovwo.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: is_triangle not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpr048ovwo.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr048ovwo.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr048ovwo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr048ovwo.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: is_triangle not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpr048ovwo.jl:14\n\
    \   [2] macro ex"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprwyplzbg.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmprwyplzbg.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test Failed at /tmp/tmprwyplzbg.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return a * b * c < 0 ? -1 : -1\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphp025ier.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmphp025ier.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphp025ier.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphp025ier.jl:20\ntest set: Test Failed at /tmp/tmphp025ier.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphp025ier.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphp025ier.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphp025ier.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphp025ier.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphp025ier.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphp025ier.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphp025ier.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphp025ier.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphp025ier.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph"
  timestamp: 1660009290
- exit_code: -1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpt4md6cka.jl:21\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpt4md6cka.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt4md6cka.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt4md6cka.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpt4md6cka.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpt4md6cka.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt4md6cka.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt4md6cka.jl:2"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        return sqrt(a*a+b*b+c*c)\n \
    \   else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpioo5_uk6.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpioo5_uk6.jl:25\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 7.0710678118654755 == 6.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioo5_uk6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioo5_uk6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpioo5_uk6.jl:27\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 10.246950765959598 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpioo5_uk6.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpioo5_uk6.jl:24\ntest set: Test Failed at /tmp/tmpioo5_uk6.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 3.4641016151377544 ==\
    \ 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioo5_uk6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioo5_uk6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpioo5_uk6.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 13.19090595827292 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpioo5_uk6.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpioo5_uk6.jl:24\ntest set: Test Failed at /tmp/tmpioo5_uk6.jl:32\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 1.7320508075688772 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\n    \n    s = 1/2 * (a + b + c)\n    area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    if area < 0\n        area = -1\n    end\n\
    \    return round(area, digits=2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpx72jc_h8.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpx72jc_h8.jl:40\n  Test threw exception\n\
    \  Expression: candidate(1, 2, 10) == -1\n  DomainError with -563.0625:\n  sqrt\
    \ will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpx72jc_h8.jl:28\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpx72jc_h8.jl:40 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpx72jc_h8.jl:38\ntest set:\
    \ Test Failed at /tmp/tmpx72jc_h8.jl:43\n  Expression: candidate(1, 2, 3) == -1\n\
    \   Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx72jc_h8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx72jc_h8.jl:38\ntest set: Error\
    \ During Test at /tmp/tmpx72jc_h8.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 3) == -1\n  DomainError with -24.0625:\n  sqrt will only return\
    \ a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpx72jc_h8.jl:28\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpx72jc_h8.jl:45 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpx72jc_h8.jl"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb0k0vkoz.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpb0k0vkoz.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test Failed at /tmp/tmpb0k0vkoz.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        # This is Heron's formula for area of a triangle\n        area\
    \ = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area, 2)\n   \
    \ else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpbh38qcr6.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpbh38qcr6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpbh38qcr6.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbh38qcr6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbh38qcr6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpbh38qcr6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpbh38qcr6.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbh38qcr6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbh38qcr6.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1.0 \nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz8_nc6w8.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpz8_nc6w8.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz8_nc6w8.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz8_nc6w8.jl:20\ntest set: Test Failed at /tmp/tmpz8_nc6w8.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8_nc6w8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8_nc6w8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz8_nc6w8.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8_nc6w8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8_nc6w8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz8_nc6w8.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8_nc6w8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8_nc6w8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz8_nc6w8.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        return sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpiacmupvj.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpiacmupvj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpiacmupvj.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiacmupvj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiacmupvj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpiacmupvj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpiacmupvj.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiacmupvj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiacmupvj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpiacmupvj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpiacmupvj.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiacmupvj.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiacmupvj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpiacmupvj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpiacmupvj.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660009293
- exit_code: -1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # TODO: write code here\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp_qjnymxb.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp_qjnymxb.jl:21\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp_qjnymxb.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_qjnymxb.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_qjnymxb.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_qjnymxb.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp_qjnymxb.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_qjnymxb.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_qjnymxb.jl:2"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # WRITE CODE HERE!\n    if(a+b>c && a+c>b && b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsp5a85rv.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpsp5a85rv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsp5a85rv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsp5a85rv.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsp5a85rv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpsp5a85rv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsp5a85rv.jl:18\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsp5a85rv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsp5a85rv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n    \
    \    return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy3bje_cr.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpy3bje_cr.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy3bje_cr.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test Failed at /tmp/tmpy3bje_cr.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy3bje_cr.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b) <= c || (a+c) <= b || (b+c) <= a\n        return -1\n    else\n\
    \        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps47v_awv.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmps47v_awv.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps47v_awv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps47v_awv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps47v_awv.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps47v_awv.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps47v_awv.jl:25\ntest set: Test Failed at /tmp/tmps47v_awv.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps47v_awv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps47v_awv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps47v_awv.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps47v_awv.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmps47v_awv.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009292
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a <= 0 || b <= 0 || c <= 0\n        return -1\n    end\n    if a+b\
    \ <= c || a+c <= b || b+c <= a\n        return -1\n    end\n    x = (a+b+c)/2\n\
    \    area = sqrt(x*(x-a)*(x-b)*(x-c))\n    return round(area, digits=2)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # write code to solve the problem here\n    return -1.0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyn37zayy.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyn37zayy.jl:22\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyn37zayy.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyn37zayy.jl:21\ntest set: Test Failed at /tmp/tmpyn37zayy.jl:24\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn37zayy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn37zayy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyn37zayy.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn37zayy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn37zayy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyn37zayy.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn37zayy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn37zayy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyn37zayy.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sorted([a, b, c])\n    if a + b <= c\n        return -1\n  \
    \  end\n    s = (a + b + c) / 2\n    return sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmps5m89nv0.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmps5m89nv0.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmps5m89nv0.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps5m89nv0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps5m89nv0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps5m89nv0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmps5m89nv0.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps5m89nv0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps5m89nv0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps5m89nv0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmps5m89nv0.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps5m89nv0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps5m89nv0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps5m89nv0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmps5m89nv0.jl:14\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) & (a + c > b) & (b + c > a)\n        p = (a + b + c) /\
    \ 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsfsty0ra.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpsfsty0ra.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsfsty0ra.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfsty0ra.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfsty0ra.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpsfsty0ra.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpsfsty0ra.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsfsty0ra.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsfsty0ra.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpezs6s961.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpezs6s961.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpezs6s961.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezs6s961.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezs6s961.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpezs6s961.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpezs6s961.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpezs6s961.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpezs6s961.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c) /\
    \ 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphmxxljjm.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmphmxxljjm.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmxxljjm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmxxljjm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphmxxljjm.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphmxxljjm.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphmxxljjm.jl:25\ntest set: Test Failed at /tmp/tmphmxxljjm.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmxxljjm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmxxljjm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphmxxljjm.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphmxxljjm.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphmxxljjm.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    s = (a + b + c) / 2\n    area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    if area == 0\n        return -1\n    else\n        return round(area, 2)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpgp8tcjz_.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpgp8tcjz_.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpgp8tcjz_.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8tcjz_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8tcjz_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgp8tcjz_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  DomainError with -563.0625:\n  sqrt will only return\
    \ a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpgp8tcjz_.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgp8tcjz_.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgp8tcjz_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgp8tcjz_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::Rounding"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    sorted = sort([a, b, c])\n    a = sorted[1]\n    b = sorted[2]\n\
    \    c = sorted[3]\n    \n    s = (a + b + c) / 2\n    area = sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    \n    if(a + b > c)\n        return round(area, 2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpeb3_rr5m.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpeb3_rr5m.jl:34\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpeb3_rr5m.jl:24\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeb3_rr5m.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeb3_rr5m.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeb3_rr5m.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  DomainError with -563.0625:\n  sqrt will only return\
    \ a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpeb3_rr5m.jl:21\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeb3_rr5m.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeb3_rr5m.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeb3_rr5m.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::Rounding"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    # YOUR CODE HERE\n    \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp7brxh6_7.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp7brxh6_7.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp7brxh6_7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7brxh6_7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7brxh6_7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp7brxh6_7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp7brxh6_7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7brxh6_7.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7brxh6_7.jl:2"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a \n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpczznm1ug.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpczznm1ug.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczznm1ug.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczznm1ug.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpczznm1ug.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpczznm1ug.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpczznm1ug.jl:25\ntest set: Test Failed at /tmp/tmpczznm1ug.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczznm1ug.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczznm1ug.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpczznm1ug.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpczznm1ug.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpczznm1ug.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\n@test triangle_area(3, 4, 5) == 6.0\n@test triangle_area(1, 2, 10) == -1\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmph7ahh23f.jl:21

    in expression starting at /tmp/tmph7ahh23f.jl:21

    '
  stdout: ''
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyqko3750.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpyqko3750.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyqko3750.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test Failed at /tmp/tmpyqko3750.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyqko3750.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyqko3750.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyqko3750.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009287
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) < c || (a + c) < b || (b + c) < a\n        return -1\n    else\n\
    \        # calculate the half-perimeter\n        p = (a + b + c) / 2\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpx0ohlhr_.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx0ohlhr_.jl:1\n\
    in expression starting at /tmp/tmpx0ohlhr_.jl:1\n"
  stdout: ''
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    sum = a + b + c\n    if a + b > c && a + c > b && b + c > a \n       \
    \ return sqrt(sum(sum - a)(sum - b)(sum - c)) / 4\n    else \n        return -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpls6k250o.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpls6k250o.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @\
    \ Main /tmp/tmpls6k250o.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpls6k250o.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpls6k250o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpls6k250o.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: objects of type Int64 are not callable\n\
    \  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpls6k250o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpls6k250o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpls6k250o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpls6k250o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  MethodError: objects of type Int64 are not callable\n\
    \  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpls6k250o.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpls6k250o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpls6k250o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpls6"
  timestamp: 1660009295
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if((a + b) > c) && ((a + c) > b) && ((b + c) > a)\n        p = (a + b\
    \ + c) / 2.0\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a < b + c) && (b < a + c) && (c < a + b)\n        p = (a + b + c)\
    \ / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n    \
    \    return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzaxaf803.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpzaxaf803.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzaxaf803.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzaxaf803.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzaxaf803.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzaxaf803.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzaxaf803.jl:25\ntest set: Test Failed at /tmp/tmpzaxaf803.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzaxaf803.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzaxaf803.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzaxaf803.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzaxaf803.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzaxaf803.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s(a, b, c)\
    \ * (s(a, b, c) - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n    else\n      \
    \  return -1\n    end\nend\n\"\"\"\n    Given a string and a number return a string\
    \ that has each letter of the original string\n    repeated as many times as the\
    \ corresponding number in the list of numbers.\n    There should be commas separating\
    \ each string.\n    Example:\n    >>> repeat_letters(\"abcd\", [1, 2, 3, 4])\n\
    \    \"a,bb,ccc,dddd\"\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpkk9g7rji.jl:20\nin expression starting at /tmp/tmpkk9g7rji.jl:20\n"
  stdout: ''
  timestamp: 1660009294
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if((a+b > c) && (a+c > b) && (b+c > a))\n        # Calculate the\
    \ perimeter of the triangle\n        p = (a + b + c)/2.0\n        # Calculate\
    \ the area using Heron's formula\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n \
    \       return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009292
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    #pre-define variables\n    half_perimeter::Float64 = 0.0\n    area::Float64\
    \ = 0.0\n    triangle::Bool = false\n    \n    #logic for returning -1 if not\
    \ triangle\n    if a <= 0 || b <= 0 || c <= 0 || a + b <= c || a + c <= b || b\
    \ + c <= a\n        return -1\n    else\n        triangle = true\n    end\n  \
    \  \n    #if triangle, then return area\n    if triangle == true\n        half_perimeter\
    \ = (a + b + c) / 2\n        area = sqrt(half_perimeter * (half_perimeter - a)\
    \ * (half_perimeter - b) * (half_perimeter - c))\n        return round(area, digits=2)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n  if (a + b > c) && (a + c > b) && (b + c > a)\n    ((a + b + c) / 2) * (sqrt(((a\
    \ + b + c) / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b\
    \ + c) / 2) - c)))\n  else\n    -1\n  end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoeaaeua6.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpoeaaeua6.jl:25\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 36.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoeaaeua6.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoeaaeua6.jl:24\ntest set: Test Failed at /tmp/tmpoeaaeua6.jl:27\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: 69.54303973080268 ==\
    \ 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoeaaeua6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoeaaeua6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoeaaeua6.jl:28\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 5.196152422706632 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoeaaeua6.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoeaaeua6.jl:24\ntest set: Test Failed at /tmp/tmpoeaaeua6.jl:30\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 178.72884490199112\
    \ == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoeaaeua6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoeaaeua6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoeaaeua6.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.649519052838329 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    sides = [a, b, c]\n    if is_valid_triangle(sides)\n        return area(sides)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpmmri18ml.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpmmri18ml.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: is_valid_triangle not\
    \ defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpmmri18ml.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmri18ml.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmri18ml.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmmri18ml.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpmmri18ml.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmri18ml.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmri18ml.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmmri18ml.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpmmri18ml.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmri18ml.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmri18ml.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmmri18ml.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpmmri18"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if (a + b > c) && (a + c > b) && (b + c > a) \n        s = (a +\
    \ b + c) / 2.0\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsft8x4hq.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpsft8x4hq.jl:29\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsft8x4hq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsft8x4hq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsft8x4hq.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsft8x4hq.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsft8x4hq.jl:26\ntest set: Test Failed at /tmp/tmpsft8x4hq.jl:32\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsft8x4hq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsft8x4hq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsft8x4hq.jl:34\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsft8x4hq.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsft8x4hq.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a + b > c && a + c > b && b + c > a)\n        return 0.5 * a * b\n\
    \    else\n        return -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\n\
    println(triangle_area(1, 2, 10))\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1, 2, 10))\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy93_41x_.jl:28

    '
  stdout: "6.0\n-1.0\n6.0\n-1.0\n6.0\n-1.0\ntest set: Test Failed at /tmp/tmpy93_41x_.jl:33\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: 16.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy93_41x_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy93_41x_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy93_41x_.jl:34\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 2.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy93_41x_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy93_41x_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy93_41x_.jl:36\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy93_41x_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy93_41x_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy93_41x_.jl:38\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy93_41x_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy93_41x_.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = p * (p - a) * (p - b) * (p - c)\n        return area ^ 0.5\n \
    \   else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgpnvo7t6.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpgpnvo7t6.jl:29\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgpnvo7t6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgpnvo7t6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgpnvo7t6.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgpnvo7t6.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgpnvo7t6.jl:26\ntest set: Test Failed at /tmp/tmpgpnvo7t6.jl:32\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgpnvo7t6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgpnvo7t6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgpnvo7t6.jl:34\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgpnvo7t6.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgpnvo7t6.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        s = sqrt(p * (p - a) * (p - b) * (p - c))\n        floor(s * 100) / 100\n\
    \    else\n        -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkuk3flhv.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpkuk3flhv.jl:32\n  Expression: candidate(10,\
    \ 5, 7) == 16.25\n   Evaluated: 16.24 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkuk3flhv.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkuk3flhv.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1660009295
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        # calculate the\
    \ semi-perimeter\n        s = (a + b + c) / 2\n        area = sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n        return round(area, digits=2)\n    else\n     \
    \   return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009293
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c and a + c > b and b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphkkyu028.jl:14\nin expression starting at /tmp/tmphkkyu028.jl:14\n"
  stdout: ''
  timestamp: 1660009294
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if a <= 0 || b <= 0 || c <= 0\n        return -1\n    end\n    \n\
    \    if (a + b <= c) || (a + c <= b) || (b + c <= a)\n        return -1\n    end\n\
    \    \n    s = (a + b + c) / 2\n    area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    return area\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpts7inck8.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpts7inck8.jl:34\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpts7inck8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpts7inck8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpts7inck8.jl:35\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpts7inck8.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpts7inck8.jl:31\ntest set: Test Failed at /tmp/tmpts7inck8.jl:37\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpts7inck8.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpts7inck8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpts7inck8.jl:39\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpts7inck8.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpts7inck8.jl:31\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if ((a+b)>c) && ((a+c)>b) && ((b+c)>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\n\
    \    else\n        return -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\n\
    println(triangle_area(1, 2, 10))\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptk6ewdkd.jl:25

    '
  stdout: "6.0\n-1.0\ntest set: Test Failed at /tmp/tmptk6ewdkd.jl:30\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptk6ewdkd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptk6ewdkd.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptk6ewdkd.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptk6ewdkd.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptk6ewdkd.jl:27\ntest set: Test Failed at /tmp/tmptk6ewdkd.jl:33\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptk6ewdkd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptk6ewdkd.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptk6ewdkd.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptk6ewdkd.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptk6ewdkd.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    s = (a + b + c) / 2\n    return ((s * (s - a) * (s - b) * (s - c)) ^ 0.5)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpzo11_s4h.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpzo11_s4h.jl:23\n  Test threw exception\n\
    \  Expression: candidate(1, 2, 10) == -1\n  DomainError with -563.0625:\n  Exponentiation\
    \ yielding a complex result requires a complex argument.\n  Replace x^y with (x+0im)^y,\
    \ Complex(x)^y, or similar.\n  Stacktrace:\n   [1] throw_exp_domainerror(x::Float64)\n\
    \     @ Base.Math ./math.jl:37\n   [2] ^\n     @ ./math.jl:909 [inlined]\n   [3]\
    \ triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpzo11_s4h.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzo11_s4h.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzo11_s4h.jl:21\ntest set:\
    \ Test Failed at /tmp/tmpzo11_s4h.jl:24\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzo11_s4h.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzo11_s4h.jl:21\ntest set: Test Failed at /tmp/tmpzo11_s4h.jl:25\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 1.7320508075688772 ==\
    \ 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo11_s4h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo11_s4h.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzo11_s4h.jl:26\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo11_s4h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ "
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) & (a+c > b) & (b+c > a)\n        S = (a+b+c)/2\n        return\
    \ sqrt(S*(S-a)*(S-b)*(S-c))\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphcx2uh_o.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmphcx2uh_o.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcx2uh_o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcx2uh_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphcx2uh_o.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphcx2uh_o.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphcx2uh_o.jl:25\ntest set: Test Failed at /tmp/tmphcx2uh_o.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcx2uh_o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcx2uh_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphcx2uh_o.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphcx2uh_o.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphcx2uh_o.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) > c && (a + c) > b && (b + c) > a\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpz1c6scz6.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpz1c6scz6.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1c6scz6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1c6scz6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz1c6scz6.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz1c6scz6.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz1c6scz6.jl:25\ntest set: Test Failed at /tmp/tmpz1c6scz6.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1c6scz6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1c6scz6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz1c6scz6.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpz1c6scz6.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpz1c6scz6.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        return sqrt(half_perimeter(a,\
    \ b, c) * (half_perimeter(a, b, c) - a) * \n                    (half_perimeter(a,\
    \ b, c) - b) * (half_perimeter(a, b, c) - c))\n    else\n        return -1\n \
    \   end\nend\n    \n    \nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8l14l5d3.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp8l14l5d3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: half_perimeter not\
    \ defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp8l14l5d3.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l14l5d3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l14l5d3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l14l5d3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: half_perimeter not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp8l14l5d3.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l14l5d3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l14l5d3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l14l5d3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: half_perimeter not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp8l14l5d3.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8l14l5d3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8l14l5d3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8l14l5d3.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: half_perimeter not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp8l14l5d3.jl:15\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpysdk1m62.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpysdk1m62.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: p not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpysdk1m62.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpysdk1m62.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpysdk1m62.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpysdk1m62.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: p not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpysdk1m62.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpysdk1m62.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpysdk1m62.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpysdk1m62.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: p not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpysdk1m62.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpysdk1m62.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpysdk1m62.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpysdk1m62.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: p not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpysdk1m62.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpt66zwo7b.jl:21\nin expression starting at /tmp/tmpt66zwo7b.jl:21\n"
  stdout: ''
  timestamp: 1660009296
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else\n  \
    \      return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1n_voesz.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp1n_voesz.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp1n_voesz.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1n_voesz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1n_voesz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1n_voesz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp1n_voesz.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1n_voesz.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1n_voesz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) < c || (a + c) < b || (b + c) < a \n        return -1.0\n \
    \   else \n        p = (a + b + c) / 2.0\n        return sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5znq48ty.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp5znq48ty.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5znq48ty.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5znq48ty.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5znq48ty.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5znq48ty.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5znq48ty.jl:25\ntest set: Test Failed at /tmp/tmp5znq48ty.jl:30\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5znq48ty.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5znq48ty.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5znq48ty.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5znq48ty.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5znq48ty.jl:25\ntest set: Test Failed at /tmp/tmp5znq48ty.jl:33\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.4330127018922193 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a \n        p = (a + b + c) / 2 \n\
    \        s = sqrt(p * (p - a) * (p - b) * (p - c))\n        round(s, 2)\n    else\n\
    \        -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp8etbsn_0.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp8etbsn_0.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp8etbsn_0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8etbsn_0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8etbsn_0.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp8etbsn_0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp8etbsn_0.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8etbsn_0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8etbsn_0.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return 0.0\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpooydgndr.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpooydgndr.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 0.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpooydgndr.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpooydgndr.jl:20\ntest set: Test Failed at /tmp/tmpooydgndr.jl:22\n\
    \  Expression: candidate(1, 2, 10) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpooydgndr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpooydgndr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpooydgndr.jl:23\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 0.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpooydgndr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpooydgndr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpooydgndr.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 0.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpooydgndr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpooydgndr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpooydgndr.jl:25\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpooydgndr.jl:25 ["
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    len = [a, b, c]\n    len.sort()\n    if (len[1] + len[2] <= len[3])\n\
    \        return -1\n    else\n        # Heron's Formula\n        p = sum(len)\
    \ / 2\n        area = sqrt(p * (p - len[1]) * (p - len[2]) * (p - len[3]))\n \
    \       return round(area, 2)\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpcm9a8gtt.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpcm9a8gtt.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  type Array has no field sort\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] triangle_area(a::Int64,\
    \ b::Int64, c::Int64)\n     @ Main /tmp/tmpcm9a8gtt.jl:15\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpcm9a8gtt.jl:30 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcm9a8gtt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcm9a8gtt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  type Array has no field sort\n  Stacktrace:\n \
    \  [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] triangle_area(a::Int64,\
    \ b::Int64, c::Int64)\n     @ Main /tmp/tmpcm9a8gtt.jl:15\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpcm9a8gtt.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcm9a8gtt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcm9a8gtt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  type Array has no field sort\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] triangle_area(a::Int64,\
    \ b::Int64, c::Int64)\n     @ Main /tmp/tmpcm9a8gtt.jl:15\n   [3] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpcm9a8gtt.jl:32 [inlined]\n   [5] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcm9a8gtt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcm9a8gtt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  type Array has no field sort\n  Stackt"
  timestamp: 1660009298
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a \n        # Heron's formula\n \
    \       s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        round(area, digits=2)\n    else\n        -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009295
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a + b > c && a + c > b && b + c > a)\n        p = (a + b + c)/2\n \
    \       return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqp6_nuin.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpqp6_nuin.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqp6_nuin.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqp6_nuin.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqp6_nuin.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqp6_nuin.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqp6_nuin.jl:25\ntest set: Test Failed at /tmp/tmpqp6_nuin.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqp6_nuin.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqp6_nuin.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqp6_nuin.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqp6_nuin.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqp6_nuin.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c)\
    \ / 2.0\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n    \
    \    return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7j8ab8kx.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp7j8ab8kx.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7j8ab8kx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7j8ab8kx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7j8ab8kx.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7j8ab8kx.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7j8ab8kx.jl:25\ntest set: Test Failed at /tmp/tmp7j8ab8kx.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7j8ab8kx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7j8ab8kx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7j8ab8kx.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7j8ab8kx.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7j8ab8kx.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    triangle = (a, b, c)\n    if isvalidtriangle(triangle)\n        return\
    \ base(triangle) * height(triangle) / 2\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpf3pxujv8.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpf3pxujv8.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: isvalidtriangle not\
    \ defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpf3pxujv8.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf3pxujv8.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf3pxujv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf3pxujv8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: isvalidtriangle not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpf3pxujv8.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf3pxujv8.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf3pxujv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf3pxujv8.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: isvalidtriangle not defined\n \
    \ Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpf3pxujv8.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf3pxujv8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf3pxujv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf3pxujv8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: isvalidtriangle not defined\n \
    \ Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpf3pxujv8.jl:15"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if !(a + b > c && a + c > b && b + c > a)\n        return -1\n    end\n\
    \    t = (a + b + c) / 2.0\n    return sqrt(t * (t - a) * (t - b) * (t - c))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9q9w6kmk.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp9q9w6kmk.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9q9w6kmk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9q9w6kmk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp9q9w6kmk.jl:28\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9q9w6kmk.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9q9w6kmk.jl:24\ntest set: Test Failed at /tmp/tmp9q9w6kmk.jl:30\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9q9w6kmk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9q9w6kmk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp9q9w6kmk.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9q9w6kmk.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9q9w6kmk.jl:24\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if ((a + b) > c) && ((a + c) > b) && ((b + c) > a)\n        p = (a + b\
    \ + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       return -1\n    end\nend\n \nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7vvxlw8x.jl:26

    '
  stdout: "6.0\n-1.0\ntest set: Test Failed at /tmp/tmp7vvxlw8x.jl:31\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vvxlw8x.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vvxlw8x.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7vvxlw8x.jl:32\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7vvxlw8x.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7vvxlw8x.jl:28\ntest set: Test Failed at /tmp/tmp7vvxlw8x.jl:34\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vvxlw8x.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vvxlw8x.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7vvxlw8x.jl:36\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7vvxlw8x.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7vvxlw8x.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # if (a+b>c) && (a+c>b) && (b+c>a)\n    #     s = (a+b+c)/2\n    #   \
    \  area = sqrt(s*(s-a)*(s-b)*(s-c))\n    #     return round(area, 2)\n    # else\n\
    \    #     return -1\n    (a+b>c) && (a+c>b) && (b+c>a) ? round(sqrt((a+b+c)/2*(a+b+c)/2-a)*(a+b+c)/2-b)*(a+b+c)/2-c),\
    \ 2) : -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkq6u9yqw.jl:20\nin expression starting at\
    \ /tmp/tmpkq6u9yqw.jl:20\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b\
    \ + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return\
    \ round(area, 2)\n    else\n        return -1\n    end\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvxnu090f.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvxnu090f.jl:1\n\
    in expression starting at /tmp/tmpvxnu090f.jl:1\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) > c && (a + c) > b && (b + c) > a\n        s = (a + b + c)\
    \ / 2\n        return round(sqrt(s * (s - a) * (s - b) * (s - c)), digits=2)\n\
    \    else\n        return -1\n    end\nend\n\"\"\"\n    In an array of only positive\
    \ integers, find the maximum possible difference \n    between two elements such\
    \ that larger element appears after the smaller number.\n    Example:\n    >>>\
    \ max_diff([2, 3, 10, 6, 4, 8, 1])\n    8\n    >>> max_diff([7, 9, 5, 6, 3, 2])\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpdrgo_h90.jl:21\nin expression starting at /tmp/tmpdrgo_h90.jl:21\n"
  stdout: ''
  timestamp: 1660009297
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return 0.5 * sqrt((a +\
    \ b + c) * (a + b - c) * (a + c - b) * (b + c - a))\n    else\n        return\
    \ -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdrxf2y6f.jl:24

    '
  stdout: "12.0\n-1.0\ntest set: Test Failed at /tmp/tmpdrxf2y6f.jl:27\n  Expression:\
    \ candidate(3, 4, 5) == 6.0\n   Evaluated: 12.0 == 6.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdrxf2y6f.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdrxf2y6f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdrxf2y6f.jl:29\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 16.36306817195357 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdrxf2y6f.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdrxf2y6f.jl:26\ntest set: Test Failed at /tmp/tmpdrxf2y6f.jl:30\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 3.4641016151377544 ==\
    \ 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdrxf2y6f.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdrxf2y6f.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdrxf2y6f.jl:32\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 32.49615361854384 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdrxf2y6f.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdrxf2y6f.jl:26\ntest set: Test Failed at /tmp/tmpdrxf2y6f.jl:34\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.8660254037844386 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Te"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = 0.5 * (a + b + c)\n\
    \        sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvrn4aiaw.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpvrn4aiaw.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrn4aiaw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrn4aiaw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvrn4aiaw.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvrn4aiaw.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvrn4aiaw.jl:25\ntest set: Test Failed at /tmp/tmpvrn4aiaw.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrn4aiaw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrn4aiaw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvrn4aiaw.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvrn4aiaw.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvrn4aiaw.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2n7xt66b.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp2n7xt66b.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2n7xt66b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2n7xt66b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2n7xt66b.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2n7xt66b.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2n7xt66b.jl:25\ntest set: Test Failed at /tmp/tmp2n7xt66b.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2n7xt66b.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2n7xt66b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2n7xt66b.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2n7xt66b.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2n7xt66b.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a < b + c) && (b < a + c) && (c < a + b)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1ktuvj6l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp1ktuvj6l.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ktuvj6l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ktuvj6l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ktuvj6l.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1ktuvj6l.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1ktuvj6l.jl:25\ntest set: Test Failed at /tmp/tmp1ktuvj6l.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ktuvj6l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ktuvj6l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ktuvj6l.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1ktuvj6l.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1ktuvj6l.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n        area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpj6qn98cx.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpj6qn98cx.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpj6qn98cx.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj6qn98cx.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj6qn98cx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpj6qn98cx.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpj6qn98cx.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj6qn98cx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj6qn98cx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        s = (a+b+c)/2.0\n        area\
    \ = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpz986nxt2.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpz986nxt2.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpz986nxt2.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz986nxt2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz986nxt2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpz986nxt2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpz986nxt2.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz986nxt2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz986nxt2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprwyplzbg.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmprwyplzbg.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test Failed at /tmp/tmprwyplzbg.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b<c || a+c<b || b+c<a\n        return -1\n    else\n        return\
    \ (a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)/24\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxk1hcb6u.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpxk1hcb6u.jl:25\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 24.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxk1hcb6u.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxk1hcb6u.jl:24\ntest set: Test Failed at /tmp/tmpxk1hcb6u.jl:27\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: 44.625 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxk1hcb6u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxk1hcb6u.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxk1hcb6u.jl:28\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 2.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxk1hcb6u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxk1hcb6u.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxk1hcb6u.jl:29\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxk1hcb6u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxk1hcb6u.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxk1hcb6u.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 176.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxk1h"
  timestamp: 1660009298
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # your code here\n    if (a + b > c) & (a + c > b) & (b + c > a)\n   \
    \     return sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmparljpw56.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmparljpw56.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparljpw56.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparljpw56.jl:25\ntest set: Test\
    \ Failed at /tmp/tmparljpw56.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmparljpw56.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmparljpw56.jl:25\ntest set: Test Failed at /tmp/tmparljpw56.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparljpw56.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparljpw56.jl:25\ntest set: Test\
    \ Failed at /tmp/tmparljpw56.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmparljpw56.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmparljpw56.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) && (a+c > b) && (b+c > a)\n        p = (a+b+c)/2\n      \
    \  sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzzmaf4ma.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpzzmaf4ma.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzmaf4ma.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzmaf4ma.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzzmaf4ma.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzzmaf4ma.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzzmaf4ma.jl:25\ntest set: Test Failed at /tmp/tmpzzmaf4ma.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzmaf4ma.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzmaf4ma.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzzmaf4ma.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzzmaf4ma.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzzmaf4ma.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if is_valid_triangle(a, b, c)\n        p = (a + b + c) / 2\n        sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp49wbss2z.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp49wbss2z.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: is_valid_triangle not\
    \ defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp49wbss2z.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49wbss2z.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49wbss2z.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp49wbss2z.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp49wbss2z.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49wbss2z.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49wbss2z.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp49wbss2z.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp49wbss2z.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49wbss2z.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49wbss2z.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp49wbss2z.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: is_valid_triangle not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp49wbss"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # test if it is a valid triangle \n    if (a+b>c) && (a+c>b) && (b+c>a)\
    \ \n        # Heron's formula\n        s = (a+b+c)/2.0\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp34cozzai.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp34cozzai.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34cozzai.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34cozzai.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp34cozzai.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp34cozzai.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp34cozzai.jl:27\ntest set: Test Failed at /tmp/tmp34cozzai.jl:33\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34cozzai.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34cozzai.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp34cozzai.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp34cozzai.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp34cozzai.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c || a + c > b || b + c > a\n        return sqrt((a + b + c)\
    \ * (a + b - c) * (a - b + c) * (-a + b + c)) / 4\n    else\n        return -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmproxpkrre.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmproxpkrre.jl:26\n  Test threw exception\n\
    \  Expression: candidate(1, 2, 10) == -1\n  DomainError with -9009.0:\n  sqrt\
    \ will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol, x::Float64)\n    \
    \ @ Base.Math ./math.jl:33\n   [2] sqrt\n     @ ./math.jl:567 [inlined]\n   [3]\
    \ sqrt\n     @ ./math.jl:1221 [inlined]\n   [4] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\n     @ Main /tmp/tmproxpkrre.jl:15\n   [5] macro expansion\n    \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [6] macro expansion\n     @ /tmp/tmproxpkrre.jl:26 [inlined]\n   [7] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmproxpkrre.jl:24\ntest set:\
    \ Test Failed at /tmp/tmproxpkrre.jl:27\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmproxpkrre.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmproxpkrre.jl:24\ntest set: Test Failed at /tmp/tmproxpkrre.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 1.7320508075688772 ==\
    \ 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmproxpkrre.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmproxpkrre.jl:24\ntest set: Test\
    \ Failed at /tmp/tmproxpkrre.jl:29\n  Expression: candidate(1, 2, 3) == -1\n \
    \  Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmproxpkrre.jl:29 [inlin"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n    \
    \    return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy3bje_cr.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpy3bje_cr.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy3bje_cr.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test Failed at /tmp/tmpy3bje_cr.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy3bje_cr.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpy3bje_cr.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpy3bje_cr.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009292
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        return 0.5*a*b\n    else\n       \
    \ return -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3yv3eron.jl:24

    '
  stdout: "6.0\n-1.0\ntest set: Test Failed at /tmp/tmp3yv3eron.jl:29\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n   Evaluated: 16.0 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yv3eron.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yv3eron.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3yv3eron.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 2.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yv3eron.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yv3eron.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3yv3eron.jl:32\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yv3eron.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yv3eron.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3yv3eron.jl:34\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yv3eron.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yv3eron.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    #check if a valid triangle\n    if a+b>c && a+c>b && b+c>a\n        #use\
    \ Heron's formula\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\n\
    println(triangle_area(1, 2, 10))\n \n \n \n \n\"\"\"\n    Given an integer n,\
    \ return an array containing n random integers that \n    range from 0 to 10.\n\
    \    Example:\n    >>> ten_random_ints(10)\n    [2, 3, 1, 9, 5, 3, 4, 9, 5, 4]\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp6r_hmm2d.jl:29\nin expression starting at /tmp/tmp6r_hmm2d.jl:29\n"
  stdout: '6.0

    -1.0

    '
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2.0\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\n@test triangle_area(3, 4, 5) == 6.0\n@test triangle_area(1,\
    \ 2, 10) == -1\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmprohgg29k.jl:21

    in expression starting at /tmp/tmprohgg29k.jl:21

    '
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp59tbxd4w.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp59tbxd4w.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp59tbxd4w.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp59tbxd4w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59tbxd4w.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp59tbxd4w.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp59tbxd4w.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp59tbxd4w.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59tbxd4w.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a > b+c) || (b > a+c) || (c > a+b)\n        return -1\n    else\n\
    \        p = (a+b+c)/2\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return\
    \ round(area, digits=2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp82gmh1u3.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp82gmh1u3.jl:31\n  Expression: candidate(1,\
    \ 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp82gmh1u3.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp82gmh1u3.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb0k0vkoz.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpb0k0vkoz.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test Failed at /tmp/tmpb0k0vkoz.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n  if a + b > c && a + c > b && b + c > a\n    sqrt(s(a, b, c) * (s(a, b, c)\
    \ - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n  else\n    -1\n  end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxhjn0gvd.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpxhjn0gvd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpxhjn0gvd.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhjn0gvd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhjn0gvd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxhjn0gvd.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpxhjn0gvd.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhjn0gvd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhjn0gvd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxhjn0gvd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpxhjn0gvd.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhjn0gvd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhjn0gvd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxhjn0gvd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpxhjn0gvd.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660009301
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) & (a+c > b) & (b+c > a)\n        p = (a+b+c)/2.0\n      \
    \  return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzk03rp02.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpzk03rp02.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk03rp02.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk03rp02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzk03rp02.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzk03rp02.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzk03rp02.jl:25\ntest set: Test Failed at /tmp/tmpzk03rp02.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk03rp02.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk03rp02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzk03rp02.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzk03rp02.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzk03rp02.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return 0.5 * a * b\n \
    \   else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc4massyt.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpc4massyt.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 16.0 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc4massyt.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc4massyt.jl:24\ntest set: Test Failed at /tmp/tmpc4massyt.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 2.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4massyt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4massyt.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpc4massyt.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4massyt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4massyt.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpc4massyt.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4massyt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4massyt.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b <= c || a + c <= b || b + c <= a\n        return -1\n    else\n\
    \        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6ebgz8u.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpo6ebgz8u.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo6ebgz8u.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6ebgz8u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6ebgz8u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) > c && (a + c) > b && (b + c) > a\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpvmbyqxe7.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpvmbyqxe7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvmbyqxe7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvmbyqxe7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvmbyqxe7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvmbyqxe7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvmbyqxe7.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvmbyqxe7.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvmbyqxe7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009302
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) && (a+c > b) && (b+c > a)\n        p = (a+b+c)/2\n      \
    \  area = sqrt(p*(p-a)*(p-b)*(p-c))\n        round(area, digits=2)\n    else\n\
    \        -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009299
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b)>c && (a+c)>b && (b+c)>a\n        return (a+b+c)/2\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppm1jfufm.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmppm1jfufm.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.5 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppm1jfufm.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppm1jfufm.jl:24\ntest set: Test Failed at /tmp/tmppm1jfufm.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 3.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm1jfufm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm1jfufm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmppm1jfufm.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 11.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm1jfufm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm1jfufm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmppm1jfufm.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 1.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm1jfufm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm1jfufm.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = 0.5 * (a + b + c)\n\
    \        return (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpicynr4ar.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpicynr4ar.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicynr4ar.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicynr4ar.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpicynr4ar.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpicynr4ar.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpicynr4ar.jl:25\ntest set: Test Failed at /tmp/tmpicynr4ar.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpicynr4ar.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpicynr4ar.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpicynr4ar.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpicynr4ar.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpicynr4ar.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if((a + b > c) && (a + c > b) && (b + c > a))\n        p = (a + b + c)/2.0\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphdjzjpje.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmphdjzjpje.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphdjzjpje.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphdjzjpje.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphdjzjpje.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphdjzjpje.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphdjzjpje.jl:25\ntest set: Test Failed at /tmp/tmphdjzjpje.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphdjzjpje.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphdjzjpje.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphdjzjpje.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphdjzjpje.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphdjzjpje.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sort((a, b, c))\n    if a + b <= c\n        return -1\n    end\n\
    \    p = (a + b + c) / 2\n    return sqrt(p * (p - a) * (p - b) * (p - c))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpr5ekrvbm.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpr5ekrvbm.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching sort(::Tuple{Int64,\
    \ Int64, Int64})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpr5ekrvbm.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr5ekrvbm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr5ekrvbm.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr5ekrvbm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: no method matching sort(::Tuple{Int64,\
    \ Int64, Int64})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1304\n    sort(!Matched::AbstractRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1307\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpr5ekrvbm.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr5ekrvbm.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr5ekrvbm.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        return area(a, b, c)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpm4_mho6x.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpm4_mho6x.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: area not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmpm4_mho6x.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4_mho6x.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4_mho6x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpm4_mho6x.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: area not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpm4_mho6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4_mho6x.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4_mho6x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpm4_mho6x.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: area not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpm4_mho6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4_mho6x.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4_mho6x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpm4_mho6x.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: area not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpm4_mho6x.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/e"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else \n        -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsjzkihp.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpbsjzkihp.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsjzkihp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsjzkihp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbsjzkihp.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsjzkihp.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsjzkihp.jl:25\ntest set: Test Failed at /tmp/tmpbsjzkihp.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsjzkihp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsjzkihp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbsjzkihp.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsjzkihp.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsjzkihp.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    # Error check if the three sides form a valid triangle.\n    if\
    \ (a + b) < c || (a + c) < b || (b + c) < a\n        return -1\n    end\n    \n\
    \    # Compute the area of the triangle.\n    p = (a + b + c) / 2\n    s = sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    \n    # Return the area of the triangle\
    \ rounded to 2 decimal points.\n    return round(s, digits=2)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6wawnj8u.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp6wawnj8u.jl:36\n  Expression: candidate(1,\
    \ 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n  \
    \ @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6wawnj8u.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6wawnj8u.jl:31\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     1      9\n"
  timestamp: 1660009301
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    s = (a + b + c) / 2\n    if (s - a) * (s - b) * (s - c) < 0\n        return\
    \ -1\n    else\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpevy30r1_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpevy30r1_.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevy30r1_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevy30r1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevy30r1_.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpevy30r1_.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpevy30r1_.jl:25\ntest set: Test Failed at /tmp/tmpevy30r1_.jl:30\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevy30r1_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevy30r1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevy30r1_.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpevy30r1_.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpevy30r1_.jl:25\ntest set: Test Failed at /tmp/tmpevy30r1_.jl:33\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.4330127018922193 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660009302
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    c1 = a + b\n    c2 = b + c\n    c3 = a + c\n    if a > 0 && b > 0 && c\
    \ > 0 && (c1 > c && c2 > a && c3 > b)\n        p = (a + b + c) / 2\n        area\
    \ = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009300
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    # Base case\n    if (a+b <= c) || (a+c <= b) || (b+c <= a)\n        return\
    \ -1.0\n    end\n    # Recursive case\n    return (a + b + c) / 2 * 1.0\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpucj47y26.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpucj47y26.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.5 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpucj47y26.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpucj47y26.jl:25\ntest set: Test Failed at /tmp/tmpucj47y26.jl:29\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 3.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucj47y26.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucj47y26.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpucj47y26.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 11.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucj47y26.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucj47y26.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpucj47y26.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 1.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpucj47y26.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpucj47y26.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        s = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(s,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpig7ul49o.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpig7ul49o.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpig7ul49o.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig7ul49o.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig7ul49o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpig7ul49o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpig7ul49o.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig7ul49o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig7ul49o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c)\
    \ / 2.0\n        (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n    else\n        -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjqf85ct4.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpjqf85ct4.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqf85ct4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqf85ct4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjqf85ct4.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjqf85ct4.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjqf85ct4.jl:25\ntest set: Test Failed at /tmp/tmpjqf85ct4.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqf85ct4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqf85ct4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjqf85ct4.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjqf85ct4.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjqf85ct4.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    #check if valid\n    if a + b > c && a + c > b && b + c > a\n        #calculate\
    \ area\n        s = (a + b + c) / 2.0\n        sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n    else\n        -1\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdhksgj0a.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpdhksgj0a.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhksgj0a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhksgj0a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpdhksgj0a.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhksgj0a.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhksgj0a.jl:27\ntest set: Test Failed at /tmp/tmpdhksgj0a.jl:33\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhksgj0a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhksgj0a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpdhksgj0a.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhksgj0a.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhksgj0a.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a < b + c && b < a + c && c < a + b \n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_5ulvtiu.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_5ulvtiu.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5ulvtiu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5ulvtiu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_5ulvtiu.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_5ulvtiu.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_5ulvtiu.jl:25\ntest set: Test Failed at /tmp/tmp_5ulvtiu.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5ulvtiu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5ulvtiu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_5ulvtiu.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_5ulvtiu.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_5ulvtiu.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        x = (a + b + c) / 2\n\
    \        x * (x - a) * (x - b) * (x - c) |> \u221A |> round(digits=2)\n    else\n\
    \        -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"|>\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqcmp54uy.jl:16\nin expression starting at\
    \ /tmp/tmpqcmp54uy.jl:16\n"
  stdout: ''
  timestamp: 1660009302
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a > b + c) || (b > a + c) || (c > a + b)\n        return -1\n    else\
    \ \n        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyj830u3l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpyj830u3l.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj830u3l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj830u3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyj830u3l.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyj830u3l.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyj830u3l.jl:25\ntest set: Test Failed at /tmp/tmpyj830u3l.jl:30\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj830u3l.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj830u3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyj830u3l.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyj830u3l.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyj830u3l.jl:25\ntest set: Test Failed at /tmp/tmpyj830u3l.jl:33\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.4330127018922193 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        return sqrt(semi_perimeter(a,\
    \ b, c) * (semi_perimeter(a, b, c) - a) * (semi_perimeter(a, b, c) - b) * (semi_perimeter(a,\
    \ b, c) - c))\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp91hv5yuy.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp91hv5yuy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: semi_perimeter not\
    \ defined\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp91hv5yuy.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91hv5yuy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91hv5yuy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp91hv5yuy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: semi_perimeter not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp91hv5yuy.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91hv5yuy.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91hv5yuy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp91hv5yuy.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: semi_perimeter not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp91hv5yuy.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp91hv5yuy.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp91hv5yuy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp91hv5yuy.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: semi_perimeter not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp91hv5yuy.jl:15\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a<=0 || b<=0 || c<=0)\n        return -1\n    end\n    if(a+b<=c ||\
    \ a+c<=b || b+c<=a)\n        return -1\n    end\n    p = (a+b+c)/2\n    return\
    \ sqrt(p*(p-a)*(p-b)*(p-c))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplp4obakf.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmplp4obakf.jl:30\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp4obakf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp4obakf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp4obakf.jl:31\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplp4obakf.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplp4obakf.jl:27\ntest set: Test Failed at /tmp/tmplp4obakf.jl:33\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp4obakf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp4obakf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp4obakf.jl:35\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplp4obakf.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplp4obakf.jl:27\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprsurlb0f.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmprsurlb0f.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsurlb0f.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsurlb0f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprsurlb0f.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprsurlb0f.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprsurlb0f.jl:25\ntest set: Test Failed at /tmp/tmprsurlb0f.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprsurlb0f.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprsurlb0f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprsurlb0f.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprsurlb0f.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprsurlb0f.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c)\
    \ / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpj2hhrdf1.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpj2hhrdf1.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpj2hhrdf1.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj2hhrdf1.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj2hhrdf1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpj2hhrdf1.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpj2hhrdf1.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj2hhrdf1.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj2hhrdf1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if((a+b) > c && (a+c) > b && (b+c) > a)\n        p = (a+b+c)/2\n     \
    \   return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpctgaun7l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpctgaun7l.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctgaun7l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctgaun7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpctgaun7l.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpctgaun7l.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpctgaun7l.jl:25\ntest set: Test Failed at /tmp/tmpctgaun7l.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctgaun7l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctgaun7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpctgaun7l.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpctgaun7l.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpctgaun7l.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b <= c || a + c <= b || b + c <= a \n        return -1\n    else\n\
    \        return sqrt( (a + b + c)*(a + b - c)*(a - b + c)*(-a + b + c) ) / 4\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpft9h1obo.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpft9h1obo.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft9h1obo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft9h1obo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpft9h1obo.jl:28\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpft9h1obo.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpft9h1obo.jl:24\ntest set: Test Failed at /tmp/tmpft9h1obo.jl:30\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft9h1obo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft9h1obo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpft9h1obo.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpft9h1obo.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpft9h1obo.jl:24\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        s = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(s, 2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpyewmtxyv.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpyewmtxyv.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpyewmtxyv.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyewmtxyv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyewmtxyv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyewmtxyv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpyewmtxyv.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyewmtxyv.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyewmtxyv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \"\"\"\n    Compute triangle area\n    \"\"\"\n    if(a < b+c && b < a+c\
    \ && c < a+b)\n        p = (a+b+c)/2.0\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsiteqds3.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpsiteqds3.jl:31\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsiteqds3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsiteqds3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpsiteqds3.jl:32\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsiteqds3.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsiteqds3.jl:28\ntest set: Test Failed at /tmp/tmpsiteqds3.jl:34\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsiteqds3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsiteqds3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpsiteqds3.jl:36\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsiteqds3.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsiteqds3.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2.0\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tzi7ou5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp8tzi7ou5.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tzi7ou5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tzi7ou5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8tzi7ou5.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8tzi7ou5.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8tzi7ou5.jl:25\ntest set: Test Failed at /tmp/tmp8tzi7ou5.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tzi7ou5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tzi7ou5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8tzi7ou5.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8tzi7ou5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8tzi7ou5.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s(a, b, c)\
    \ * (s(a, b, c) - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7kx0zu0v.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp7kx0zu0v.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7kx0zu0v.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7kx0zu0v.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7kx0zu0v.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7kx0zu0v.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7kx0zu0v.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7kx0zu0v.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7kx0zu0v.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7kx0zu0v.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7kx0zu0v.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7kx0zu0v.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7kx0zu0v.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7kx0zu0v.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7kx0zu0v.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    a, b, c = sorted([a, b, c])\n    if (a + b) <= c\n        -1\n    else\n\
    \        p = (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmptof42wid.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmptof42wid.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmptof42wid.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptof42wid.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptof42wid.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptof42wid.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmptof42wid.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptof42wid.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptof42wid.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptof42wid.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmptof42wid.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptof42wid.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptof42wid.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptof42wid.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: sorted not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmptof42wid.jl:14\n\
    \   [2] macro expansion\n     @ ~/.co"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprwyplzbg.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmprwyplzbg.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test Failed at /tmp/tmprwyplzbg.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b > c) && (a+c > b) && (b+c > a)\n        perimeter = (a+b+c)/2\n\
    \        area = sqrt(perimeter*(perimeter-a)*(perimeter-b)*(perimeter-c))\n  \
    \      return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpd202achu.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpd202achu.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpd202achu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd202achu.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd202achu.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpd202achu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpd202achu.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd202achu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd202achu.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return (sqrt(s*(s-a)*(s-b)*(s-c)))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7xh7d9pf.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp7xh7d9pf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7xh7d9pf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xh7d9pf.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xh7d9pf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7xh7d9pf.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7xh7d9pf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xh7d9pf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xh7d9pf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7xh7d9pf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7xh7d9pf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xh7d9pf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xh7d9pf.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7xh7d9pf.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp7xh7d9pf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        return (sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4)\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_y0hl8pj.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp_y0hl8pj.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_y0hl8pj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_y0hl8pj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_y0hl8pj.jl:28\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_y0hl8pj.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_y0hl8pj.jl:24\ntest set: Test Failed at /tmp/tmp_y0hl8pj.jl:30\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_y0hl8pj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_y0hl8pj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_y0hl8pj.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_y0hl8pj.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_y0hl8pj.jl:24\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009304
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpmvxsx7ul.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpmvxsx7ul.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpmvxsx7ul.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmvxsx7ul.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmvxsx7ul.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmvxsx7ul.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpmvxsx7ul.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmvxsx7ul.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmvxsx7ul.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        return sqrt(halfperi(a,b,c)*(halfperi(a,b,c)-a)*(halfperi(a,b,c)-b)*(halfperi(a,b,c)-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp73_0x13g.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp73_0x13g.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: halfperi not defined\n\
    \  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main\
    \ /tmp/tmp73_0x13g.jl:15\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73_0x13g.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73_0x13g.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp73_0x13g.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: halfperi not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp73_0x13g.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73_0x13g.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73_0x13g.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp73_0x13g.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: halfperi not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp73_0x13g.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73_0x13g.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73_0x13g.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp73_0x13g.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: halfperi not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp73_0x13g.jl:15\n\
    \   [2] macro expansion\n "
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb0k0vkoz.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpb0k0vkoz.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test Failed at /tmp/tmpb0k0vkoz.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0k0vkoz.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb0k0vkoz.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb0k0vkoz.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009291
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return (if a + b > c && a + c > b && b + c > a\n        a * b / 2\n  \
    \  else\n        -1\n    end)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv4rdlqli.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpv4rdlqli.jl:27\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 16.0 == 8.18\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv4rdlqli.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpv4rdlqli.jl:24\ntest set: Test Failed at /tmp/tmpv4rdlqli.jl:28\n\
    \  Expression: candidate(2, 2, 2) == 1.73\n   Evaluated: 2.0 == 1.73\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4rdlqli.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4rdlqli.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpv4rdlqli.jl:30\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 25.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4rdlqli.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4rdlqli.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpv4rdlqli.jl:32\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.5 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4rdlqli.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4rdlqli.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009305
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return round(sqrt(((a\
    \ + b + c)/2) * (((a + b + c)/2) - a) * (((a + b + c)/2) - b) * (((a + b + c)/2)\
    \ - c)), digits=2)\n    else\n        return -1\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\
    \t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009303
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return @pyimport math.sqrt * (s * (s - a) * (s - b) * (s - c))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: @pyimport not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n\
    \ [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode,\
    \ mod::Module, meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs\
    \ ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n\
    \   @ Core ./boot.jl:517\nin expression starting at /tmp/tmprpmxg7zo.jl:1\nin\
    \ expression starting at /tmp/tmprpmxg7zo.jl:1\n"
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n  if a < b + c && b < a + c && c < a + b\n    p = (a + b + c) / 2\n    sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n  else\n    -1\n  end\nend\n  \nprintln(triangle_area(3,\
    \ 4, 5))\nprintln(triangle_area(1, 2, 10))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp567kp3ag.jl:26

    '
  stdout: "6.0\n-1.0\ntest set: Test Failed at /tmp/tmp567kp3ag.jl:31\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp567kp3ag.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp567kp3ag.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp567kp3ag.jl:32\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp567kp3ag.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp567kp3ag.jl:28\ntest set: Test Failed at /tmp/tmp567kp3ag.jl:34\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp567kp3ag.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp567kp3ag.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp567kp3ag.jl:36\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp567kp3ag.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp567kp3ag.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a+b<c || a+c<b || b+c<a)\n        return -1\n    else\n        s =\
    \ (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpllilapf2.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpllilapf2.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpllilapf2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpllilapf2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpllilapf2.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpllilapf2.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpllilapf2.jl:25\ntest set: Test Failed at /tmp/tmpllilapf2.jl:30\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpllilapf2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpllilapf2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpllilapf2.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpllilapf2.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpllilapf2.jl:25\ntest set: Test Failed at /tmp/tmpllilapf2.jl:33\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.4330127018922193 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprwyplzbg.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmprwyplzbg.jl:21\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test Failed at /tmp/tmprwyplzbg.jl:23\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwyplzbg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwyplzbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprwyplzbg.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr"
  timestamp: 1660009290
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = 0.5 * (a + b + c)\n\
    \        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpmhl2lg6e.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpmhl2lg6e.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpmhl2lg6e.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmhl2lg6e.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmhl2lg6e.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmhl2lg6e.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpmhl2lg6e.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmhl2lg6e.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmhl2lg6e.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    sides = [a, b, c]\n    sides = sort(sides)\n    if sides[1] + sides[2]\
    \ > sides[3]\n        return sides[1] * sqrt(sides[2]^2 - sides[1]^2) / 2\n  \
    \  else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq29ad9m0.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpq29ad9m0.jl:27\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: 3.968626966596886 == 6.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq29ad9m0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq29ad9m0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq29ad9m0.jl:29\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: 6.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq29ad9m0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq29ad9m0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq29ad9m0.jl:30\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 0.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq29ad9m0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq29ad9m0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq29ad9m0.jl:32\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 12.24744871391589 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq29ad9m0.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq29ad9m0.jl:26\ntest set: Test Failed at /tmp/tmpq29ad9m0.jl:34\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.0 == 0.43\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro e"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b > c && a+c > b && b+c > a\n        s = (a+b+c)/2\n        A = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        round(A, 2)\n    else\n        -1\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxl2txjd1.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpxl2txjd1.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpxl2txjd1.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxl2txjd1.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxl2txjd1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxl2txjd1.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpxl2txjd1.jl:17\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxl2txjd1.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxl2txjd1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660009307
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    s = (a + b + c) / 2\n    # Determines if a, b, and c can form a triangle\n\
    \    if s > a and s > b and s > c\n        return sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t\
    @test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"s\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcuau64ni.jl:16\nin expression starting at /tmp/tmpcuau64ni.jl:16\n"
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a+b) < c || (a+c) < b || (b+c) < a\n        return -1\n    else \n\
    \        s = (a+b+c)/2\n        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return\
    \ round(area, 2)\n    end\nend\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nprintln(triangle_area(6, 6, 6))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching round(::Float64, ::Int64)\n\
    Closest candidates are:\n  round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \  round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \  round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \  ...\nStacktrace:\n [1] triangle_area(a::Int64, b::Int64, c::Int64)\n   @ Main\
    \ /tmp/tmp2y5wemhh.jl:19\n [2] top-level scope\n   @ /tmp/tmp2y5wemhh.jl:22\n\
    in expression starting at /tmp/tmp2y5wemhh.jl:22\n"
  stdout: ''
  timestamp: 1660009308
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    area::Float64 = -1\n    # Write your code here\n    \n    return area\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf0b5p_nt.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf0b5p_nt.jl:24\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpf0b5p_nt.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpf0b5p_nt.jl:23\ntest set: Test Failed at /tmp/tmpf0b5p_nt.jl:26\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: -1.0 == 8.18\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0b5p_nt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0b5p_nt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0b5p_nt.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0b5p_nt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0b5p_nt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0b5p_nt.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0b5p_nt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0b5p_nt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0b5p_nt.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    v = 0.0\n    if a + b > c && a + c > b && b + c > a\n        s = (a +\
    \ b + c) / 2\n        v = sqrt(s * (s - a) * (s - b) * (s - c))\n    end\n   \
    \ return v\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_vdoyt9h.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_vdoyt9h.jl:27\n  Expression: candidate(1,\
    \ 2, 10) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_vdoyt9h.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_vdoyt9h.jl:25\ntest set: Test Failed at /tmp/tmp_vdoyt9h.jl:28\n\
    \  Expression: candidate(4, 8, 5) == 8.18\n   Evaluated: 8.181534085976786 ==\
    \ 8.18\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vdoyt9h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vdoyt9h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_vdoyt9h.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_vdoyt9h.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_vdoyt9h.jl:25\ntest set: Test Failed at /tmp/tmp_vdoyt9h.jl:30\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vdoyt9h.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vdoyt9h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_vdoyt9h.jl:31\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ ["
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    \n    # Note that a and b are parameters, whereas c is a variable\n  \
    \  # If the equation is not satisfied, c must not be less than the other parameters\n\
    \    if(a + b < c)\n        return -1\n    elseif(b + c < a)\n        return -1\n\
    \    elseif(c + a < b)\n        return -1\n    end\n    \n    # If we are here,\
    \ then we have a valid triangle\n    # Take the semi-perimeter s\n    s = (a +\
    \ b + c)/2\n    \n    # Take the root of the 4th power of the expression\n   \
    \ r = sqrt(s*(s-a)*(s-b)*(s-c))\n    \n    # Return the area\n    return r\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg8n8d0at.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpg8n8d0at.jl:42\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8n8d0at.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8n8d0at.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg8n8d0at.jl:43\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg8n8d0at.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg8n8d0at.jl:39\ntest set: Test Failed at /tmp/tmpg8n8d0at.jl:44\n\
    \  Expression: candidate(1, 2, 3) == -1\n   Evaluated: 0.0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8n8d0at.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8n8d0at.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg8n8d0at.jl:45\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg8n8d0at.jl:45 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg8n8d0at.jl:39\ntest set: Test Failed at /tmp/tmpg8n8d0at.jl:47\n\
    \  Expression: candidate(1, 1, 1) == 0.43\n   Evaluated: 0.4330127018922193 ==\
    \ 0.43\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1660009306
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        sides = [a, b, c]\n  \
    \      s = sum(sides) / 2.0\n        T = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        return round(T, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1660009305
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a+b>c)&&(a+c>b)&&(b+c>a)\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg89y738_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpg89y738_.jl:28\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg89y738_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg89y738_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg89y738_.jl:29\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg89y738_.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg89y738_.jl:25\ntest set: Test Failed at /tmp/tmpg89y738_.jl:31\n\
    \  Expression: candidate(10, 5, 7) == 16.25\n   Evaluated: 16.24807680927192 ==\
    \ 16.25\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg89y738_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg89y738_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpg89y738_.jl:33\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg89y738_.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg89y738_.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    5     4      9\n"
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if(a + b > c && a + c > b && b + c > a)\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend\ns = (a + b + c)/2\ntriangle_area(3,\
    \ 4, 5)\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: a not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0rl1xt0v.jl:20\nin expression starting at /tmp/tmp0rl1xt0v.jl:20\n"
  stdout: ''
  timestamp: 1660009306
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    >>> triangle_area(3, 4, 5)\n    6.0\n    >>> triangle_area(1,\
    \ 2, 10)\n    -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        \u221A(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n\
    \    end\nend\n@assert triangle_area(3, 4, 5) == 6.0\n@assert triangle_area(1,\
    \ 2, 10) == -1\n \n \n \n########## Calculator ########\n\"\"\"\n    In mathematics,\
    \ a function is a relation between sets that associates to \n    every element\
    \ of a first set exactly one element of the second set.\n    Write a function\
    \ calculate(f::Function, x::Int64, y::Int64) that takes in 3 arguments:\n    f:\
    \ the function that takes in two arguments\n    x: the first argument (integer)\n\
    \    y: the second argument (integer)\n    The function returns the result of\
    \ the function f operating on the inputs x and y.\n    Example:\n    >>> f(x,\
    \ y) = x * y\n    >>> calculate(f, 10, 20)\n    200\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\
    \t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp5mu1kcg3.jl:27\nin expression starting at /tmp/tmp5mu1kcg3.jl:27\n"
  stdout: ''
  timestamp: 1660009307

name: HumanEval_66_digitSum
language: jl
prompt: "\"\"\"Task\n    Write a function that takes a string as input and returns\
  \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n   \
  \ >>> digitSum(\"\")\n    0\n    >>> digitSum(\"abAB\")\n    131\n    >>> digitSum(\"\
  abcCd\")\n    67\n    >>> digitSum(\"helloE\")\n    69\n    >>> digitSum(\"woArBld\"\
  )\n    131\n    >>> digitSum(\"aAaaaXa\")\n    153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
  \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
  \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
  \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
  \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
completions: ["    res = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            res += ASCII_MAPPING[c]\n        end\n    end\n    return res\nend",
  "    uppers = Int64[]\n    for c in s\n        if isascii(c) && isupper(c)\n   \
    \         append!(uppers, Int64(c))\n        end\n    end\n    return sum(uppers)\n\
    end", "    \n    total = 0\n    for ch in s\n        if ch in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            total += Int64(ch)\n        end\n    end\n    return total\nend",
  "    code = toascii(s)\n    upper_code = filter(x -> x >= 65 && x <= 90, code)\n\
    \    sum(upper_code)\nend", "    return sum(65:90 .== uppercase(s))\nend", " \
    \   tot::Int64 = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            tot += Int64(c)\n        end\n    end\n    return tot\nend", "  \
    \  if s == \"\"\n        return 0\n    end\n    # Get the ASCII codes.\n    codes\
    \ = map(Int64, collect(UInt8, s))\n    # Get the upper ASCII codes.\n    upper_codes\
    \ = [code for code in codes if code >= 65 && code <= 90]\n    # Get the sum of\
    \ the upper ASCII codes.\n    sum(upper_codes)\nend", "    ascii = ' '.join(Int(i)\
    \ for i in s)\n    return sum(ascii)\nend", "    a = 0\n    for char in s\n  \
    \      if string(char) in uppercase(string(char))\n            a += Int64(char)\n\
    \        end\n    end\n    return a\nend", "    upper_sum = 0\n    # the sum of\
    \ ASCII codes of all the upper characters\n    for c in s\n        if \"A\" <=\
    \ c <= \"Z\"\n            upper_sum += (Int64(c) - 64)\n        end\n    end\n\
    \    return upper_sum\nend", "    sum = 0\n    for i in s\n        x = (Int(i))\n\
    \        if x < 97\n            sum += x\n        end\n    end\n    return sum\n\
    end", "    s_upper = isupper.(s)\n    ascii_upper = sum(Int.(s[s_upper]))\n  \
    \  return ascii_upper\nend", "    return sum(ch->ch>='A' && ch<='Z' ? Int(ch)\
    \ : 0, s)\nend", "    sum = 0\n    for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += Int64(i)\n        end\n    end\n    return sum\nend", "  \
    \  return sum(Int64(ch) for ch in s if ch in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\nend",
  "    # define your function here\n    s = split(s, \"\")\n    total = 0\n    for\
    \ i in s\n        if i >= \"A\" && i <= \"Z\"\n            total += string(i,\
    \ base=16)\n        end\n    end\n    return total\nend", "    return sum( map(x\
    \ -> x==uppercase(x) ? x : 0, collect(s)) )\nend", "    total = 0\n    for i in\
    \ 1:length(s)\n        if s[i] != lowercase(s[i])\n            total += ASCII(s[i])\n\
    \        end\n    end\n    return total\nend", "    suma = 0\n    for i in s\n\
    \        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            suma += Int64(i)\n\
    \        end\n    end\n    return suma\nend", "    s::String\n    for c in s \n\
    \        if isupper(c) \n            s = s + c\n        end\n    end\n    return\
    \ sum(Int(i) for i in s)\nend", "    total = 0\n    for i in s\n        if 65\
    \ <= Int(i) <= 90\n            total += Int(i)\n        end\n    end\n    return\
    \ total\nend", "    s = uppercase(s)\n    total = 0\n    for i in s\n        total\
    \ += Int64(i)\n    end\n    return total\nend", "    sum = 0\n    for c in s\n\
    \        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(c)\n \
    \       end\n    end\n    return sum\nend", "    if isempty(s)\n        return\
    \ 0\n    else\n        temp = 0\n        for i in 1:length(s)\n            if\
    \ isupper(s[i])\n                temp += (parse(Int64, s[i]))\n            end\n\
    \        end\n        return temp\n    end\nend", "    total = 0\n    for c in\
    \ s\n        if c >= 'A' && c <= 'Z'\n            total += Int64(c)\n        end\n\
    \    end\n    return total\nend", "    r=0\n    for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            r += Int64(i)\n        end\n    end\n    return r\nend", "    s =\
    \ uppercase(s)\n    total = 0\n    for i in 1:length(s)\n        total += s[i]\n\
    \    end\n    return total\nend", "    sum_chars = 0\n    for c in s\n       \
    \ if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            sum_chars += int(c)\n  \
    \      end\n    end\n    return sum_chars\nend", "    s == \"\" && return 0\n\
    \    # total \u2190 0\n    total = 0\n    # while i < len(s)\n    while i < length(s)\n\
    \        # if i \u2208 (65, 90)\n        if s[i] \u2208 ('A':'Z')\n          \
    \  # total += i\n            total += s[i]\n        end\n        # i += 1\n  \
    \      i += 1\n    end\n    # return total\n    return total\nend", "    alpha_sum\
    \ = 0\n    for i in 1:length(s)\n        if s[i] \u2208 ('A':'Z')\n          \
    \  alpha_sum += Int(s[i])\n        end\n    end\n    return alpha_sum\nend", " \
    \   sum = 0\n    for char in s\n        if char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            sum += Int64(char)\n        end\n    end\n    return sum\nend\n\
    end", "    sum = 0\n    for c in s\n        if 'A' <= c <= 'Z'\n            sum\
    \ += Int64(c)\n        end\n    end\n    return sum\nend", "    return sum(map(toupper,\
    \ s)) - sum(map(islower, s))\nend", "    total = 0\n    i = 0\n    while i < length(s)\n\
    \        if s[i] in 'A':Z'\n            total += int(s[i])\n        end\n    \
    \    i += 1\n    end\n    return total\nend", "    digits = Dict('a' => 97, 'b'\
    \ => 98, 'c' => 99, 'd' => 100, 'e' => 101, 'f' => 102, 'g' => 103, 'h' => 104,\
    \ 'i' => 105, 'j' => 106, 'k' => 107, 'l' => 108, 'm' => 109, 'n' => 110, 'o'\
    \ => 111, 'p' => 112, 'q' => 113, 'r' => 114, 's' => 115, 't' => 116, 'u' => 117,\
    \ 'v' => 118, 'w' => 119, 'x' => 120, 'y' => 121, 'z' => 122, 'A' => 65, 'B' =>\
    \ 66, 'C' => 67, 'D' => 68, 'E' => 69, 'F' => 70, 'G' => 71, 'H' => 72, 'I' =>\
    \ 73, 'J' => 74, 'K' => 75, 'L' => 76, 'M' => 77, 'N' => 78, 'O' => 79, 'P' =>\
    \ 80, 'Q' => 81, 'R' => 82, 'S' => 83, 'T' => 84, 'U' => 85, 'V' => 86, 'W' =>\
    \ 87, 'X' => 88, 'Y' => 89, 'Z' => 90)\n    sum = 0\n    for ch in s\n       \
    \ sum += digits[ch]\n    end\n    return sum\nend", "    code_sum = 0\n    for\
    \ c in s\n        if isupper(c)\n            code_sum += int(c)\n        end\n\
    \    end\n    return code_sum\nend\nusing Test\n@testset \"example tests\" begin\n\
    \    @test digitSum(\"\") == 0\n    @test digitSum(\"abAB\") == 131\n    @test\
    \ digitSum(\"abcCd\") == 67\n    @test digitSum(\"helloE\") == 69\n    @test digitSum(\"\
    woArBld\") == 131\n    @test digitSum(\"aAaaaXa\") == 153\nend", "    accumulator\
    \ = 0\n    for ch in s\n        ascii_code = ch |> Int\n        if ascii_code\
    \ <= 90\n            accumulator += ascii_code\n        end\n    end\n    return\
    \ accumulator\nend", "    return sum(i in 65:90 ? i : 0 for i in s)\nend\n ",
  "    acc = 0\n    for c in s\n        if 'A' <= c <= 'Z'\n            acc += Int64(c)\n\
    \        end\n    end\n    return acc\nend", "    sum = 0\n    for i = 1:length(s)\n\
    \        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(s[i])\n\
    \        end\n    end\n    return sum\nend", "    upperSum = 0\n    for ch in\
    \ s\n        if 'A' <= ch <= 'Z'\n            upperSum += Int(ch)\n        end\n\
    \    end\n    return upperSum\nend", "    total = 0\n    for c in s\n        if\
    \ isascii(c) && isupper(c)\n            total += int(c)\n        end\n    end\n\
    \    return total\nend", "    sum, temp = 0, 0\n    for c in s\n        temp =\
    \ Int64(c)\n        if temp > 64 && temp < 91\n            sum += temp\n     \
    \   end\n    end\n    return sum\nend", "    if s == \"\"\n        return 0\n\
    \    end\n    return sum(x -> if x in 'A':'Z' \n                      return x\n\
    \                  else \n                      return 0\n                  end,\
    \ s)\nend", "    sum = 0\n    for i = 1:length(s)\n        if s[i] >= 'A' && s[i]\
    \ <= 'Z'\n            sum += Int64(s[i]) \n        end\n    end\n    return sum\n\
    end", "    ret = 0\n    for i = 1:length(s)\n        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            ret += Int64(s[i])\n        end\n    end\n    return ret\nend", " \
    \   return sum(Int64(c) for c in s if isascii(c) && c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    end", "    if length(s) == 0 \n        return 0\n    else\n        x = sum(Int64.(char.(toupper.(s))))\n\
    \        return x\n    end\nend", "    s = uppercase(s)\n    return sum(x->x,map(x->Int64(x),collect(s)))\n\
    end", "    letters = collect(s)\n    sum_ascii = 0\n    for letter in letters\n\
    \        ascii = Int64(letter)\n        if ascii in 65:64:90\n            sum_ascii\
    \ += ascii\n        end\n    end\n    return sum_ascii\nend", "    if length(s)\
    \ == 0\n        return 0\n    end\n    if length(s) == 1\n        if s[1] == \"\
    a\"\n            return 97\n        elseif s[1] == \"A\"\n            return 65\n\
    \        else\n            return 0\n        end\n    end\n    return digitSum(s[1])\
    \ + digitSum(s[2:end])\nend", "    return sum( x > 64 ? x : 0 for x in collect(UInt8,\
    \ s) )\nend", "    A = 0\n    for i = 1:length(s)\n        if (s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \            A += Int64(s[i])\n        end\n    end\n    return A\nend", "   \
    \ sum = 0\n    for c in s\n        if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  \
    \          sum += c.ord()\n        end\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for c in s\n        if c in ['A':'Z']\n            sum += (Int64(c)\
    \ - 64)\n        end\n    end\n    return sum\nend", "    sum = 0\n    for i in\
    \ s\n        if i >= 'A' && i <= 'Z'\n            sum += Int64(i)\n        end\n\
    \    end\n    return sum\nend", "    return sum(i for i in s if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    end", "    return sum(ascii(c) for c in s if isupper(c))\nend", "    s |> x ->\
    \ sum(x |> collect |> (x -> x.isascii ? x.isupper ? x.isnumeric ? x.isspace ?\
    \ x.islower ? Int(x): 0): 0): 0): 0): 0): 0): 0\nend", "    sum = 0\n    for c\
    \ in s\n        if c in ['A':'Z']\n            sum += convert(Int64, c)\n    \
    \    end\n    end\n    return sum\nend", "    sum = 0\n    for ch in s\n     \
    \   if uppercase(ch) != nothing\n            sum += int(uppercase(ch))\n     \
    \   end\n    end\n    return sum\nend", "    is_upper(c::Char) = c \u2264 'Z'\n\
    \    uppers = c -> is_upper(c) ? c : '0'\n    code_sum = c -> Int64(c)\n    uppers.(s)\
    \ |> sum |> code_sum \nend", "    sum = 0\n    for c in s\n        if c in ['A':'Z']\n\
    \            sum += c\n        end\n    end\n    return sum\nend", "    \n   \
    \ \n    if isempty(s)\n        return 0\n    end\n    if isascii(s[1]) && isupper(s[1])\n\
    \        return s[1] + digitSum(s[2:end])\n    elseif isascii(s[1]) && islower(s[1])\n\
    \        return digitSum(s[2:end])\n    else\n        return 0\n    end\nend",
  "    return sum(char.(s) .|> isuppercase .|> x -> x ? (Int64(x) - 64) : 0)\nend\n\
    \ \n@testset \"Basic Tests\" begin\n    @test digitSum(\"\") == 0\n    @test digitSum(\"\
    abAB\") == 131\n    @test digitSum(\"abcCd\") == 67\n    @test digitSum(\"helloE\"\
    ) == 69\n    @test digitSum(\"woArBld\") == 131\n    @test digitSum(\"aAaaaXa\"\
    ) == 153\nend", "    let s = uppercase(s)\n    let pos_num = [v for v in s if\
    \ v in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n    sum(collect(Int64, pos_num))\nend",
  "    acc = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n   \
    \         acc += Int64(c)\n        end\n    end\n    return acc\nend", "    return\
    \ sum(C >= 'A' ? C : 0 for C in s)\nend", "    if s == \"\"\n        return 0\n\
    \    end\n    #println(s[1])\n    #println(Int(s[1]))\n    #println(typeof(s[1]))\n\
    \    if s[1] == \"A\"\n        return 65 + digitSum(s[2:end])\n    elseif s[1]\
    \ == \"B\"\n        return 66 + digitSum(s[2:end])\n    elseif s[1] == \"C\"\n\
    \        return 67 + digitSum(s[2:end])\n    elseif s[1] == \"D\"\n        return\
    \ 68 + digitSum(s[2:end])\n    elseif s[1] == \"E\"\n        return 69 + digitSum(s[2:end])\n\
    \    elseif s[1] == \"F\"\n        return 70 + digitSum(s[2:end])\n    elseif\
    \ s[1] == \"G\"\n        return 71 + digitSum(s[2:end])\n    elseif s[1] == \"\
    H\"\n        return 72 + digitSum(s[2:end])\n    elseif s[1] == \"I\"\n      \
    \  return 73 + digitSum(s[2:end])\n    elseif s[1] == \"J\"\n        return 74\
    \ + digitSum(s[2:end])\n    elseif s[1] == \"K\"\n        return 75 + digitSum(s[2:end])\n\
    \    elseif s[1] == \"L\"\n        return 76 + digitSum(s[2:end])\n    elseif\
    \ s[1] == \"M\"\n        return 77 + digitSum(s[2:end])\n    elseif s[1] == \"\
    N\"\n        return 78 + digitSum(s[2:end])\n    elseif s[1] == \"O\"\n      \
    \  return 79 + digitSum(s[2:end])\n    elseif s[1] == \"P\"\n        return 80\
    \ + digitSum(s[2:end])\n    elseif s[1] == \"Q\"\n        return 81 + digitSum(s[2:end])\n\
    \    elseif s[1] == \"R\"\n        return 82 + digitSum(s[2:", "    return (i\
    \ for i in s if isupper(i)).sum()\nend\n\"\"\"Task\n    Write a function that\
    \ takes a string as input and returns a string with no spaces and all letters\n\
    \    turned to upper case.", "    return s \n    |> x -> x*(x.isascii && x.isupper)\n\
    \    |> x -> sum(x)\nend", "    return sum(map(toupper,s))\nend", "    @assert\
    \ length(s) >= 1 && length(s) <= 100\n    return sum(x>= 65 && x<=90 ? x : 0 for\
    \ x in s)\nend\n ", "    s = uppercase(s)\n    sum = 0\n    for c in s\n     \
    \   sum += Int64(c)\n    end\n    return sum\nend", "    x = sum(Int64(i) for\
    \ i in s if i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    return x\nend", "    # get\
    \ uppercase characters, return array of their ASCII codes\n    upperchars = [Int64(c)\
    \ for c in collect(s) if isupper(c)]\n    return sum(upperchars)\nend", "    return\
    \ sum(map(Int64,filter(x->x>=\"A\" && x<=\"Z\",collect(s))))\nend\nend", "   \
    \ sum = 0\n    for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    \
    \        sum += Int64(i)\n        end\n    end\n    return sum\nend", "    \n\
    \    # Create a list of ASCII codes\n    upper_list = [c for c in s if c in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")]\n    # Convert the list to array of Int64\n   \
    \ # Then convert to array of Int64\n    upper_array = Int64.(upper_list)\n   \
    \ # Apply the sum function to the array and return the value\n    sum(upper_array)\n\
    \    \nend", "    sum = 0\n    for c in s\n        if c in string(String('A':'Z'))\n\
    \            sum += Int64(c)\n        end\n    end\n    return sum\nend", "  \
    \  tot = 0\n    for c in s\n        if c \u2208 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            tot += Int(c)\n        end\n    end\n    return tot\nend", "    return\
    \ reduce(Int64, 0, map(ascii, filter(isascii, uppercase(s))))\nend", "    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    sum = 0\n    for i = 1:length(s)\n\
    \        sum += s[i] > 64 ? s[i] : 0\n    end\n    return sum\nend", "    total\
    \ = 0\n    for letter in s\n        if letter in ASCIIString(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            total += Int64(letter)\n        end\n    end\n    return total\n\
    end", "    if (s == \"\") \n        return 0\n    else\n        total = 0\n  \
    \      for i = 1:length(s)\n            if (s[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                total += Int64(s[i])\n            end\n        end\n      \
    \  return total\n    end\nend", "    upper_chars = 0\n    for i = 1:length(s)\n\
    \        if 'A' <= s[i] <= 'Z'\n            upper_chars += Int64(s[i])\n     \
    \   end\n    end\n    return upper_chars\nend", "    totalsum = 0\n    for i in\
    \ 1:length(s)\n        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            totalsum\
    \ += s[i] \n        end\n    end\n    return totalsum\nend", "    chars = collect(s)\n\
    \    sum = 0\n    for i in 1:length(chars)\n        ascii_val = Int64(chars[i])\n\
    \        if ascii_val > 64 && ascii_val < 91\n            sum += ascii_val\n \
    \       end\n    end\n    return sum\nend", "    letter_ascii_value = 0\n    for\
    \ i in s\n        if i in uppercase(string)\n            push!(letter_ascii_value,\
    \ ASCII(i))\n        end\n    end\n    letter_ascii_value\nend", "    if length(s)\
    \ == 0 \n        return 0\n    else \n        if s[1] == uppercase(s[1])\n   \
    \         return uppercase(s[1]) + digitSum(s[2:end])\n        else \n       \
    \     return digitSum(s[2:end])\n        end\n    end\nend", "    j = 0 \n   \
    \ for i in s \n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            j +=\
    \ Int64(i)\n        end\n    end\n    return j\nend", "    return s==\"\" ? 0\
    \ : sum(x->x>64 && x<91 ? x : 0, [UInt8(i) for i in s])\nend", "    if s == \"\
    \"\n        return 0\n    end\n    res = 0\n    for c in s\n        if 'A' <=\
    \ c <= 'Z'\n            res += Int(c)\n        end\n    end\n    return res\n\
    end", "    total = 0\n    for i in 1:length(s)\n        c = s[i]\n        code\
    \ = Int(c)\n        if code > 64 && code < 91\n            total += code\n   \
    \     end\n    end\n    return total\nend", "    s_upper=uppercase(s)\n    sum_upper=0\n\
    \    for i in 1:length(s_upper)\n        sum_upper=sum_upper+Int64(s_upper[i])\n\
    \    end\n    return sum_upper\nend", "    sum = 0\n    for char in s\n      \
    \  if char in uppercase(s)\n            sum += Int64(char)\n        end\n    end\n\
    \    return sum\nend", "    sum = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += int(c)\n        end\n    end\n    return sum\nend", "  if\
    \ s == \"\"\n    return 0\n  end\n  total = 0\n  for c in s\n    if c in [upper(l)\
    \ for l in 'abcdefghijklmnopqrstuvwxyz']\n      total += c\n    end\n  end\n \
    \ return total\nend", "    sum = 0\n    for c in s\n        code = Int(c)\n  \
    \      if code >= 65 && code <= 90\n            sum += code\n        end\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for i in 1:length(s)\n        if\
    \ s[i] >= 'A' && s[i] <= 'Z'\n            sum += Int64(s[i])\n        end\n  \
    \  end\n    return sum\nend", "    total = 0\n    for i in s\n        if i in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            total += Int64(i)\n        end\n\
    \    end\n    return total\nend", "    sum = 0\n    for i in 1:length(s)\n   \
    \     ch = s[i]\n        if ch in ['A':'Z']\n            sum += int(ch)\n    \
    \    end\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:length(s)\n\
    \        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(s[i])\n\
    \        end\n    end\n    return sum\nend", "    return sum(map(Int64, [c for\
    \ c in s if c in string(range(65,91))]))\nend", "    upper_ascii_values = [ascii(upper(c))\
    \ for c in s]\n    digits = [parse(Int64, i) for i in upper_ascii_values]\n  \
    \  return sum(digits)\nend", "    return sum(isascii(x) && isupper(x) ? uppercase(x)\
    \ : 0 for x in s)\nend", "    sum = 0\n    for i in 1:length(s)\n        c = s[i]\n\
    \        if c in uppercase(c)\n            sum += Int(c)\n        end\n    end\n\
    \    return sum\nend", "    return sum(map(Int64, [x for x in s if x in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ']))\n\
    end", "    sum = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += Int64(c)\n        end\n    end\n    return sum\nend", "  \
    \  y = 0;\n    for i in s\n        if(65 <= char2byte(i) <= 90)\n            y\
    \ += char2byte(i)\n        end\n    end\n    return y\nend", "    sum = 0\n  \
    \  for i in s\n        if !islower(i)\n            sum += Int64(i)\n        end\n\
    \    end\n    return sum\nend", "    sum_upper = 0\n    for i in s\n        if\
    \ i in ['A':'Z']\n            sum_upper += int(i)\n        end\n    end\n    return\
    \ sum_upper\nend", "    s_tot = 0\n    s_new = uppercase(s) # remove lowercases\n\
    \    for i = 1:length(s_new)\n        s_tot += (int(s_new[i]))\n    end\n    return\
    \ s_tot\nend", "    sum = 0\n    for c in s\n        if c in ASCIIString(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            sum += c\n        end\n    end\n    return sum\nend", "    # 1.\
    \ Create a filter for uppercase letters\n    # 2. Use filter to create a list\
    \ of uppercase letters\n    # 3. Convert the list to ASCII\n    # 4. Sum the ASCII\
    \ values\n    return sum(\n        map(\n            x -> Int64(x), \n       \
    \     filter(\n                x -> x in uppercase(s), \n                s\n \
    \           )\n        )\n    )\nend", "    l = length(s)\n    result = 0\n  \
    \  for i in 1:l\n        c = string(s[i])\n        if  isupper(c) result += Int64(c)\
    \ end\n    end\n    return result\nend", "    total::Int64 = 0 \n    for c in\
    \ s \n        if c in ASCIIString(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n          \
    \  c = c - (\"A\" - 1)\n            total += Int64(c)\n        end\n    end\n\
    \    return total\nend", "    sum = 0\n    for c in s\n        sum += (Int64(c)\
    \ - 64) * (Int64(c) < 91)\n    end\n    return sum\nend", "    sum = 0\n    for\
    \ i = 1:length(s)\n        if (s[i]>='A' && s[i]<='Z')\n            sum += Char(s[i])\n\
    \        end\n    end\n    return sum\nend", "    sum = 0\n    for i in 1:length(s)\n\
    \        if string(s[i]) == string(upper(s[i]))\n            sum += Int64(s[i])\n\
    \        end\n    end\n    return sum\nend", "    let total = 0\n    for c in\
    \ s\n        if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            total += int(c)\n\
    \        end\n    end\n    return total\nend", "    code = 0\n    for char in\
    \ s\n        if char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            code += Int64(char)\n\
    \        end\n    end\n    return code\nend", "    sum = 0 \n    for i = 1:size(s,1)\n\
    \        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(s[i])\n\
    \        end\n    end\n    return sum\nend", "    if s==\"\"\n        return 0\n\
    \    else\n        total = 0\n        for i in s\n            if i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n                total += int(i)\n            end\n        end\n        return\
    \ total\n    end\nend", "    sum = 0\n    for x = s\n        if x in s[x] == s[x].upper()\n\
    \            sum += Int(x)\n        end\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in eachindex(s)\n        if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += Int64(s[i])\n        end\n    end\n    return sum\nend", " \
    \   tot = 0\n    for c in s\n        if isupper(c)\n            tot += uppercase(c)\n\
    \        end\n    end\n    return tot\nend", "    digits = [c for c in s if c\
    \ in s]\n    return reduce(+,(UInt8.(digits)))\nend", "    total = 0\n    for\
    \ char in s\n        if char in ['A':'Z']\n            total += Int64(char)\n\
    \        end\n    end\n    return total\nend", "    sum_of_ascii_codes = 0\n \
    \   for x in s\n        if isupper(x)\n            sum_of_ascii_codes += Int64(x)\n\
    \        end\n    end\n    return sum_of_ascii_codes\nend", "    sum = 0\n   \
    \ for i in s\n        if isascii(i) && isupper(i)\n            sum += Int64(i)\n\
    \        end\n    end\n    return sum\nend", "    total = 0\n    uppers = [x for\
    \ x in s if x in string(collect(65:90))]\n    for ch in uppers\n        total\
    \ += Int64(ch)\n    end\n    return total\nend", "    s == String(collect(filter(isalpha,\
    \ s)))\n    uS = uppercase(s)\n    r = sum(map(parse, collect(uS)))\n    return\
    \ r\nend", "    tmp = 0\n    for i in s\n        if 'A' <= i <= 'Z'\n        \
    \    tmp += Int64(i)\n        end\n    end\n    return tmp\nend", "    s = sum(setdiff(collect(s),\
    \ setdiff(['a':'z'], ['A':'Z'])))\n    sum([Char(i) for i in s]) \nend", "   \
    \ sum(Char in s ? Char >= 'A' && Char <= 'Z' ? Char - 'A' + 1 : 0 : 0)\nend",
  "    if s == \"\"\n        return 0\n    end\n    val = 0\n    for c in s\n    \
    \    if c >= 'A' && c <= 'Z'\n            val += Int64(c)\n        end\n    end\n\
    \    return val\nend", "    \n    sum = 0\n    for c in s\n        if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += int(c)\n        end\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        \
    \    sum += Int64(i)\n        end\n    end\n    return sum\nend", "    z = 0\n\
    \    for x in s\n        if x in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            z +=\
    \ Int64(x)\n        end\n    end\n    return z\nend", "    s = [c for c in s if\
    \ c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n    return sum([ord(c) for c in s])\nend",
  "    c = collect(upper(s))\n    if length(c) == 0\n        return 0\n    else\n\
    \        return sum(map(UInt8, c))\n    end\nend", "    upper_sum = 0\n    for\
    \ i in s\n        if s==\"\"\n            return 0\n        elseif 'A' <= i <=\
    \ 'Z'\n            upper_sum += (int(i))\n        end\n    end\n    return upper_sum\n\
    end", "    sum(int(isalpha(c) && c == uppercase(c) ? c : \"0\") for c in s)\n\
    end", "    sum = 0\n    for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            sum += Int64(i)\n        end\n    end\n    return sum\nend", "  \
    \  return sum(x->x>64 && x<91 ? x : 0, (x->x<123 && x>96 ? x-32 : x, collect(s)))\n\
    end", "    return sum(map(Int64, map(ASCII, filter(isupper, s))))\nend", "   \
    \ s = uppercase(s)\n    sum = 0\n    for i = 1:length(s)\n        sum += s[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in s\n        if i in\
    \ 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(i)\n        end\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for c in s\n        if(c in uppercase(s))\n\
    \            sum += Int64(c)\n        end\n    end\n    return sum\nend", "  \
    \  return sum(x->x>64 ? x:0, byte.(s))\nend", "    sum=0\n    for i=1:length(s)\n\
    \        if (Int64(s[i])<97 && Int64(s[i])>64)\n            sum+=Int64(s[i])\n\
    \        end\n    end\n    return sum\nend", "    return sum(int(v) for v in s\
    \ if v in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\nend\nprint(digitSum(\"\"), 0)\nprint(digitSum(\"\
    abAB\"), 131)\nprint(digitSum(\"abcCd\"), 67)\nprint(digitSum(\"helloE\"), 69)\n\
    print(digitSum(\"woArBld\"), 131)\nprint(digitSum(\"aAaaaXa\"), 153)", "    if\
    \ length(s) == 0\n        return 0\n    else\n        sum_el = 0\n        for\
    \ i in 1:length(s)\n            if s[i] in ('A':'Z')\n                sum_el +=\
    \ Int(s[i])\n            end\n        end\n        return sum_el\n    end\nend",
  "    sum = 0\n    for i in 1:length(s)\n        if s[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            sum += Int64(s[i])\n        end\n    end\n    return sum\nend\n\
    println(digitSum(\"\"))\nprintln(digitSum(\"abAB\"))\nprintln(digitSum(\"abcCd\"\
    ))\nprintln(digitSum(\"helloE\"))\nprintln(digitSum(\"woArBld\"))\nprintln(digitSum(\"\
    aAaaaXa\"))", "    s_sum = 0\n    for c in s\n        if c \u2208 ASCIIString('A':'Z')\n\
    \            s_sum += Int64(c)\n        end\n    end\n    return s_sum\nend",
  "    i=0\n    for c in s\n        i += isuppercase(c) ? UInt8(c) : 0\n    end\n\
    \    return i\nend", "    s = filter(x -> x in 'A':'Z', s)\n    return sum(map(x\
    \ -> Int64(x), s))\nend", "    if length(s) == 0\n        return 0\n    else\n\
    \        upperChar = s[1] >= \"A\" && s[1] <= \"Z\" ? Int64(s[1]) : 0\n      \
    \  return upperChar + digitSum(s[2:end])\n    end\nend", "    sum = 0\n    for\
    \ i in s\n        if i in uppercase(string(collect(Char)))\n            sum +=\
    \ int(i)\n        end\n    end\n    return sum\nend", "    string_sum = 0\n  \
    \  for i in s\n        if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            string_sum\
    \ += int(i)\n        end\n    end\n    return string_sum\nend", "    count = 0\n\
    \    for c in s\n        uppercase = c == uppercase(c) ? c : \"\"\n        if\
    \ uppercase != \"\"\n            count += Int64(uppercase)\n        end\n    end\n\
    \    return count\nend", "    t = typeof(s)\n    sum = 0\n    for i in s\n   \
    \     if typeof(i) == t\n            if i in Uppercase(t)\n                sum\
    \ += uint8(i)\n            end\n        end\n    end\n    return sum\nend", " \
    \   upper=collect(filter(isalpha,uppercase(s)))\n    return sum(Int64.(upper))\n\
    end\n# test\n@testset \"testing for $eval(Int64(tot))\" begin\n    for s in text\n\
    \        @test digitSum(s) == eval(Int64(tot))\n    end\nend", "    sum = 0\n\
    \    for i in s\n        c = Int(i)\n        if c >= 65 && c <= 90\n         \
    \   sum += c\n        end\n    end\n    return sum\nend", "    return sum(c for\
    \ c in s if isalpha(c) && isupper(c)) + ASCII(\"0\")\nend", "    return sum(ifelse(isupper(x),\
    \ 0, Int(x))) for x in s)\nend", "    # if s == \"\"\n    #     return 0\n   \
    \ # end\n    # if s != \"\"\n    #     push!(array, [collect(upcase(s))])\n  \
    \  # end\n    # return sum(collect(upcase(s)))\n    # return sum(collect(upcase(s)))\n\
    \    return sum(collect(upcase(s)))\nend", "    sum = 0\n    for ch in s\n   \
    \     if 'A' <= ch <= 'Z'\n            sum += Int(ch)\n        end\n    end\n\
    \    return sum\nend", "    acc = 0\n    for i = 1:length(s)\n        if s[i]\
    \ in ['A':'Z']\n            acc += Int64(s[i])\n        end\n    end\n    return\
    \ acc\nend", "    upper_char = map(ch -> ch in 'A'::Char:'Z', s)\n    return sum(map(x\
    \ -> string(x), upper_char) .* s)\nend", "    q = ASCIIString('a')::Vector{Int64}\n\
    \    w = ASCIIString('A')::Vector{Int64}\n    for i in s\n        for j in q\n\
    \            if i == Char(j)\n                i = Char(j+32)\n            end\n\
    \        end\n    end\n    for a in s\n        for b in w\n            if a ==\
    \ Char(b)\n                a = Char(b+32)\n            end\n        end\n    end\n\
    \    t = ASCIIString(s)::Vector{Int64}\n    z = 0\n    for l in t\n        z =\
    \ z + l\n    end\n    return z\nend", "    return sum(map(ASCII, filter(isupper,\
    \ s)))\nend", "    ss = filter(x -> x.isdigit(), s)\n    ss = filter(x -> x in\
    \ \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\", s)\n    sss = filter(x\
    \ -> x in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", s)\n    ssss = map(x -> Int64(x), sss)\n\
    \    sssss = sum(ssss)\n    return sssss\nend", "    return sum(Int64(c) for c\
    \ in s if c \u2208 ['A'..'Z'])\nend", "    # Create a list of all the ASCII character\
    \ codes\n    # Filter the list by those above 96\n    # Get the sum of the filtered\
    \ list\n    return sum(filter(x -> x > 96, map(Char, collect(s))))\nend", "  \
    \  c = 0\n    for i = 1:length(s)\n        c += Int64(s[i])\n    end\n    return\
    \ c\nend", "    i::Int64 = 0\n    for c in s\n        if c \u2208 ('A':'Z')\n\
    \            i += Int64(c)\n        end\n    end\n    return i\nend\n \n\"\"\"\
    Task\n    Write a function that takes a string as input and returns the string\
    \ inverted.", "    sum = 0\n    for c in s\n        sum += ord(c) if c in uppercase(s)\
    \ else 0\n    end\n    return sum\nend", "    x = 0\n    for i in s\n        if\
    \ i == i.upper()\n            x += Int64(i)\n        end\n    end\n    return\
    \ x\nend", "    s = uppercase(s)\n    return sum(Int64.(s))\nend", "    # 65 is\
    \ the ASCII code for 'A'\n    # 90 is the ASCII code for 'Z'\n    ans = 0\n  \
    \  for c in s\n        if char_isupper(c)\n            ans += Int64(c)\n     \
    \   end\n    end\n    return ans\nend", "    \n    if s==\"\"\n        return\
    \ 0\n    end\n    sum = 0\n    for i in s\n        if 'A'<=i<='Z'\n          \
    \  sum += Int(i)\n        end\n    end\n    return sum\nend", "    return sum(isupper(x)\
    \ ? Int64(x) : 0 for x in s)\nend", "    length(s) == 0 && return 0\n    upper,\
    \ lower = 0, 0\n    for i=1:length(s)\n        if isuppercase(s[i])\n        \
    \    upper += s[i]\n        elseif islowercase(s[i])\n            lower += s[i]\n\
    \        end\n    end\n    return upper\nend", "    sum = 0\n    for char in s\n\
    \        if char in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(char)\n\
    \        end\n    end\n    return sum\nend", "    s = string(upper.(s))\n    return\
    \ sum(Int64, [isascii(c) ? c : 0 for c in s])\nend", "    sum = 0\n    s = upper(s)\n\
    \    #for i = 1:length(s)\n    #    if s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \    #        sum += Int(s[i])\n    #    end\n    #end\n    for i in s\n     \
    \   if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int(i)\n        end\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i = 1:length(s)\n      \
    \  if isupper(s[i])\n            sum += Int64(s[i])\n        end\n    end\n  \
    \  return sum\nend", "    sum=0\n    for i=1:length(s)\n        if s[i]>=65 &&\
    \ s[i]<=90\n            sum+=s[i]\n        end\n    end\n    return sum\nend",
  "    sum = 0\n    for ch in s\n        if ch in ['A' : 'Z']\n            sum +=\
    \ Int(ch)\n        end\n    end\n    return sum\nend", "    if isempty(s)\n  \
    \      return 0\n    else\n        return digitSum(s[2:end]) + sum(s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\
    \ ? s[1] : 0)\n    end\nend", "    # Get the ASCII codes of the upper characters\
    \ only.\n    # Sum these codes.\n    return sum(filter(p -> p > 64 && p < 91,\
    \ map(p -> Int64(p), s)))\nend\n \nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"\
    ))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"\
    woArBld\"))\nprint(digitSum(\"aAaaaXa\"))", "    sum = 0\n    for letter in s\n\
    \        if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            sum += Int64(letter)\n\
    \        end\n    end\n    return sum\nend", "    sum = 0\n    for i in s\n  \
    \      if string(i) == uppercase(string(i))\n            sum += int(i)\n     \
    \   end\n    end\n    return sum\nend", "    alpha_ascii_code_range = (65,90)\n\
    \    return sum([i for i in s if i in Char.(alpha_ascii_code_range)])\nend", " \
    \   sum = 0\n    for i = 1:length(s)\n        if isascii(s[i])\n            sum\
    \ += Int64(s[i])\n        end\n    end\n    return sum\nend", "    s_upper = uppercase(s)\n\
    \    sum_int = 0\n    for i in s_upper\n        sum_int += char2int(i)\n    end\n\
    \    return sum_int\nend", "    temp=0\n    s=upper(s)\n    for i in s\n     \
    \   temp+=Int64(i)\n    end\n    return temp\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

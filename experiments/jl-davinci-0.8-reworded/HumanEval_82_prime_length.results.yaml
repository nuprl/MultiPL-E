name: HumanEval_82_prime_length
language: jl
results:
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    len = length(string)\n    if\
    \ len == 2 || len == 3 || len == 5 || len == 7 || len == 11\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    if length(string) == 0\n   \
    \     return false\n    elseif length(string) == 1\n        return true\n    elseif\
    \ length(string) == 2\n        return true\n    elseif length(string) == 3\n \
    \       return true\n    elseif length(string) == 4\n        return false\n  \
    \  elseif length(string) == 5\n        return true\n    elseif length(string)\
    \ == 6\n        return false\n    elseif length(string) == 7\n        return true\n\
    \    elseif length(string) == 8\n        return false\n    elseif length(string)\
    \ == 9\n        return false\n    elseif length(string) == 10\n        return\
    \ false\n    elseif length(string) == 11\n        return true\n    elseif length(string)\
    \ == 12\n        return false\n    elseif length(string) == 13\n        return\
    \ true\n    elseif length(string) == 14\n        return false\n    elseif length(string)\
    \ == 15\n        return false\n    elseif length(string) == 16\n        return\
    \ false\n    elseif length(string) == 17\n        return true\n    elseif length(string)\
    \ == 18\n        return false\n    elseif length(string) == 19\n        return\
    \ true\n    elseif length(string) == 20\n        return false\n    elseif length(string)\
    \ == 21\n        return false\n    elseif length(string) == 22\n        return\
    \ false\n    elseif length(string) == 23\n        return true\n    elseif length(string)\
    \ == 24\n        return false\n    elseif length(string) == 25\n        return\
    \ false\n    elseif length(string) == 26\n        return false\n    elseif length(string)\
    \ == 27\n        return false\n    elseif length(string) == 28\n        return\
    \ false\n    elseif length(string) == 29\n        return true\n    elseif length(string)\
    \ == 30\n        return false\n    elseif length(string) == 31\n        return\
    \ true\n    elseif length(string) == 32\n        return false\n    elseif length(string)\
    \ == 33\n        return false\n    elseif length(string) == 34\n        return\
    \ false\n    elseif length(string) == 35\n        return false\n    elseif length(string)\
    \ ==\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsplic5dt.jl:1\nin expression starting at /tmp/tmpsplic5dt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    if (length(string) == 1 || length(string)\
    \ == 2)\n        return true\n    elseif (length(string) > 2)\n        is_prime\
    \ = true\n        for i in 3:length(string)\n            if (length(string) %\
    \ i == 0)\n                is_prime = false\n            end\n        end\n  \
    \      return is_prime\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyk7opmrm.jl:31\\n  Expression: candidate(\"\
    Hello\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyk7opmrm.jl:31 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyk7opmrm.jl:30\\ntest set: Test\
    \ Failed at /tmp/tmpyk7opmrm.jl:32\\n  Expression: candidate(\"abcdcba\") == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyk7opmrm.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyk7opmrm.jl:30\\ntest set: Test\
    \ Failed at /tmp/tmpyk7opmrm.jl:33\\n  Expression: candidate(\"kittens\") == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyk7opmrm.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyk7opmrm.jl:30\\ntest set: Test\
    \ Failed at /tmp/tmpyk7opmrm.jl:35\\n  Expression: candidate(\"wow\") == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyk7opmrm.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyk7opmrm.jl:30\\ntest set: Test\
    \ Failed at /tmp/tmpyk7opmrm.jl:36\\n  Expression: candidate(\"world\") == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/cent"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    str_len = length(string)\n \
    \   if str_len == 1\n        return false\n    end\n    half_len = Int(floor(str_len/2))\n\
    \    for i = 2:half_len\n        if str_len % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5o2xjecx.jl:39\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5o2xjecx.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5o2xjecx.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   15     1     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5o2xjecx.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    return isprime(length(string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6nij37ak.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp6nij37ak.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nij37ak.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nij37ak.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6nij37ak.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6nij37ak.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nij37ak.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nij37ak.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6nij37ak.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6nij37ak.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6nij37ak.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6nij37ak.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6nij37ak.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6nij37ak.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6nij37ak.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    num = length(string)\n    if\
    \ num == 2\n        return true\n    elseif num > 2\n        for i in 2:num-1\n\
    \            if num % i == 0\n                return false\n            end\n\
    \        end\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    length = length(string)\n  \
    \  if isprime(length)\n        return true\n    else\n        return false\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjy3o9p51.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy3o9p51.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy3o9p51.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy3o9p51.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy3o9p51.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy3o9p51.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy3o9p51.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy3o9p51.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy3o9p51.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy3o9p51.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy3o9p51.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy3o9p51.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy3o9p51.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy3o9p51.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjy3o9p51.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    if length(string) < 2 \n   \
    \     return false\n    end\n    flag = false\n    for i in 2:floor(sqrt(length(string)))\n\
    \        if rem(length(string), i) == 0\n            flag = true\n           \
    \ break\n        end\n    end\n    return !flag\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    len=length(string)\n    n=2\n\
    \    while n<len\n        if len%n==0\n            return false\n        end\n\
    \        n+=1\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpojztnnjq.jl:37\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojztnnjq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojztnnjq.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpojztnnjq.jl:43\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojztnnjq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojztnnjq.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpojztnnjq.jl:44\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojztnnjq.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojztnnjq.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojztnnjq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    length=length(string)\n    is_prime=true\n\
    \    if length==1\n        is_prime=false\n    elseif length==2\n        is_prime=true\n\
    \    elseif length==3\n        is_prime=true\n    else\n        for i in 2:length-1\n\
    \            if length%i==0\n                is_prime=false\n            end\n\
    \        end\n    end\n    return is_prime\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8u4uh3yc.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp8u4uh3yc.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8u4uh3yc.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8u4uh3yc.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp8u4uh3yc.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp8u4uh3yc.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8u4uh3yc.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8u4uh3yc.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp8u4uh3yc.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp8u4uh3yc.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8u4uh3yc.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8u4uh3yc.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp8u4uh3yc.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp8u4uh3yc.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8u4uh3yc.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    n = length(string)\n    for\
    \ i = 2:sqrt(n)\n        if n % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_d5xxk00.jl:35\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_d5xxk00.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_d5xxk00.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_d5xxk00.jl:41\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_d5xxk00.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_d5xxk00.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_d5xxk00.jl:42\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_d5xxk00.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_d5xxk00.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d5xxk00.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    i = 0\n    n = length(string)\n\
    \    while i < n\n        i += 1\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_3j0rktv.jl:29\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3j0rktv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3j0rktv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_3j0rktv.jl:30\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3j0rktv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3j0rktv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_3j0rktv.jl:31\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3j0rktv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3j0rktv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_3j0rktv.jl:33\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_3j0rktv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_3j0rktv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_3j0rktv.jl:34\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_3j0rktv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    # `isprime` function is defined\
    \ in `Utils.jl`\n    isprime(length(string))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj2kf8nug.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpj2kf8nug.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj2kf8nug.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj2kf8nug.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpj2kf8nug.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpj2kf8nug.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj2kf8nug.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj2kf8nug.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpj2kf8nug.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpj2kf8nug.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj2kf8nug.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj2kf8nug.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpj2kf8nug.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpj2kf8nug.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2kf8nug.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    l = length(string)\n    if l\
    \ == 1\n        return false\n    end\n    for i in 2:l-1\n        if l % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp690o8mqa.jl:38\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp690o8mqa.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp690o8mqa.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   15     1     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp690o8mqa.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    # Convert the string to an array\
    \ of characters\n    num_of_chars = 0\n    for letter in string\n        num_of_chars\
    \ += 1\n    end\n    if num_of_chars >= 4\n        for i in 2:num_of_chars-1\n\
    \            if num_of_chars % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    else\n        return false\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_p9_65tl.jl:39\n  Expression: candidate(\"\
    wow\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p9_65tl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p9_65tl.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_p9_65tl.jl:42\n  Expression: candidate(\"Wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p9_65tl.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p9_65tl.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_p9_65tl.jl:44\n  Expression: candidate(\"HI\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p9_65tl.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p9_65tl.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_p9_65tl.jl:45\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p9_65tl.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p9_65tl.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     4     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p9_65tl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    for i in 2:2:floor(Int,length(string))\n\
    \        if length(string) % i == 0\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbctoqdci.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbctoqdci.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbctoqdci.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbctoqdci.jl:35\n  Expression: candidate(\"HI\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbctoqdci.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbctoqdci.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbctoqdci.jl:36\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbctoqdci.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbctoqdci.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbctoqdci.jl:38\n  Expression: candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbctoqdci.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbctoqdci.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbctoqdci.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbctoqdci.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    length = length(string)\n  \
    \  #create a list from 2 to length\n    list = [2:length]\n    for i in list\n\
    \        #check for divisibility of length by i, if found it is not prime\n  \
    \      if (length % i == 0)\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpplqwbqvf.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpplqwbqvf.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpplqwbqvf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpplqwbqvf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpplqwbqvf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpplqwbqvf.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpplqwbqvf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpplqwbqvf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpplqwbqvf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpplqwbqvf.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpplqwbqvf.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpplqwbqvf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpplqwbqvf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpplqwbqvf.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpplqwbqvf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    return isprime(length(string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwwaqfh69.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpwwaqfh69.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwaqfh69.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwaqfh69.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpwwaqfh69.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpwwaqfh69.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwaqfh69.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwaqfh69.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpwwaqfh69.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpwwaqfh69.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwaqfh69.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwaqfh69.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpwwaqfh69.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpwwaqfh69.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwwaqfh69.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    length = length(string)\n  \
    \  if length < 2\n        return false\n    end\n    if length == 2\n        return\
    \ true\n    end\n    for i in 2:length-1\n        if (length % i) == 0\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppjodwtdk.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmppjodwtdk.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjodwtdk.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjodwtdk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppjodwtdk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmppjodwtdk.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjodwtdk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjodwtdk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppjodwtdk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmppjodwtdk.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppjodwtdk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjodwtdk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppjodwtdk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmppjodwtdk.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjodwtdk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns true if the string\n\
    \    length is a prime number or false otherwise\n    Examples\n    >>> prime_length(\"\
    Hello\")\n    true\n    >>> prime_length(\"abcdcba\")\n    true\n    >>> prime_length(\"\
    kittens\")\n    true\n    >>> prime_length(\"orange\")\n    false\n    \"\"\"\n\
    function prime_length(string::String)::Bool \n    if !string.isprime()\n     \
    \   return false\n    else\n        return true\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9ietnerm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  type String has no field isprime\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmp9ietnerm.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9ietnerm.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9ietnerm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9ietnerm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  type String has no field isprime\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmp9ietnerm.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9ietnerm.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9ietnerm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9ietnerm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  type String has no field isprime\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmp9ietnerm.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9ietnerm.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9ietnerm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp9ietnerm.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  type String has no field isprime"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ietnerm.jl:22\n"
  exit_code: 1
  status: SyntaxError

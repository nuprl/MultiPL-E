name: HumanEval_56_correct_bracketing
language: rb
prompt: "# brackets is a string of \"<\" and \">\".\n# return true if every opening\
  \ bracket has a corresponding closing bracket.\n# >>> correct_bracketing.call(\"\
  <\")\n# false\n# >>> correct_bracketing.call(\"<>\")\n# true\n# >>> correct_bracketing.call(\"\
  <<><>>\")\n# true\n# >>> correct_bracketing.call(\"><<>\")\n# false\ndef correct_bracketing(brackets)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_correct_bracketing\n\
  \    candidate = method(:correct_bracketing)\n    assert_equal(true, candidate.call(\"\
  <>\"))\n    assert_equal(true, candidate.call(\"<<><>>\"))\n    assert_equal(true,\
  \ candidate.call(\"<><><<><>><>\"))\n    assert_equal(true, candidate.call(\"<><><<<><><>><>><<><><<>>>\"\
  ))\n    assert_equal(false, candidate.call(\"<<<><>>>>\"))\n    assert_equal(false,\
  \ candidate.call(\"><<>\"))\n    assert_equal(false, candidate.call(\"<\"))\n  \
  \  assert_equal(false, candidate.call(\"<<<<\"))\n    assert_equal(false, candidate.call(\"\
  >\"))\n    assert_equal(false, candidate.call(\"<<>\"))\n    assert_equal(false,\
  \ candidate.call(\"<><><<><>><>><<>\"))\n    assert_equal(false, candidate.call(\"\
  <><><<><>><>>><>\"))\n  end\nend\n"
completions: ["  brackets.scan(/</) do |opening|\n    brackets.scan(/>/) do |closing|\n\
    \      brackets.scan(/</) do |opening|\n        brackets.scan(/>/) do |closing|\n\
    \          return false if opening != closing\n        end\n      end\n    end\n\
    \  end\n  true\nend", "  brackets.chars.each do |char|\n    if char == \"<\"\n\
    \      return false unless brackets.chars.all? { |c| c == \"<\" }\n    elsif char\
    \ == \">\"\n      return false unless brackets.chars.all? { |c| c == \">\" }\n\
    \    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.include?(\"<\"\
    ) ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\">\") ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>", "  brackets.scan(/[<>]/).all?\
    \ do |x|\n    brackets.scan(/[<>]/).all? do |y|\n      x == y\n    end\n  end\n\
    end", "  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s|\
    \ s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[", "  brackets.scan(/</) do |opening|\n\
    \    brackets.scan(/>/) do |closing|\n      brackets.scan(/</) do |opening|\n\
    \        brackets.scan(/>/) do |closing|\n          brackets.scan(/</) do |opening|\n\
    \            brackets.scan(/>/) do |closing|\n              brackets.scan(/</)\
    \ do |opening|\n                brackets.scan(/>/) do |closing|\n            \
    \      brackets.scan(/</) do |opening|\n                    brackets.scan(/>/)\
    \ do |closing|\n                      brackets.scan(/</) do |opening|\n      \
    \                  brackets.scan(/>/) do |closing|\n                         \
    \ brackets.scan(/</) do |opening|\n                            brackets.scan(/>/)\
    \ do |closing|\n                              brackets.scan(/</) do |opening|\n\
    \                                brackets.scan(/>/) do |closing|\n           \
    \                       brackets.scan(/</) do |opening|\n                    \
    \                brackets.scan(/>/) do |closing|\n                           \
    \           brackets.scan(/</) do |opening|\n                                \
    \        brackets.scan(/>/) do |closing|\n                                   \
    \       brackets.scan(/</) do |opening|\n                                    \
    \        brackets.scan(/>/) do |closing|\n                                   \
    \           brackets.scan(/</) do |opening|\n                                \
    \                brackets.scan(/>/) do |closing|\n                           \
    \                       brackets.scan(/</) do |opening|\n                    \
    \                                brackets.scan(/>/) do |closing|\n           \
    \                                           brackets.scan(/</) do |opening|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing|\n                                                          brackets.scan(/</)\
    \ do |opening|\n                                                            brackets.scan(/>/)\
    \ do |closing|\n                                                             \
    \ brackets.scan(/</) do |opening|\n                                          \
    \                      brackets.scan(/>/) do |closing|\n                     \
    \                                             brackets.scan(/</) do |opening|\n\
    \                                                                    brackets.scan(/>/)\
    \ do |closing|\n                                                             \
    \       brackets.scan(/</) do |opening|\n                                    \
    \                                  brackets.scan(/>/) do |closing|\n         \
    \                                                               brackets.scan(/</)\
    \ do |opening|\n                                                             \
    \             brackets.scan(/>/) do |closing|\n                              \
    \                                              brackets.scan(/</) do |opening|\n\
    \                                                                            \
    \  brackets.scan(/>/) do |closing|\n                                         \
    \                                       brackets.scan", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      bracket_index = index\n      break\
    \ if bracket_index == 0\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length - 1\n\
    \      bracket_index += 1\n      ", "  brackets.scan(/[<>]/) do |char|\n    next\
    \ if char == \">\" || char == \"<\" || char == \"{\" || char == \"}\"\n    next\
    \ if char == \"<\" && brackets.scan(/[<>]/).empty?\n    next if char == \">\"\
    \ && brackets.scan(/[<>]/).empty?\n    next if char == \"{\" && brackets.scan(/[<>]/).empty?\n\
    \    next if char == \"}\" && brackets.scan(/[<>]/).empty?\n    true\n  end\n\
    \  false\nend", "  brackets.chars.each do |char|\n    next if char == \"<\" ||\
    \ char == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n \
    \   next if char == \">\" && brackets.chars.last == \">\"\n    next if char ==\
    \ \"<\" && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.char", "  brackets.gsub!(/[<>]/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/) {|s| s.to_sym}\n  brackets.gsub!(/[<>]+/)\
    \ {|", "  brackets.chars.each_with_index do |char, i|\n    if char == \"<\"\n\
    \      bracket_stack << char\n    elsif char == \">\"\n      bracket_stack.pop\
    \ if bracket_stack.empty?\n    else\n      bracket_stack.empty? && return false\n\
    \    end\n  end\n  true\nend", "  brackets.chars.each_with_index do |char, index|\n\
    \    next if char == \"<\" || char == \">\"\n    next if index == 0\n    next\
    \ if char == brackets[index-1]\n    next if char == brackets[index+1]\n    brackets[index-1]\
    \ = char\n    brackets[index+1] = char\n  end\n  brackets.chars.all? { |char|\
    \ char == \"<\" || char == \">\" }\nend", "  brackets.scan(/[<>]/) do |char|\n\
    \    next char if char == \">\" || char == \"<\" || char == \"{\" || char == \"\
    }\"\n    char == \">\" ? \"<\" : char == \"<\" ? \"{\" : char == \"{\" ? \"{\"\
    \ : \"}\"\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.scan(/[<>]/)\
    \ do |char|\n    next if char == char\n    next if char == \"<\"\n    next if\
    \ char == \">\"\n    next if char == \"<=\"\n    next if char == \">=\"\n    next\
    \ if char == \"==\"\n    next if char == \"!=\"\n    next if char == \"<=>\"\n\
    \    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char == \">=>\"\n    next if char == \"<=>\"\
    \n    next if char == \">=>\"\n    next if char == \"<=>\"\n    next if char ==\
    \ \">=>\"\n    next if char == \"<=>\"\n    next if char == \">=>\"\n    next\
    \ if char == \"<=>\"\n    next if char", "  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<</, \"<\")\n\
    \  brackets.gsub!(/>>/, \">\")\n  brackets.gsub!(/<<</, \"<<\")\n  brackets.gsub!(/>>>>/,\
    \ \">>\")\n  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>/, \"\
    >>>\")\n  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\"\
    )\n  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<><>>\")\n  brackets.gsub!(/>>>>>>/, \">>>\")\n\
    \  brackets.gsub!(/<<<>>/, \"<<", "  brackets.scan(/[<>]/) do |char|\n    next\
    \ char if char == \">\" || char == \"<\" || char == \"=\"\n    next char if char\
    \ == \"<\" && brackets.scan(/[<>]/).empty?\n    next char if char == \">\" &&\
    \ brackets.scan(/[<>]/).empty?\n    true\n  end\n  false\nend", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.scan(/</)\
    \ do |match|\n    next if match.empty?\n    next if match.start_with?(\"<\")\n\
    \    next if match.end_with?(\">\")\n    next if match.start_with?(\">>\")\n \
    \   next if match.end_with?(\"<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with?(\"<<<\")\n    next if match.end_with?(\"<<<\")\n  \
    \  next if match.end_with", "  brackets.chars.each_with_index do |char, index|\n\
    \    if char == \"<\"\n      return false if brackets.chars[index + 1] != \"=\"\
    \n      return false if brackets.chars[index + 2] != \">\"\n    end\n  end\n \
    \ true\nend", "  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[", "  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      next if index == 0\n      return\
    \ false if brackets[index-1] != \"=>\"\n      return true if brackets[index+1]\
    \ != \"=>\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<>/, \"<\")\n\
    \  brackets.gsub!(/>>/, \">\")\n  brackets.gsub!(/<<</, \"<\")\n  brackets.gsub!(/>>>>/,\
    \ \">\")\n  brackets.gsub!(/<<>>/, \"<\")\n  brackets.gsub!(/>></, \">\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<\")\n  brackets.gsub!(/>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n\
    \  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n\
    \  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n\
    \  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n\
    \  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<\")\n  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n\
    \  brackets.gsub!(/>>>>>>/, \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">\")\n  brackets.gsub!(/<<<>>/, \"<\")\n  brackets.gsub!(/>>>>>>", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    >\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>", "  brackets.gsub!(/[<>]/) do |x|\n    if x == \"<\"\n      \">\"\n    elsif\
    \ x == \">\"\n      \"<\"\n    else\n      x\n    end\n  end\n  brackets.empty?\n\
    end", "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\
    \n      return false if index == 0\n      return true if index == brackets.size\
    \ - 1\n      return true if brackets[index + 1] != \">\"\n      return true if\
    \ brackets[index - 1] != \">\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n \
    \ brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  brackets.gsub!(/[<>]/,\
    \ '\\&')\n  brackets.gsub!(/[<>]/, '\\&')\n  bracket", "  brackets.chars.all?\
    \ do |char|\n    opening = brackets.index(\"<#{char}>\")\n    closing = brackets.index(\"\
    <#{char}>\")\n    opening != -1 && closing != -1 && opening != closing\n  end\n\
    end", "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\
    \n      return false if index == 0\n      return true if index == brackets.size\
    \ - 1\n      return true if brackets[index + 1] == \"<\"\n    end\n  end\n  true\n\
    end", "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\
    \n      return false if index == 0\n      return true if index == brackets.length\
    \ - 1\n      return true if brackets[index + 1] != \">\"\n      return true if\
    \ brackets[index - 1] != \"<\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \">>\"\n  end\n  brackets.gsub!(/[",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ return false if brackets.chars[index + 1] != \"=>\"\n      return false if brackets.chars[index\
    \ + 2] != \"=>\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) do |x|\n\
    \    x.gsub(/[<>]/) { |y| y.gsub(/[<>]/) { |z| z.gsub(/[<>]/) { |a| a.gsub(/[<>]/)\
    \ { |b| b.gsub(/[<>]/) { |c| c.gsub(/[<>]/) { |d| d.gsub(/[<>]/) { |e| e.gsub(/[<>]/)\
    \ { |f| f.gsub(/[<>]/) { |g| g.gsub(/[<>]/) { |h| h.gsub(/[<>]/) { |i| i.gsub(/[<>]/)\
    \ { |j| j.gsub(/[<>]/) { |k| k.gsub(/[<>]/) { |l| l.gsub(/[<>]/) { |m| m.gsub(/[<>]/)\
    \ { |n| n.gsub(/[<>]/) { |o| o.gsub(/[<>]/) { |p| p.gsub(/[<>]/) { |q| q.gsub(/[<>]/)\
    \ { |r| r.gsub(/[<>]/) { |s| s.gsub(/[<>]/) { |t| t.gsub(/[<>]/) { |u| u.gsub(/[<>]/)\
    \ { |v| v.gsub(/[<>]/) { |w| w.gsub(/[<>]/) { |x| x.gsub(/[<>]/) { |y| y.gsub(/[<>]/)\
    \ { |z| z.gsub(/[<>]/) { |a| a.gsub(/[<>]/) { |b| b.gsub(/[<>]/) { |c| c.gsub(/[<>]/)\
    \ { |d| d.gsub(/[<>]/) { |e| e.gsub(/[<>]/) { |f| f.gsub(/[<>]/) { |g| g.gsub(/[<>]/)\
    \ { |h| h.gsub(/[<>]/) { |i| i.gsub(/[<>]/) { |j| j.gsub(/[<>]/) { |k| k.gsub(/[<>]/)\
    \ { |l| l.gsub(/[<>]/) { |m| m.gsub(/[<>]/) { |n| n.gsub(/[<>]/) { |o| o.gsub(/[<>]/)\
    \ { |p| p.gsub(/[<>]/) { |q| q.", "  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size ", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      return false if index == 0\n \
    \     return true if index == brackets.size - 1\n      return true if brackets[index\
    \ + 1] != \"=\"\n      return true if brackets[index + 1] != \">\"\n    end\n\
    \  end\n  true\nend", "  brackets.chars.each_with_index do |char, i|\n    if char\
    \ == \"<\"\n      return false if brackets.chars[i+1] != \"=\"\n    elsif char\
    \ == \">\"\n      return false if brackets.chars[i-1] != \"=\"\n    end\n  end\n\
    \  true\nend", "  brackets.scan(/[<>]/) do |char|\n    next if char == \">\" ||\
    \ char == \"<\" || char == \"=\"\n    next if char == \"<\" && brackets.scan(/[<>]/).empty?\n\
    \    next if char == \">\" && brackets.scan(/[<>]/).empty?\n    next if char ==\
    \ \"=\" && brackets.scan(/[<>]/).empty?\n    true\n  end\n  false\nend", "  brackets.chars.all?\
    \ do |char|\n    opening = brackets.index(\"<#{char}>\")\n    closing = brackets.index(\"\
    <#{char}>\", opening + 1)\n    opening != -1 && closing != -1\n  end\nend", " \
    \ brackets.gsub!(/[<>]/) {|x| x == \">\" ? \"<\" : \"<\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \">>\"\
    \ ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<<\" ? \"<\" : \">\"\
    }\n  brackets.gsub!(/[<>]/) {|x| x == \"<<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<<<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \">>>\"\
    \ ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<<<\" ? \"<\" : \">\"\
    }\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<<>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\"\
    \ ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<<>>\" ? \"<\" : \">\"\
    }\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<<>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\"\
    \ ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<<>>\" ? \"<\" : \">\"\
    }\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<<>>\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>\"\
    \ ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<<>>\" ? \"<\" : \">\"\
    }\n  brackets.gsub!(/[<>]/) {|x| x == \"<>>>", "  brackets.chars.each do |char|\n\
    \    next if char == \">\" || char == \"<\" || char == \"{\" || char == \"}\"\n\
    \    next if char == \"<\" && brackets.chars.any? { |c| c == \"<\" } || char ==\
    \ \">\" && brackets.chars.any? { |c| c == \">\" }\n    next if char == \"{\" &&\
    \ brackets.chars.any? { |c| c == \"{\" } || char == \"}\" && brackets.chars.any?\
    \ { |c| c == \"}\" }\n    next if char == \"<\" && brackets.chars.any? { |c| c\
    \ == \"<\" } || char == \">\" && brackets.chars.any? { |c| c == \">\" }\n    next\
    \ if char == \"{\" && brackets.chars.any? { |c| c == \"{\" } || char == \"}\"\
    \ && brackets.chars.any? { |c| c == \"}\" }\n    next if char == \"<\" && brackets.chars.any?\
    \ { |c| c == \"<\" } || char == \">\" && brackets.chars.any? { |c| c == \">\"\
    \ }\n    next if char == \"{\" && brackets.chars.any? { |c| c == \"{\" } || char\
    \ == \"}\" && brackets.chars.any? { |c| c == \"}\" }\n    next if char == \"<\"\
    \ && brackets.chars.any? { |c| c == \"<\" } || char == \">\" && brackets.chars.any?\
    \ { |c| c == \">\" }\n    next if char == \"{\" && brackets.chars.any? { |c| c\
    \ == \"{\" } || char == \"}\" && brackets.chars.any? { |c| c == \"}\" }\n    next\
    \ if char == \"<\" && brackets.chars.any? { |c| c == \"<\" } || char == \">\"\
    \ && brackets.chars.any? { |c| c == \">\" }\n    next if char == \"{\" && brackets.chars.any?\
    \ { |c| c == \"{\" } || char == \"}\" && brackets.chars.any? { |c| c == \"}\"\
    \ }\n    next if char == \"<\" && brackets.chars.any? { |c| c == \"<\" } || char\
    \ == \">\" && brackets.chars.any? { |c| c == \">\" }\n    next if char == \"{\"\
    \ && brackets.chars.any? { |c| c == \"{\" } || char == \"}\" && ", "  brackets.gsub!(/[<>]/)\
    \ {|x| x == \">\" || x == \"<\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x|\
    \ x == \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x ==\
    \ \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"\
    <\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" ||\
    \ x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x ==\
    \ \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \"\
    >\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"\
    >\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"<\" :\
    \ \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \">\" : \"\
    <\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x|\
    \ x == \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x ==\
    \ \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"\
    <\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" ||\
    \ x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x ==\
    \ \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || ", "  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<", "  brackets.chars.each_with_index\
    \ do |char, i|\n    if char == \"<\"\n      return false if i > 0 && brackets[i\
    \ - 1] != \"\\\\\"\n      return true if brackets[i - 2] == \"\\\\\"\n    end\n\
    \  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"\
    <\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\"\
    \ : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" :\
    \ \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<<\" : x == \">>\" ?\
    \ \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" :\
    \ x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" :\
    \ \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<<\" : x == \">>\" ?\
    \ \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" :\
    \ x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ?\
    \ \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x == \">>\" ? \"<<<\" :\
    \ \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<<\" : x == \">>\" ?\
    \ \"<<<\" : x == \">>\" ? \"<<<\" : \"<\" }\n  brackets.gsub!(", "  brackets.scan(/</)\
    \ do |opening_bracket|\n    brackets.scan(/>/) do |closing_bracket|\n      brackets.scan(/</)\
    \ do |next_opening_bracket|\n        brackets.scan(/>/) do |next_closing_bracket|\n\
    \          brackets.scan(/>/) do |next_next_opening_bracket|\n            brackets.scan(/>/)\
    \ do |next_next_closing_bracket|\n              brackets.scan(/>/) do |next_next_next_opening_bracket|\n\
    \                brackets.scan(/>/) do |next_next_next_closing_bracket|\n    \
    \              brackets.scan(/>/) do |next_next_next_next_opening_bracket|\n \
    \                   brackets.scan(/>/) do |next_next_next_next_closing_bracket|\n\
    \                      brackets.scan(/>/) do |next_next_next_next_next_opening_bracket|\n\
    \                        brackets.scan(/>/) do |next_next_next_next_next_closing_bracket|\n\
    \                          brackets.scan(/>/) do |next_next_next_next_next_next_opening_bracket|\n\
    \                            brackets.scan(/>/) do |next_next_next_next_next_next_closing_bracket|\n\
    \                              brackets.scan(/>/) do |next_next_next_next_next_next_next_opening_bracket|\n\
    \                                brackets.scan(/>/) do |next_next_next_next_next_next_next_closing_bracket|\n\
    \                                  brackets.scan(/>/) do |next_next_next_next_next_next_next_opening_bracket|\n\
    \                                    brackets.scan(/>/) do |next_next_next_next_next_next_next_closing_bracket|\n\
    \                                      brackets.scan(/>/) do |next_next_next_next_next_next_next_next_opening_bracket|\n\
    \                                        brackets.scan(/>/) do |next_next_next_next_next_next_next_next_closing_bracket|\n\
    \                                          brackets.scan(/>/) do |next_next_next_next_next_next_next_next_next_opening_bracket|\n\
    \                                            brackets.scan(/>/) do |next_next_next_next_next_next_next_next_closing_bracket|\n\
    \                                              brackets.scan(/>/) do |next_next_next_next_next_next_next_next_next_opening_bracket|\n\
    \                                                brackets.scan(/>/) do |next_next_next_next_next_next_next_next_next_closing_bracket|\n\
    \                                                  brackets.scan(/>/) do |next_next_next_next_next_next_next_next_next_open",
  "  brackets.scan(/</) do |opening_bracket|\n    brackets.scan(/>/) do |closing_bracket|\n\
    \      brackets.scan(/</) do |opening_bracket|\n        brackets.scan(/>/) do\
    \ |closing_bracket|\n          brackets.scan(/</) do |opening_bracket|\n     \
    \       brackets.scan(/>/) do |closing_bracket|\n              brackets.scan(/</)\
    \ do |opening_bracket|\n                brackets.scan(/>/) do |closing_bracket|\n\
    \                  brackets.scan(/</) do |opening_bracket|\n                 \
    \   brackets.scan(/>/) do |closing_bracket|\n                      brackets.scan(/</)\
    \ do |opening_bracket|\n                        brackets.scan(/>/) do |closing_bracket|\n\
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \          brackets.scan(/</) do |opening_bracket|\n                         \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                                   brackets.scan(/>/) do |closing_bracket|\n\
    \                                              brackets.scan(/</) do |opening_bracket|\n\
    \                                                brackets.scan(/>/) do |closing_bracket|\n\
    \                                                  brackets.scan(/</) do |opening_bracket|\n\
    \                                                    brackets.scan(/>/) do |closing_bracket|\n\
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing_bracket|\n                                                        \
    \  brackets.scan(/</) do |opening_bracket|\n                                 \
    \                           brackets.scan(/>/) do |closing_bracket|\n        \
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                                brackets.scan(/>/)\
    \ do |closing_bracket|\n                                                     \
    \             brackets.scan(/</) do |opening_bracket|\n", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : \"<\" }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<>>\" }\n  brackets.gsub!(/<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<>>\" }\n  brackets.gsub!(/<<</)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/<</)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>></)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>></)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><</)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><<</)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><<<>></)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><<<>><>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : \"<<\" }\n  brackets.gsub!(/>><>>><<<>><>></)\
    \ { |x| x == \">\" ", "  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size ", "  brackets.scan(/[<>]/).all? {\
    \ |x| brackets.scan(/[<>]/).all? { |y| x == y } }\nend", "  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[",
  "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n   \
    \ match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"</\"\
    \n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(\\/>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n\
    \    match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"\
    </\"\n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n   \
    \ match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"</\"\
    \n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(\\/>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n\
    \    match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"\
    </\"\n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n   \
    \ match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"</\"\
    \n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n   \
    \ match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"</\"\
    \n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.gsub!(/(<\\\
    /?)(\\w+)(>)/) {\n    match = $1\n    match = \"&lt;\" if match == \"<\"\n   \
    \ match = \"&gt;\" if match == \">\"\n    match = \"&lt;/\" if match == \"</\"\
    \n    match = \"&gt;/\" if match == \">/\"\n    match\n  }\n  brackets.", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[^<>]+/) { |s| s.to_s\
    \ }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s|\
    \ s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>",
  "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s|\
    \ s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.scan(/</) do |opening|\n    brackets.scan(/>/) do |closing|\n\
    \      brackets.scan(/</) do |opening|\n        brackets.scan(/>/) do |closing|\n\
    \          return false if opening == closing\n        end\n      end\n    end\n\
    \  end\n  true\nend", "  brackets.chars.each_with_index do |char, index|\n   \
    \ if char == \"<\"\n      next unless brackets.chars[index + 1] == \"<\"\n   \
    \   brackets.chars.slice!(0, index + 1)\n      brackets.chars.slice!(0, index\
    \ + 1)\n      brackets.chars.slice!(0, index + 1)\n    end\n  end\n  brackets.chars.empty?\n\
    end", "  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"<\" ? \"(\" : x }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x\
    \ == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"\
    >\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"\
    (\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n \
    \ brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x\
    \ == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"\
    >\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"\
    (\" : x }", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"", "  brackets.chars.each do |char|\n    if char == \"\
    <\"\n      return false unless brackets.chars.all? { |c| c == \"<\" }\n    elsif\
    \ char == \">\"\n      return false unless brackets.chars.all? { |c| c == \">\"\
    \ }\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/) { |x| x\
    \ == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      next if index == 0\n      brackets.chars[index-1]\
    \ == \"<\" ||\n        (brackets.chars[index-1] == \">\" && brackets.chars[index+1]\
    \ == \"<\")\n    end\n  end\n  true\nend", "  brackets.chars.all? do |char|\n\
    \    opening = brackets.chars.find { |b| b == char }\n    closing = brackets.chars.find\
    \ { |b| b == char.reverse }\n    opening && closing\n  end\nend", "  brackets.scan(/[<>]/)\
    \ do |char|\n    next if char == \">\"\n    next if char == \"<\"\n    next if\
    \ char == \"=\"\n    next if char == \"+\"\n    next if char == \"-\"\n    next\
    \ if char == \"*\"\n    next if char == \"/\"\n    next if char == \"%\"\n   \
    \ next if char == \"^\"\n    next if char == \"~\"\n    next if char == \"&\"\n\
    \    next if char == \"|\"\n    next if char == \"!\"\n    next if char == \"\
    ?\"\n    next if char == \"(\"\n    next if char == \")\"\n    next if char ==\
    \ \"[\"\n    next if char == \"]\"\n    next if char == \"{\"\n    next if char\
    \ == \"}\"\n    next if char == \"[\"\n    next if char == \"]\"\n    next if\
    \ char == \"{\"\n    next if char == \"}\"\n    next if char == \"[\"\n    next\
    \ if char == \"]\"\n    next if char == \"{\"\n    next if char == \"}\"\n   \
    \ next if char == \"[\"\n    next if char == \"]\"\n    next if char == \"{\"\n\
    \    next if char == \"}\"\n    next if char == \"[\"\n    next if char == \"\
    ]\"\n    next if char == \"{\"\n    next if char == \"}\"\n    next if char ==\
    \ \"[\"\n    next if char == \"]\"\n    next if char == \"{\"\n    next if char\
    \ == \"}\"\n    next if char == \"[\"\n    next if char == \"]\"\n    next if\
    \ char == \"{\"\n    next if char == \"}\"\n    next if char == \"[\"\n    next\
    \ if char == \"]\"\n    next if char == \"{\"\n    next if char == \"}\"\n   \
    \ next if char == \"[\"\n    next if char == \"]\"\n    next if char == \"{\"\n\
    \    next if char == \"}\"\n    next if char == \"[\"\n    next if char == \"\
    ]\"\n    next if char == \"{\"\n    next if char == \"}\"\n    next if char ==\
    \ \"[\"\n    next if char == \"]\"\n    next if char == \"{\"\n    next if char\
    \ == \"}\"\n    next if char == \"[\"\n    next if char == \"]\"\n    next if\
    \ char == \"{\"\n    next if char == \"}\"\n    next if char == \"[\"\n    next\
    \ if char == \"]\"\n    next if char == \"{\"\n    next if char == \"}\"\n    ",
  "  brackets.scan(/[<>]/) do |char|\n    next if char == \"<\" || char == \">\"\n\
    \    next if char == \"<\" && brackets.scan(/[<>]/).any?\n    next if char ==\
    \ \">\" && brackets.scan(/[<>]/).any?\n    true\n  end\n  false\nend", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/</) do\
    \ |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n\
    \    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n \
    \   char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n  \
    \  char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n   \
    \ char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char\
    \ == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char ==\
    \ '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>'\
    \ ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ?\
    \ '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;'\
    \ : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' :\
    \ '&gt;'\n  end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n\
    \  end\n  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' : '&gt;'\n \
    \ end\n  brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n\
    \  brackets.gsub!(/</) do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n \
    \ brackets.gsub!(/>/) do |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</)\
    \ do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/>/) do\
    \ |char|\n    char == '>' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/</) do |char|\n\
    \    char == '", "  brackets.scan(/[<>]/) do |char|\n    next unless char == \"\
    >\" || char == \"<\"\n    next if char == \"<\" && brackets.scan(/[<>]/).empty?\n\
    \    next if char == \">\" && brackets.scan(/[<>]/).empty?\n    true\n  end\n\
    \  false\nend", "  brackets.gsub!(/[<>]/) do |char|\n    if char == \"<\"\n  \
    \    \">\"\n    elsif char == \">\"\n      \"<\"\n    else\n      char\n    end\n\
    \  end\n  brackets.empty?\nend", "  brackets.chars.each_with_index do |char, index|\n\
    \    if char == \"<\"\n      return false if index == 0\n      return true if\
    \ index == brackets.length - 1\n      return true if brackets[index + 1] == \"\
    <\"\n      return true if brackets[index - 1] == \">\"\n    end\n  end\n  true\n\
    end", "  brackets.scan(/</) do |opening_bracket|\n    brackets.scan(/>/) do |closing_bracket|\n\
    \      opening_bracket == closing_bracket\n    end\n  end\nend", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      return false if index == 0\n \
    \     return true if index == brackets.length - 1\n      return true if brackets[index\
    \ + 1] != \"=>\"\n      return true if brackets[index - 1] != \"=>\"\n    end\n\
    \  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"\
    <\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">>\" ? \"<<\" : \">>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"\
    <<\" ? \"<<\" : \">>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>\" ? \"<<<\"\
    \ : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<\" ? \"<<<\" : \">>>\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">>><\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<<<<\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x\
    \ == \">>>>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<>>\"\
    \ ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>>>>\" ? \"<<<\"\
    \ : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<<<>>>\" ? \"<<<\" : \">>>\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>>>><\" ? \"<<<\" : \">>>\" }\n \
    \ brackets.gsub!(/[<>]/) { |x| x == \"<<<>>><\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">>>>>>>>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<<<>>>>>>\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \">>>>>>>>><\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"\
    <<<>>>>>><\" ? \"<<<\" : \">>>\" }\n  brackets.gsub!(/[<>]/) { |x| x == \">>>>>>>>><\"\
    \ ? \"<<<", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ return false if index == 0\n      return true if index == brackets.length -\
    \ 1\n      return true if brackets[index + 1] == \"<\"\n      return false if\
    \ brackets[index + 1] == \">\"\n    end\n  end\n  true\nend", "  brackets.scan(/[<>]/).all?\
    \ { |x| brackets.scan(/[<>]/).all? { |y| x == y } }\nend", "  brackets.scan(/[<>]/)\
    \ do |char|\n    next char if char == \">\" || char == \"<\"\n    char == \">\"\
    \ ? \"<\" : \">\"\n  end\nend", "  brackets.scan(/[<>]/) do |char|\n    next if\
    \ char == \">\" || char == \"<\" || char == \"{\" || char == \"}\"\n    char ==\
    \ \"{\" && correct_bracketing(char + brackets)\n    char == \"}\" && correct_bracketing(char\
    \ + brackets)\n    char == \"<\" && correct_bracketing(char + brackets)\n    char\
    \ == \">\" && correct_bracketing(char + brackets)\n  end\n  true\nend", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \"<\" : char == \"<\" ? \"<\" : char\n  end\n\
    \  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\" ? \"<\" : char == \">\"\
    \ ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\"\
    \ ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n\
    \    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n\
    \  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\" ? \"<\" : char == \">\"\
    \ ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\"\
    \ ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n\
    \    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n\
    \  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\" ? \"<\" : char == \">\"\
    \ ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\"\
    \ ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n\
    \    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<\" : char == \">\" ? \"<\" : char\n  end\n\
    \  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\" ? \"<\" : char == \">\"\
    \ ? \"<\" : char\n  end\n  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\"\
    \ ? \"<\" : char == \">\" ? \"<\" : char\n  end\n  bracket", "  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</", "  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 ==\
    \ 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x.to_s.size % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size\
    \ % 2 == 0 ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x.to_s.size ", " \
    \ brackets.gsub!(/[<>]/) {|x| x == \">\" || x == \"<\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x|\
    \ x == \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x ==\
    \ \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"\
    <\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" ||\
    \ x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x ==\
    \ \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \"\
    >\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ?\
    \ \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"\
    <\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \">\" :\
    \ \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"<\" : \"\
    >\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \">\" : \"<\"}\n\
    \  brackets.gsub!(/[<>]/) {|x| x == \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x == \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x|\
    \ x == \"<\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x ==\
    \ \"<\" || x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"\
    <\" || x == \">\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" ||\
    \ x == \">\" ? \">\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|x| x == \"<\" || ",
  "  brackets.scan(/[<>]/).all? { |x| brackets.scan(/[<>]/).all? { |y| x == y } }\n\
    end", "  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/", "  brackets.gsub!(/[<>]/) { |s|\
    \ s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[",
  "  brackets.gsub(/[<>]/) do |char|\n    char == \"<\" ? \"(\" : char == \">\" ?\
    \ \"(\" : char\n  end\nend", "  brackets.chars.each_with_index do |char, i|\n\
    \    if char == \"<\"\n      bracket_open = brackets.chars[i - 1]\n      bracket_close\
    \ = brackets.chars[i + 1]\n      bracket_open == bracket_close && correct_bracketing(bracket_open)\n\
    \    end\n  end\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"\
    <\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>", "  brackets.chars.each_with_index do |char, i|\n\
    \    if char == \"<\"\n      bracket_count = brackets.chars.count { |c| c == \"\
    <\" }\n      if bracket_count > i\n        brackets.chars.slice!(i..-1).insert(i,\
    \ \"<\")\n      end\n    elsif char == \">\"\n      bracket_count = brackets.chars.count\
    \ { |c| c == \">\" }\n      if bracket_count > i\n        brackets.chars.slice!(i..-1).insert(i,\
    \ \">\")\n      end\n    end\n  end\n  brackets.chars.empty?\nend", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n  brackets.gsub!(/[",
  "  brackets.chars.each do |char|\n    next if char == \">\" || char == \"<\" ||\
    \ char == \"{\" || char == \"}\"\n    next if char == \"<\" && brackets.chars.any?\
    \ { |c| c == \">\" }\n    next if char == \">\" && brackets.chars.any? { |c| c\
    \ == \"<\" }\n    next if char == \"{\" && brackets.chars.any? { |c| c == \"}\"\
    \ }\n    next if char == \"}\" && brackets.chars.any? { |c| c == \"{\" }\n   \
    \ next if char == \"<\" && brackets.chars.any? { |c| c == \"<\" }\n    next if\
    \ char == \">\" && brackets.chars.any? { |c| c == \">\" }\n    next if char ==\
    \ \"{\" && brackets.chars.any? { |c| c == \"}\" }\n    next if char == \"}\" &&\
    \ brackets.chars.any? { |c| c == \"{\" }\n    next if char == \"<\" && brackets.chars.any?\
    \ { |c| c == \"<\" }\n    next if char == \">\" && brackets.chars.any? { |c| c\
    \ == \">\" }\n    next if char == \"{\" && brackets.chars.any? { |c| c == \"}\"\
    \ }\n    next if char == \"}\" && brackets.chars.any? { |c| c == \"{\" }\n   \
    \ next if char == \"<\" && brackets.chars.any? { |c| c == \"<\" }\n    next if\
    \ char == \">\" && brackets.chars.any? { |c| c == \">\" }\n    next if char ==\
    \ \"{\" && brackets.chars.any? { |c| c == \"}\" }\n    next if char == \"}\" &&\
    \ brackets.chars.any? { |c| c == \"{\" }\n    next if char == \"<\" && brackets.chars.any?\
    \ { |c| c == \"<\" }\n    next if char == \">\" && brackets.chars.any? { |c| c\
    \ == \">\" }\n    next if char == \"{\" && brackets.chars.any? { |c| c == \"}\"\
    \ }\n    next if char == \"}\" && brackets.chars.any? { |c| c == \"{\" }\n   \
    \ next if char == \"<\" && brackets.chars.any? { |c| c == \"<\" }\n    next if\
    \ char == \">\" && brackets.chars.any? { |c| c == \">\" }\n", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      next if index == 0\n      return\
    \ false if brackets[index-1] != \"=>\"\n    end\n    if char == \">\"\n      next\
    \ if index == brackets.length-1\n      return false if brackets[index+1] != \"\
    <\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s }\n\
    \  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s\
    \ }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s|\
    \ s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |s| s.to_s }\n  brackets.gsub!(/[<>]+/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]+/) { |", "  brackets.gsub!(/[<>]/) {\
    \ |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.gsub!(/[<>]/) { |s| s.include?(\"<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\">\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>", "  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"\
    <\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ?\
    \ \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"<\" ? \"<>\"\
    \ : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"<>\" : x\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"<\" ? \"<>\" : x }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \"<\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<\" || x == \">\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<\" || x == \"<\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ || x == \">\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x\
    \ == \"<\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"\
    >\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"<\" ?\
    \ \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"<>\"\
    \ : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"<\" ? \"<>\" : x\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"<>\" : x }\n\
    \  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \"<\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \">\" ? \"<>\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \"<\" || ", "  brackets.scan(/</) do |opening_bracket|\n    brackets.scan(/>/)\
    \ do |closing_bracket|\n      brackets.scan(/</) do |opening_bracket|\n      \
    \  brackets.scan(/>/) do |closing_bracket|\n          brackets.scan(/</) do |opening_bracket|\n\
    \            brackets.scan(/>/) do |closing_bracket|\n              brackets.scan(/</)\
    \ do |opening_bracket|\n                brackets.scan(/>/) do |closing_bracket|\n\
    \                  brackets.scan(/</) do |opening_bracket|\n                 \
    \   brackets.scan(/>/) do |closing_bracket|\n                      brackets.scan(/</)\
    \ do |opening_bracket|\n                        brackets.scan(/>/) do |closing_bracket|\n\
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \          brackets.scan(/</) do |opening_bracket|\n                         \
    \           brackets.scan(/>/) do |closing_bracket|\n                        \
    \              brackets.scan(/</) do |opening_bracket|\n                     \
    \                   brackets.scan(/>/) do |closing_bracket|\n                \
    \                          brackets.scan(/</) do |opening_bracket|\n         \
    \                                   brackets.scan(/>/) do |closing_bracket|\n\
    \                                              brackets.scan(/</) do |opening_bracket|\n\
    \                                                brackets.scan(/>/) do |closing_bracket|\n\
    \                                                  brackets.scan(/</) do |opening_bracket|\n\
    \                                                    brackets.scan(/>/) do |closing_bracket|\n\
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing_bracket|\n                                                        \
    \  brackets.scan(/</) do |opening_bracket|\n                                 \
    \                           brackets.scan(/>/) do |closing_bracket|\n        \
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                                brackets.scan(/>/)\
    \ do |closing_bracket|\n                                                     \
    \             brackets.scan(/</) do |opening_bracket|\n", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.scan(/[<>]/)\
    \ do |char|\n    next if char == \">\" || char == \"<\"\n    next if char == \"\
    <\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char ==\
    \ \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char\
    \ == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if\
    \ char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next\
    \ if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n   \
    \ next if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n\
    \    next if char == \"<\"\n    next if char == \">\"\n    next if char == \"\
    <\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char ==\
    \ \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char\
    \ == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if\
    \ char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next\
    \ if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n   \
    \ next if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n\
    \    next if char == \"<\"\n    next if char == \">\"\n    next if char == \"\
    <\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char ==\
    \ \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char\
    \ == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if\
    \ char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next\
    \ if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n   \
    \ next if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n\
    \    next if char == \"<\"\n    next if char == \">\"\n    next if char == \"<",
  "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.scan(/[<>]/) do |x|\n    next false if x.empty?\n    next false if x.include?(\"\
    <\")\n    next false if x.include?(\">\")\n    next false if x.include?(\"<>\"\
    )\n    next false if x.include?(\">>\")\n    next false if x.include?(\"<>\")\n\
    \    next false if x.include?(\">>\")\n    next false if x.include?(\"<\")\n \
    \   next false if x.include?(\">\")\n    next false if x.include?(\"<\")\n   \
    \ next false if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next\
    \ false if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next false\
    \ if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next false if\
    \ x.include?(\">\")\n    next false if x.include?(\"<\")\n    next false if x.include?(\"\
    >\")\n    next false if x.include?(\"<\")\n    next false if x.include?(\">\"\
    )\n    next false if x.include?(\"<\")\n    next false if x.include?(\">\")\n\
    \    next false if x.include?(\"<\")\n    next false if x.include?(\">\")\n  \
    \  next false if x.include?(\"<\")\n    next false if x.include?(\">\")\n    next\
    \ false if x.include?(\"<\")\n    next false if x.include?(\">\")\n    next false\
    \ if x.include?(\"<\")\n    next false if x.include?(\">\")\n    next false if\
    \ x.include?(\"<\")\n    next false if x.include?(\">\")\n    next false if x.include?(\"\
    <\")\n    next false if x.include?(\">\")\n    next false if x.include?(\"<\"\
    )\n    next false if x.include?(\">\")\n    next false if x.include?(\"<\")\n\
    \    next false if x.include?(\">\")\n    next false if x.include?(\"<\")\n  \
    \  next false if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next\
    \ false if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next false\
    \ if x.include?(\">\")\n    next false if x.include?(\"<\")\n    next false if\
    \ x.include?(\">\")\n    next false if x.include?", "  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&lt;' : '&gt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[<>]/)\
    \ do |char|\n    char == '<' ? '&gt;' : '&lt;'\n  end\n  brackets.gsub!(/[", " \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n \
    \ brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\<\\>/, '')\n  brackets.gsub!(/\\\
    <", "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n\
    \      bracket_index = index\n      break if index == brackets.size - 1\n    \
    \  break if brackets[index + 1] != \"=\"\n      break if brackets[index + 1] !=\
    \ \">\"\n    end\n  end\n  bracket_index\nend", "  brackets.gsub!(/[<>]/) { |x|\
    \ x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.chars.each_with_index\
    \ do |char, i|\n    next if char == \"<\" || char == \">\"\n    next if i == 0\n\
    \    next if brackets[i-1] == \"<\"\n    next if brackets[i+1] == \">\"\n    brackets[i-1]\
    \ = char\n    brackets[i+1] = char\n  end\n  brackets.chars.all? { |char| char\
    \ == \"<\" || char == \">\" }\nend", "  brackets.scan(/[<>]/) do |char|\n    next\
    \ char if char == \"<\"\n    next char if char == \">\"\n    char == \"<\" ? \"\
    <\" : \">\"\n  end\n  true\nend", "  brackets.chars.all? do |char|\n    opening_bracket\
    \ = brackets.chars.find { |b| b == char }\n    closing_bracket = brackets.chars.find\
    \ { |b| b == char.succ }\n    opening_bracket && closing_bracket\n  end\nend",
  "  brackets.scan(/[<>]/).all? { |x| brackets.scan(/[<>]/).all? { |y| x == y } }\n\
    end", "  brackets.scan(/</) do |opening|\n    brackets.scan(/>/) do |closing|\n\
    \      brackets.scan(/</) do |opening|\n        brackets.scan(/>/) do |closing|\n\
    \          return false if opening != closing\n        end\n      end\n    end\n\
    \  end\n  true\nend", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/(<)/, \"&lt;&lt;\")\n  brackets.gsub!(/(>)/, \"\
    &gt;&gt;\")\n  brackets.gsub!(/(<\\<)/, \"&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\\
    >)/, \"&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\<\\<)/, \"&lt;&lt;&lt;&lt;\")\n\
    \  brackets.gsub!(/(>\\>\\>)/, \"&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\<\\\
    <\\<)/, \"&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\>\\>\\>)/, \"&gt;&gt;&gt;&gt;&gt;\"\
    )\n  brackets.gsub!(/(<\\<\\<\\<\\<)/, \"&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\\
    >\\>\\>\\>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\<\\<\\<\\<\\\
    <)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\>\\>\\>\\>\\>)/,\
    \ \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\<\\<\\<\\<\\<\\<)/,\
    \ \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\>\\>\\>\\>\\>\\\
    >)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\<\\<\\<\\<\\\
    <\\<\\<)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\>\\\
    >\\>\\>\\>\\>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\\
    <\\<\\<\\<\\<\\<\\<\\<)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\")\n  brackets.gsub!(/(>\\\
    >\\>\\>\\>\\>\\>\\>)/, \"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\")\n  brackets.gsub!(/(<\\\
    <\\<\\<\\<\\<\\<\\<\\<\\<)/, \"&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\"\
    )\n  brackets.gsub!(/(>", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s|\
    \ s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.chars.each_with_index do |char, index|\n    if char == \"\
    <\"\n      next if brackets.chars[index + 1] == \"<\"\n      brackets.chars[index\
    \ + 1] = \">\"\n    elsif char == \">\"\n      next if brackets.chars[index -\
    \ 1] == \"<\"\n      brackets.chars[index - 1] = \"<\"\n    end\n  end\n  brackets.chars.all?\
    \ { |char| char == \"<\" }\nend", "  brackets.scan(/</) do |opening_bracket|\n\
    \    brackets.scan(/>/) do |closing_bracket|\n      brackets.scan(/</) do |opening_bracket|\n\
    \        brackets.scan(/>/) do |closing_bracket|\n          brackets.scan(/</)\
    \ do |opening_bracket|\n            brackets.scan(/>/) do |closing_bracket|\n\
    \              brackets.scan(/</) do |opening_bracket|\n                brackets.scan(/>/)\
    \ do |closing_bracket|\n                  brackets.scan(/</) do |opening_bracket|\n\
    \                    brackets.scan(/>/) do |closing_bracket|\n               \
    \       brackets.scan(/</) do |opening_bracket|\n                        brackets.scan(/>/)\
    \ do |closing_bracket|\n                          brackets.scan(/</) do |opening_bracket|\n\
    \                            brackets.scan(/>/) do |closing_bracket|\n       \
    \                       brackets.scan(/</) do |opening_bracket|\n            \
    \                    brackets.scan(/>/) do |closing_bracket|\n               \
    \                   brackets.scan(/</) do |opening_bracket|\n                \
    \                    brackets.scan(/>/) do |closing_bracket|\n               \
    \                       brackets.scan(/</) do |opening_bracket|\n            \
    \                            brackets.scan(/>/) do |closing_bracket|\n       \
    \                                   brackets.scan(/</) do |opening_bracket|\n\
    \                                            brackets.scan(/>/) do |closing_bracket|\n\
    \                                              brackets.scan(/</) do |opening_bracket|\n\
    \                                                brackets.scan(/>/) do |closing_bracket|\n\
    \                                                  brackets.scan(/</) do |opening_bracket|\n\
    \                                                    brackets.scan(/>/) do |closing_bracket|\n\
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                        brackets.scan(/>/) do\
    \ |closing_bracket|\n                                                        \
    \  brackets.scan(/</) do |opening_bracket|\n                                 \
    \                           brackets.scan(/>/) do |closing_bracket|\n        \
    \                                                      brackets.scan(/</) do |opening_bracket|\n\
    \                                                                brackets.scan(/>/)\
    \ do |closing_bracket|\n                                                     \
    \             brackets.scan(/</) do |opening_bracket|\n", "  brackets.scan(/</)\
    \ do |x|\n    brackets.scan(/>/) do |y|\n      brackets.scan(/</) do |z|\n   \
    \     brackets.scan(/>/) do |a|\n          brackets.scan(/>/) do |b|\n       \
    \     brackets.scan(/>/) do |c|\n              brackets.scan(/>/) do |d|\n   \
    \             brackets.scan(/>/) do |e|\n                  brackets.scan(/>/)\
    \ do |f|\n                    brackets.scan(/>/) do |g|\n                    \
    \  brackets.scan(/>/) do |h|\n                        brackets.scan(/>/) do |i|\n\
    \                          brackets.scan(/>/) do |j|\n                       \
    \     brackets.scan(/>/) do |k|\n                              brackets.scan(/>/)\
    \ do |l|\n                                brackets.scan(/>/) do |m|\n        \
    \                          brackets.scan(/>/) do |n|\n                       \
    \             brackets.scan(/>/) do |o|\n                                    \
    \  brackets.scan(/>/) do |p|\n                                        brackets.scan(/>/)\
    \ do |q|\n                                          brackets.scan(/>/) do |r|\n\
    \                                            brackets.scan(/>/) do |s|\n     \
    \                                         brackets.scan(/>/) do |t|\n        \
    \                                        brackets.scan(/>/) do |u|\n         \
    \                                         brackets.scan(/>/) do |v|\n        \
    \                                            brackets.scan(/>/) do |w|\n     \
    \                                                 brackets.scan(/>/) do |x|\n\
    \                                                        brackets.scan(/>/) do\
    \ |y|\n                                                          brackets.scan(/>/)\
    \ do |z|\n                                                            brackets.scan(/>/)\
    \ do |a|\n                                                              brackets.scan(/>/)\
    \ do |b|\n                                                                brackets.scan(/>/)\
    \ do |c|\n                                                                  brackets.scan(/>/)\
    \ do |d|\n                                                                   \
    \ brackets.scan(/>/) do |e|\n                                                \
    \                      brackets.scan(/>/) do |f|\n                           \
    \                                             brackets.scan(/>/) do |g|\n    \
    \                                                                      brackets.scan(/>/)\
    \ do |h|\n                                                                   \
    \         brackets.scan(/>/) do |i|\n                                        \
    \                                      brackets.scan(/>/) do |j|\n           \
    \                                                                     brackets.scan(/>/)\
    \ do |k|\n                                                                   \
    \               brackets.scan(/>/) do |l|\n                                  \
    \                                                  brackets.scan(/>/) do |m|\n\
    \                                                                ", "  brackets.gsub!(/[<>]/)\
    \ {|s| s == \">\" ? \"<\" : \"<\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ?\
    \ \"<\" : \">\"}\n  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n\
    \  brackets.gsub!(/[<>]/) {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s == \"<\" ? \"<\" : \">\"}\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|x| x.reverse}\n  brackets.gsub!(/[<>]/) {|x| x.reverse}\n  brackets.gsub!(/[",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ return false unless brackets.chars[index + 1] == \"<\"\n    elsif char == \"\
    >\"\n      return false unless brackets.chars[index + 1] == \">\"\n    end\n \
    \ end\n  true\nend", "  brackets.chars.each_with_index do |char, index|\n    if\
    \ char == \"<\"\n      return false if index == 0\n      return true if index\
    \ == brackets.size - 1\n      return true if brackets[index + 1] == \"<\"\n  \
    \  end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |s| s.include?(\"<\"\
    ) ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\">\") ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>", "  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n\
    \  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\\
    <\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n\
    \  brackets.gsub!(/\\>\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\\
    >\\>/, '>')\n  brackets.gsub!(/\\<\\>/, '<')\n  brackets.gsub!(/\\>\\>/, '>')",
  "  brackets.gsub!(/[<>]/) do |char|\n    char == \"<\" ? \"<<\" : \"<\"\n  end\n\
    \  brackets.gsub!(/[<>]/) do |char|\n    char == \">\" ? \">>\" : \">\"\n  end\n\
    \  brackets.empty?\nend", "  brackets.gsub!(/[<>]/) { |s| s.include?(\"<\") ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\">\") ? \"<\" :\
    \ \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.include?(\"<<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\">>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <<<\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\">>>\") ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<<>>\") ? \"<\"\
    \ : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n \
    \ brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.include?(\"<>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"\
    <>\") ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.include?(\"<>\") ? \"\
    <\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      return false unless brackets.chars[index\
    \ + 1] == \"<\"\n    end\n    if char == \">\"\n      return false unless brackets.chars[index\
    \ + 1] == \">\"\n    end\n  end\n  true\nend", "  brackets.scan(/</) do |opening|\n\
    \    brackets.scan(/>/) do |closing|\n      opening == closing\n    end\n  end\n\
    end", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\"\
    \ : x == \">>\" ? \"<<\" : \">\" }\n  brackets.gsub!(/<</, \"<\")\n  brackets.gsub!(/>>/,\
    \ \">\")\n  brackets.gsub!(/<<</, \"<<\")\n  brackets.gsub!(/>>>>/, \">>\")\n\
    \  brackets.gsub!(/<<>>/, \"<<\")\n  brackets.gsub!(/>><</, \">>\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<<\")\n  brackets.gsub!(/>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\"\
    )\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\"\
    )\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\"\
    )\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\"\
    )\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/,\
    \ \"<<\")\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\"\
    )\n  brackets.gsub!(/>>>>>>/, \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  brackets.gsub!(/>>>>>>/,\
    \ \">>\")\n  brackets.gsub!(/<<<>>/, \"<<\")\n  bracket", "  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n\
    \  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n  brackets.scan(/[<>]/)\n \
    \ brackets.scan(/", "  brackets.chars.each_with_index do |char, index|\n    if\
    \ char == \"<\"\n      return false if index == 0\n      return true if index\
    \ == brackets.size - 1\n      return true if brackets[index + 1] == \"<\"\n  \
    \    return true if brackets[index + 1] == \">\"\n    end\n  end\n  true\nend",
  "  brackets.chars.each_with_index do |char, i|\n    if char == \"<\"\n      bracket_open\
    \ = brackets.chars[i - 1]\n      bracket_close = brackets.chars[i + 1]\n     \
    \ bracket_open == bracket_close || bracket_open != bracket_close && correct_bracketing(bracket_close)\n\
    \    end\n  end\nend", "  brackets.scan(/</) do |opening|\n    brackets.scan(/>/)\
    \ do |closing|\n      brackets.scan(/</) do |opening|\n        brackets.scan(/>/)\
    \ do |closing|\n          return false if opening != closing\n        end\n  \
    \    end\n    end\n  end\n  true\nend", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</", "  brackets.chars.each do |char|\n    next\
    \ if char == \"<\" || char == \">\"\n    return false if char == \"<\" && brackets.chars.any?\
    \ { |c| c == \">\" }\n    return true if char == \">\" && brackets.chars.any?\
    \ { |c| c == \"<\" }\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \">\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" :\
    \ \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.chars.each_with_index\
    \ do |char, i|\n    if char == \"<\"\n      bracket_open = brackets.chars[i -\
    \ 1]\n      bracket_close = brackets.chars[i + 1]\n      bracket_open == bracket_close\
    \ or bracket_open != bracket_close or bracket_open != \">\" or bracket_close !=\
    \ \">\"\n    end\n  end\nend", "  brackets.scan(/[<>]/).all? { |x| brackets.scan(/[<>]/).none?\
    \ { |y| x == y } }\nend", "  brackets.chars.each_with_index do |char, index|\n\
    \    if char == \"<\"\n      return false if index == 0\n      return true if\
    \ index == brackets.length - 1\n      return true if brackets[index + 1] != \"\
    =\"\n    end\n  end\n  true\nend", "  brackets.gsub!(/[<>]/) do |char|\n    if\
    \ char == \"<\"\n      \">\"\n    elsif char == \">\"\n      \"<\"\n    else\n\
    \      char\n    end\n  end\n  brackets.empty?\nend", "  brackets.gsub!(/[<>]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[<>]/, '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[<>]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n  brackets.gsub!(/[<>]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[<>]/, '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[<>]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n  brackets.gsub!(/[<>]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[<>]/, '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[<>]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n  brackets.gsub!(/[<>]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[<>]/, '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[<>]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n  brackets.gsub!(/[<>]/,\
    \ '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/, '') #remove all brackets\n\
    \  brackets.gsub!(/[<>]/, '') #remove all brackets\n  brackets.gsub!(/[\\[\\]]/,\
    \ '') ", "  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"<\" ? \"(\" : x\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n \
    \ brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \">\" || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x\
    \ == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"\
    <\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"\
    (\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"<\" ? \"(\" : x\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n \
    \ brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x|\
    \ x == \">\" || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x ==\
    \ \"<\" || x == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \">\"\
    \ || x == \"<\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" || x\
    \ == \">\" ? \"(\" : x }\n  brackets.gsub!(/[<>]/) { |x| x == \">\" || x == \"\
    <\" ? \"(\" : x }", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"\
    &gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</", "  brackets.chars.each_with_index do |char, index|\n \
    \   if char == \"<\"\n      bracket_open = brackets.chars[0...index]\n      bracket_close\
    \ = brackets.chars[index+1..-1]\n      bracket_open == bracket_close || bracket_open\
    \ + bracket_close == \"<>\"\n    end\n  end\nend", "  brackets.gsub(/[<>]/) do\
    \ |x|\n    x.empty? ? nil : x\n  end\nend", "  brackets.scan(/[<>]/).all? do |x|\n\
    \    brackets.scan(/[<>]/).all? do |y|\n      x == y\n    end\n  end\nend", " \
    \ brackets.scan(/[<>]/) do |char|\n    next if char == \"<\" || char == \">\"\n\
    \    next if char == \"<\" && brackets.scan(/[<>]/).any?\n    next if char ==\
    \ \">\" && brackets.scan(/[<>]/).any?\n    false\n  end\nend", "  brackets.chars.each_with_index\
    \ do |char, i|\n    if char == \"<\"\n      return false if i > 0 && brackets[i-1]\
    \ != \"<\"\n      return true\n    end\n    if char == \">\"\n      return false\
    \ if i < brackets.length-1 && brackets[i+1] != \">\"\n      return true\n    end\n\
    \  end\n  false\nend", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</", "  brackets.chars.each_with_index do |char,\
    \ index|\n    if char == \"<\"\n      brackets.chars.drop(index).each_with_index\
    \ do |char2, index2|\n        if char2 != \">\"\n          return false\n    \
    \    end\n      end\n      return true\n    end\n  end\n  return false\nend",
  "  brackets.scan(/[<>]/) do |char|\n    next if char == \">\"\n    next if char\
    \ == \"<\"\n    next if char == \"<\"\n    next if char == \">\"\n    true\n \
    \ end\n  false\nend", "  brackets.scan(/[<>]/) do |char|\n    next char if char\
    \ == char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next char if char == char\n    next\
    \ char if char == char\n    next char if char == char\n    next char if char ==\
    \ char\n    next char if char == char\n    next ", "  brackets.gsub!(/[<>]/) {\
    \ |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/[<>]/) { |s| s.to_s }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s }", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" : \"<\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>", "  brackets.chars.all? do |char|\n    opening_bracket\
    \ = brackets.chars.find { |b| b == char }\n    closing_bracket = brackets.chars.find\
    \ { |b| b == char.reverse }\n    opening_bracket && closing_bracket\n  end\nend",
  "  brackets.scan(/[<>]/).all? { |x| brackets.scan(/[<>]/).all? { |y| x == y } }\n\
    end", "  brackets.scan(/[<>]/) do |char|\n    next if char == \">\" || char ==\
    \ \"<\" || char == \"=\"\n    next if char == \"=\"\n    next if char == \"<\"\
    \n    next if char == \">\"\n    next if char == \"<=\"\n    next if char == \"\
    >=\"\n    next if char == \"==\"\n    next if char == \"!=\"\n    next if char\
    \ == \"==\"\n    next if char == \"!=\"\n    next if char == \"=\"\n    next if\
    \ char == \"==\"\n    next if char == \"!=\"\n    next if char == \"<=\"\n   \
    \ next if char == \">=\"\n    next if char == \"<\"\n    next if char == \">\"\
    \n    next if char == \"<=\"\n    next if char == \">=\"\n    next if char ==\
    \ \"==\"\n    next if char == \"!=\"\n    next if char == \"==\"\n    next if\
    \ char == \"!=\"\n    next if char == \"=\"\n    next if char == \"==\"\n    next\
    \ if char == \"!=\"\n    next if char == \"=\"\n    next if char == \"==\"\n \
    \   next if char == \"!=\"\n    next if char == \"=\"\n    next if char == \"\
    ==\"\n    next if char == \"!=\"\n    next if char == \"=\"\n    next if char\
    \ == \"==\"\n    next if char == \"!=\"\n    next if char == \"=\"\n    next if\
    \ char == \"==\"\n    next if char == \"!=\"\n    next if char == \"=\"\n    next\
    \ if char == \"==\"\n    next if char == \"!=\"\n    next if char == \"=\"\n \
    \   next if char == \"==\"\n    next if char == \"!=\"\n    next if char == \"\
    =\"\n    next if char == \"==\"\n    next if char == \"!=\"\n    next if char\
    \ == \"=\"\n    next if char == \"==\"\n    next if char == \"!=\"\n    next if\
    \ char == \"=\"\n    next if char == \"==\"\n    next if char == \"!=\"\n    next\
    \ if char == \"=\"\n    next if char == \"==\"\n    next if char == \"!=\"\n \
    \   next if char == \"=\"\n    next if char == \"==\"\n    next if char == \"\
    !=\"\n    next if char == \"=\"\n    next if char == \"==\"\n    next if char\
    \ == \"!=\"\n    next if char == \"=\"\n    next if char == \"==\"\n    next if\
    \ char == \"!=\"\n    next if char == \"=\"", "  brackets.chars.each_with_index\
    \ do |char, index|\n    if char == \"<\"\n      bracket_index = index\n      break\
    \ if bracket_index == brackets.length - 1\n      bracket_index += 1\n      break\
    \ if bracket_index == brackets.length\n      bracket_index += 1\n      break if\
    \ bracket_index == brackets.length\n      bracket_index += 1\n      break if bracket_index\
    \ == brackets.length\n      bracket_index += 1\n      break if bracket_index ==\
    \ brackets.length\n      bracket_index += 1\n      break if bracket_index == brackets.length\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length\n \
    \     bracket_index += 1\n      break if bracket_index == brackets.length\n  \
    \    bracket_index += 1\n      break if bracket_index == brackets.length\n   \
    \   bracket_index += 1\n      break if bracket_index == brackets.length\n    \
    \  bracket_index += 1\n      break if bracket_index == brackets.length\n     \
    \ bracket_index += 1\n      break if bracket_index == brackets.length\n      bracket_index\
    \ += 1\n      break if bracket_index == brackets.length\n      bracket_index +=\
    \ 1\n      break if bracket_index == brackets.length\n      bracket_index += 1\n\
    \      break if bracket_index == brackets.length\n      bracket_index += 1\n \
    \     break if bracket_index == brackets.length\n      bracket_index += 1\n  \
    \    break if bracket_index == brackets.length\n      bracket_index += 1\n   \
    \   break if bracket_index == brackets.length\n      bracket_index += 1\n    \
    \  break if bracket_index == brackets.length\n      bracket_index += 1\n     \
    \ break if bracket_index == brackets.length\n      bracket_index += 1\n      break\
    \ if bracket_index == brackets.length\n      bracket_index += 1\n      break if\
    \ bracket_index == brackets.length\n      bracket_index += 1\n      break if bracket_index\
    \ == brackets.length\n      bracket_index += 1\n      break if bracket_index ==\
    \ brackets.length\n      bracket_index += 1\n      break if bracket_index == brackets.length\n\
    \      bracket_index += 1\n      break if bracket_index == brackets.length\n \
    \     bracket_index += 1\n      break if bracket_index == brackets.length\n  \
    \    bracket_index ", "  brackets.scan(/[<>]/).all? { |x| brackets.scan(/[<>]/).all?\
    \ { |y| x == y } }\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ? \"<\" :\
    \ x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<</) {\
    \ |x| x == \">\" ? \"<<\" : x }\n  brackets.gsub!(/<<</) { |x| x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<>/) { |x| x == \">\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/)\
    \ { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n \
    \ brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/)\
    \ { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n \
    \ brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/)\
    \ { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n \
    \ brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/)\
    \ { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n \
    \ brackets.gsub!(/<>>/) { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/)\
    \ { |x| x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<>>/) { |x| x == \">>\" ",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ next if brackets.chars[index + 1] == \"<\"\n      brackets.chars[index + 1]\
    \ = \">\"\n    elsif char == \">\"\n      next if brackets.chars[index - 1] ==\
    \ \"<\"\n      brackets.chars[index - 1] = \"<\"\n    end\n  end\n  brackets.chars.all?\
    \ { |char| char == \"<\" }\nend", "  brackets.gsub!(/[<>]/) { |x| x == \">\" ?\
    \ \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/[<>]\\Z/) { |x| x == \"\
    >\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<\\Z/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>>>/) {\
    \ |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>><\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>><\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>>>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/>>>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>\\\
    Z/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ brackets.chars[index + 1] == \"<\"\n    elsif char == \">\"\n      brackets.chars[index\
    \ + 1] == \">\"\n    end\n  end\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.scan(/</)\
    \ do |opening|\n    brackets.scan(/>/) do |closing|\n      brackets.scan(/</)\
    \ do |opening|\n        brackets.scan(/>/) do |closing|\n          return false\
    \ if opening == closing\n        end\n      end\n    end\n  end\n  true\nend",
  "  brackets.chars.each_with_index do |char, index|\n    if char == \"<\"\n     \
    \ next unless brackets[index + 1] == \"<\"\n      brackets[index + 1] = \">\"\n\
    \    elsif char == \">\"\n      next unless brackets[index - 1] == \"<\"\n   \
    \   brackets[index - 1] = \"<\"\n    end\n  end\n  brackets.chars == brackets.chars.to_a\n\
    end", "  brackets.scan(/[<>]/) do |char|\n    next if char == \">\" || char ==\
    \ \"<\"\n    next if char == \"<\" && brackets.scan(/[<>]/).empty?\n    next if\
    \ char == \">\" && brackets.scan(/[<>]/).empty?\n    true\n  end\n  false\nend",
  "  brackets.scan(/[<>]/) do |char|\n    next if char == \">\"\n    next if char\
    \ == \"<\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if\
    \ char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next\
    \ if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n   \
    \ next if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n\
    \    next if char == \">\"\n    next if char == \"<\"\n    next if char == \"\
    >\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char ==\
    \ \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char\
    \ == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if\
    \ char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next\
    \ if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n   \
    \ next if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n\
    \    next if char == \">\"\n    next if char == \"<\"\n    next if char == \"\
    >\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char ==\
    \ \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char\
    \ == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if\
    \ char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next\
    \ if char == \">\"\n    next if char == \"<\"\n    next if char == \">\"\n   \
    \ next if char == \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n\
    \    next if char == \">\"\n    next if char == \"<\"\n    next if char == \"\
    >\"\n    next if char == \"<\"\n    next if char == \">\"\n    next if char ==\
    \ \"<\"\n    next if char == \">\"\n    next if char == \"<\"\n    next if char\
    \ == \">\"\n    next ", "  brackets.gsub!(/[<>]/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>><>>/) { |s| s.reverse }\n  brackets.gsub!(/<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/>>>>/) { |s| s.reverse }\n  brackets.gsub!(/<<<>>/)\
    \ { |s| s.reverse }\n  brackets.gsub!(/<<>>/) { |s| s.reverse }\n  brackets.gsub!(/>><>>/)\
    \ { |", "  brackets.chars.each_with_index do |char, index|\n    if char == \"\
    <\"\n      return false unless brackets.chars[index + 1] == \"<\"\n    elsif char\
    \ == \">\"\n      return false unless brackets.chars[index + 1] == \">\"\n   \
    \ end\n  end\n  true\nend", "  brackets.chars.each_with_index do |char, i|\n \
    \   return false if char == \"<\"\n    return true if char == \">\"\n    return\
    \ true if char == \"<=\"\n    return true if char == \">=\"\n    return true if\
    \ char == \"==\"\n    return true if char == \"!=\"\n    return true if char ==\
    \ \"=\"\n    return true if char == \"!=\"\n    return true if char == \"<=>\"\
    \n    return true if char == \">=>\"\n    return true if char == \"<=>\"\n   \
    \ return true if char == \">=>\"\n    return true if char == \"<=>\"\n    return\
    \ true if char == \">=>\"\n    return true if char == \"<=>\"\n    return true\
    \ if char == \">=>\"\n    return true if char == \"<=>\"\n    return true if char\
    \ == \">=>\"\n    return true if char == \"<=>\"\n    return true if char == \"\
    >=>\"\n    return true if char == \"<=>\"\n    return true if char == \">=>\"\n\
    \    return true if char == \"<=>\"\n    return true if char == \">=>\"\n    return\
    \ true if char == \"<=>\"\n    return true if char == \">=>\"\n    return true\
    \ if char == \"<=>\"\n    return true if char == \">=>\"\n    return true if char\
    \ == \"<=>\"\n    return true if char == \">=>\"\n    return true if char == \"\
    <=>\"\n    return true if char == \">=>\"\n    return true if char == \"<=>\"\n\
    \    return true if char == \">=>\"\n    return true if char == \"<=>\"\n    return\
    \ true if char == \">=>\"\n    return true if char == \"<=>\"\n    return true\
    \ if char == \">=>\"\n    return true if char == \"<=>\"\n    return true if char\
    \ == \">=>\"\n    return true if char == \"<=>\"\n    return true if char == \"\
    >=>\"\n    return true if char == \"<=>\"\n    return true if char == \">=>\"\n\
    \    return true if char == \"<=>\"\n    return true if char == \">=>\"\n    return\
    \ true if char == \"<=>\"\n    return true if char == \">=>\"\n    return true\
    \ if char == \"<=>\"\n    return true if char == \">=>\"\n    return true if char\
    \ == \"<=>\"\n    return true if char == \">=>\"\n    return true if char == \"\
    <=>\"\n    return true if char == \">=>\"\n    return true if char == \"<=>\"\n\
    \    return true if char == \">=>\"\n    return true if char == \"<=>\"\n    return\
    \ true if char == \">=>\"\n    return true if char == \"<=>\"\n    return true\
    \ if char == \">=>\"\n    return true if char == \"<=>\"\n    return true if char\
    \ == \">=>\"\n    return true if char == \"<=>\"\n    return true if char == \"\
    >=>\"\n    return true if char == \"<=>\"\n    return true if char == \">=>\"\n\
    \    return true if char == \"<=>\"\n    return true if char == \">=>\"\n    return\
    \ true if char == \"<=>\"\n    return true if char == \">=>\"\n    return true\
    \ if char == \"<=>\"\n    return true if ", "  brackets.gsub!(/[<>]/) { |x| x\
    \ == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<<\" : x }\n  bracket", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(", "  brackets.gsub!(/[<>]/) { |x| x == \"\
    >\" ? \"<\" : \"<\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \"\
    >\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\"\
    \ }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |x| x == \"<\" ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |x| x == \"<\"\
    \ ? \"<\" : \">\" }\n  brackets.gsub!(/[<>", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ { |x| x == \">\" ? \"<\" : x == \">>\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n\
    \  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" :\
    \ x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"\
    <<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \">>\"\
    \ ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x == \"\
    >>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" : x ==\
    \ \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"<<\" :\
    \ x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\" ? \"\
    <<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x == \">\"\
    \ ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x| x ==\
    \ \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/) { |x|\
    \ x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>/)\
    \ { |x| x == \">\" ? \"<<\" : x == \">>\" ? \"<<\" : x }\n  brackets.gsub!(/<<<>>",
  "  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |", "  brackets.chars.all? do |char|\n    opening = brackets.chars.find {\
    \ |b| b == char }\n    closing = brackets.chars.find { |b| b == char.succ }\n\
    \    opening && closing\n  end\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s }\n\
    \  brackets.gsub!(/<<<>>/) { |s| s.to_s }\n  brackets.gsub!(/>><>>/) { |s| s.to_s\
    \ }\n  brackets.gsub!(/<<>>/) { |s| s.to_s }\n  brackets.gsub!(/>>>>/) { |s| s.to_s\
    \ }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/)\
    \ { |s| s.to_s }\n  brackets.gsub!(/<<<|>><|>>|<<|>>/) { |s| ", "  brackets.chars.each_with_index\
    \ do |char, i|\n    return false if char == \"<\"\n    return true if char ==\
    \ \">\"\n    return false if char == \"<\"\n    return true if char == \">\"\n\
    \  end\n  true\nend", "  brackets.chars.each do |char|\n    next if char == \"\
    <\" || char == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\
    \n    next if char == \">\" && brackets.chars.last == \">\"\n    next if char\
    \ == \"<\" && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.chars.last == \"<\"\n    next if char == \">\" && brackets.chars.last\
    \ == \">\"\n    next if char == \"<\" && brackets.chars.last == \"<\"\n    next\
    \ if char == \">\" && brackets.chars.last == \">\"\n    next if char == \"<\"\
    \ && brackets.char", "  brackets.scan(/[<>]/) do |char|\n    next char if char\
    \ == \">\"\n    next char if char == \"<\"\n    next char if char == \"<=\"\n\
    \    next char if char == \">=\"\n    next char if char == \"==\"\n    next char\
    \ if char == \"!=\"\n    next char if char == \"=\"\n    next char if char ==\
    \ \"!=\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next\
    \ char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if\
    \ char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if char ==\
    \ \"<=>\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next\
    \ char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if\
    \ char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if char ==\
    \ \"<=>\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next\
    \ char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if\
    \ char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if char ==\
    \ \"<=>\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next\
    \ char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if\
    \ char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if char ==\
    \ \"<=>\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next\
    \ char if char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if\
    \ char == \"<=>\"\n    next char if char == \"<=>\"\n    next char if char ==\
    \ \"<=>\"\n    next char if char == \"<=>\"\n    next char if char == \"<=>\"\n\
    \    next char if char", "  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n\
    \  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</,\
    \ \"&lt;\")\n  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n\
    \  brackets.gsub!(/>/, \"&gt;\")\n  brackets.gsub!(/</, \"&lt;\")\n  brackets.gsub!(/>/,\
    \ \"&gt;\")\n  brackets.gsub!(/</", "  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n\
    \  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \">\" : s }\n  brackets.empty?\nend", "  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse\
    \ }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.to_s.reverse }\n  brackets.gsub!(/[<>]/) { |", "  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[<>]/)\
    \ {|s| s.reverse}\n  brackets.gsub!(/[<>]/) {|s| s.reverse}\n  brackets.gsub!(/[",
  "  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ?\
    \ \"<\" : \">\" }\n  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n\
    \  brackets.gsub!(/[<>]/) { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!(/[<>]/)\
    \ { |s| s.empty? ? \"<\" : \">\" }\n  brackets.gsub!("]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

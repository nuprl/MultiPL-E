name: HumanEval_91_is_bored
language: rb
prompt: "# You'll be given a string of words, and your task is to count the number\n\
  # of boredoms. A boredom is a sentence that starts with the word \"I\".\n# Sentences\
  \ are delimited by '.', '?' or '!'.\n# For example:\n# >>> is_bored.call(\"Hello\
  \ world\")\n# 0\n# >>> is_bored.call(\"The sky is blue. The sun is shining. I love\
  \ this weather\")\n# 1\ndef is_bored(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_bored\n\
  \    candidate = method(:is_bored)\n    assert_equal(0, candidate.call(\"Hello world\"\
  ))\n    assert_equal(0, candidate.call(\"Is the sky blue?\"))\n    assert_equal(1,\
  \ candidate.call(\"I love It !\"))\n    assert_equal(0, candidate.call(\"bIt\"))\n\
  \    assert_equal(2, candidate.call(\"I feel good today. I will be productive. will\
  \ kill It\"))\n    assert_equal(0, candidate.call(\"You and I are going for a walk\"\
  ))\n  end\nend\n"
completions: ["  s.scan(/\\b(I|i|!)\\b/)\n  s.count(\"I\")\nend", "  s.split(\" \"\
    ).each do |word|\n    return 0 if word == \"I\"\n  end\n  1\nend", "  s.scan(/\\\
    b(I|i|!)\\b/)\nend", "  s.gsub!(/\\.|\\?|!/, '')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bis\\b/, 'is')\n  s.gsub!(/\\bthe\\b/, 'the')\n  s.gsub!(/\\bsky\\\
    b/, 'sky')\n  s.gsub!(/\\bsun\\b/, 'sun')\n  s.gsub!(/\\blove\\b/, 'love')\n \
    \ s.gsub!(/\\bweather\\b/, 'weather')\n  s.gsub!(/\\b\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\\
    b\\W+/, '')\n  s.gsub!(/\\b\\W+/, '')\n  s.gsub!(/\\b\\W", "  s.gsub!(/[.?!]/,'')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,' I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n\
    \  s.gsub!(/\\bI\\b/,'I')\n  s.gsub!(/\\bI\\b/,'I')\n  s.gsub", "  s.scan(/\\\
    b(I\\w*)/)\n  s.count(\"I\")\nend", "  s.scan(/I[^.?!]/)\n  s.count(\"I\")\nend",
  "  s.gsub!(/\\.|\\?|!/, '')\n  s.gsub!(/I\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n  s.gsub!(/\\bI\\b/, 'I')\n\
    \  s.gsub!(/", "  s.scan(/\\b(I|i|!)\\b/)\nend", "  s.gsub!(/\\.|\\?|!/, \"\"\
    )\n  s.gsub!(/I\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/,\
    \ \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(",
  "  s.scan(/([I].*[!.?])/)\n  s.count(\"I\")\nend", "  s.scan(/\\bI\\b/)\nend", " \
    \ s.scan(/I[^.?!]*/)\n  s.count(\"I\")\nend", "  s.scan(/\\bI\\b/)\nend", "  s.scan(/\\\
    bI\\b/)\nend", "  s.gsub!(/\\.|\\?|!/, \"\")\n  s.gsub!(/I[^ ]*/, \"\")\n  s.gsub!(/[^I]I[^\
    \ ]*/, \"\")\n  s.gsub!(/[^I]I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/,\
    \ \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n  s.gsub!(/I$/, \"\")\n\
    \  s.gsub!(/I$/, \"\")\n  s.", "  s.gsub!(/\\.|!|\\?/, \"\")\n  s.gsub!(/I\\b/,\
    \ \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub", "  s.scan(/I[\\.\\?!]*/)\n\
    \  s.count(\"I\")\nend", "  s.gsub!(/[.?!]/, \"\")\n  s.gsub!(/I\\b/, \"I\")\n\
    \  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/,\
    \ \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/\\\
    bI\\b/, \"I\")\n  s.gsub!(/\\bI\\b/, \"I\")\n  s.gsub!(/", "  s.scan(/([I].*[.!?])/)\n\
    \  s.count(\"I\")\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_79_decimal_to_binary
language: rb
prompt: "# You will be given a number in decimal form and your task is to convert\
  \ it to\n# binary format. The function should return a string, with each character\
  \ representing a binary\n# number. Each character in the string will be '0' or '1'.\n\
  # There will be an extra couple of characters 'db' at the beginning and at the end\
  \ of the string.\n# The extra characters are there to help with the format.\n# Examples:\n\
  # >>> decimal_to_binary.call(15)\n# \"db1111db\"\n# >>> decimal_to_binary.call(32)\n\
  # \"db100000db\"\ndef decimal_to_binary(decimal)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_decimal_to_binary\n\
  \    candidate = method(:decimal_to_binary)\n    assert_equal(\"db0db\", candidate.call(0))\n\
  \    assert_equal(\"db100000db\", candidate.call(32))\n    assert_equal(\"db1100111db\"\
  , candidate.call(103))\n    assert_equal(\"db1111db\", candidate.call(15))\n  end\n\
  end\n"
completions: ["  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n\
    \    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  return binary\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_i\n \
    \ binary = \"\"\n  while decimal > 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary.reverse\n\
    \  binary = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length,\
    \ \"db\")\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n   \
    \ binary = binary + \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal\
    \ / 2\n  end\n  binary = binary + \"db\"\n  return binary\nend", "  decimal =\
    \ decimal.to_s\n  binary = \"\"\n  decimal.split(\"\").each do |digit|\n    digit\
    \ = digit.to_i\n    binary = binary + digit.to_s(2)\n  end\n  binary = \"db\"\
    \ + binary + \"db\"\n  return binary\nend", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary\
    \ = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ 'db')\n  decimal.insert(decimal.size-1, 'db')\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n", "  decimal = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\
    \").each do |digit|\n    binary += \"0\" if (digit == \"0\")\n    binary += \"\
    1\" if (digit == \"1\")\n  end\n  binary.insert(0, \"db\")\n  binary.insert(binary.length-1,\
    \ \"db\")\n  return binary\nend", "  decimal = decimal.to_i\n  binary_string =\
    \ \"\"\n  while decimal > 0\n    binary_string += \"0\"\n    decimal -= 1\n  end\n\
    \  while decimal != 0\n    binary_string += \"1\"\n    decimal -= 1\n  end\n \
    \ binary_string += \"db\"\n  binary_string.slice!(0,2)\n  binary_string.slice!(binary_string.length-2)\n\
    \  return binary_string\nend", "  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\
    \n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\"\
    )\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal.insert(0, '0')\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(decimal.length, '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(0,\
    \ '0')\n  decimal.slice!(decimal.length)\n  decimal.insert(decimal.length, '0')\n\
    \  decimal.slice!(decimal.length)\n  decimal", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else \"1\"\n    decimal\
    \ = decimal / 2\n  end\n  binary = binary + \"db\"\n  return binary\nend", " \
    \ decimal = decimal.to_i\n  string = \"\"\n  while decimal > 0\n    string +=\
    \ \"0\"\n    decimal -= 1\n  end\n  while decimal >= 1\n    string += \"1\"\n\
    \    decimal -= 1\n  end\n  string += \"db\"\n  return string\nend", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.slice!(decimal.length)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n\
    \  decimal.insert(0, \"0\")\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\"\
    )\n  decimal.slice!(0..-1)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..",
  "  decimal = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\").each do |digit|\n\
    \    binary = binary + \"0\" if digit == \"1\"\n    binary = binary + \"1\" if\
    \ digit == \"0\"\n  end\n  binary = binary + \"db\"\n  binary.strip\nend", " \
    \ decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length + 2, \"db\")\n  decimal.insert(decimal.length\
    \ + 4, \"db\")\n  decimal.insert(decimal.length + 6, \"db\")\n  decimal.insert(decimal.length\
    \ + 8, \"db\")\n  decimal.insert(decimal.length + 10, \"db\")\n  decimal.insert(decimal.length\
    \ + 12, \"db\")\n  decimal.insert(decimal.length + 14, \"db\")\n  decimal.insert(decimal.length\
    \ + 16, \"db\")\n  decimal.insert(decimal.length + 18, \"db\")\n  decimal.insert(decimal.length\
    \ + 20, \"db\")\n  decimal.insert(decimal.length + 22, \"db\")\n  decimal.insert(decimal.length\
    \ + 24, \"db\")\n  decimal.insert(decimal.length + 26, \"db\")\n  decimal.insert(decimal.length\
    \ + 28, \"db\")\n  decimal.insert(decimal.length + 30, \"db\")\n  decimal.insert(decimal.length\
    \ + 32, \"db\")\n  decimal.insert(decimal.length + 34, \"db\")\n  decimal.insert(decimal.length\
    \ + 36, \"db\")\n  decimal.insert(decimal.length + 38, \"db\")\n  decimal.insert(decimal.length\
    \ + 40, \"db\")\n  decimal.insert(decimal.length + 42, \"db\")\n  decimal.insert(decimal.length\
    \ + 44, \"db\")\n  decimal.insert(decimal.length + 46, \"db\")\n  decimal.insert(decimal.length\
    \ + 48, \"db\")\n  decimal.insert(decimal.length + 50, \"db\")\n  decimal.insert(decimal.length\
    \ + 52, \"db\")\n  decimal.insert(decimal.length + 54, \"db\")\n  decimal.insert(decimal.length\
    \ + 56, \"db\")\n  decimal.insert(decimal.length + 58, \"db\")\n  decimal.insert(decimal.length\
    \ + 60, \"db\")\n  decimal.insert(decimal.length + 62, \"db\")\n  decimal.insert(decimal.length\
    \ + 64, \"db\")\n  decimal.insert(decimal.length + 66, \"db\")\n  decimal.insert(decimal.length\
    \ + 68, \"db\")\n  decimal.insert(decimal.length + 70, \"db\")\n  decimal.insert(decimal.length\
    \ + 72, \"db\")\n  decimal.insert(decimal.length + 74, \"db\")\n  decimal.insert(decimal.length\
    \ + 76, \"db\")\n  decimal.insert(decimal.length + 78, \"db\")\n  decimal.insert(decimal.length\
    \ + 80, \"db\")\n  decimal.insert(decimal.length + 8", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"db\"\n\
    \  binary = binary + binary.reverse\n  binary = binary.reverse\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n\
    \  while decimal != 0\n    binary = (\"0\" + binary.to_s).chr + (\"1\" + binary.to_s).chr\n\
    \    decimal = decimal / 2\n  end\n  binary = \"db\" + binary + \"db\"\n  return\
    \ binary\nend", "  decimal = decimal.to_i\n  result = ''\n  while decimal != 0\n\
    \    decimal, mod = decimal % 2, decimal >> 1\n    result << (mod ? '1' : '0')\n\
    \  end\n  result << 'db'\n  result\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n   \
    \ decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  binary.reverse!\n\
    \  binary.insert(0, \"0\")\n  binary.insert(0, \"0\")\n  return binary\nend",
  "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n\
    \  binary = binary + \"b\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length\
    \ + 1, \"db\")\n  decimal.insert(decimal.length + 2, \"db\")\n  decimal.insert(decimal.length\
    \ + 3, \"db\")\n  decimal.insert(decimal.length + 4, \"db\")\n  decimal.insert(decimal.length\
    \ + 5, \"db\")\n  decimal.insert(decimal.length + 6, \"db\")\n  decimal.insert(decimal.length\
    \ + 7, \"db\")\n  decimal.insert(decimal.length + 8, \"db\")\n  decimal.insert(decimal.length\
    \ + 9, \"db\")\n  decimal.insert(decimal.length + 10, \"db\")\n  decimal.insert(decimal.length\
    \ + 11, \"db\")\n  decimal.insert(decimal.length + 12, \"db\")\n  decimal.insert(decimal.length\
    \ + 13, \"db\")\n  decimal.insert(decimal.length + 14, \"db\")\n  decimal.insert(decimal.length\
    \ + 15, \"db\")\n  decimal.insert(decimal.length + 16, \"db\")\n  decimal.insert(decimal.length\
    \ + 17, \"db\")\n  decimal.insert(decimal.length + 18, \"db\")\n  decimal.insert(decimal.length\
    \ + 19, \"db\")\n  decimal.insert(decimal.length + 20, \"db\")\n  decimal.insert(decimal.length\
    \ + 21, \"db\")\n  decimal.insert(decimal.length + 22, \"db\")\n  decimal.insert(decimal.length\
    \ + 23, \"db\")\n  decimal.insert(decimal.length + 24, \"db\")\n  decimal.insert(decimal.length\
    \ + 25, \"db\")\n  decimal.insert(decimal.length + 26, \"db\")\n  decimal.insert(decimal.length\
    \ + 27, \"db\")\n  decimal.insert(decimal.length + 28, \"db\")\n  decimal.insert(decimal.length\
    \ + 29, \"db\")\n  decimal.insert(decimal.length + 30, \"db\")\n  decimal.insert(decimal.length\
    \ + 31, \"db\")\n  decimal.insert(decimal.length + 32, \"db\")\n  decimal.insert(decimal.length\
    \ + 33, \"db\")\n  decimal.insert(decimal.length + 34, \"db\")\n  decimal.insert(decimal.length\
    \ + 35, \"db\")\n  decimal.insert(decimal.length + 36, \"db\")\n  decimal.insert(decimal.length\
    \ + 37, \"db\")\n  decimal.insert(decimal.length + 38, \"db\")\n  decimal.insert(decimal.length\
    \ + 39, \"db\")\n  decimal.insert(decimal.length + 40, \"db\")\n  decimal.insert(decimal.length\
    \ + 41, \"db", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"\
    0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n  \
    \  binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary\
    \ + \"1\"\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n   \
    \ binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary\
    \ + \"1\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = ",
  "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n\
    \    decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  return binary\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.insert(decimal.length + 1, 'db')\n  decimal.insert(decimal.length\
    \ + 2, 'db')\n  decimal.insert(decimal.length + 3, 'db')\n  decimal.insert(decimal.length\
    \ + 4, 'db')\n  decimal.insert(decimal.length + 5, 'db')\n  decimal.insert(decimal.length\
    \ + 6, 'db')\n  decimal.insert(decimal.length + 7, 'db')\n  decimal.insert(decimal.length\
    \ + 8, 'db')\n  decimal.insert(decimal.length + 9, 'db')\n  decimal.insert(decimal.length\
    \ + 10, 'db')\n  decimal.insert(decimal.length + 11, 'db')\n  decimal.insert(decimal.length\
    \ + 12, 'db')\n  decimal.insert(decimal.length + 13, 'db')\n  decimal.insert(decimal.length\
    \ + 14, 'db')\n  decimal.insert(decimal.length + 15, 'db')\n  decimal.insert(decimal.length\
    \ + 16, 'db')\n  decimal.insert(decimal.length + 17, 'db')\n  decimal.insert(decimal.length\
    \ + 18, 'db')\n  decimal.insert(decimal.length + 19, 'db')\n  decimal.insert(decimal.length\
    \ + 20, 'db')\n  decimal.insert(decimal.length + 21, 'db')\n  decimal.insert(decimal.length\
    \ + 22, 'db')\n  decimal.insert(decimal.length + 23, 'db')\n  decimal.insert(decimal.length\
    \ + 24, 'db')\n  decimal.insert(decimal.length + 25, 'db')\n  decimal.insert(decimal.length\
    \ + 26, 'db')\n  decimal.insert(decimal.length + 27, 'db')\n  decimal.insert(decimal.length\
    \ + 28, 'db')\n  decimal.insert(decimal.length + 29, 'db')\n  decimal.insert(decimal.length\
    \ + 30, 'db')\n  decimal.insert(decimal.length + 31, 'db')\n  decimal.insert(decimal.length\
    \ + 32, 'db')\n  decimal.insert(decimal.length + 33, 'db')\n  decimal.insert(decimal.length\
    \ + 34, 'db')\n  decimal.insert(decimal.length + 35, 'db')\n  decimal.insert(decimal.length\
    \ + 36, 'db')\n  decimal.insert(decimal.length + 37, 'db')\n  decimal.insert(decimal.length\
    \ + 38, 'db')\n  decimal.insert(decimal.length + 39, 'db')\n  decimal.insert(decimal.length\
    \ + 40, 'db')\n  decimal.insert(decimal.length + 41, 'db')\n  decimal", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"db\"\n  return\
    \ binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = (\"0\" + (decimal % 2).to_s) + binary\n    decimal = decimal\
    \ / 2\n  end\n  binary = \"db\" + binary + \"db\"\n  return binary\nend", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  ", "  decimal\
    \ = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary\
    \ = binary.reverse\n  binary = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length,\
    \ \"db\")\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n   \
    \ binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary\
    \ + \"1\"\n  binary = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0,'db')\n  decimal.insert(decimal.length-1,'db')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n\
    \  decimal.insert(decimal.length-1,'0')\n  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')", "  decimal\
    \ = decimal.to_i\n  result = ''\n  while decimal > 0\n    result += (decimal %\
    \ 2).to_s + 'db'\n    decimal = decimal / 2\n  end\n  result[0..-2] #remove extra\
    \ characters\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n \
    \ decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length + 1,\
    \ \"db\")\n  decimal.insert(decimal.length + 2, \"db\")\n  decimal.insert(decimal.length\
    \ + 3, \"db\")\n  decimal.insert(decimal.length + 4, \"db\")\n  decimal.insert(decimal.length\
    \ + 5, \"db\")\n  decimal.insert(decimal.length + 6, \"db\")\n  decimal.insert(decimal.length\
    \ + 7, \"db\")\n  decimal.insert(decimal.length + 8, \"db\")\n  decimal.insert(decimal.length\
    \ + 9, \"db\")\n  decimal.insert(decimal.length + 10, \"db\")\n  decimal.insert(decimal.length\
    \ + 11, \"db\")\n  decimal.insert(decimal.length + 12, \"db\")\n  decimal.insert(decimal.length\
    \ + 13, \"db\")\n  decimal.insert(decimal.length + 14, \"db\")\n  decimal.insert(decimal.length\
    \ + 15, \"db\")\n  decimal.insert(decimal.length + 16, \"db\")\n  decimal.insert(decimal.length\
    \ + 17, \"db\")\n  decimal.insert(decimal.length + 18, \"db\")\n  decimal.insert(decimal.length\
    \ + 19, \"db\")\n  decimal.insert(decimal.length + 20, \"db\")\n  decimal.insert(decimal.length\
    \ + 21, \"db\")\n  decimal.insert(decimal.length + 22, \"db\")\n  decimal.insert(decimal.length\
    \ + 23, \"db\")\n  decimal.insert(decimal.length + 24, \"db\")\n  decimal.insert(decimal.length\
    \ + 25, \"db\")\n  decimal.insert(decimal.length + 26, \"db\")\n  decimal.insert(decimal.length\
    \ + 27, \"db\")\n  decimal.insert(decimal.length + 28, \"db\")\n  decimal.insert(decimal.length\
    \ + 29, \"db\")\n  decimal.insert(decimal.length + 30, \"db\")\n  decimal.insert(decimal.length\
    \ + 31, \"db\")\n  decimal.insert(decimal.length + 32, \"db\")\n  decimal.insert(decimal.length\
    \ + 33, \"db\")\n  decimal.insert(decimal.length + 34, \"db\")\n  decimal.insert(decimal.length\
    \ + 35, \"db\")\n  decimal.insert(decimal.length + 36, \"db\")\n  decimal.insert(decimal.length\
    \ + 37, \"db\")\n  decimal.insert(decimal.length + 38, \"db\")\n  decimal.insert(decimal.length\
    \ + 39, \"db\")\n  decimal.insert(decimal.length + 40, \"db\")\n  decimal.insert(decimal.length\
    \ + 41, \"db", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"\
    0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary\
    \ + \"b\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n\
    \  while decimal != 0\n    binary = binary + \"0\" if decimal < 2 else \"1\" +\
    \ binary\n    decimal = decimal - 2\n  end\n  binary = binary + \"db\"\n  binary.reverse!\n\
    \  binary\nend", "  decimal = decimal.to_i\n  result = ''\n  while decimal > 0\n\
    \    decimal, mod = decimal / 2, decimal % 2\n    result += \"0#{mod}\"\n  end\n\
    \  result += \"db\"\n  result\nend", "  decimal = decimal.to_i\n  binary = \"\"\
    \n  while decimal > 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n\
    \  end\n  binary = binary + \"1\"\n  binary = binary.chop\n  binary = binary +\
    \ \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary_string =\
    \ \"\"\n  while decimal != 0\n    binary_string += \"0\"\n    decimal = decimal\
    \ / 2\n  end\n  binary_string += \"1\"\n  binary_string += \"db\"\n  binary_string\
    \ += binary_string.rjust(decimal, \"0\")\n  return binary_string\nend", "  decimal\
    \ = decimal.to_i\n  result = ''\n  while decimal != 0\n    decimal, mod = decimal\
    \ % 2, decimal / 2\n    result << (mod * '0' + '1') if (mod != 0)\n  end\n  result\
    \ << 'db'\n  result\nend", "  decimal = decimal.to_i\n  result = ''\n  while decimal\
    \ != 0\n    digit = decimal % 2\n    decimal = decimal / 2\n    if digit == 1\n\
    \      result += '1'\n    else\n      result += '0'\n    end\n  end\n  result\
    \ += 'db'\n  result << result\n  result << result\n  return result\nend", "  decimal\
    \ = decimal.to_i\n  binary_string = \"\"\n  while decimal > 0\n    binary_string\
    \ += \"0\"\n    decimal -= 1\n  end\n  while decimal >= 1\n    binary_string +=\
    \ \"1\"\n    decimal -= 1\n  end\n  binary_string += \"db\"\n  return binary_string\n\
    end", "  decimal = decimal.to_i\n  binary_string = \"\"\n  while decimal != 0\n\
    \    binary_string += decimal_to_binary(decimal % 2)\n    decimal = decimal /\
    \ 2\n  end\n  binary_string += \"db\"\n  binary_string += binary_string.rjust(decimal,\
    \ \"0\")\n  binary_string\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_i\n  result = ''\n  while decimal != 0\n    result\
    \ += (decimal % 2).to_s + 'db'\n    decimal = decimal / 2\n  end\n  result +=\
    \ 'db'\n  result[0..-2]\nend", "  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\
    \n  binary = binary + \"b\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if\
    \ decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  binary = \"\"\n\
    \  decimal.split(\"\").each do |digit|\n    binary = binary + \"0\" if digit ==\
    \ \"1\"\n    binary = binary + \"1\" if digit == \"0\"\n  end\n  binary = \"db\"\
    \ + binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\").each\
    \ do |digit|\n    digit = digit.to_i\n    binary = binary + (digit % 2).to_s\n\
    \  end\n  binary = \"db\" + binary + \"db\"\n  return binary\nend", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  binary =\
    \ binary + \"b\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary =\
    \ \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal % 2 == 0\
    \ else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"\
    db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n\
    \  decimal.insert(decimal.length, 'db')\n  decimal.insert(decimal.length + 1,\
    \ 'db')\n  decimal.insert(decimal.length + 2, 'db')\n  decimal.insert(decimal.length\
    \ + 3, 'db')\n  decimal.insert(decimal.length + 4, 'db')\n  decimal.insert(decimal.length\
    \ + 5, 'db')\n  decimal.insert(decimal.length + 6, 'db')\n  decimal.insert(decimal.length\
    \ + 7, 'db')\n  decimal.insert(decimal.length + 8, 'db')\n  decimal.insert(decimal.length\
    \ + 9, 'db')\n  decimal.insert(decimal.length + 10, 'db')\n  decimal.insert(decimal.length\
    \ + 11, 'db')\n  decimal.insert(decimal.length + 12, 'db')\n  decimal.insert(decimal.length\
    \ + 13, 'db')\n  decimal.insert(decimal.length + 14, 'db')\n  decimal.insert(decimal.length\
    \ + 15, 'db')\n  decimal.insert(decimal.length + 16, 'db')\n  decimal.insert(decimal.length\
    \ + 17, 'db')\n  decimal.insert(decimal.length + 18, 'db')\n  decimal.insert(decimal.length\
    \ + 19, 'db')\n  decimal.insert(decimal.length + 20, 'db')\n  decimal.insert(decimal.length\
    \ + 21, 'db')\n  decimal.insert(decimal.length + 22, 'db')\n  decimal.insert(decimal.length\
    \ + 23, 'db')\n  decimal.insert(decimal.length + 24, 'db')\n  decimal.insert(decimal.length\
    \ + 25, 'db')\n  decimal.insert(decimal.length + 26, 'db')\n  decimal.insert(decimal.length\
    \ + 27, 'db')\n  decimal.insert(decimal.length + 28, 'db')\n  decimal.insert(decimal.length\
    \ + 29, 'db')\n  decimal.insert(decimal.length + 30, 'db')\n  decimal.insert(decimal.length\
    \ + 31, 'db')\n  decimal.insert(decimal.length + 32, 'db')\n  decimal.insert(decimal.length\
    \ + 33, 'db')\n  decimal.insert(decimal.length + 34, 'db')\n  decimal.insert(decimal.length\
    \ + 35, 'db')\n  decimal.insert(decimal.length + 36, 'db')\n  decimal.insert(decimal.length\
    \ + 37, 'db')\n  decimal.insert(decimal.length + 38, 'db')\n  decimal.insert(decimal.length\
    \ + 39, 'db')\n  decimal.insert(decimal.length + 40, 'db')\n  decimal.insert(decimal.length\
    \ + 41, 'db')\n  decimal", "  decimal = decimal.to_i\n  binary_string = \"\"\n\
    \  while decimal > 0\n    binary_string += \"0\"\n    decimal -= 1\n  end\n  while\
    \ decimal > 0\n    binary_string += \"1\"\n    decimal -= 1\n  end\n  binary_string\
    \ += \"db\"\n  return binary_string\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\"\
    db\")\n  decimal.insert(decimal.length,\"db\")\n  decimal.insert(decimal.length*2,\"\
    db\")\n  decimal.insert(decimal.length*3,\"db\")\n  decimal.insert(decimal.length*4,\"\
    db\")\n  decimal.insert(decimal.length*5,\"db\")\n  decimal.insert(decimal.length*6,\"\
    db\")\n  decimal.insert(decimal.length*7,\"db\")\n  decimal.insert(decimal.length*8,\"\
    db\")\n  decimal.insert(decimal.length*9,\"db\")\n  decimal.insert(decimal.length*10,\"\
    db\")\n  decimal.insert(decimal.length*11,\"db\")\n  decimal.insert(decimal.length*12,\"\
    db\")\n  decimal.insert(decimal.length*13,\"db\")\n  decimal.insert(decimal.length*14,\"\
    db\")\n  decimal.insert(decimal.length*15,\"db\")\n  decimal.insert(decimal.length*16,\"\
    db\")\n  decimal.insert(decimal.length*17,\"db\")\n  decimal.insert(decimal.length*18,\"\
    db\")\n  decimal.insert(decimal.length*19,\"db\")\n  decimal.insert(decimal.length*20,\"\
    db\")\n  decimal.insert(decimal.length*21,\"db\")\n  decimal.insert(decimal.length*22,\"\
    db\")\n  decimal.insert(decimal.length*23,\"db\")\n  decimal.insert(decimal.length*24,\"\
    db\")\n  decimal.insert(decimal.length*25,\"db\")\n  decimal.insert(decimal.length*26,\"\
    db\")\n  decimal.insert(decimal.length*27,\"db\")\n  decimal.insert(decimal.length*28,\"\
    db\")\n  decimal.insert(decimal.length*29,\"db\")\n  decimal.insert(decimal.length*30,\"\
    db\")\n  decimal.insert(decimal.length*31,\"db\")\n  decimal.insert(decimal.length*32,\"\
    db\")\n  decimal.insert(decimal.length*33,\"db\")\n  decimal.insert(decimal.length*34,\"\
    db\")\n  decimal.insert(decimal.length*35,\"db\")\n  decimal.insert(decimal.length*36,\"\
    db\")\n  decimal.insert(decimal.length*37,\"db\")\n  decimal.insert(decimal.length*38,\"\
    db\")\n  decimal.insert(decimal.length*39,\"db\")\n  decimal.insert(decimal.length*40,\"\
    db\")\n  decimal.insert(decimal.length*41,\"db\")\n  decimal.insert(decimal.length",
  "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length + 1, \"db\")\n  decimal.insert(decimal.length\
    \ + 2, \"db\")\n  decimal.insert(decimal.length + 3, \"db\")\n  decimal.insert(decimal.length\
    \ + 4, \"db\")\n  decimal.insert(decimal.length + 5, \"db\")\n  decimal.insert(decimal.length\
    \ + 6, \"db\")\n  decimal.insert(decimal.length + 7, \"db\")\n  decimal.insert(decimal.length\
    \ + 8, \"db\")\n  decimal.insert(decimal.length + 9, \"db\")\n  decimal.insert(decimal.length\
    \ + 10, \"db\")\n  decimal.insert(decimal.length + 11, \"db\")\n  decimal.insert(decimal.length\
    \ + 12, \"db\")\n  decimal.insert(decimal.length + 13, \"db\")\n  decimal.insert(decimal.length\
    \ + 14, \"db\")\n  decimal.insert(decimal.length + 15, \"db\")\n  decimal.insert(decimal.length\
    \ + 16, \"db\")\n  decimal.insert(decimal.length + 17, \"db\")\n  decimal.insert(decimal.length\
    \ + 18, \"db\")\n  decimal.insert(decimal.length + 19, \"db\")\n  decimal.insert(decimal.length\
    \ + 20, \"db\")\n  decimal.insert(decimal.length + 21, \"db\")\n  decimal.insert(decimal.length\
    \ + 22, \"db\")\n  decimal.insert(decimal.length + 23, \"db\")\n  decimal.insert(decimal.length\
    \ + 24, \"db\")\n  decimal.insert(decimal.length + 25, \"db\")\n  decimal.insert(decimal.length\
    \ + 26, \"db\")\n  decimal.insert(decimal.length + 27, \"db\")\n  decimal.insert(decimal.length\
    \ + 28, \"db\")\n  decimal.insert(decimal.length + 29, \"db\")\n  decimal.insert(decimal.length\
    \ + 30, \"db\")\n  decimal.insert(decimal.length + 31, \"db\")\n  decimal.insert(decimal.length\
    \ + 32, \"db\")\n  decimal.insert(decimal.length + 33, \"db\")\n  decimal.insert(decimal.length\
    \ + 34, \"db\")\n  decimal.insert(decimal.length + 35, \"db\")\n  decimal.insert(decimal.length\
    \ + 36, \"db\")\n  decimal.insert(decimal.length + 37, \"db\")\n  decimal.insert(decimal.length\
    \ + 38, \"db\")\n  decimal.insert(decimal.length + 39, \"db\")\n  decimal.insert(decimal.length\
    \ + 40, \"db\")\n  decimal.insert(decimal.length + 41, \"db", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  ", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary\
    \ = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\"\
    db\")\n  decimal.insert(decimal.length,\"db\")\n  decimal.insert(decimal.length+1,\"\
    db\")\n  decimal.insert(decimal.length+2,\"db\")\n  decimal.insert(decimal.length+3,\"\
    db\")\n  decimal.insert(decimal.length+4,\"db\")\n  decimal.insert(decimal.length+5,\"\
    db\")\n  decimal.insert(decimal.length+6,\"db\")\n  decimal.insert(decimal.length+7,\"\
    db\")\n  decimal.insert(decimal.length+8,\"db\")\n  decimal.insert(decimal.length+9,\"\
    db\")\n  decimal.insert(decimal.length+10,\"db\")\n  decimal.insert(decimal.length+11,\"\
    db\")\n  decimal.insert(decimal.length+12,\"db\")\n  decimal.insert(decimal.length+13,\"\
    db\")\n  decimal.insert(decimal.length+14,\"db\")\n  decimal.insert(decimal.length+15,\"\
    db\")\n  decimal.insert(decimal.length+16,\"db\")\n  decimal.insert(decimal.length+17,\"\
    db\")\n  decimal.insert(decimal.length+18,\"db\")\n  decimal.insert(decimal.length+19,\"\
    db\")\n  decimal.insert(decimal.length+20,\"db\")\n  decimal.insert(decimal.length+21,\"\
    db\")\n  decimal.insert(decimal.length+22,\"db\")\n  decimal.insert(decimal.length+23,\"\
    db\")\n  decimal.insert(decimal.length+24,\"db\")\n  decimal.insert(decimal.length+25,\"\
    db\")\n  decimal.insert(decimal.length+26,\"db\")\n  decimal.insert(decimal.length+27,\"\
    db\")\n  decimal.insert(decimal.length+28,\"db\")\n  decimal.insert(decimal.length+29,\"\
    db\")\n  decimal.insert(decimal.length+30,\"db\")\n  decimal.insert(decimal.length+31,\"\
    db\")\n  decimal.insert(decimal.length+32,\"db\")\n  decimal.insert(decimal.length+33,\"\
    db\")\n  decimal.insert(decimal.length+34,\"db\")\n  decimal.insert(decimal.length+35,\"\
    db\")\n  decimal.insert(decimal.length+36,\"db\")\n  decimal.insert(decimal.length+37,\"\
    db\")\n  decimal.insert(decimal.length+38,\"db\")\n  decimal.insert(decimal.length+39,\"\
    db\")\n  decimal.insert(decimal.length+40,\"db\")\n  decimal.insert(decimal.length+",
  "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_s\n \
    \ decimal.insert(0, 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.insert(decimal.length\
    \ + 1, 'db')\n  decimal.insert(decimal.length + 2, 'db')\n  decimal.insert(decimal.length\
    \ + 3, 'db')\n  decimal.insert(decimal.length + 4, 'db')\n  decimal.insert(decimal.length\
    \ + 5, 'db')\n  decimal.insert(decimal.length + 6, 'db')\n  decimal.insert(decimal.length\
    \ + 7, 'db')\n  decimal.insert(decimal.length + 8, 'db')\n  decimal.insert(decimal.length\
    \ + 9, 'db')\n  decimal.insert(decimal.length + 10, 'db')\n  decimal.insert(decimal.length\
    \ + 11, 'db')\n  decimal.insert(decimal.length + 12, 'db')\n  decimal.insert(decimal.length\
    \ + 13, 'db')\n  decimal.insert(decimal.length + 14, 'db')\n  decimal.insert(decimal.length\
    \ + 15, 'db')\n  decimal.insert(decimal.length + 16, 'db')\n  decimal.insert(decimal.length\
    \ + 17, 'db')\n  decimal.insert(decimal.length + 18, 'db')\n  decimal.insert(decimal.length\
    \ + 19, 'db')\n  decimal.insert(decimal.length + 20, 'db')\n  decimal.insert(decimal.length\
    \ + 21, 'db')\n  decimal.insert(decimal.length + 22, 'db')\n  decimal.insert(decimal.length\
    \ + 23, 'db')\n  decimal.insert(decimal.length + 24, 'db')\n  decimal.insert(decimal.length\
    \ + 25, 'db')\n  decimal.insert(decimal.length + 26, 'db')\n  decimal.insert(decimal.length\
    \ + 27, 'db')\n  decimal.insert(decimal.length + 28, 'db')\n  decimal.insert(decimal.length\
    \ + 29, 'db')\n  decimal.insert(decimal.length + 30, 'db')\n  decimal.insert(decimal.length\
    \ + 31, 'db')\n  decimal.insert(decimal.length + 32, 'db')\n  decimal.insert(decimal.length\
    \ + 33, 'db')\n  decimal.insert(decimal.length + 34, 'db')\n  decimal.insert(decimal.length\
    \ + 35, 'db')\n  decimal.insert(decimal.length + 36, 'db')\n  decimal.insert(decimal.length\
    \ + 37, 'db')\n  decimal.insert(decimal.length + 38, 'db')\n  decimal.insert(decimal.length\
    \ + 39, 'db')\n  decimal.insert(decimal.length + 40, 'db')\n  decimal.insert(decimal.length\
    \ + 41, 'db')\n  decimal", "  decimal = decimal.to_i\n  string = \"\"\n  while\
    \ decimal > 0\n    string += \"0\"\n    decimal -= 1\n  end\n  while decimal >=\
    \ 1\n    string += \"1\"\n    decimal -= 1\n  end\n  string += \"db\"\n  string\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_s\n \
    \ decimal = decimal.chars.map { |c| c == '0' ? '1' : '0' }.join\n  decimal.prepend('db')\n\
    \  decimal.prepend('db')\n  decimal\nend", "  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n   \
    \ decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  return binary\n\
    end", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal\
    \ % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = \"\
    db\" + binary + \"db\"\n  return binary\nend", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary\
    \ = binary + \"1\"\n  binary = binary + \"db\"\n  return binary\nend", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0,'db')\n  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal % 2 ==\
    \ 0 else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary +\
    \ \"db\"\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n    decimal = decimal\
    \ / 2\n  end\n  binary = binary + \"db\"\n  return binary\nend", "  decimal =\
    \ decimal.to_i\n  binary_string = \"\"\n  while decimal != 0\n    binary_string\
    \ += \"0\"\n    decimal -= 1\n  end\n  binary_string += \"1\"\n  binary_string\
    \ += \"db\"\n  binary_string += binary_string.to_s.reverse\n  binary_string +=\
    \ \"db\"\n  return binary_string\nend", "  decimal = decimal.to_s\n  decimal =\
    \ decimal.chars.map { |x| x.to_i }.join\n  decimal = \"db#{decimal}\"\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal\nend", "  decimal = decimal.to_i\n  result\
    \ = ''\n  while decimal != 0\n    result += (decimal % 2) + '0'\n    decimal =\
    \ decimal / 2\n  end\n  result += 'db'\n  result[0..-2]\nend", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary.reverse\n\
    \  binary = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length,\
    \ \"db\")\n  return binary\nend", "  decimal = decimal.to_i\n  binary_string =\
    \ \"\"\n  while decimal != 0\n    binary_string += \"0\"\n    decimal -= 1\n \
    \ end\n  binary_string += \"1\"\n  binary_string.insert(0, \"db\")\n  binary_string.insert(binary_string.length,\
    \ \"db\")\n  return binary_string\nend", "  decimal = decimal.to_i\n  binary =\
    \ \"\"\n  while decimal != 0\n    binary = (\"0\" + binary.to_s(2)).chop + binary.to_s(2)\n\
    \    decimal = decimal / 2\n  end\n  binary = (\"0\" + binary.to_s(2)).chop +\
    \ binary.to_s(2)\n  binary = \"db\" + binary + \"db\"\n  return binary\nend",
  "  decimal = decimal.to_i\n  string = \"\"\n  while decimal != 0\n    string +=\
    \ \"0\"\n    decimal = decimal / 2\n  end\n  string += \"db\"\n  while decimal\
    \ != 1\n    string += \"0\"\n    decimal = decimal / 2\n  end\n  string += \"\
    db\"\n  string\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n\
    \  decimal.insert(decimal.length, \"db\")\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, ",
  "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.insert(decimal.length + 1, 'db')\n  decimal.insert(decimal.length\
    \ + 2, 'db')\n  decimal.insert(decimal.length + 3, 'db')\n  decimal.insert(decimal.length\
    \ + 4, 'db')\n  decimal.insert(decimal.length + 5, 'db')\n  decimal.insert(decimal.length\
    \ + 6, 'db')\n  decimal.insert(decimal.length + 7, 'db')\n  decimal.insert(decimal.length\
    \ + 8, 'db')\n  decimal.insert(decimal.length + 9, 'db')\n  decimal.insert(decimal.length\
    \ + 10, 'db')\n  decimal.insert(decimal.length + 11, 'db')\n  decimal.insert(decimal.length\
    \ + 12, 'db')\n  decimal.insert(decimal.length + 13, 'db')\n  decimal.insert(decimal.length\
    \ + 14, 'db')\n  decimal.insert(decimal.length + 15, 'db')\n  decimal.insert(decimal.length\
    \ + 16, 'db')\n  decimal.insert(decimal.length + 17, 'db')\n  decimal.insert(decimal.length\
    \ + 18, 'db')\n  decimal.insert(decimal.length + 19, 'db')\n  decimal.insert(decimal.length\
    \ + 20, 'db')\n  decimal.insert(decimal.length + 21, 'db')\n  decimal.insert(decimal.length\
    \ + 22, 'db')\n  decimal.insert(decimal.length + 23, 'db')\n  decimal.insert(decimal.length\
    \ + 24, 'db')\n  decimal.insert(decimal.length + 25, 'db')\n  decimal.insert(decimal.length\
    \ + 26, 'db')\n  decimal.insert(decimal.length + 27, 'db')\n  decimal.insert(decimal.length\
    \ + 28, 'db')\n  decimal.insert(decimal.length + 29, 'db')\n  decimal.insert(decimal.length\
    \ + 30, 'db')\n  decimal.insert(decimal.length + 31, 'db')\n  decimal.insert(decimal.length\
    \ + 32, 'db')\n  decimal.insert(decimal.length + 33, 'db')\n  decimal.insert(decimal.length\
    \ + 34, 'db')\n  decimal.insert(decimal.length + 35, 'db')\n  decimal.insert(decimal.length\
    \ + 36, 'db')\n  decimal.insert(decimal.length + 37, 'db')\n  decimal.insert(decimal.length\
    \ + 38, 'db')\n  decimal.insert(decimal.length + 39, 'db')\n  decimal.insert(decimal.length\
    \ + 40, 'db')\n  decimal.insert(decimal.length + 41, 'db')\n  decimal", "  decimal\
    \ = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal > 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  while decimal >= 1\n    binary = binary + \"1\"\n  \
    \  decimal = decimal - 1\n  end\n  binary = binary + \"db\"\n  return binary\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.insert(decimal.length + 1, 'db')\n  decimal.insert(decimal.length\
    \ + 2, 'db')\n  decimal.insert(decimal.length + 3, 'db')\n  decimal.insert(decimal.length\
    \ + 4, 'db')\n  decimal.insert(decimal.length + 5, 'db')\n  decimal.insert(decimal.length\
    \ + 6, 'db')\n  decimal.insert(decimal.length + 7, 'db')\n  decimal.insert(decimal.length\
    \ + 8, 'db')\n  decimal.insert(decimal.length + 9, 'db')\n  decimal.insert(decimal.length\
    \ + 10, 'db')\n  decimal.insert(decimal.length + 11, 'db')\n  decimal.insert(decimal.length\
    \ + 12, 'db')\n  decimal.insert(decimal.length + 13, 'db')\n  decimal.insert(decimal.length\
    \ + 14, 'db')\n  decimal.insert(decimal.length + 15, 'db')\n  decimal.insert(decimal.length\
    \ + 16, 'db')\n  decimal.insert(decimal.length + 17, 'db')\n  decimal.insert(decimal.length\
    \ + 18, 'db')\n  decimal.insert(decimal.length + 19, 'db')\n  decimal.insert(decimal.length\
    \ + 20, 'db')\n  decimal.insert(decimal.length + 21, 'db')\n  decimal.insert(decimal.length\
    \ + 22, 'db')\n  decimal.insert(decimal.length + 23, 'db')\n  decimal.insert(decimal.length\
    \ + 24, 'db')\n  decimal.insert(decimal.length + 25, 'db')\n  decimal.insert(decimal.length\
    \ + 26, 'db')\n  decimal.insert(decimal.length + 27, 'db')\n  decimal.insert(decimal.length\
    \ + 28, 'db')\n  decimal.insert(decimal.length + 29, 'db')\n  decimal.insert(decimal.length\
    \ + 30, 'db')\n  decimal.insert(decimal.length + 31, 'db')\n  decimal.insert(decimal.length\
    \ + 32, 'db')\n  decimal.insert(decimal.length + 33, 'db')\n  decimal.insert(decimal.length\
    \ + 34, 'db')\n  decimal.insert(decimal.length + 35, 'db')\n  decimal.insert(decimal.length\
    \ + 36, 'db')\n  decimal.insert(decimal.length + 37, 'db')\n  decimal.insert(decimal.length\
    \ + 38, 'db')\n  decimal.insert(decimal.length + 39, 'db')\n  decimal.insert(decimal.length\
    \ + 40, 'db')\n  decimal.insert(decimal.length + 41, 'db')\n  decimal", "  decimal\
    \ = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\").each do |digit|\n   \
    \ digit = digit.to_i\n    binary = digit % 2 == 0 ? \"1\" + binary : \"0\" + binary\n\
    \  end\n  binary = \"db\" + binary + \"db\"\n  return binary\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  decimal = decimal.to_i\n  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  binary =\
    \ binary + \"b\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  ", "  decimal\
    \ = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n  end\n  binary\
    \ = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  result\
    \ = ''\n  while decimal != 0\n    digit = decimal % 2\n    decimal = decimal /\
    \ 2\n    if digit == 1\n      result += '1'\n    else\n      result += '0'\n \
    \   end\n  end\n  result += 'db'\n  result << result[-2..-1]\n  result\nend",
  "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.insert(decimal.length + 1, 'db')\n  decimal.insert(decimal.length\
    \ + 2, 'db')\n  decimal.insert(decimal.length + 3, 'db')\n  decimal.insert(decimal.length\
    \ + 4, 'db')\n  decimal.insert(decimal.length + 5, 'db')\n  decimal.insert(decimal.length\
    \ + 6, 'db')\n  decimal.insert(decimal.length + 7, 'db')\n  decimal.insert(decimal.length\
    \ + 8, 'db')\n  decimal.insert(decimal.length + 9, 'db')\n  decimal.insert(decimal.length\
    \ + 10, 'db')\n  decimal.insert(decimal.length + 11, 'db')\n  decimal.insert(decimal.length\
    \ + 12, 'db')\n  decimal.insert(decimal.length + 13, 'db')\n  decimal.insert(decimal.length\
    \ + 14, 'db')\n  decimal.insert(decimal.length + 15, 'db')\n  decimal.insert(decimal.length\
    \ + 16, 'db')\n  decimal.insert(decimal.length + 17, 'db')\n  decimal.insert(decimal.length\
    \ + 18, 'db')\n  decimal.insert(decimal.length + 19, 'db')\n  decimal.insert(decimal.length\
    \ + 20, 'db')\n  decimal.insert(decimal.length + 21, 'db')\n  decimal.insert(decimal.length\
    \ + 22, 'db')\n  decimal.insert(decimal.length + 23, 'db')\n  decimal.insert(decimal.length\
    \ + 24, 'db')\n  decimal.insert(decimal.length + 25, 'db')\n  decimal.insert(decimal.length\
    \ + 26, 'db')\n  decimal.insert(decimal.length + 27, 'db')\n  decimal.insert(decimal.length\
    \ + 28, 'db')\n  decimal.insert(decimal.length + 29, 'db')\n  decimal.insert(decimal.length\
    \ + 30, 'db')\n  decimal.insert(decimal.length + 31, 'db')\n  decimal.insert(decimal.length\
    \ + 32, 'db')\n  decimal.insert(decimal.length + 33, 'db')\n  decimal.insert(decimal.length\
    \ + 34, 'db')\n  decimal.insert(decimal.length + 35, 'db')\n  decimal.insert(decimal.length\
    \ + 36, 'db')\n  decimal.insert(decimal.length + 37, 'db')\n  decimal.insert(decimal.length\
    \ + 38, 'db')\n  decimal.insert(decimal.length + 39, 'db')\n  decimal.insert(decimal.length\
    \ + 40, 'db')\n  decimal.insert(decimal.length + 41, 'db')\n  decimal", "  decimal\
    \ = decimal.to_i\n  result = ''\n  while decimal > 0\n    result += (decimal %\
    \ 2).to_s\n    decimal = decimal / 2\n  end\n  result += (decimal % 2).to_s\n\
    \  result = 'db' + result + 'db'\n  return result\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. `decimal_to_binary(-15)`\
    \ returns `\"db1111db\"` instead of `\"-db1111db\"`.\n<|/ c |>\n<| c |>\nIt does\
    \ work for negative numbers. Try it out yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it out and you're right. I must have had a typo when I tried it the first time.\n\
    <|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal\
    \ % 2 == 0 else \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"\
    db\"\n  binary.reverse!\n  binary\nend", "  decimal = decimal.to_i\n  string =\
    \ \"\"\n  while decimal != 0\n    string += \"0\"\n    decimal = decimal / 2\n\
    \  end\n  string += \"db\"\n  while decimal != 1\n    string += \"1\"\n    decimal\
    \ = decimal / 2\n  end\n  string += \"db\"\n  return string\nend", "  binary =\
    \ \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  return binary\n\
    end", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n\
    \  end\n  binary = binary + \"db\"\n  return binary\nend", "  binary = \"\"\n\
    \  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n\
    \  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  return binary\n\
    end", "  decimal = decimal.to_i\n  result = ''\n  while decimal > 0\n    digit\
    \ = decimal % 2\n    decimal = decimal / 2\n    if digit == 1\n      result +=\
    \ '1'\n    else\n      result += '0'\n    end\n  end\n  result += 'db'\n  result\
    \ + result\nend", "  binary = \"\"\n  while decimal != 0\n    binary = binary\
    \ + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary\
    \ = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_i\n  result = ''\n  while decimal > 0\n    decimal,\
    \ mod = decimal / 2, decimal % 2\n    result << ('0' if mod else '1')\n  end\n\
    \  result << 'db'\n  result\nend", "  decimal = decimal.to_i\n  binary_string\
    \ = \"\"\n  while decimal != 0\n    binary_string += \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary_string += \"1\"\n  binary_string.prepend(\"db\")\n  binary_string\n\
    end", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\
    \n  binary = binary.reverse\n  binary = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length,\
    \ \"db\")\n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n   \
    \ binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary\
    \ + \"1\"\n  binary = binary + \"db\"\n  return binary\nend", "  binary = \"\"\
    \n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n\
    \  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary\
    \ + \"b\"\n  binary = ", "  binary = \"\"\n  while decimal != 0\n    binary =\
    \ binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n    decimal = decimal\
    \ / 2\n  end\n  binary = binary + \"db\"\n  return binary\nend", "  decimal =\
    \ decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary + \"\
    0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary.chop\n\
    \  binary = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n\
    \  binary = binary + \"b\"\n  binary = binary + \"b\"\n  return binary\nend",
  "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary\
    \ + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  return binary\nend", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"db\"\n  return\
    \ binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary =\
    \ binary + \"1\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  return\
    \ binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  return decimal\nend", " \
    \ decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.slice!(decimal.length)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n\
    \  decimal.insert(decimal.length, \"0\")\n  decimal.slice!(0..decimal.length-1)\n",
  "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  return binary\nend", "  decimal\
    \ = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary\
    \ = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_i\n  result\
    \ = ''\n  while decimal != 0\n    result += (decimal % 2).to_s\n    decimal =\
    \ decimal / 2\n  end\n  result += 'db'\n  result\nend", "  decimal = decimal.to_i\n\
    \  result = ''\n  while decimal > 0\n    decimal, mod = decimal / 2, decimal %\
    \ 2\n    result << ('1' if mod else '0')\n  end\n  result << 'db'\n  result\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_i\n \
    \ result = ''\n  while decimal != 0\n    result += (decimal % 2) + 'b'\n    decimal\
    \ = decimal / 2\n  end\n  result = 'db' + result\n  result[0..-2] #remove extra\
    \ characters\nend", "  decimal = decimal.to_i\n  result = ''\n  while decimal\
    \ != 0\n    digit = decimal % 2\n    decimal = decimal / 2\n    result = digit.to_s\
    \ + result\n  end\n  result = 'db' + result + 'db'\n  return result\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=ruby |>\n<code>", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.insert(decimal.length\
    \ + 1, 'db')\n  decimal.insert(decimal.length + 2, 'db')\n  decimal.insert(decimal.length\
    \ + 3, 'db')\n  decimal.insert(decimal.length + 4, 'db')\n  decimal.insert(decimal.length\
    \ + 5, 'db')\n  decimal.insert(decimal.length + 6, 'db')\n  decimal.insert(decimal.length\
    \ + 7, 'db')\n  decimal.insert(decimal.length + 8, 'db')\n  decimal.insert(decimal.length\
    \ + 9, 'db')\n  decimal.insert(decimal.length + 10, 'db')\n  decimal.insert(decimal.length\
    \ + 11, 'db')\n  decimal.insert(decimal.length + 12, 'db')\n  decimal.insert(decimal.length\
    \ + 13, 'db')\n  decimal.insert(decimal.length + 14, 'db')\n  decimal.insert(decimal.length\
    \ + 15, 'db')\n  decimal.insert(decimal.length + 16, 'db')\n  decimal.insert(decimal.length\
    \ + 17, 'db')\n  decimal.insert(decimal.length + 18, 'db')\n  decimal.insert(decimal.length\
    \ + 19, 'db')\n  decimal.insert(decimal.length + 20, 'db')\n  decimal.insert(decimal.length\
    \ + 21, 'db')\n  decimal.insert(decimal.length + 22, 'db')\n  decimal.insert(decimal.length\
    \ + 23, 'db')\n  decimal.insert(decimal.length + 24, 'db')\n  decimal.insert(decimal.length\
    \ + 25, 'db')\n  decimal.insert(decimal.length + 26, 'db')\n  decimal.insert(decimal.length\
    \ + 27, 'db')\n  decimal.insert(decimal.length + 28, 'db')\n  decimal.insert(decimal.length\
    \ + 29, 'db')\n  decimal.insert(decimal.length + 30, 'db')\n  decimal.insert(decimal.length\
    \ + 31, 'db')\n  decimal.insert(decimal.length + 32, 'db')\n  decimal.insert(decimal.length\
    \ + 33, 'db')\n  decimal.insert(decimal.length + 34, 'db')\n  decimal.insert(decimal.length\
    \ + 35, 'db')\n  decimal.insert(decimal.length + 36, 'db')\n  decimal.insert(decimal.length\
    \ + 37, 'db')\n  decimal.insert(decimal.length + 38, 'db')\n  decimal.insert(decimal.length\
    \ + 39, 'db')\n  decimal.insert(decimal.length + 40, 'db')\n  decimal.insert(decimal.length\
    \ + 41, 'db')\n  decimal", "  decimal = decimal.to_i\n  binary = \"\"\n  while\
    \ decimal != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary +\
    \ \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  binary.reverse!\n\
    \  binary.insert(0, \"0\")\n  binary.insert(0, \"0\")\n  return binary\nend",
  "  decimal = decimal.to_s\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  decimal = decimal.insert(0, \"0\")\n  decimal = decimal.reverse\n\
    \  decimal = decimal.insert(decimal.length, \"db\")\n  decimal = decimal.insert(0,\
    \ \"0\")\n  decimal = decimal.reverse\n  decimal = decimal.insert(decimal.length,\
    \ \"db\")\n  ", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary =\
    \ binary + \"1\"\n  binary = binary + \"db\"\n  return binary\nend", "  decimal\
    \ = decimal.to_i\n  result = ''\n  while decimal > 0\n    decimal, mod = decimal\
    \ % 2, decimal / 2\n    result << (mod % 2 ? '1' : '0')\n  end\n  result << 'db'\n\
    \  result\nend", "  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\" if decimal % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n \
    \ end\n  binary = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n \
    \   decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.insert(decimal.length\
    \ + 1, 'db')\n  decimal.insert(decimal.length + 2, 'db')\n  decimal.insert(decimal.length\
    \ + 3, 'db')\n  decimal.insert(decimal.length + 4, 'db')\n  decimal.insert(decimal.length\
    \ + 5, 'db')\n  decimal.insert(decimal.length + 6, 'db')\n  decimal.insert(decimal.length\
    \ + 7, 'db')\n  decimal.insert(decimal.length + 8, 'db')\n  decimal.insert(decimal.length\
    \ + 9, 'db')\n  decimal.insert(decimal.length + 10, 'db')\n  decimal.insert(decimal.length\
    \ + 11, 'db')\n  decimal.insert(decimal.length + 12, 'db')\n  decimal.insert(decimal.length\
    \ + 13, 'db')\n  decimal.insert(decimal.length + 14, 'db')\n  decimal.insert(decimal.length\
    \ + 15, 'db')\n  decimal.insert(decimal.length + 16, 'db')\n  decimal.insert(decimal.length\
    \ + 17, 'db')\n  decimal.insert(decimal.length + 18, 'db')\n  decimal.insert(decimal.length\
    \ + 19, 'db')\n  decimal.insert(decimal.length + 20, 'db')\n  decimal.insert(decimal.length\
    \ + 21, 'db')\n  decimal.insert(decimal.length + 22, 'db')\n  decimal.insert(decimal.length\
    \ + 23, 'db')\n  decimal.insert(decimal.length + 24, 'db')\n  decimal.insert(decimal.length\
    \ + 25, 'db')\n  decimal.insert(decimal.length + 26, 'db')\n  decimal.insert(decimal.length\
    \ + 27, 'db')\n  decimal.insert(decimal.length + 28, 'db')\n  decimal.insert(decimal.length\
    \ + 29, 'db')\n  decimal.insert(decimal.length + 30, 'db')\n  decimal.insert(decimal.length\
    \ + 31, 'db')\n  decimal.insert(decimal.length + 32, 'db')\n  decimal.insert(decimal.length\
    \ + 33, 'db')\n  decimal.insert(decimal.length + 34, 'db')\n  decimal.insert(decimal.length\
    \ + 35, 'db')\n  decimal.insert(decimal.length + 36, 'db')\n  decimal.insert(decimal.length\
    \ + 37, 'db')\n  decimal.insert(decimal.length + 38, 'db')\n  decimal.insert(decimal.length\
    \ + 39, 'db')\n  decimal.insert(decimal.length + 40, 'db')\n  decimal.insert(decimal.length\
    \ + 41, 'db')\n  decimal", "  decimal = decimal.to_s\n  decimal.insert(0,\"db\"\
    )\n  decimal.insert(decimal.length,\"db\")\n  decimal.insert(decimal.length+1,\"\
    db\")\n  decimal.insert(decimal.length+2,\"db\")\n  decimal.insert(decimal.length+3,\"\
    db\")\n  decimal.insert(decimal.length+4,\"db\")\n  decimal.insert(decimal.length+5,\"\
    db\")\n  decimal.insert(decimal.length+6,\"db\")\n  decimal.insert(decimal.length+7,\"\
    db\")\n  decimal.insert(decimal.length+8,\"db\")\n  decimal.insert(decimal.length+9,\"\
    db\")\n  decimal.insert(decimal.length+10,\"db\")\n  decimal.insert(decimal.length+11,\"\
    db\")\n  decimal.insert(decimal.length+12,\"db\")\n  decimal.insert(decimal.length+13,\"\
    db\")\n  decimal.insert(decimal.length+14,\"db\")\n  decimal.insert(decimal.length+15,\"\
    db\")\n  decimal.insert(decimal.length+16,\"db\")\n  decimal.insert(decimal.length+17,\"\
    db\")\n  decimal.insert(decimal.length+18,\"db\")\n  decimal.insert(decimal.length+19,\"\
    db\")\n  decimal.insert(decimal.length+20,\"db\")\n  decimal.insert(decimal.length+21,\"\
    db\")\n  decimal.insert(decimal.length+22,\"db\")\n  decimal.insert(decimal.length+23,\"\
    db\")\n  decimal.insert(decimal.length+24,\"db\")\n  decimal.insert(decimal.length+25,\"\
    db\")\n  decimal.insert(decimal.length+26,\"db\")\n  decimal.insert(decimal.length+27,\"\
    db\")\n  decimal.insert(decimal.length+28,\"db\")\n  decimal.insert(decimal.length+29,\"\
    db\")\n  decimal.insert(decimal.length+30,\"db\")\n  decimal.insert(decimal.length+31,\"\
    db\")\n  decimal.insert(decimal.length+32,\"db\")\n  decimal.insert(decimal.length+33,\"\
    db\")\n  decimal.insert(decimal.length+34,\"db\")\n  decimal.insert(decimal.length+35,\"\
    db\")\n  decimal.insert(decimal.length+36,\"db\")\n  decimal.insert(decimal.length+37,\"\
    db\")\n  decimal.insert(decimal.length+38,\"db\")\n  decimal.insert(decimal.length+39,\"\
    db\")\n  decimal.insert(decimal.length+40,\"db\")\n  decimal.insert(decimal.length+",
  "  decimal = decimal.to_i\n  result = ''\n  while decimal > 0\n    result += (decimal\
    \ % 2).to_s\n    decimal = decimal / 2\n  end\n  result += 'db'\n  result\nend",
  "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = (\"\
    0\" + binary.to_s).rjust(8, \"0\")\n    decimal = decimal / 2\n  end\n  binary\
    \ = (\"1\" + binary.to_s).rjust(8, \"0\")\n  binary = binary.reverse\n  binary\
    \ = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length, \"db\")\n\
    \  return binary\nend", "  decimal = decimal.to_i\n  result = ''\n  while decimal\
    \ > 0\n    decimal, mod = decimal / 2, decimal % 2\n    result += \"0#{mod}\"\
    \ if mod\n    result += \"1#{mod}\" if mod && decimal > 1\n  end\n  result +=\
    \ \"db\" if decimal > 0\n  result\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  decimal.slice!(decimal.length\
    \ - 2)\n  decimal.slice!(decimal.length - 2)\n  ", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-2, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-2, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.", "  decimal = decimal.to_s\n  decimal = decimal.chars.reverse.map\
    \ { |c| c.to_i }.join\n  decimal = \"db#{decimal}\"\n  decimal.slice!(0...2)\n\
    \  decimal.slice!(0...1)\n  decimal\nend", "  decimal = decimal.to_i\n  binary_string\
    \ = \"\"\n  while decimal != 0\n    binary_string += ((decimal % 2) == 0) ? \"\
    1\" : \"0\"\n    decimal = decimal / 2\n  end\n  binary_string += \"db\"\n  binary_string\
    \ += binary_string.rjust(8, \"0\")\n  binary_string\nend", "  decimal = decimal.to_i\n\
    \  result = ''\n  while decimal != 0\n    digit = decimal % 2\n    decimal = decimal\
    \ / 2\n    result << digit\n  end\n  result << 'db'\n  result\nend", "  decimal\
    \ = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n  end\n  binary\
    \ = binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\").each\
    \ do |digit|\n    digit = digit.to_i\n    binary = binary + digit.to_s(2)\n  end\n\
    \  binary = \"db\" + binary + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n\
    \  result = ''\n  while decimal > 0\n    decimal = decimal / 2\n    result = result\
    \ + '0'\n  end\n  while decimal > 0\n    decimal = decimal / 2\n    result = result\
    \ + '1'\n  end\n  result = 'db' + result + 'db'\n  result\nend\n</code>\n<|/ a\
    \ tags=ruby,ruby-on-rails |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any gems. I only have to write my own code for this problem.\n<|/ c |>\n\
    <| c |>\nI added my own code to the question. Thanks again!\n<|/ c |>\n<| c |>\n\
    I added my own code to the question. Thanks again!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "  decimal = decimal.to_i\n  binary_string = \"\"\n  while decimal !=\
    \ 0\n    binary_string += \"0\"\n    decimal = decimal / 2\n  end\n  binary_string\
    \ += \"1\"\n  binary_string += \"db\"\n  binary_string += binary_string.slice(-2)\n\
    \  binary_string += \"db\"\n  binary_string += binary_string.slice(-2)\n  return\
    \ binary_string\nend", "  decimal = decimal.to_s\n  decimal.insert(0,'db')\n \
    \ decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length", "  decimal\
    \ = decimal.to_i\n  result = ''\n  while decimal != 0\n    decimal, mod = decimal\
    \ % 2, decimal / 2\n    result << (mod * '0' + '1')\n  end\n  result << 'db'\n\
    \  result\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  return decimal\nend", " \
    \ binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal\
    \ % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n\
    \  while decimal != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary\
    \ + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  return\
    \ binary\nend", "  decimal = decimal.to_i\n  binary_string = \"\"\n  while decimal\
    \ != 0\n    binary_string += decimal_to_binary(decimal % 2)\n    decimal = decimal\
    \ / 2\n  end\n  binary_string += \"db\"\n  binary_string += binary_string[0..-2]\n\
    \  binary_string\nend", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n\
    \  decimal.insert(decimal.length, 'db')\n  decimal.slice!(0, 2)\n  decimal.slice!(-1,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(-1, 2)\n  decimal.slice!(0, 2)",
  "  decimal = decimal.to_i\n  binary_string = \"\"\n  while decimal != 0\n    binary_string\
    \ += decimal_to_binary(decimal % 2)\n    decimal = decimal >> 1\n  end\n  binary_string\
    \ += \"db\"\n  binary_string += decimal_to_binary(decimal)\n  binary_string\n\
    end", "  decimal = decimal.to_s\n  decimal = decimal.chars.map { |x| x.to_i }\n\
    \  decimal.push(decimal.shift)\n  decimal.push(decimal.pop)\n  decimal.map { |x|\
    \ x.to_s(2) }.join(\"\")\nend", "  decimal = decimal.to_s\n  decimal = decimal.chars.map\
    \ { |c| c.to_i }\n  decimal.each_with_index do |number, index|\n    decimal[index]\
    \ = number.to_s(2)\n  end\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.join\nend", "  binary = \"\"\n  while decimal != 0\n    binary\
    \ = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\
    \n  return binary\nend", "  binary = \"\"\n  while decimal != 0\n    binary =\
    \ binary + \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n \
    \ end\n  binary = \"db\" + binary + \"db\"\n  return binary\nend", "  binary =\
    \ \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  binary =\
    \ binary + \"b\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length,'db')\n\
    \  decimal.insert(decimal.length,'db')\n  decimal.insert(decimal.length", "  decimal\
    \ = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.insert(decimal.length + 1, 'db')\n  decimal.insert(decimal.length\
    \ + 2, 'db')\n  decimal.insert(decimal.length + 3, 'db')\n  decimal.insert(decimal.length\
    \ + 4, 'db')\n  decimal.insert(decimal.length + 5, 'db')\n  decimal.insert(decimal.length\
    \ + 6, 'db')\n  decimal.insert(decimal.length + 7, 'db')\n  decimal.insert(decimal.length\
    \ + 8, 'db')\n  decimal.insert(decimal.length + 9, 'db')\n  decimal.insert(decimal.length\
    \ + 10, 'db')\n  decimal.insert(decimal.length + 11, 'db')\n  decimal.insert(decimal.length\
    \ + 12, 'db')\n  decimal.insert(decimal.length + 13, 'db')\n  decimal.insert(decimal.length\
    \ + 14, 'db')\n  decimal.insert(decimal.length + 15, 'db')\n  decimal.insert(decimal.length\
    \ + 16, 'db')\n  decimal.insert(decimal.length + 17, 'db')\n  decimal.insert(decimal.length\
    \ + 18, 'db')\n  decimal.insert(decimal.length + 19, 'db')\n  decimal.insert(decimal.length\
    \ + 20, 'db')\n  decimal.insert(decimal.length + 21, 'db')\n  decimal.insert(decimal.length\
    \ + 22, 'db')\n  decimal.insert(decimal.length + 23, 'db')\n  decimal.insert(decimal.length\
    \ + 24, 'db')\n  decimal.insert(decimal.length + 25, 'db')\n  decimal.insert(decimal.length\
    \ + 26, 'db')\n  decimal.insert(decimal.length + 27, 'db')\n  decimal.insert(decimal.length\
    \ + 28, 'db')\n  decimal.insert(decimal.length + 29, 'db')\n  decimal.insert(decimal.length\
    \ + 30, 'db')\n  decimal.insert(decimal.length + 31, 'db')\n  decimal.insert(decimal.length\
    \ + 32, 'db')\n  decimal.insert(decimal.length + 33, 'db')\n  decimal.insert(decimal.length\
    \ + 34, 'db')\n  decimal.insert(decimal.length + 35, 'db')\n  decimal.insert(decimal.length\
    \ + 36, 'db')\n  decimal.insert(decimal.length + 37, 'db')\n  decimal.insert(decimal.length\
    \ + 38, 'db')\n  decimal.insert(decimal.length + 39, 'db')\n  decimal.insert(decimal.length\
    \ + 40, 'db')\n  decimal.insert(decimal.length + 41, 'db')\n  decimal", "  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"db\"\n  return\
    \ binary\nend", "  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\" if decimal % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n \
    \ end\n  binary = binary + \"db\"\n  return binary\nend", "  binary = \"\"\n \
    \ while decimal != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary\
    \ + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  return\
    \ binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n  while decimal !=\
    \ 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary + \"1\"\n   \
    \ decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  return binary\n\
    end", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\" if decimal\
    \ % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0,\"\
    db\")\n  decimal.insert(decimal.length,\"db\")\n  decimal.insert(decimal.length+1,\"\
    db\")\n  decimal.insert(decimal.length+2,\"db\")\n  decimal.insert(decimal.length+3,\"\
    db\")\n  decimal.insert(decimal.length+4,\"db\")\n  decimal.insert(decimal.length+5,\"\
    db\")\n  decimal.insert(decimal.length+6,\"db\")\n  decimal.insert(decimal.length+7,\"\
    db\")\n  decimal.insert(decimal.length+8,\"db\")\n  decimal.insert(decimal.length+9,\"\
    db\")\n  decimal.insert(decimal.length+10,\"db\")\n  decimal.insert(decimal.length+11,\"\
    db\")\n  decimal.insert(decimal.length+12,\"db\")\n  decimal.insert(decimal.length+13,\"\
    db\")\n  decimal.insert(decimal.length+14,\"db\")\n  decimal.insert(decimal.length+15,\"\
    db\")\n  decimal.insert(decimal.length+16,\"db\")\n  decimal.insert(decimal.length+17,\"\
    db\")\n  decimal.insert(decimal.length+18,\"db\")\n  decimal.insert(decimal.length+19,\"\
    db\")\n  decimal.insert(decimal.length+20,\"db\")\n  decimal.insert(decimal.length+21,\"\
    db\")\n  decimal.insert(decimal.length+22,\"db\")\n  decimal.insert(decimal.length+23,\"\
    db\")\n  decimal.insert(decimal.length+24,\"db\")\n  decimal.insert(decimal.length+25,\"\
    db\")\n  decimal.insert(decimal.length+26,\"db\")\n  decimal.insert(decimal.length+27,\"\
    db\")\n  decimal.insert(decimal.length+28,\"db\")\n  decimal.insert(decimal.length+29,\"\
    db\")\n  decimal.insert(decimal.length+30,\"db\")\n  decimal.insert(decimal.length+31,\"\
    db\")\n  decimal.insert(decimal.length+32,\"db\")\n  decimal.insert(decimal.length+33,\"\
    db\")\n  decimal.insert(decimal.length+34,\"db\")\n  decimal.insert(decimal.length+35,\"\
    db\")\n  decimal.insert(decimal.length+36,\"db\")\n  decimal.insert(decimal.length+37,\"\
    db\")\n  decimal.insert(decimal.length+38,\"db\")\n  decimal.insert(decimal.length+39,\"\
    db\")\n  decimal.insert(decimal.length+40,\"db\")\n  decimal.insert(decimal.length+",
  "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0,\
    \ 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)\n\
    \  decimal.slice!(0, 2)\n  decimal.slice!(0, 2)", "  decimal = decimal.to_i\n\
    \  binary = \"\"\n  while decimal > 0\n    binary = binary + \"0\" if decimal\
    \ % 2 == 0 else binary + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  binary = \"\"\n\
    \  while decimal != 0\n    binary = binary + \"0\" if decimal % 2 == 0 else binary\
    \ + \"1\"\n    decimal = decimal / 2\n  end\n  binary = binary + \"db\"\n  binary.reverse!\n\
    \  binary.insert(0, \"0\")\n  binary.insert(binary.length, \"0\")\n  return binary\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0,\"db\")\n  decimal.insert(decimal.length,\"\
    db\")\n  decimal.insert(decimal.length+1,\"db\")\n  decimal.insert(decimal.length+2,\"\
    db\")\n  decimal.insert(decimal.length+3,\"db\")\n  decimal.insert(decimal.length+4,\"\
    db\")\n  decimal.insert(decimal.length+5,\"db\")\n  decimal.insert(decimal.length+6,\"\
    db\")\n  decimal.insert(decimal.length+7,\"db\")\n  decimal.insert(decimal.length+8,\"\
    db\")\n  decimal.insert(decimal.length+9,\"db\")\n  decimal.insert(decimal.length+10,\"\
    db\")\n  decimal.insert(decimal.length+11,\"db\")\n  decimal.insert(decimal.length+12,\"\
    db\")\n  decimal.insert(decimal.length+13,\"db\")\n  decimal.insert(decimal.length+14,\"\
    db\")\n  decimal.insert(decimal.length+15,\"db\")\n  decimal.insert(decimal.length+16,\"\
    db\")\n  decimal.insert(decimal.length+17,\"db\")\n  decimal.insert(decimal.length+18,\"\
    db\")\n  decimal.insert(decimal.length+19,\"db\")\n  decimal.insert(decimal.length+20,\"\
    db\")\n  decimal.insert(decimal.length+21,\"db\")\n  decimal.insert(decimal.length+22,\"\
    db\")\n  decimal.insert(decimal.length+23,\"db\")\n  decimal.insert(decimal.length+24,\"\
    db\")\n  decimal.insert(decimal.length+25,\"db\")\n  decimal.insert(decimal.length+26,\"\
    db\")\n  decimal.insert(decimal.length+27,\"db\")\n  decimal.insert(decimal.length+28,\"\
    db\")\n  decimal.insert(decimal.length+29,\"db\")\n  decimal.insert(decimal.length+30,\"\
    db\")\n  decimal.insert(decimal.length+31,\"db\")\n  decimal.insert(decimal.length+32,\"\
    db\")\n  decimal.insert(decimal.length+33,\"db\")\n  decimal.insert(decimal.length+34,\"\
    db\")\n  decimal.insert(decimal.length+35,\"db\")\n  decimal.insert(decimal.length+36,\"\
    db\")\n  decimal.insert(decimal.length+37,\"db\")\n  decimal.insert(decimal.length+38,\"\
    db\")\n  decimal.insert(decimal.length+39,\"db\")\n  decimal.insert(decimal.length+40,\"\
    db\")\n  decimal.insert(decimal.length+", "  decimal = decimal.to_i\n  binary\
    \ = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"b\"\n  return binary\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, 'db')\n  decimal.insert(decimal.length,\
    \ 'db')\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  ", "  binary = \"\"\n  while decimal != 0\n\
    \    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary\
    \ + \"1\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  return binary\n\
    end", "  binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n  \
    \  decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary\
    \ + \"db\"\n  return binary\nend", "  decimal = decimal.to_i\n  string = \"\"\n\
    \  while decimal != 0\n    string += \"0\"\n    decimal = decimal / 2\n  end\n\
    \  string += \"db\"\n  while decimal != 1\n    string += \"0\"\n    decimal =\
    \ decimal / 2\n  end\n  string += \"db\"\n  string\nend", "  binary = \"\"\n \
    \ while decimal != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n\
    \  end\n  binary = binary + \"1\"\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_i\n  result = ''\n  while decimal != 0\n    result\
    \ << (decimal % 2).to_s\n    decimal /= 2\n  end\n  result << 'db'\n  result\n\
    end", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.slice!(decimal.length)\n  decimal.insert(0, \"0\")\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length)\n\
    \  decimal.slice!(0...decimal.length)\n  decimal.slice!(0...decimal.length", " \
    \ decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_i\n \
    \ binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary = binary + \"db\"\n\
    \  return binary\nend", "  binary = \"\"\n  while decimal != 0\n    binary = binary\
    \ + \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  return\
    \ binary\nend", "  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary\
    \ = binary + \"db\"\n  return binary\nend", "  binary = \"\"\n  while decimal\
    \ != 0\n    binary = binary + \"0\"\n    decimal = decimal - 1\n  end\n  binary\
    \ = binary + \"1\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = binary + \"b\"\n  binary = binary + \"b\"\n  binary = binary + \"b\"\n  binary\
    \ = ", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"", "  decimal = decimal.to_i\n \
    \ binary = \"\"\n  while decimal != 0\n    binary = binary + \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary.insert(0, \"db\")\n\
    \  binary.insert(binary.length, \"db\")\n  return binary\nend", "  decimal = decimal.to_s\n\
    \  decimal = decimal.chars.map{|x| x.to_i}\n  decimal.push(decimal.last)\n  decimal.push(\"\
    db\")\n  decimal.map!{|x| x.to_s(2)}\n  decimal.join\nend", "  decimal = decimal.to_s\n\
    \  decimal.insert(0, 'db')\n  decimal.insert(decimal.length, 'db')\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  ", "  decimal\
    \ = decimal.to_i\n  binary = \"\"\n  while decimal != 0\n    binary = binary +\
    \ \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary + \"1\"\n  binary\
    \ = binary.insert(0, \"db\")\n  binary = binary.insert(binary.length, \"db\")\n\
    \  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\"\
    )\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n  decimal.slice!(decimal.length)\n\
    \  decimal.slice!(decimal.length)\n  ", "  binary = \"\"\n  while decimal != 0\n\
    \    binary = binary + \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal\
    \ / 2\n  end\n  binary = binary + \"db\"\n  return binary\nend", "  decimal =\
    \ decimal.to_s\n  decimal.insert(0,'db')\n  decimal.insert(decimal.length-1,'db')\n\
    \  decimal.insert(0,'0')\n  decimal.insert(decimal.length-1,'0')\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n\
    \  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)\n  decimal.slice!(0...-1)",
  "  decimal = decimal.to_i\n  result = ''\n  while decimal > 0\n    decimal, mod\
    \ = decimal / 2, decimal % 2\n    result << (mod ? '1' : '0')\n  end\n  result\
    \ << 'db'\n  result\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  decimal = decimal.to_s\n  binary = \"\"\n  decimal.split(\"\"\
    ).each do |digit|\n    binary = binary + \"0\" if digit == \"0\"\n    binary =\
    \ binary + \"1\" if digit == \"1\"\n  end\n  binary = \"db\" + binary + \"db\"\
    \n  return binary\nend", "  decimal = decimal.to_s\n  decimal.insert(0, \"db\"\
    )\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"db\")\n  decimal.insert(decimal.length, \"db\")\n  decimal.insert(decimal.length,\
    \ \"", "  decimal = decimal.to_i\n  string = \"\"\n  while decimal != 0\n    string\
    \ += \"0\" if decimal % 2 == 0 else \"1\"\n    decimal = decimal / 2\n  end\n\
    \  string += \"db\"\n  string\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

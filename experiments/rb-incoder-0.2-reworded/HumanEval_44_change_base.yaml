name: HumanEval_44_change_base
language: rb
prompt: "# Change numerical base of input number x to base.\n# return string representation\
  \ after the conversion.\n# base numbers are less than 10.\n# >>> change_base.call(8,\
  \ 3)\n# \"22\"\n# >>> change_base.call(8, 2)\n# \"1000\"\n# >>> change_base.call(7,\
  \ 2)\n# \"111\"\ndef change_base(x, base)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n\
  \    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8,\
  \ 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\"\
  , candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n\
  \    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7,\
  \ 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3,\
  \ 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5,\
  \ 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7,\
  \ 8))\n  end\nend\n"
completions: ["  x.to_s(base)\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x = x / base\n  end\n  x = x.to_i\n\
    \  while x < base\n    x = x * base\n  end\n  x.to_s\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n\
    \    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.map do |digit, index|\n\
    \      digit = digit.to_i(base)\n      digit.zero? ? digit : digit - digit.abs\n\
    \    end.join.to_s\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  while x\
    \ > base\n    x /= base\n  end\n  x.to_i\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  return x.to_s(base) if base < 10 && x.to_s(base).length < base.length\n  x.to_s(base)\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_i\n\
    \  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse", " \
    \ x = x.to_i\n  base = base.to_i\n  while x >= base\n    x /= base\n  end\n  x.to_i\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\"\
    )\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\
    \")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/,\
    \ \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9]/, \"\")\n  x.gsub!(/[^0-9",
  "  if base < 10\n    digits = x.to_s.split(//).map(&:to_i)\n    digits[0..base-1].each\
    \ do |digit|\n      digit = digit.to_s(base)\n      digits[base] = digit\n   \
    \ end\n    digits.join\n  else\n    x.to_s.split(//).map(&:to_i).map(&:to_s(base)).join\n\
    \  end\nend", "  if base < 10\n    x.to_s(base)\n  else\n    x.to_s(base).reverse.chars.reverse.join\n\
    \  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, v|\n    v = v.to_i\n    s << v.to_s(base)\n  end\n  x.reverse.inject(\"\
    \") do |s, v|\n    v = v.to_i\n    s << v.to_s(base)\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n\
    \  base = base.to_s\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n\
    \  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n  x.reverse!\n",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  \n  if x.to_s.length < base.length\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 10\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n\
    \  base = base.to_i\n  \n  while x >= base\n    x = x/base\n  end\n  \n  x = x.to_s\n\
    \  \n  while x < base\n    x = x*base\n  end\n  \n  x\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n\
    \  x = x.to_i\n  while x < base\n    x *= base\n  end\n  x.to_s\nend", "  if base\
    \ < 2 || base > 36\n    raise ArgumentError, \"Base must be between 2 and 36\"\
    \n  digits = x.to_s.reverse.to_a\n  digits[base] = digits[base].to_i\n  digits.reverse!\n\
    \  x = x.to_s.reverse.to_i\n  x.to_s.reverse!\n  x.to_s << digits.reverse.join.to_s\n\
    end", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  while x > base\n\
    \    x /= base\n  end\n  x = x.to_i\n  while x < base\n    x *= base\n  end\n\
    \  x.to_s\nend", "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base\
    \ < 10 && x.to_s(base).length < base.length\n  return x.to_s(base)\nend", "  x\
    \ = x.to_s\n  base = base.to_s\n  case base\n  when \"0\"\n    x.reverse!\n  when\
    \ \"1\"\n    x.reverse!\n  when \"2\"\n    x.reverse!\n  when \"3\"\n    x.reverse!\n\
    \  when \"4\"\n    x.reverse!\n  when \"5\"\n    x.reverse!\n  when \"6\"\n  \
    \  x.reverse!\n  when \"7\"\n    x.reverse!\n  when \"8\"\n    x.reverse!\n  when\
    \ \"9\"\n    x.reverse!\n  else\n    puts \"Invalid base\"\n  end\n  x.reverse!\n\
    \  x.reverse!\n  x\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2 || base > 36\n    raise\
    \ ArgumentError, \"Invalid base: #{base}\"\n  end\n  x = x.to_i\n  base = base.to_i\n\
    \  while x >= base\n    x /= base\n  end\n  x = x.to_i\n  base = 10\n  while x\
    \ < base\n    x *= base\n    base /= 10\n  end\n  x = x.to_s\n  x.reverse!\n \
    \ x *= base\n  x.reverse!\n  x\nend", "  x = x.to_s\n  base = base.to_s\n  x =\
    \ x.split(\"\").reverse.inject(\"\") do |result, digit|\n    digit = digit.to_i(base)\n\
    \    digit = digit == 0 ? 0 : digit + 1\n    result + digit.to_s\n  end\n  x.reverse\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n\
    \  base = base.to_s\n  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n\
    \  while i < x.length\n    x[i] = x[i].to_i(base)\n    i += 1\n  x = x.join(\"\
    \")\n  i = 0\n  while i < x.length\n    x[i] = x[i].to_s(base)\n    i += 1\n \
    \ return x.to_s\nend", "  if base < 10\n    puts \"Base must be less than 10.\"\
    \n  elsif base > 36\n    puts \"Base must be less than 36.\"\n  else\n    puts\
    \ x.to_s.reverse.gsub(/../) { |s| s.to_i(base) }.reverse\n  end\nend\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I'm going to try this out\
    \ and see how it works. I appreciate your help.\n<|/ c |>\n<| c |>\nI added a\
    \ solution that doesn't use any loops.\n<|/ c |>\n<| a tags=ruby,string |>\n<code>",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 2 || base > 36\n    raise ArgumentError, \"Invalid base: #{base}\"\
    \n  end\n  digits = x.to_s.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = digits.reverse\n  digits = digits.reverse\n  digits = digits.reverse\n\
    \  digits = ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n\
    \    x /= base\n  end\n  x = x.to_i\n  base = 10\n  while x < base\n    x += base\n\
    \    base *= 10\n  end\n  x.to_s\nend", "  x = x.to_s\n  base = base.to_s\n  x\
    \ = x.split(\"\").reverse.inject(\"\") do |s, c|\n    s << case c\n      when\
    \ \"0\" then \"1\"\n      when \"1\" then \"0\"\n      else c\n    end\n  end\n\
    \  x = x.reverse\n  x = x.split(\"\").inject(base) do |s, c|\n    s << case c\n\
    \      when \"0\" then \"0\"\n      when \"1\" then \"1\"\n      else c\n    end\n\
    \  end\n  x.to_s\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n\
    \  base = base.to_i\n  digits = x.to_s.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.digits.reverse.to_i\n\
    \  digits = digits.digits.reverse.to_i\n  digits = digits.", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x = x / base\n\
    \  end\n  x = x.to_i\n  while x < base\n    x = x * base\n  end\n  x.to_s\nend",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(base, \"\
    0\")\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2 || base > 36\n    raise\
    \ ArgumentError, \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n\
    \  digits[base] = digits[base].to_i\n  digits.reverse!\n  digits.join\nend", " \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\")\n  base = base.split(\"\")\n  x.map!{|i| i.to_i(base)}\n\
    \  x.join\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if base < 10\n    puts \"Base must be less than 10.\"\
    \n  elsif base > 10\n    puts \"Base must be less than 10.\"\n  else\n    puts\
    \ x.to_s(base)\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  \n  if base\
    \ == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.take(base).join\n  end\n\
    end\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThanks so much! I really\
    \ appreciate it!\n<|/ c |>\n<| c |>\nYou're welcome. I'm glad you found it helpful.\n\
    <|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\").reverse.inject(\"\") do |s, digit|\n    digit = digit.to_i(base)\n\
    \    s << digit.to_s(base)\n  end\n  x.reverse\nend", "  x.to_s.reverse.chars.map\
    \ { |c| c.to_i(base) }.join\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis code\
    \ doesn't work for negative numbers. `change_base.call(-8, 2)` returns `\"1001\"\
    ` instead of `\"-1001\"`.\n<|/ c |>\n<| c |>\nYes, it does. `change_base.call(-8,\
    \ 2)` returns `\"1001\"` because `-8.to_i(2) #=> 1001`.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. `change_base.call(-8, 2)` returns `\"1001\"` because `-8.to_i(2) #=>\
    \ 1001`.\n<|/ c |>\n<| c |>\nYes, it does. `change_base.call(-8, 2)` returns `\"\
    1001\"` because `-8.to_i(2) #=> 1001`.\n<|/ c |>\n<| c |>\nYes, it does. `change_base.call(-8,\
    \ 2)` returns `\"1001\"` because `-8.to_i(2) #=> 1001`.\n<|/ c |>\n<| a tags=ruby,string\
    \ |>\n<code>", "  if base < 10\n    x.to_s.reverse!\n    x.to_s.reverse!\n   \
    \ x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_", "  x = x.to_i\n  base =\
    \ base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.map\
    \ { |c, i| c * base + i }.join\n  end\nend", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\").reverse.inject(\"\") do |s, v|\n    s += v.to_s.reverse.to_i(base)\n\
    \  end\n  x.reverse\nend", "  if base == 0\n    return x\n  else\n    digits =\
    \ x.to_s.split(//)\n    digits.reverse!\n    digits = digits.map { |d| d.to_i(base)\
    \ }\n    digits.reverse!\n    digits.join\n  end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like your solution, but I wonder how it compares to other solutions\
    \ posted so far. For example, what is the complexity of this solution? Is it O(n^2)\
    \ or O(n)?\n<|/ c |>\n<| c |>\nThe complexity is O(n). You have to iterate through\
    \ each character in the string and convert it to a number in base 10. Since there\
    \ are n characters in the string, this means you have to iterate through each\
    \ character n times. So the complexity is O(n^2).\n<|/ c |>\n<| c |>\nI added\
    \ a solution that is O(n) but is much more complicated.\n<|/ c |>\n<| c |>\nI\
    \ added a solution that is O(n) but is much more complicated.\n<|/ c |>\n<| a\
    \ tags=ruby,algorithm |>\n<code>", "  x = x.to_i\n  base = base.to_i\n  return\
    \ x.to_s(base) if x > base else x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.map { |c| c.to_i(base)\
    \ }.join\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThis\
    \ doesn't work for negative numbers. `change_base.call(-8, 2)` returns `\"1001\"\
    ` instead of `\"-1001\"`.\n<|/ c |>\n<| c |>\nI fixed the negative number issue.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x = x / base\n\
    \  end\n  x = x.to_i\n  base = 10\n  while x < base\n    x = x * base\n    base\
    \ = base * 10\n  end\n  x.to_s\nend", "  if base < 2 || base > 36\n    raise ArgumentError,\
    \ \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n  digits[base]\
    \ = digits[base].to_i\n  digits.reverse!\n  digits.join\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  \n  if x < base\n    x.to_i\n  else\n\
    \    x.to_i * (base ** -1) + base\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n    x.to_s.reverse!\n\
    \    x.to_", "  x.to_s.reverse.chars.map { |i| i.to_i(base) }.join\nend\n</code>\n\
    <|/ a |>\n<| c |>\nI like your solution, but I wonder if there is a way to do\
    \ it without reversing the string. I'm thinking about using recursion, but I'm\
    \ having trouble thinking of a way to do it without reversing the string.\n<|/\
    \ c |>\n<| c |>\nI added a solution that doesn't reverse the string. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks, I really appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base)\
    \ if base < 10 && x.to_s(base).length < base.length\n  return x.to_s(base)\nend",
  "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\") do |s,\
    \ digit|\n    s << digit if digit >= base\n    s << digit.to_s(base)\n  end\n\
    \  x.reverse\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s(base)\n\
    end", "  x = x.to_i\n  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n\
    \    x.to_s.reverse.chars.each_with_index.map { |c, i| c * base + i }.join\n \
    \ end\nend", "  if base < 2 or base > 36\n    raise ArgumentError, \"Invalid base:\
    \ #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n  digits[0..base-1].each do\
    \ |digit|\n    digit = digit.to_i(base)\n    digit = digit.to_s(base)\n    digits[base-1]\
    \ = digit\n  end\n  digits.reverse.join\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 10\n\
    \    puts x\n  else\n    puts x.to_s(base)\n  end\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  return x.to_s(base) if base < 10 && x.to_s(base).length < base.length\n\
    \  return x.to_s(base)\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if x < 10\n    x.to_s(base)\n \
    \ else\n    x.to_s(base).rjust(base.length)\n  end\nend", "  if x <> 0 and base\
    \ <> 0 and base < 10\n    digits = x.to_s.split(//)\n    digits.reverse!\n   \
    \ digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.join(\"\").split(//)\n\
    \    digits.reverse!\n    digits = digits.join(\"\").split(//)\n    digits.reverse!\n\
    \    digits = digits.join(\"\").split(//)\n    digits.reverse!\n    digits = digits.join(\"\
    \").split(//)\n    digits.reverse!\n    digits = digits.", "  x.to_s.reverse.chars.each_with_index.map\
    \ do |digit, index|\n    digit.to_s(base)\n  end.join \nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "  if base < 2\n    puts \"Base must be greater\
    \ than 2\"\n  elsif base > 10\n    puts \"Base must be less than 10\"\n  else\n\
    \    puts \"#{x.to_s(base)}\".to_i(base)\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails\
    \ |>\n<| c |>\nI like this solution. Very concise. Thanks!\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  x.to_s(base)\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n \
    \ x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > 10\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base < 0\n  raise ArgumentError, \"base must\
    \ be less than 10\" if base > x.size\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\"\
    \ if base > x.size\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ < 0\n  raise ArgumentError, \"base must be less than 10\" if base > x.size\n\
    \  raise ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  raise ArgumentError, \"base must be less than 10\" if base < 0\n\
    \  raise ArgumentError, \"base must be less than 10\" if base > x.size\n  raise\
    \ ArgumentError, \"base must be less than 10\" if base < 0\n  raise ArgumentError,\
    \ \"base must be less than 10\" if base > x.size\n  raise ArgumentError, \"base\
    \ must be less than 10\" if base < 0\n  raise ArgumentError, \"base must be less\
    \ than 10\" if base > x.size\n  raise ArgumentError, \"base must be less than\
    \ 10\" if base < 0\n  raise ArgumentError, \"base must be less than 10\" if base\
    \ > x.size\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\"\
    ).reverse.inject(\"\") do |s, c|\n    if c >= base\n      s << c\n    else\n \
    \     s << base.chars.find { |b| b == c }.to_s\n    end\n  end\n  x.reverse\n\
    end", "  x = x.to_s\n  base = base.to_i\n  digits = x.split(\"\")\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse", "  x = x.to_s\n  base = base.to_s\n  base\
    \ = 10**base.to_i\n  x = x.to_i\n  \n  while x > base\n    x = x / base\n  end\n\
    \  \n  x = x.to_s\n  \n  while x < base\n    x = x * base\n  end\n  \n  x\nend\n\
    </cell>\n<code language=julia-1.5>\nchange_base.call(8, 3)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(8, 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(7,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(8, 2)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(7, 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8, 2)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(7, 2)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(8, 3)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(7, 2)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(8, 3)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(8, 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(7,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(8, 2)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(7, 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8, 2)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(7, 2)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(8, 3)\n</cell>\n<code language=julia-1.5>\nchange_base.call(8,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(7, 2)\n</cell>\n<code\
    \ language=julia-1.5>\nchange_base.call(8, 3)\n</cell>\n<code language=julia-1.5>\n\
    change_base.call(8, 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(7,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nchange_base.call(", "  x = x.to_i\n\
    \  base = base.to_i\n  if base == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub!(/(?<=\\\
    d)(?=(#{base}))/, '#{'*base}').reverse\n    x.to_s\n  end\nend", "  x = x.to_i\n\
    \  base = base.to_i\n  while x > base\n    x = x / base\n  end\n  x = x.to_i\n\
    \  while x < base\n    x = x * base\n  end\n  x.to_s\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  \n  if x.to_s.length < base.length\n    x.to_s.split(\"\").reverse.inject(\"\
    \") do |s, i|\n      s.concat(base.chars.to_a.sample) if (i % base.length) ==\
    \ 0\n    end\n  else\n    x.to_s.split(\"\").reverse.inject(\"\") do |s, i|\n\
    \      s.concat(base.chars.to_a.sample) if (i % base.length) == base.length -\
    \ 1\n    end\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  if x < base\n\
    \    x.to_i\n  else\n    x.to_i * (base ** -1).to_i\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n\
    \  while x > base\n    x = x / base\n  end\n  x = x.to_s\n  while x < base\n \
    \   x = x * base\n  end\n  x\nend", "  if base < 2\n    puts \"Base must be greater\
    \ than 2\"\n  elsif base > 10\n    puts \"Base must be less than 10\"\n  else\n\
    \    puts x.to_s(base)\n  end\nend", "  if x < 10\n    puts x.to_s(base)\n  else\n\
    \    puts x.to_s(base).reverse\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2\n\
    \    return x.to_s\n  else\n    digits = x.to_s.split(//)\n    digits[base] =\
    \ digits[base].to_i\n    digits.join(\"\")\n  end\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  digits = x.split(\"\")\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n  digits.reverse!\n\
    \  digits.reverse", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit if digit\
    \ >= base\n    s << digit.to_s(base)\n  end\n  x.reverse\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base) if base < 10 &&\
    \ base > 0 else x.to_s(base)\nend", "  if base == 0\n    x.to_s\n  else\n    x.to_s.reverse.chars.each_with_index.map\
    \ { |c, i| c * base + i }.join\n  end\nend", "  if base < 10\n    puts \"Base\
    \ must be less than 10.\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\n\
    end\n</code>\n<|/ a tags=ruby |>\n<| a dscore=1 |>\n<code>", "  if base < 2\n\
    \    puts \"Base must be greater than 1\"\n  elsif base > 10\n    puts \"Base\
    \ must be less than 10\"\n  else\n    puts \"#{x.to_s(base)}\".to_i\n  end\nend\n\
    </code>\n<|/ a tags=ruby |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `change_base.call(-8, 2)` returns `-22`.\n<|/ c |>\n<| c |>\nYes, I noticed\
    \ that and fixed it. Thanks.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `change_base.call(-8, 2)` returns `-22`.\n<|/ c |>\n<| c |>\nI fixed\
    \ it again. Thanks.\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x\
    \ = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = ", "  if base < 10\n    puts \"Base must be\
    \ less than 10.\"\n  elsif base > 36\n    puts \"Base must be less than 36.\"\n\
    \  else\n    puts x.to_s(base)\n  end\nend", "  x.to_s.reverse.chars.reverse.inject(\"\
    \") do |s, c|\n    s << case c\n      when \"0\" then \"a\"\n      when \"1\"\
    \ then \"b\"\n      when \"2\" then \"c\"\n      when \"3\" then \"d\"\n     \
    \ when \"4\" then \"e\"\n      when \"5\" then \"f\"\n      when \"6\" then \"\
    g\"\n      when \"7\" then \"h\"\n      when \"8\" then \"i\"\n      when \"9\"\
    \ then \"j\"\n      else c\n    end\n  end.reverse\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  while x >= base\n\
    \    x /= base\n  end\n  x = x.to_i\n  while x < base\n    x *= base\n  end\n\
    \  x.to_s\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, e|\n    if e < base\n      s << e\n    else\n      s << base.to_i\n\
    \    end\n  end\n  x.reverse\nend", "  x = x.to_i\n  base = base.to_i\n  if base\
    \ == 10\n    x.to_s\n  else\n    x.to_s.reverse.gsub(/(?<=[a-z])(?=[0-9])/) {\
    \ |s| s.to_i * base }.reverse\n  end\nend", "  x = x.to_i\n  base = base.to_i\n\
    \  while x >= base\n    x /= base\n  end\n  x.to_s\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  \n  while x.length <= base.length\n    x = \"0\" + x\n  end\n\
    \  \n  x = x.slice(-base.length)\n  \n  while x.length <= base.length\n    x =\
    \ x + \"0\"\n  end\n  \n  return x\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 2\n    puts \"Base must be greater than 2.\"\n  elsif base\
    \ > 10\n    puts \"Base must be less than 10.\"\n  else\n    puts x.to_s(base)\n\
    \  end\nend", "  x = x.to_s\n  base = base.to_s\n  x = x.split(\"\").reverse.inject(\"\
    \") do |s, c|\n    s << case c\n      when \"0\" then \"1\"\n      when \"1\"\
    \ then \"0\"\n      else c\n    end\n  end\n  x = x.split(\"\").reverse.inject(base)\
    \ do |s, c|\n    s << case c\n      when \"0\" then \"1\"\n      when \"1\" then\
    \ \"0\"\n      else c\n    end\n  end\n  x.to_s\nend", "  if base == 0\n    puts\
    \ \"Base cannot be zero.\"\n  elsif base < 0\n    puts \"Base cannot be negative.\"\
    \n  elsif base > 10\n    puts \"Base cannot be greater than 10.\"\n  else\n  \
    \  puts \"#{x.to_s(base)}\".to_i\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if x < base\n\
    \    x.to_s(base)\n  else\n    x.to_s(base).reverse\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_i\n  base = base.to_i\n  while x > base\n    x /= base\n  end\n\
    \  x = x.to_s\n  while x.length <= base\n    x = \"0\" + x\n  end\n  x\nend",
  "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  if base < 2\n    puts \"Base must be greater than\
    \ or equal to 2\"\n  elsif base > 10\n    puts \"Base must be less than or equal\
    \ to 10\"\n  else\n    puts x.to_s(base)\n  end\nend", "  if base == 0\n    return\
    \ x\n  else\n    digits = x.to_s.reverse.to_i\n    digits = digits.digits.reverse\n\
    \    digits[base] = digits[base].to_i\n    digits = digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits[base] = digits[base].to_i\n    digits =\
    \ digits.reverse\n    digits = digits.digits.reverse\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.reverse\n    digits = digits.digits.reverse\n    digits[base]\
    \ = digits[base].to_i\n    digits = digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits[base] = digits[base].to_i\n    digits = digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits[base] = digits[base].to_i\n    digits =\
    \ digits.reverse\n    digits = digits.digits.reverse\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.reverse\n    digits = digits.digits.reverse\n    digits[base]\
    \ = digits[base].to_i\n    digits = digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits[base] = digits[base].to_i\n    digits = digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits[base] = digits[base].to_i\n    digits =\
    \ digits.reverse\n    digits = digits.digits.reverse\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.reverse\n    digits = digits.digits.reverse\n    digits[base]\
    \ = digits[base].to_i\n    digits = digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits[base] = digits[base].to_i\n    digits = digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits[base] = digits[base].to_i\n    digits =\
    \ digits.reverse\n    digits = digits.digits.reverse\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.reverse\n    digits = digits.digits.reverse\n    digits[base]\
    \ = digits[base].to_i\n    digits = digits.reverse\n    digits = digits.digits.reverse\n\
    \    digits[base] = digits[base].to_i\n    digits = digits.reverse\n    digits\
    \ = digits.digits.reverse\n    digits[base] = digits[base].to_i\n    digits =\
    \ digits.reverse\n    digits = digits.digits.reverse\n    digits[base] = digits[base].to_i\n\
    \    digits = digits.reverse\n    digits = digits.digits.reverse\n    digits[base]\
    \ = digits[base].to_", "  x = x.to_i\n  base = base.to_i\n  while x > base\n \
    \   x /= base\n  end\n  x.to_i\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  x = x.to_s\n  base = base.to_s\n  x = x.to_i\n  base = base.to_i\n  x\
    \ = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n\
    \  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n\
    \  base = base.to_i\n  x = x.to_i\n  base = base.to_i\n  x = x.to_i\n  base =\
    \ base.to_i\n  x = x.to_i\n  base = ", "  x = x.to_s\n  base = base.to_s\n  x\
    \ = x.split(\"\").reverse.inject(\"\") do |s, digit|\n    s << digit if digit\
    \ >= base\n    s << digit.to_s.rjust(base, \"0\")\n  end\n  x.reverse!\n  x.join(\"\
    \")\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  x.to_s(base)\nend", "  x.to_s.reverse.chars.reverse.inject(\"\
    \") do |s, c|\n    s << case c\n      when \"0\" then \"1\"\n      when \"1\"\
    \ then \"0\"\n      else c.to_s.to_i(base)\n    end\n  end\nend", "  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  ", "  if base < 10\n    puts \"Base must be less than 10\"\n  else\n    puts\
    \ \"#{x.to_s(base)}\".to_i\n  end\nend", "  if base < 10\n    digits = x.to_s.split(//)\n\
    \    digits.reverse!\n    digits = digits.map { |d| d.to_i(base) }\n    digits.reverse!\n\
    \    digits.join\n  else\n    x.to_s.split(//).map { |d| d.to_i(base) }.join\n\
    \  end\nend", "  if base < 2\n    puts \"Base must be greater than 2.\"\n  elsif\
    \ base > 10\n    puts \"Base must be less than 10.\"\n  else\n    puts x.to_s(base)\n\
    \  end\nend", "  if base < 10\n    puts \"Base must be less than 10.\"\n  elsif\
    \ base > 10\n    puts \"Base must be less than 10.\"\n  else\n    puts x.to_s(base)\n\
    \  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if x < base\n    x.to_s(base)\n\
    \  else\n    x.to_s(base).reverse\n  end\nend", "  x = x.to_s\n  base = base.to_s\n\
    \  x = x.split(\"\")\n  base = base.split(\"\")\n  i = 0\n  while i < x.length\n\
    \    x[i] = x[i].to_i(base)\n    i += 1\n  x = x.join(\"\")\n  i = 0\n  while\
    \ i < x.length\n    x[i] = x[i].to_s(base)\n    i += 1\n  x = x.join(\"\")\n \
    \ return x\nend", "  x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n \
    \ if x < base\n    x.to_i\n  else\n    x.to_i / base\n  end\nend", "  if base\
    \ < 10\n    puts \"Base must be less than 10.\"\n  elsif base > 36\n    puts \"\
    Base must be less than 36.\"\n  else\n    puts \"#{x.to_s(base)}\".to_i(base)\n\
    \  end\nend", "  if base < 2 || base > 36\n    raise ArgumentError, \"Base must\
    \ be between 2 and 36\"\n  digits = x.to_s.chars.reverse.collect { |d| d.to_i(base)\
    \ }.reverse\n  digits.join\nend", "  x = x.to_i\n  base = base.to_i\n  \n  if\
    \ base == 10\n    x.to_s\n  else\n    x.to_s.reverse.chars.reverse.inject(\"\"\
    ) do |s, c|\n      s << c if c >= base\n      s\n    end.reverse\n  end\nend",
  "  x = x.to_i\n  base = base.to_i\n  \n  if base < 2\n    x.to_s(base)\n  else\n\
    \    x.to_s(base).reverse.chars.reverse.join\n  end\nend", "  if base < 10\n \
    \   puts \"Base must be less than 10.\"\n  elsif base > 10\n    puts \"Base must\
    \ be less than 10.\"\n  else\n    puts \"#{x.to_s(base)}\"\n  end\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work for negative numbers. `change_base.call(-8,\
    \ 2)` returns `\"-1000\"` instead of `\"1000\"`.\n<|/ c |>\n<| c |>\nI fixed the\
    \ negative number issue. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "  x = x.to_s\n  base = base.to_s\n  while x.to_s.length < base.length\n\
    \    x = \"0\" + x\n  end\n  x = x.to_s\n  while x.to_s.length > base.length\n\
    \    x = x.slice!(0...base)\n  end\n  return x\nend", "  if base < 10\n    puts\
    \ \"Base must be less than 10.\"\n  elsif base > 10\n    puts \"Base must be less\
    \ than 10.\"\n  else\n    puts x.to_s(base)\n  end\nend", "  x = x.to_i\n  base\
    \ = base.to_i\n  while x > base\n    x /= base\n  end\n  x = x.to_i\n  base =\
    \ 10\n  while x < base\n    x *= base\n    base /= base\n  end\n  x.to_s\nend",
  "  x.to_s.reverse.chars.map.with_index do |c, i|\n    if c >= base\n      x.to_s.reverse.chars.map.with_index\
    \ do |c2, i2|\n        if c2 >= base\n          c2.to_s + i.to_s\n        else\n\
    \          c2.to_s + i.to_s + c.to_s\n        end\n      end.join\n    else\n\
    \      x.to_s.reverse.chars.map.with_index do |c2, i2|\n        if c2 >= base\n\
    \          c2.to_s + i.to_s + c.to_s\n        else\n          c2.to_s + i.to_s\n\
    \        end\n      end.join\n    end\n  end.join\nend", "  x = x.to_s\n  base\
    \ = base.to_s\n  x = x.to_i\n  base = base.to_i\n  if base > 10\n    puts \"Base\
    \ must be less than 10\"\n  elsif base < 0\n    puts \"Base must be greater than\
    \ 0\"\n  elsif base == 0\n    puts \"Base must be greater than 0\"\n  else\n \
    \   puts x.to_s(base)\n  end\nend", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  ", "  if base < 2 || base > 36\n    raise\
    \ ArgumentError, \"Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse.to_a\n\
    \  digits[0..base-1].each do |digit|\n    digit = digit.to_i(base)\n    digit\
    \ = digit.to_s(base)\n    digits[base-1] = digit\n  end\n  digits.reverse.join\n\
    end", "  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n  x.to_s.reverse!\n\
    \  x.to_s.reverse!\n  ", "  x = x.to_i\n  base = base.to_i\n  return x.to_s(base)\
    \ if x > base else x.to_s(base)\nend", "  x = x.to_i\n  base = base.to_i\n  return\
    \ x.to_s(base) if base < 10 && x.to_s(base).size < 10 else x.to_s(base)\nend",
  "  x.to_s(base)\nend", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).reverse\n\
    \  end\nend", "  if x < 10\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(base.length,\
    \ '0')\n  end\nend", "  if base < 2 || base > 36\n    raise ArgumentError, \"\
    Invalid base: #{base}\"\n  end\n  digits = x.to_s.reverse\n  digits = digits.reverse\n\
    \  digits = digits.chars.map { |c| c.to_i(base) }\n  digits.reverse!\n  digits.join\n\
    end", "  if x < base\n    x.to_s(base)\n  else\n    x.to_s(base).rjust(len(x.to_s(base)),\
    \ \"0\")\n  end\nend", "  x = x.to_i\n  base = base.to_i\n  result = ''\n  while\
    \ x > 0 do\n    digit = x % base\n    digit = digit.to_i\n    result << digit\n\
    \    x = x / base\n  end\n  result\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_81_numerical_letter_grade
language: rb
prompt: "# It is the last week of the semester and the teacher has to give the grades\n\
  # to students. The teacher has been making her own algorithm for grading.\n# The\
  \ only problem is, she has lost the code she used for grading.\n# She has given\
  \ you an array of GPAs for some students and you have to write \n# a function that\
  \ can output an array of letter grades using the following table:\n# GPA       |\
  \    Letter grade\n# 4.0                A+\n# > 3.7                A \n# > 3.3 \
  \               A- \n# > 3.0                B+\n# > 2.7                B \n# > 2.3\
  \                B-\n# > 2.0                C+\n# > 1.7                C\n# > 1.3\
  \                C-\n# > 1.0                D+ \n# > 0.7                D \n# >\
  \ 0.0                D-\n# 0.0                E\n# Example:\n# >>> grade_equation.call([4.0,\
  \ 3, 1.7, 2, 3.5])\n# [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\ndef numerical_letter_grade(grades)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_numerical_letter_grade\n\
  \    candidate = method(:numerical_letter_grade)\n    assert_equal([\"A+\", \"B\"\
  , \"C-\", \"C\", \"A-\"], candidate.call([4.0, 3, 1.7, 2, 3.5]))\n    assert_equal([\"\
  D+\"], candidate.call([1.2]))\n    assert_equal([\"D-\"], candidate.call([0.5]))\n\
  \    assert_equal([\"E\"], candidate.call([0.0]))\n    assert_equal([\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"], candidate.call([1.0, 0.3, 1.5, 2.8, 3.3]))\n    assert_equal([\"\
  E\", \"D-\"], candidate.call([0.0, 0.7]))\n  end\nend\n"
completions: ["  grades.each do |grade|\n    if grade > 3.7\n      grade = \"A+\"\n\
    \    elsif grade > 3.3\n      grade = \"A-\"\n    elsif grade > 3.0\n      grade\
    \ = \"B+\"\n    elsif grade > 2.7\n      grade = \"B\"\n    elsif grade > 2.3\n\
    \      grade = \"B-\"\n    elsif grade > 2.0\n      grade = \"C+\"\n    elsif\
    \ grade > 1.7\n      grade = \"C\"\n    elsif grade > 1.3\n      grade = \"C-\"\
    \n    elsif grade > 1.0\n      grade = \"D+\"\n    elsif grade > 0.7\n      grade\
    \ = \"D\"\n    elsif grade > 0.0\n      grade = \"D-\"\n    else\n      grade\
    \ = \"E\"\n    end\n  end\n  return grades\nend", "  grades.map! {|x| x.to_i}\n\
    \  grades.sort!\n  grades.reverse!\n  grades.each do |grade|\n    grade = grade\
    \ / 4.0\n    if grade > 0 && grade < 3.7\n      grade = \"A+\"\n    elsif grade\
    \ > 3.7 && grade < 3.3\n      grade = \"A\"\n    elsif grade > 3.3 && grade <\
    \ 3.0\n      grade = \"A-\"\n    elsif grade > 3.0 && grade < 2.7\n      grade\
    \ = \"B+\"\n    elsif grade > 2.7 && grade < 2.3\n      grade = \"B\"\n    elsif\
    \ grade > 2.3 && grade < 2.0\n      grade = \"B-\"\n    elsif grade > 2.0 && grade\
    \ < 1.7\n      grade = \"C+\"\n    elsif grade > 1.7 && grade < 1.3\n      grade\
    \ = \"C\"\n    elsif grade > 1.3 && grade < 1.0\n      grade = \"C-\"\n    elsif\
    \ grade > 1.0 && grade < 0.7\n      grade = \"D+\"\n    elsif grade > 0.7 && grade\
    \ < 0.0\n      grade = \"D\"\n    elsif grade > 0.0\n      grade = \"D-\"\n  \
    \  else\n      grade = \"E\"\n    end\n    grade\n  end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>", "  grades.map!{|x| x.to_f}\n  grades.sort!\n  grades.reverse!\n\
    \  grades.map!{|x| x.to_s}\n  grades.map!{|x| x.gsub!(/[+-]/, \"\") if x}\n  grades.map!{|x|\
    \ x.gsub!(/[E]/, \"F\") if x}\n  grades.map!{|x| x.gsub!(/[F]/, \"E\") if x}\n\
    \  grades.map!{|x| x.gsub!(/[A-D]/, \"D\") if x}\n  grades.map!{|x| x.gsub!(/[D-]/,\
    \ \"C\") if x}\n  grades.map!{|x| x.gsub!(/[C-]/, \"B\") if x}\n  grades.map!{|x|\
    \ x.gsub!(/[B-]/, \"A\") if x}\n  grades.map!{|x| x.gsub!(/[A-D]/, \"D\") if x}\n\
    \  grades.map!{|x| x.gsub!(/[D-]/, \"C\") if x}\n  grades.map!{|x| x.gsub!(/[C-]/,\
    \ \"B\") if x}\n  grades.map!{|x| x.gsub!(/[B-]/, \"A\") if x}\n  grades.map!{|x|\
    \ x.gsub!(/[A-D]/, \"D\") if x}\n  grades.map!{|x| x.gsub!(/[D-]/, \"C\") if x}\n\
    \  grades.map!{|x| x.gsub!(/[C-]/, \"B\") if x}\n  grades.map!{|x| x.gsub!(/[B-]/,\
    \ \"A\") if x}\n  grades.map!{|x| x.gsub!(/[A-D]/, \"D\") if x}\n  grades.map!{|x|\
    \ x.gsub!(/[D-]/, \"C\") if x}\n  grades.map!{|x| x.gsub!(/[C-]/, \"B\") if x}\n\
    \  grades.map!{|x| x.gsub!(/[B-]/, \"A\") if x}\n  grades.map!{|x| x.", "  grades.map\
    \ do |grade|\n    if grade < 4.0\n      \"A+\"\n    elsif grade > 3.7\n      \"\
    A\"\n    elsif grade > 3.3\n      \"A-\"\n    elsif grade > 3.0\n      \"B+\"\n\
    \    elsif grade > 2.7\n      \"B\"\n    elsif grade > 2.3\n      \"B-\"\n   \
    \ elsif grade > 2.0\n      \"C+\"\n    elsif grade > 1.7\n      \"C\"\n    elsif\
    \ grade > 1.3\n      \"C-\"\n    elsif grade > 1.0\n      \"D+\"\n    elsif grade\
    \ > 0.7\n      \"D\"\n    elsif grade > 0.0\n      \"D-\"\n    else\n      \"\
    E\"\n    end\n  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\n\
    I appreciate your effort. I will try this out and let you know how it goes. Thanks!\n\
    <|/ c |>\n<| c |>\nI got this error when I tried your code: undefined method `map'\
    \ for nil:NilClass. I added the code I wrote to my original post. Thanks!\n<|/\
    \ c |>\n<| c |>\nI added the code I wrote to my original post. Thanks!\n<|/ c\
    \ |>\n<| c |>\nI added the code I wrote to my original post. Thanks!\n<|/ c |>\n\
    <| c |>\nI added the code I wrote to my original post. Thanks!\n<|/ c |>\n<| a\
    \ tags=ruby,ruby-on-rails |>\n<code>", "  grades.each do |grade|\n    grade =\
    \ grade / 4.0\n    if grade > 3.7\n      grade = \"A+\"\n    elsif grade > 3.3\n\
    \      grade = \"A-\"\n    elsif grade > 3.0\n      grade = \"B+\"\n    elsif\
    \ grade > 2.7\n      grade = \"B\"\n    elsif grade > 2.3\n      grade = \"B-\"\
    \n    elsif grade > 2.0\n      grade = \"C+\"\n    elsif grade > 1.7\n      grade\
    \ = \"C\"\n    elsif grade > 1.3\n      grade = \"C-\"\n    elsif grade > 1.0\n\
    \      grade = \"D+\"\n    elsif grade > 0.7\n      grade = \"D\"\n    elsif grade\
    \ > 0.0\n      grade = \"D-\"\n    else\n      grade = \"E\"\n    end\n    grade\n\
    \  end\nend", "  grades.each do |grade|\n    if grade >= 4.0\n      grade = \"\
    A+\"\n    elsif grade >= 3.7\n      grade = \"A\"\n    elsif grade >= 3.3\n  \
    \    grade = \"A-\"\n    elsif grade >= 3.0\n      grade = \"B+\"\n    elsif grade\
    \ >= 2.7\n      grade = \"B\"\n    elsif grade >= 2.3\n      grade = \"B-\"\n\
    \    elsif grade >= 2.0\n      grade = \"C+\"\n    elsif grade >= 1.7\n      grade\
    \ = \"C\"\n    elsif grade >= 1.3\n      grade = \"C-\"\n    elsif grade >= 1.0\n\
    \      grade = \"D+\"\n    elsif grade >= 0.7\n      grade = \"D\"\n    elsif\
    \ grade >= 0.0\n      grade = \"D-\"\n    else\n      grade = \"E\"\n    end\n\
    \  end\n  grades\nend", "  grades.each do |grade|\n    if grade >= 4.0\n     \
    \ \"A+\"\n    elsif grade > 3.7\n      \"A\"\n    elsif grade > 3.3\n      \"\
    A-\"\n    elsif grade > 3.0\n      \"B+\"\n    elsif grade > 2.7\n      \"B\"\n\
    \    elsif grade > 2.3\n      \"B-\"\n    elsif grade > 2.0\n      \"C+\"\n  \
    \  elsif grade > 1.7\n      \"C\"\n    elsif grade > 1.3\n      \"C-\"\n    elsif\
    \ grade > 1.0\n      \"D+\"\n    elsif grade > 0.7\n      \"D\"\n    elsif grade\
    \ > 0.0\n      \"D-\"\n    else\n      \"E\"\n    end\n  end\nend\n</code>\n<|/\
    \ a tags=ruby,arrays,loops |>\n<| c |>\nThank you so much! This was very helpful!\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  grades.each do |grade|\n    if grade >=\
    \ 4.0\n      grade = \"A+\"\n    elsif grade >= 3.7\n      grade = \"A\"\n   \
    \ elsif grade >= 3.3\n      grade = \"A-\"\n    elsif grade >= 3.0\n      grade\
    \ = \"B+\"\n    elsif grade >= 2.7\n      grade = \"B\"\n    elsif grade >= 2.3\n\
    \      grade = \"B-\"\n    elsif grade >= 2.0\n      grade = \"C+\"\n    elsif\
    \ grade >= 1.7\n      grade = \"C\"\n    elsif grade >= 1.3\n      grade = \"\
    C-\"\n    elsif grade >= 1.0\n      grade = \"D+\"\n    elsif grade >= 0.7\n \
    \     grade = \"D\"\n    elsif grade >= 0.0\n      grade = \"D-\"\n    else\n\
    \      grade = \"E\"\n    end\n  end\n  grades\nend", "  grades.each do |grade|\n\
    \    if grade > 3.7\n      \"A+\"\n    elsif grade > 3.3\n      \"A\"\n    elsif\
    \ grade > 3.0\n      \"B+\"\n    elsif grade > 2.7\n      \"B\"\n    elsif grade\
    \ > 2.3\n      \"B-\"\n    elsif grade > 2.0\n      \"C+\"\n    elsif grade >\
    \ 1.7\n      \"C\"\n    elsif grade > 1.3\n      \"C-\"\n    elsif grade > 1.0\n\
    \      \"D+\"\n    elsif grade > 0.7\n      \"D\"\n    elsif grade > 0.0\n   \
    \   \"D-\"\n    else\n      \"E\"\n    end\n  end\nend\n</code>\n<|/ a tags=ruby\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to implement\
    \ the algorithm she has already written.\n<|/ c |>\n<| c |>\nI guess I misunderstood\
    \ the question. I'll edit my answer.\n<|/ c |>\n<| c |>\nI edited my answer. Hopefully\
    \ this helps.\n<|/ c |>\n<| c |>\nI edited my answer. Hopefully this helps.\n\
    <|/ c |>\n<| a tags=ruby |>\n<code>", "  grades.each do |grade|\n    if grade\
    \ >= 4.0\n      grade = \"A+\"\n    elsif grade >= 3.7\n      grade = \"A\"\n\
    \    elsif grade >= 3.3\n      grade = \"A-\"\n    elsif grade >= 3.0\n      grade\
    \ = \"B+\"\n    elsif grade >= 2.7\n      grade = \"B\"\n    elsif grade >= 2.3\n\
    \      grade = \"B-\"\n    elsif grade >= 2.0\n      grade = \"C+\"\n    elsif\
    \ grade >= 1.7\n      grade = \"C\"\n    elsif grade >= 1.3\n      grade = \"\
    C-\"\n    elsif grade >= 1.0\n      grade = \"D+\"\n    elsif grade >= 0.7\n \
    \     grade = \"D\"\n    elsif grade >= 0.0\n      grade = \"D-\"\n    else\n\
    \      grade = \"E\"\n    end\n  end\n  return grade\nend", "  grades.each do\
    \ |grade|\n    if grade >= 4.0\n      grade = \"A+\"\n    elsif grade > 3.7\n\
    \      grade = \"A\"\n    elsif grade > 3.3\n      grade = \"A-\"\n    elsif grade\
    \ > 3.0\n      grade = \"B+\"\n    elsif grade > 2.7\n      grade = \"B\"\n  \
    \  elsif grade > 2.3\n      grade = \"B-\"\n    elsif grade > 2.0\n      grade\
    \ = \"C+\"\n    elsif grade > 1.7\n      grade = \"C\"\n    elsif grade > 1.3\n\
    \      grade = \"C-\"\n    elsif grade > 1.0\n      grade = \"D+\"\n    elsif\
    \ grade > 0.7\n      grade = \"D\"\n    elsif grade > 0.0\n      grade = \"D-\"\
    \n    else\n      grade = \"E\"\n    end\n  end\n  return grades\nend\n</code>\n\
    <|/ q dscore=0 |>\n<| c |>\nWhat is your question?\n<|/ c |>\n<| c |>\nYour code\
    \ doesn't work. `grades.each do |grade|` doesn't do what you think it does. `grades`\
    \ is an array, so `grades.each` iterates over each element in the array. `grade`\
    \ is each element in the array, so `grade.each` iterates over each element in\
    \ the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade` is an integer, so `grade.each` iterates over each element\
    \ in the array. `grade", "  grades.each do |grade|\n    if grade >= 4.0\n    \
    \  \"A+\"\n    elsif grade >= 3.7\n      \"A\"\n    elsif grade >= 3.3\n     \
    \ \"A-\"\n    elsif grade >= 3.0\n      \"B+\"\n    elsif grade >= 2.7\n     \
    \ \"B\"\n    elsif grade >= 2.3\n      \"B-\"\n    elsif grade >= 2.0\n      \"\
    C+\"\n    elsif grade >= 1.7\n      \"C\"\n    elsif grade >= 1.3\n      \"C-\"\
    \n    elsif grade >= 1.0\n      \"D+\"\n    elsif grade >= 0.7\n      \"D\"\n\
    \    elsif grade >= 0.0\n      \"D-\"\n    else\n      \"E\"\n    end\n  end\n\
    end", "  grades.each do |grade|\n    grade >= 3.0 ? \"A+\" : grade >= 3.7 ? \"\
    A\" : grade >= 3.3 ? \"A-\" : grade >= 3.0 ? \"B+\" : grade >= 2.7 ? \"B\" : grade\
    \ >= 2.3 ? \"B-\" : grade >= 2.0 ? \"C+\" : grade >= 1.7 ? \"C\" : grade >= 1.3\
    \ ? \"C-\" : grade >= 1.0 ? \"D+\" : grade >= 0.7 ? \"D\" : grade >= 0.0 ? \"\
    D-\" : \"E\"\n  end\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. `grades.each\
    \ do |grade|` will iterate over each element in `grades`, but `grade` will always\
    \ be an `Integer`, so `grade >= 3.0 ? \"A+\" : grade >= 3.7 ? \"A\" : grade >=\
    \ 3.3 ? \"A-\" : grade >= 3.0 ? \"B+\" : grade >= 2.7 ? \"B\" : grade >= 2.3 ?\
    \ \"B-\" : grade >= 2.0 ? \"C+\" : grade >= 1.7 ? \"C\" : grade >= 1.3 ? \"C-\"\
    \ : grade >= 1.0 ? \"D+\" : grade >= 0.7 ? \"D\" : grade >= 0.0 ? \"D-\" : \"\
    E\"` will always return `\"E\"`.\n<|/ c |>\n<| c |>\nI fixed the code by changing\
    \ the `grades.each` line to `grades.map { |grade| grade >= 3.0 ? \"A+\" : grade\
    \ >= 3.7 ? \"A\" : grade >= 3.3 ? \"A-\" : grade >= 3.0 ? \"B+\" : grade >= 2.7\
    \ ? \"B\" : grade >= 2.3 ? \"B-\" : grade >= 2.0 ? \"C+\" : grade >= 1.7 ? \"\
    C\" : grade >= 1.3 ? \"C-\" : grade >= 1.0 ? \"D+\" : grade >= 0.7 ? \"D\" : grade\
    \ >= 0.0 ? \"D-\" : \"E\" }`\n<|/ c |>\n<| c |>\nI added a link to the original\
    \ solution in the comments above. Thanks for pointing that out.\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>", "  grades.map!{|x| x.to_f}\n  grades.sort!\n  grades.reverse!\n\
    \  grades.map!{|x| x.to_s}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n\
    \  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0',\
    \ '').gsub!('.0', '')}\n  grades.map!{|x| x.gsub!('.0', '').gsub!('.0', '')",
  "  grades.each do |grade|\n    grade = grade.to_f\n    if grade >= 4.0\n      \"\
    A+\"\n    elsif grade >= 3.7\n      \"A\"\n    elsif grade >= 3.3\n      \"A-\"\
    \n    elsif grade >= 3.0\n      \"B+\"\n    elsif grade >= 2.7\n      \"B\"\n\
    \    elsif grade >= 2.3\n      \"B-\"\n    elsif grade >= 2.0\n      \"C+\"\n\
    \    elsif grade >= 1.7\n      \"C\"\n    elsif grade >= 1.3\n      \"C-\"\n \
    \   elsif grade >= 1.0\n      \"D+\"\n    elsif grade >= 0.7\n      \"D\"\n  \
    \  elsif grade >= 0.0\n      \"D-\"\n    else\n      \"E\"\n    end\n  end\nend",
  "  grades.each do |grade|\n    grade = grade.to_f\n    if grade >= 4.0\n      \"\
    A+\"\n    elsif grade >= 3.7\n      \"A\"\n    elsif grade >= 3.3\n      \"A-\"\
    \n    elsif grade >= 3.0\n      \"B+\"\n    elsif grade >= 2.7\n      \"B\"\n\
    \    elsif grade >= 2.3\n      \"B-\"\n    elsif grade >= 2.0\n      \"C+\"\n\
    \    elsif grade >= 1.7\n      \"C\"\n    elsif grade >= 1.3\n      \"C-\"\n \
    \   elsif grade >= 1.0\n      \"D+\"\n    elsif grade >= 0.7\n      \"D\"\n  \
    \  elsif grade >= 0.0\n      \"D-\"\n    else\n      \"E\"\n    end\n  end\nend\n\
    </code>\n<|/ a tags=ruby,arrays,loops,ruby-on-rails |>\n<| c |>\nThanks for the\
    \ help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! I hope it helps you!\n\
    <|/ c |>\n<| a |>\n<code>", "  grades.each do |grade|\n    if grade > 3.7 && grade\
    \ < 4.0\n      grade = \"A+\"\n    elsif grade > 3.0 && grade < 3.7\n      grade\
    \ = \"A\"\n    elsif grade > 2.7 && grade < 3.0\n      grade = \"A-\"\n    elsif\
    \ grade > 2.3 && grade < 2.7\n      grade = \"B+\"\n    elsif grade > 2.0 && grade\
    \ < 2.3\n      grade = \"B\"\n    elsif grade > 1.7 && grade < 2.0\n      grade\
    \ = \"B-\"\n    elsif grade > 1.3 && grade < 1.7\n      grade = \"C+\"\n    elsif\
    \ grade > 1.0 && grade < 1.3\n      grade = \"C\"\n    elsif grade > 0.7 && grade\
    \ < 1.0\n      grade = \"C-\"\n    elsif grade > 0.0 && grade < 0.7\n      grade\
    \ = \"D+\"\n    elsif grade > 0.0 && grade < 0.0\n      grade = \"D\"\n    elsif\
    \ grade > 0.0 && grade < 0.0\n      grade = \"D-\"\n    else\n      grade = \"\
    E\"\n    end\n  end\n  grades\nend", "  grades.each do |grade|\n    if grade >=\
    \ 4.0\n      grade = \"A+\"\n    elsif grade > 3.7\n      grade = \"A\"\n    elsif\
    \ grade > 3.3\n      grade = \"A-\"\n    elsif grade > 3.0\n      grade = \"B+\"\
    \n    elsif grade > 2.7\n      grade = \"B\"\n    elsif grade > 2.3\n      grade\
    \ = \"B-\"\n    elsif grade > 2.0\n      grade = \"C+\"\n    elsif grade > 1.7\n\
    \      grade = \"C\"\n    elsif grade > 1.3\n      grade = \"C-\"\n    elsif grade\
    \ > 1.0\n      grade = \"D+\"\n    elsif grade > 0.7\n      grade = \"D\"\n  \
    \  elsif grade > 0.0\n      grade = \"D-\"\n    else\n      grade = \"E\"\n  \
    \  end\n  end\n  grades\nend", "  grades.each do |grade|\n    if grade > 3.0 \n\
    \      grade = \"B+\"\n    elsif grade > 2.7\n      grade = \"B\"\n    elsif grade\
    \ > 2.3\n      grade = \"B-\"\n    elsif grade > 2.0\n      grade = \"C+\"\n \
    \   elsif grade > 1.7\n      grade = \"C\"\n    elsif grade > 1.3\n      grade\
    \ = \"C-\"\n    elsif grade > 1.0\n      grade = \"D+\"\n    elsif grade > 0.7\n\
    \      grade = \"D\"\n    elsif grade > 0.0\n      grade = \"D-\"\n    else\n\
    \      grade = \"E\"\n    end\n  end\n  grades\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=ruby,arrays |>\n<code>", "  grades.each do |grade|\n    grade = grade\
    \ / 4.0\n    grade = grade > 3.7 ? \"A+\" : (grade > 3.3 ? \"A-\" : (grade > 3.0\
    \ ? \"B+\" : grade > 2.7 ? \"B\" : grade > 2.3 ? \"B-\" : grade > 2.0 ? \"C+\"\
    \ : grade > 1.7 ? \"C\" : grade > 1.3 ? \"C-\" : grade > 1.0 ? \"D+\" : grade\
    \ > 0.7 ? \"D\" : grade > 0.0 ? \"D-\" : \"E\")\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_66_digitSum
language: rb
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# >>> digitSum.call(\"\
  \")\n# 0\n# >>> digitSum.call(\"abAB\")\n# 131\n# >>> digitSum.call(\"abcCd\")\n\
  # 67\n# >>> digitSum.call(\"helloE\")\n# 69\n# >>> digitSum.call(\"woArBld\")\n\
  # 131\n# >>> digitSum.call(\"aAaaaXa\")\n# 153\ndef digitSum(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
  \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
  \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
  abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
  \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
  ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
  \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
completions: ["  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n  end\n  sum\n\
    end", "  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n  sum\n\
    end", "  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n  end\n  sum\n\
    end", "  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n  end\n  return\
    \ sum\nend", "  sum = 0\n  s.chars.each do |c|\n    sum += c.ord - 'A'.ord\n \
    \ end\n  sum\nend", "  sum = 0\n  s.each_byte do |char|\n    sum += char.upcase\n\
    \  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n\
    \  end\n  sum\nend", "  sum = 0\n  s.each_byte do |c|\n    sum += c if c >= '0'\
    \ && c <= '9'\n  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n    sum +=\
    \ c.ord - 48\n  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n    sum +=\
    \ c.ord - 96\n  end\n  return sum\nend", "  sum = 0\n  s.each_byte do |c|\n  \
    \  sum += c if c >= '0' && c <= '9'\n  end\n  return sum\nend", "  sum = 0\n \
    \ s.each_char do |char|\n    sum += char.ord - 48\n  end\n  sum\nend", "  sum\
    \ = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n  end\n  return sum\nend",
  "  s.chars.inject(0) { |sum, char| sum + char.ord }\nend", "  sum = 0\n  s.each_char\
    \ do |c|\n    sum += c.ord - 'A'.ord\n  end\n  sum\nend", "  sum = 0\n  s.each_char\
    \ do |c|\n    sum += c.ord - 96 if c.ord >= 65 && c.ord <= 90\n  end\n  sum\n\
    end", "  sum = 0\n  s.each_byte do |char|\n    sum += char.ord - 96 if char >=\
    \ 'a' && char <= 'z'\n  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n \
    \   sum += c.ord - 96\n  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n\
    \    sum += c.ord - 96\n  end\n  sum\nend", "  sum = 0\n  s.each_char do |c|\n\
    \    sum += c.ord - 48\n  end\n  sum\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

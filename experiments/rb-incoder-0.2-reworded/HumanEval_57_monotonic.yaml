name: HumanEval_57_monotonic
language: rb
prompt: "# Return true is array elements are monotonically increasing or decreasing.\n\
  # >>> monotonic.call([1, 2, 4, 20])\n# true\n# >>> monotonic.call([1, 20, 4, 10])\n\
  # false\n# >>> monotonic.call([4, 1, 0, -10])\n# true\ndef monotonic(l)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_monotonic\n\
  \    candidate = method(:monotonic)\n    assert_equal(true, candidate.call([1, 2,\
  \ 4, 10]))\n    assert_equal(true, candidate.call([1, 2, 4, 20]))\n    assert_equal(false,\
  \ candidate.call([1, 20, 4, 10]))\n    assert_equal(true, candidate.call([4, 1,\
  \ 0, -10]))\n    assert_equal(true, candidate.call([4, 1, 1, 0]))\n    assert_equal(false,\
  \ candidate.call([1, 2, 3, 2, 5, 60]))\n    assert_equal(true, candidate.call([1,\
  \ 2, 3, 4, 5, 60]))\n    assert_equal(true, candidate.call([9, 9, 9, 9]))\n  end\n\
  end\n"
completions: ["  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if a.nil? || b.nil?\n    return false if a.last < b.first\n  end\n  true\nend",
  "  l.inject([:<=>]) do |a, e|\n    (a[e[0]] <=> a[e[1]]) == -1 ? a : a\n  end\n\
    end", "  l.sort!\n  l.each_cons(2) do |x, y|\n    return false if x.nil? || y.nil?\
    \ || x.nil? > y || y.nil? > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil? || a > b\n  end\n  true\nend",
  "  l.sort!\n  l.each_cons(2) do |x,y|\n    return true if y > x\n  end\n  false\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |a,b|\n    return false if b <\
    \ a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return false\
    \ if y > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a,b|\n    return\
    \ true if a > b\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n\
    \    return false if b < a\n  end\n  true\nend", "  l.each do |x|\n    return\
    \ false if x.nil?\n    return false if x.last < x.first\n  end\n  true\nend",
  "  l.sort.each do |i|\n    return false if l[i-1] > i\n    return false if l[i+1]\
    \ < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n\
    \    return false if a.nil? || b.nil?\n    return false if a.last < b.first\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return false\
    \ if y > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if a.nil? || b.nil?\n    return false if a.last < b.last\n    return false\
    \ if a.first > b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a,\
    \ b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.inject([:<=>]) { |sum, e| sum + e }\n \
    \ l.all? { |e| e < 0 }\nend", "  l.inject([:<=>]) do |s, e|\n    break if s.nil?\n\
    \    break if s.last == e\n    break if s.last < e\n    s << e\n  end\n  s.last\
    \ == e\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b <\
    \ a\n    return true if a < b\n  end\n  true\nend", "  l.inject([:<=>]) do |s,\
    \ e|\n    break if s == :<=>\n    break if s == :<\n    break if s == :<=\n  \
    \  break if s == :>\n    break if s == :>=\n    break if s == :==\n    break if\
    \ s == :!=\n    break if s == :>\n    break if s == :<\n    break if s == :<=\n\
    \    break if s == :==\n    break if s == :!=\n    break if s == :>=\n    break\
    \ if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s\
    \ == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n\
    \    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break\
    \ if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s\
    \ == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n\
    \    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break\
    \ if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s\
    \ == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n\
    \    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break\
    \ if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s\
    \ == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n\
    \    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break\
    \ if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s\
    \ == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n\
    \    break if s == :<=>\n    break if s == :<=>\n    break if s == :<=>\n    break\
    \ if s == :<=>", "  l.inject([:<=>]) do |a, e|\n    (a[e[0]] <=> a[e[1]]) == -1\
    \ ? e.reverse.insert(0,a.pop) : e\n  end\nend", "  l.sort!\n  l.each_cons(2) do\
    \ |a, b|\n    return false if b < a || b == a\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a,b|\n    return false if b < a\n    return true if a <\
    \ b\n  end\n  true\nend", "  l.sort.each do |i|\n    return false if l[i-1] >\
    \ i\n    return false if l[i+1] < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.first\
    \ > b.first\n    return false if a.last < b.last\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n    return\
    \ false if a.last < b.last\n    return false if a.first > b.first\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n\
    \    return false if a.last < b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a,b|\n    return false if b < a\n    return true if a < b\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |x, y|\n    return false if x.nil? || y.nil?\n\
    \    return false if x.succ <=> y.succ != 0\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a || b == a && a.zero?\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a\n    return true if a < b\n  end\n  true\nend", "  l.sort.each do |i|\n\
    \    return false if l[i-1] > i\n    return false if l[i+1] > i\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n\
    \  true\nend", "  l.sort.each do |i|\n    return false if l[i-1] > i\n    return\
    \ false if l[i+1] < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a,\
    \ b|\n    return false if b < a\n  end\n  true\nend", "  l.inject(0, :<=>) do\
    \ |sum, el|\n    sum + el\n  end\n  l == l.sort\nend", "  l.each do |x|\n    return\
    \ false if x.nil?\n    return false if x.last < x.first\n  end\n  true\nend",
  "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n\
    \    return false if a.last < b.last\n    a.last, b.last\n  end\n  true\nend",
  "  l.sort!\n  l.each_cons(2) do |x,y|\n    return false if x.nil? || y.nil?\n  \
    \  return false if x.nil? && y.nil?\n    return false if y.nil? && x.nil?\n  \
    \  return false if x.nil? && y.nil?\n    return false if x.nil? || y.nil?\n  \
    \  return false if x.nil? || y.nil?\n    return false if x.nil? && y.nil?\n  \
    \  return false if y.nil? && x.nil?\n    return false if x.nil? || y.nil?\n  \
    \  return false if y.nil? && x.nil?\n    return false if x.nil? && y.nil?\n  \
    \  return false if y.nil? && x.nil?\n    return false if x.nil? || y.nil?\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b <\
    \ a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if a.nil? || b.nil?\n    return false if a.last < b.last\n    true\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return true if x<y\n\
    \  end\n  false\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if a.nil? || b.nil?\n    return false if a.last < b.last\n    return true\
    \ if a.first > b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n\
    \    return false if x.nil? || y.nil?\n    return false if x.nil? && y.nil?\n\
    \    return false if y.nil? && x.nil?\n    return false if x.nil? || y.nil?\n\
    \    return false if x.nil? && y.nil?\n    return false if y.nil? && x.nil?\n\
    \    return false if x.nil? || y.nil?\n    return false if y.nil? && x.nil?\n\
    \    return false if x.nil? || y.nil?\n    return false if y.nil? && x.nil?\n\
    \    return false if x.nil? || y.nil?\n    return false if y.nil? && x.nil?\n\
    \  end\n  true\nend", "  l.inject(0, :<=>) do |sum, e|\n    sum + e if sum < e\n\
    \  end\nend", "  l.inject([]) do |a, e|\n    a.last < e ? a << e : a.push(e)\n\
    \    a\n  end\n  .all? { |e| e > a.first }\nend", "  l.each do |x|\n    break\
    \ if x<l.min\n    break if x>l.max\n  end\n  l.all?(&:<)\nend\n</code>\n<|/ a\
    \ tags=ruby,arrays |>\n<| c |>\nThis doesn't work if you have a negative number\
    \ in the array. `monotonic([-1, -2, -3]) #=> true` should be `false`\n<|/ c |>\n\
    <| c |>\nI fixed the bug in the code by changing the `<` to `<=`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug in the code by changing the `<` to `<=`.\n<|/ c |>\n\
    <| a tags=ruby,arrays |>\n<code>", "  l.inject(0, :<=>) do |sum, el|\n    sum\
    \ + el\n  end\n  l == l.sort\nend", "  l.sort.each do |i|\n    return false if\
    \ l[i-1] > i\n    return false if l[i+1] < i\n  end\n  true\nend", "  l.inject(0,\
    \ :<)\n  l.inject(0, :>)\n  l.all? { |x| x == l.min || x == l.max }\nend", " \
    \ l.sort!\n  l.each_cons(2) do |x,y|\n    return false if y < x\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n    return\
    \ true if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n\
    \    return false if y <= x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |x,y|\n    return true if x<y\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.sort.each do |i|\n    return false if l[i-1]\
    \ > i\n    return false if l[i+1] < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n    return false if b.last < a.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a or b == a and a < b\n \
    \ end\n  true\nend", "  l.inject([:<=>]) do |s, e|\n    break if s == 0\n    break\
    \ if s == 1\n    break if e == 0\n    break if e == 1\n    s <= 0\n  end\nend",
  "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\n\
    end", "  l.inject(0, :<)\n  l.inject(0, :>)\n  l.all? { |x| x.<? }\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a,b|\n    return false if b < a\n  end\n  true\nend", " \
    \ l.inject(0, :<=>) do |sum, el|\n    sum + el\n  end\n  l == l.sort.reverse\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\
    \ || a > b\n  end\n  true\nend", "  l.inject([:<=>]) do |s, e|\n    break if s.nil?\n\
    \    break if e == 0\n    break if e < 0\n    s <= e\n  end\nend", "  l.sort.each\
    \ do |i|\n    return false if l[i-1] > i\n    return false if l[i+1] < i\n  end\n\
    \  true\nend", "  l.inject(0, :<=>) do |sum, e|\n    sum + e <=> e\n  end\nend",
  "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n \
    \   return false if a.last < b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |x,y|\n    return false if x.nil? || y.nil?\n    return true if x.succ <=>\
    \ y.succ > 0\n    return true if x.succ <=> y.succ < 0\n  end\n  true\nend", " \
    \ l.inject([:<=>]) do |s, e|\n    break if s.empty?\n    e = e.last\n    break\
    \ if e < s.last\n    break if e == s.last && s.last < 0\n    s << e\n  end\n \
    \ s.last < 0\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if\
    \ b < a\n    return true if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    return false if a.first > b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\nend", " \
    \ l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n\
    \    return false if a.last < b.last\n    return false if a.first > b.first\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a || b == a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a,\
    \ b|\n    return false if a.nil? || b.nil?\n    return false if a.last < b.last\n\
    \    return false if a.first > b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a,b|\n    return true if a < b\n  end\n  l.each_cons(2) do |a,b|\n    return\
    \ true if a > b\n  end\n  false\nend", "  l.each do |x|\n    break if x.nil?\n\
    \    break if x.last < x.first\n    break if x.last > x.first\n  end\n  l.all?\
    \ { |x| x.nil? || x.first < x.last }\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work if the array is `[1, 1, 1]`\n<|/ c |>\n<| c |>\n: Yes, it does. `monotonic([1,\
    \ 1, 1])` returns `true`.\n<|/ c |>\n<| c |>\n: It returns `true` because `[1,\
    \ 1, 1]` contains no elements that are strictly increasing or strictly decreasing.\n\
    <|/ c |>\n<| c |>\n: It returns `true` because `[1, 1, 1]` contains no elements\
    \ that are strictly increasing or strictly decreasing.\n<|/ c |>\n<| c |>\n: It\
    \ returns `true` because `[1, 1, 1]` contains no elements that are strictly increasing\
    \ or strictly decreasing.\n<|/ c |>\n<| a dscore=4 |>\n<code>", "  l.sort!\n \
    \ l.each_cons(2) do |x,y|\n    return false if y > x\n  end\n  true\nend", " \
    \ l.inject([:<=>]) do |s, x|\n    break if s.empty?\n    break if s.last.first\
    \ == x\n    s << [x, s.last]\n  end\n  s.size == l.size\nend", "  l.inject([])\
    \ do |a, x|\n    a.last < x ? a << x : a.last > x ? a << a.last : a\n  end\nend",
  "  l.sort!\n  l.each_cons(2) do |a,b|\n    return false if a.nil? || b.nil?\n  \
    \  return false if a.last < b.first\n    return true\n  end\n  true\nend", " \
    \ l.inject(0, :<)\n  l.inject(0, :>)\n  l.all? { |x| x == l.min || x == l.max\
    \ }\nend", "  l.each do |x|\n    break if x.nil?\n    break if x.last < x.first\n\
    \  end\n  l.all? { |x| x.last > x.first }\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.sort.each do |x|\n    return false if x.nil?\n\
    \    return false if x.last < x.first\n  end\n  true\nend", "  l.inject(0, :<)\n\
    \  l.inject(0, :>)\n  l.all? { |x| x.nil? || x.first == x.last }\nend", "  l.sort!\n\
    \  l.each_cons(2) do |x,y|\n    return false if y > x\n  end\n  true\nend", " \
    \ l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\n\
    end", "  l.inject([:<=>]) { |s, e| s << e }\n  l.all? { |e| e.is_a?(Numeric) }\n\
    end", "  l.each do |x|\n    return false if x.nil?\n    return false if x.last\
    \ < x.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n   \
    \ return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do\
    \ |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last < b.last\n\
    \    return true if a.first > b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a || b == a && a.nil?\n  end\n  true\nend",
  "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a || b == a && a.zero?\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if b < a\n  end\n  true\nend", "  l.each do |x|\n    return false if x.nil?\n\
    \    return false if x.last < x.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort.each do\
    \ |i|\n    return false if l[i-1] > i\n    return false if l[i+1] < i\n  end\n\
    \  true\nend", "  l.each do |x|\n    return false if x.nil?\n    return false\
    \ if x.last < x.first\n  end\n  true\nend", "  l.inject(0, :<=>)\n  l.all? { |x|\
    \ x.<=> 0 }\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if\
    \ b < a\n    return true if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |x,y|\n    return false if y > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    return true if a.first > b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |x,y|\n    return false if y <= x\n  end\n  true\nend", " \
    \ l.inject([]) do |a, e|\n    a.last < e ? a << e : a.push(e)\n    a\n  end.reduce(:<)\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b <\
    \ a\n    return true if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    return false if a.first > b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |x,y|\n    return true if y > x\n  end\n  false\nend", " \
    \ l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n    return true\
    \ if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if a.nil? || b.nil? || a > b\n  end\n  true\nend", "  l.inject([:<=>])\
    \ do |s, e|\n    break if s.nil?\n    break if s.last == e\n    break if s.last\
    \ < e\n    s << e\n  end\n  l.all?(&:nil?)\nend", "  l.inject([]) do |a, e|\n\
    \    if a != [] && a.last <= e\n      false\n    elsif a == []\n      true\n \
    \   else\n      a.last < e\n    end\n  end\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a || b == a && a.nan?\n  end\n  true\nend",
  "  l.sort.each do |x|\n    return false if x.nil?\n    return false if x.last <\
    \ x.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if b < a\n  end\n  true\nend", "  l.inject(&:<=>)\n  l.all? { |x| x.negative?\
    \ }\nend", "  l.inject([]) do |a, x|\n    a.last < x ? a << x : a.last > x ? a\
    \ << x : a.push(x)\n    a\n  end\n  .all?(&:monotonic?)\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return\
    \ false if y > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n\
    \    return false if a.nil? || b.nil?\n    return false if a.last < b.first\n\
    \    return true\n  end\n  true\nend", "  l.inject(0, :<)\n  l.inject(0, :>)\n\
    \  l.all? { |x| l[x] == l[x-1] }\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n\
    \    return false if a.nil? || b.nil?\n    return false if a.last < b.first\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return true if\
    \ y > x\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if b < a || b > a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do\
    \ |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.inject([:<=>])\
    \ do |a, e|\n    (a[-1] <=> e) <= 0 ? (a << e) : (a[-1] == e ? a : a)\n  end\n\
    end", "  l.inject(0, :<)\n  l.inject(0, :>)\n  l.all? { |x| x.send(l.reverse.method(:<))\
    \ }\nend", "  l.sort!\n  l.each_cons(2) do |a,b|\n    return true if a <= b\n\
    \  end\n  false\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a || b == a && a.nan?\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    return false if a.first > b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n    return\
    \ false if a.first < b.first\n    return false if a.last > b.last\n  end\n  true\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n\
    \    return false if a.last < b.last\n    return false if a.first > b.first\n\
    \  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return\
    \ false if b < a\n    return true if a < b\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n  true\nend", " \
    \ l.sort!\n  l.each_cons(2) do |a,b|\n    return false if b < a\n    return true\
    \ if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return\
    \ true if y > x\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2) do |a,b|\n\
    \    return true if a < b\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a,b|\n    return false if b < a\n  end\n  true\nend", "  l.inject([]) do\
    \ |a, e|\n    if a != [] && a.last <= e\n      false\n    else\n      a.last <\
    \ e ? a << e : a\n    end\n  end\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n\
    \    return false if a.nil? || b.nil? || a > b\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a || b == a && a.nan? ||\
    \ b.nan?\n  end\n  true\nend", "  l.sort.each do |i|\n    return false if l[i-1]\
    \ > i\n    return false if l[i+1] < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |x,y|\n    return false if y > x\n  end\n  true\nend", "  l.inject(0, :<)\n\
    \  l.inject(0, :>)\n  l.all? { |x| x == l.min || x == l.max }\nend", "  l.sort.each\
    \ do |i|\n    return false if l[i-1] > i\n    return false if l[i+1] > i\n  end\n\
    \  true\nend", "  l.each do |x|\n    return false if x.nil?\n    return false\
    \ if x.last < x.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a,\
    \ b|\n    return false if a.nil? || b.nil?\n    return false if a.last < b.first\n\
    \    return false if b.last < a.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a || b == a\n  end\n  true\nend", "  l.sort.each\
    \ do |i|\n    return false if l[i-1] > i\n    return false if l[i+1] < i\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b <\
    \ a\n    return true if a < b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |x,y|\n    return true if y > x\n  end\n  false\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    return false if a.first > b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a,b|\n    return false if a.nil? || b.nil?\n    return false\
    \ if a.nil? && b.nil?\n    return false if b.nil? && a.nil?\n    return false\
    \ if a.nil? || b.nil? || a > b\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.inject([:<=>])\
    \ do |s, e|\n    break if s.empty?\n    break if s.last == e\n    break if s.last\
    \ < e\n    s << e\n  end\n  s.last == e\nend", "  l.inject(0) do |sum, el|\n \
    \   sum + el > sum + el + 1 ? true : false\n  end\nend", "  l.sort.each { |x|\
    \ return false if x.nil? || x.last < x.first }\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n   \
    \ return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do\
    \ |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.last\n    true\n  end\n  true\nend", "  l.inject([]) do |a, x|\n    a.last\
    \ < x ? a << x : a.last > x ? a << x : a.last == x ? a << x : a.push(x)\n  end\n\
    \  a.size == l.size\nend", "  l.sort.each do |i|\n    return false if l[i-1] >\
    \ i\n    return false if l[i+1] < i\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if a.nil? || b.nil?\n    return false if a.last\
    \ < b.first\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n    return\
    \ false if y > x\n  end\n  true\nend", "  l.inject([]) do |a, e|\n    e = e -\
    \ a.last if a.any?\n    a << e\n    a.any? ? a : a.uniq.size == 1\n  end\nend",
  "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil? || b.nil?\n \
    \   return false if a.last < b.last\n    return false if a.first > b.first\n \
    \ end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false\
    \ if a.nil? || b.nil?\n    return false if a.last < b.first\n    return false\
    \ if a.first > b.last\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n\
    \    return false if y > x\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2)\
    \ do |a, b|\n    return false if b < a\n  end\n  true\nend", "  l.inject([:<=>])\
    \ do |memo, el|\n    memo << el\n    memo\n  end\n  .all?(&:<)\nend", "  l.inject([:<=>])\
    \ do |a, e|\n    (a[e[0]] <=> a[e[1]]) == -1 ? a : a.reverse\n  end\nend", " \
    \ l.sort!\n  l.each_cons(2) do |x,y|\n    return false if y > x\n  end\n  true\n\
    end", "  l.inject([]) do |a, e|\n    a.last < e ? a << e : a.last > e ? a << e\
    \ : a\n  end\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if\
    \ b < a || b > a\n  end\n  true\nend", "  l.sort!\n  l.each_cons(2) do |x,y|\n\
    \    return true if y > x\n  end\n  false\nend", "  l.inject([]) do |a, e|\n \
    \   a.last < e ? a << e : a.push(e)\n    a\n  end\n  .all? { |e| e > a.last }\n\
    end", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if b < a\n  end\n\
    \  true\nend", "  l.sort!\n  l.each_cons(2) do |a, b|\n    return false if a.nil?\
    \ || b.nil?\n    return false if a.last < b.first\n  end\n  true\nend", "  l.sort!\n\
    \  l.each_cons(2) do |a, b|\n    return false if b < a\n    return true if a <\
    \ b\n  end\n  true\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_4_mean_absolute_deviation
language: rb
prompt: "# For a given array of input numbers, calculate Mean Absolute Deviation\n\
  # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
  \ difference between each\n# element and a centerpoint (mean in this case):\n# MAD\
  \ = average | x - x_mean |\n# >>> mean_absolute_deviation.call([1.0, 2.0, 3.0, 4.0])\n\
  # 1.0\ndef mean_absolute_deviation(numbers)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_mean_absolute_deviation\n\
  \    candidate = method(:mean_absolute_deviation)\n    assert_equal(0.5, candidate.call([1.0,\
  \ 2.0]))\n    assert_equal(1.0, candidate.call([1.0, 2.0, 3.0, 4.0]))\n    assert_equal(1.2,\
  \ candidate.call([1.0, 2.0, 3.0, 4.0, 5.0]))\n  end\nend\n"
completions: ["  numbers.inject(0.0) { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - numbers.mean(), 2) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(numbers.mean() - number, 2) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(numbers.mean() - number, 2) }\nend", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0.0) { |sum, number| sum\
    \ + Math.pow(number - mean, 3) / Math.pow(mean, 2) }\nend", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0.0) { |sum, number| sum\
    \ + Math.pow(number - mean, 3) if number != 0 }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number - mean, 4) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 5) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 6) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 7) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 8) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 9) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 10) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 11) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 12) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 13) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 14) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 15) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 16) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 17) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 18) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 19) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 20) if number != 0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 21) if number ", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.sqrt number }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 1.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 2.5) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 3) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 3.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 4.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 4.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 5.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 5.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 6.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 6.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 7.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 7.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 8.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 8.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 9.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 9.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 10.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 10.5)\
    \ }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 11.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 11.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 12.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 12.5) }\n  numbers.inject(0.0) { |sum, number| sum + ",
  "  numbers.inject(0) {|sum, number| sum + Math.abs number }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.abs number / numbers.size }\nend", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.sqrt number }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 1.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 2.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 2.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 3.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 3.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 4.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 4.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 5.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 5.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 6.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 6.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 7.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 7.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 8.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 8.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 9.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 9.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 10.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 10.5)\
    \ }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 11.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 11.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 12.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum", "  numbers.inject(0) {|sum, number| sum + Math.abs number }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.sqrt Math.pow(number - numbers.mean) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow(number - numbers.mean, 2) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow(numbers.mean - number, 2) }\nend", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.sqrt number }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 1.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 2.5) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 3) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 3.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 4.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 4.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 5.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 5.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 6.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 6.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 7.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 7.5) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 8.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 8.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 9.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 9.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number,\
    \ 10.0) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 10.5)\
    \ }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number, 11.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number, 11.5) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number, 12.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number, 12.5) }\n  numbers.inject(0.0) { |sum, number| sum + ",
  "  numbers.inject(0.0) { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.sqrt number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + number * number }\n  numbers.inject(0.0) { |sum, number| sum + 1.0 / numbers.size\
    \ }\nend", "  numbers.inject(0.0) do |sum, number|\n    sum += abs(number)\n \
    \   sum\n  end\nend", "  numbers.inject(0.0) { |sum, number| sum + Math.abs number\
    \ }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number - mean, 2) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow(number - mean, 3) / number.to_f\
    \ }\nend", "  numbers.inject(0) {|sum, number| sum + Math.abs number }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.sqrt Math.abs number }\n  numbers.inject(0) {|sum,\
    \ number| sum + Math.pow (number, 2) }\n  numbers.inject(0) {|sum, number| sum\
    \ + Math.pow (number, 0.5) }\n  numbers.inject(0) {|sum, number| sum + Math.pow\
    \ (number, 0.25) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number,\
    \ 0.1) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number, 0.01) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow (number, 0.001) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow (number, 1e-6) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow (number, 1e-3) }\n  numbers.inject(0) {|sum, number| sum + Math.pow\
    \ (number, 1e-2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number,\
    \ 1e-1) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number, 1e0) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow (number, 1e1) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow (number, 1e2) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow (number, 1e3) }\n  numbers.inject(0) {|sum, number| sum + Math.pow\
    \ (number, 1e4) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number,\
    \ 1e5) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number, 1e6) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow (number, 1e7) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow (number, 1e8) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow (number, 1e9) }\n  numbers.inject(0) {|sum, number| sum + Math.pow\
    \ (number, 1e10) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number,\
    \ 1e11) }\n  numbers.inject(0) {|sum, number| sum + Math.pow (number, 1e12) }\n\
    \  numbers.inject(0) {|sum, number| sum", "  numbers.inject(0) {|sum, number|\
    \ sum + Math.abs number }\n  numbers.inject(0) {|sum, number| sum + Math.sqrt\
    \ Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean,\
    \ 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum,\
    \ number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum +\
    \ Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean,\
    \ 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum,\
    \ number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum +\
    \ Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean,\
    \ 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n\
    \  numbers.inject(0) {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0)\
    \ {|sum, number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum,\
    \ number| sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0) {|sum, number| sum",
  "  numbers.inject(0.0) { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - numbers.mean(), 2) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(numbers.mean() - number, 2) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(numbers.mean() - number, 2) }\nend", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0.0) { |sum, number| sum\
    \ + Math.pow(number - mean, 3) / number.to_f }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number - mean, 4) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 5) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 6) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 7) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 8) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 9) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 10) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 11) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 12) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 13) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 14) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 15) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 16) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 17) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 18) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 19) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 20) / number.to_f }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 21) / number.to_f ", "  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 2) }\n  numbers.inject(0.0) { |sum, number| sum\
    \ + Math.pow(number - mean, 3) / 2.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 4) / 4.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 5) / 8.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 6) / 16.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 7) / 32.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 8) / 64.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 9) / 128.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 10) / 256.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 11) / 512.0 }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow(number - mean, 12) / 1024.0 }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow(number - mean, 13) / 2048.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 14) / 4096.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 15) / 8192.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 16) / 16384.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 17) / 32768.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 18) / 65536.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 19) / 131072.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 20) / 262144.0 }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow(number - mean, 21) / 524288.0 }\n  ", "  numbers.inject(0)\
    \ {|sum, number| sum + Math.abs number }\n  numbers.inject(0) {|sum, number| sum\
    \ + Math.sqrt Math.abs number }\n  numbers.inject(0) {|sum, number| sum + Math.abs\
    \ number / numbers.size }\nend", "  numbers.inject(0.0) { |sum, number| sum +\
    \ Math.abs number }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number -\
    \ mean, 3) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 4) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 5) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 6) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 7) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 8) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 9) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 10) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 11) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 12) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 13) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 14) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 15) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 16) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 17) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 18) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 19) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 20) if number != 0 }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow(number\
    \ - mean, 21) if number ", "  numbers.inject(0) {|sum, number| sum + Math.abs\
    \ number }\n  numbers.inject(0) {|sum, number| sum + Math.sqrt Math.pow(number\
    \ - numbers.mean) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 2) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 3) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 4) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 5) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 6) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 7) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 8) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 9) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 10) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 11) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 12) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 13) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 14) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 15) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 16) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 17) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 18) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 19) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 20) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 21) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - numbers.mean, 22) }\n  numbers.inject(0) {|sum, number| sum + Math.pow(number\
    \ - ", "  numbers.inject(0.0) { |sum, number| sum + Math.abs number }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.sqrt number }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow (number, 2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow\
    \ (number, 1.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number,\
    \ 1.2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, 1.1) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, 1.0) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow (number, 0.9) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow (number, 0.8) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow (number, 0.7) }\n  numbers.inject(0.0) { |sum, number| sum +\
    \ Math.pow (number, 0.6) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow\
    \ (number, 0.5) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number,\
    \ 0.4) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, 0.3) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, 0.2) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow (number, 0.1) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow (number, 0.0) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math.pow (number, -1) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow\
    \ (number, -2) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number,\
    \ -3) }\n  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, -4) }\n\
    \  numbers.inject(0.0) { |sum, number| sum + Math.pow (number, -5) }\n  numbers.inject(0.0)\
    \ { |sum, number| sum + Math.pow (number, -6) }\n  numbers.inject(0.0) { |sum,\
    \ number| sum + Math.pow (number, -7) }\n  numbers.inject(0.0) { |sum, number|\
    \ sum + Math."]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

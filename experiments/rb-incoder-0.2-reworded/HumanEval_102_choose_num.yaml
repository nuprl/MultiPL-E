name: HumanEval_102_choose_num
language: rb
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num.call(12,\
  \ 15)\n# 14\n# >>> choose_num.call(13, 12)\n# -1\ndef choose_num(x, y)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_choose_num\n\
  \    candidate = method(:choose_num)\n    assert_equal(14, candidate.call(12, 15))\n\
  \    assert_equal(-1, candidate.call(13, 12))\n    assert_equal(12354, candidate.call(33,\
  \ 12354))\n    assert_equal(-1, candidate.call(5234, 5233))\n    assert_equal(28,\
  \ candidate.call(6, 29))\n    assert_equal(-1, candidate.call(27, 10))\n    assert_equal(-1,\
  \ candidate.call(7, 7))\n    assert_equal(546, candidate.call(546, 546))\n  end\n\
  end\n"
completions: ["  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  \n  while x <=\
    \ y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    \n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 ==\
    \ 0\n      return x\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n     \
    \ return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 12)\n</cell>\n<code language=julia-1.5>\nchoose_", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 \n  \n  ", " \
    \ x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x < y\n    x\
    \ += 1\n    y -= 1\n    break if x % 2 == 0\n  end\n  return x if x == y\n  -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif x < y\n\
    \    x, y = y, x\n  elsif x == y\n    return x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n   \
    \   return x\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 2\n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer $n$ and returns $n$\
    \ if it's even, otherwise returns $n + 1$.", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  if x < y\n    min = x\n    max = y\n  else\n    min = y\n    max = x\n  end\n\
    \  \n  while min <= max\n    mid = (min + max) / 2\n    \n    if mid % 2 == 0\n\
    \      return mid\n    end\n    \n    if mid > max\n      max = mid - 1\n    else\n\
    \      min = mid + 1\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n \
    \ y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n   \
    \ if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n   \
    \   x = x + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\n\
    choose_num.call(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an integer number and returns its factorial. \nThe factorial of a number $n$\
    \ is defined as:", "  x = x.to_i\n  y = y.to_i\n  return x if x == y || x > y\
    \ ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    x += 1\n  end\n  \n  -1\nend", "  if x > y\n \
    \   x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n   \
    \   return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x\
    \ = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x < y\n    min = x\n    max = y\n  else\n    min = y\n\
    \    max = x\n  end\n  \n  while min <= max\n    mid = min + (max - min) / 2\n\
    \    if mid * mid <= max\n      return mid\n    end\n    \n    if mid * mid >\
    \ max\n      max = mid - 1\n    else\n      min = mid + 1\n    end\n  end\n  \n\
    \  return -1\nend", "  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x +=\
    \ 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end\n</cell>\n<text>\nNow let's test our function by calling it with the numbers\
    \ we defined earlier:", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x\
    \ += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    \n    if x % 2 == 0\n      return x\n    end\n    \n\
    \    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nThe function above is called a higher-order\
    \ function. It takes another function as an argument and returns a new function\
    \ that takes an argument and applies that function to it. For example:", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n \
    \ end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n\
    \    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number n and returns the sum of its digits. \nFor example,\
    \ if the number is 123, then the function should return 6. \nIf the number is\
    \ 0, then the function should return 0.", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) ? x :\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      x += 1\n    else\n      x -= 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  break if x % 2 == 0\n    x += 1\n  end\n  \n  while y >= x\n    break if y\
    \ % 2 == 0\n    y -= 1\n  end\n  \n  x -= 1\n  y += 1\n  \n  return x if x <=\
    \ y && x % 2 == 0\n  \n  return -1 if y <= x && y % 2 == 0\n  \n  return nil\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  if x < y\n    min = x\n    max = y\n  else\n    min = y\n    max\
    \ = x\n  end\n  \n  while min <= max\n    mid = min + max / 2\n    \n    if mid\
    \ % 2 == 0\n      return mid\n    else\n      if mid > max\n        max = mid\
    \ - 1\n      else\n        min = mid + 1\n      end\n    end\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 13)\n", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x\
    \ - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x\
    \ = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(21, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(22, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(22, 22)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(23, 23)\n</cell>\n<code language=julia-1.5>\n",
  "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x\
    \ += 1\n    y -= 1\n    break if x % 2 == 0\n  end\n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    x += 2\n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  while x != y\n\
    \    x, y = y, x % y\n  x\nend", "  if x > y\n    x, y = y, x\n  while x <= y\n\
    \    x += 1\n    if x % 2 == 0\n      return x\n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  x += 2\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  return x.upto(y).find { |i| i.even? }\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x < y\n   \
    \ x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n   \
    \ x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    x += 1\n  end\n  \n  return -1\nend", "  even = (x % 2 == 0)\n \
    \ even = (y % 2 == 0)\n  even = (even && (x != y))\n  even = (even && (x != y))\n\
    \  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x\
    \ != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even\
    \ && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even\
    \ = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n\
    \  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x\
    \ != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even\
    \ && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even\
    \ = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n\
    \  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x\
    \ != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even\
    \ && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even\
    \ = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n\
    \  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x\
    \ != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even\
    \ && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even\
    \ = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n\
    \  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even && (x\
    \ != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even = (even\
    \ && (x != y))\n  even = (even && (x != y))\n  even = (even && (x != y))\n  even\
    \ = (even && (x != y))\n  ", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n  end\n\
    \  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x += 1\n\
    \    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  if x < y\n    x, y = y, x\n  while x <= y\n    x\
    \ += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend\n</code>\n\
    <|/ a tags=ruby,ruby-on-rails |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x\
    \ + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x > y || x == y || x == y - 1 || (y == x - 1 && x\
    \ % 2 == 0) || y == x + 1 || (y == x - 1 && x % 2 == 1) ? x : -1\nend", "  if\
    \ x > y\n    x, y = y, x\n  elsif x == y\n    return x\n  elsif x % 2 == 0\n \
    \   x -= 1\n    y -= 1\n  elsif y % 2 == 0\n    y -= 1\n    x -= 1\n  elsif x\
    \ % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n \
    \   y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y\
    \ % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n\
    \  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x\
    \ -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x\
    \ % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n \
    \   y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y\
    \ % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n\
    \  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x\
    \ -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x\
    \ % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n \
    \   y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y\
    \ % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n\
    \  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x\
    \ -= 1\n    y -= 1\n  elsif x % 2 == y % 2\n    x -= 1\n    y -= 1\n  elsif ",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  while x <= y\n    x +=\
    \ 1\n    y -= 1\n    break if y > x\n  return x if x > y else -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  return x if x < y || x == y && x % 2 == 0 || (x > y\
    \ && x % 2 == 1) ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <=\
    \ y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    break if x % 2 == 0\n    x += 1\n  end\n  \n  while y >= x\n   \
    \ break if y % 2 == 0\n    y -= 1\n  end\n  \n  x -= 1 if x > y\n  \n  x\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x\
    \ + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n\
    \    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n \
    \   \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    break if x %\
    \ 2 == 0\n    x += 1\n  end\n  \n  while y >= x\n    break if y % 2 == 0\n   \
    \ y -= 1\n  end\n  \n  return x if x > y\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  return x.even? && y.even? ? x : (x.odd? && y.odd? ? y : -1)\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x += 1\n    \n    return\
    \ x if x % 2 == 0 \n    \n    return -1 if y % 2 == 0\n  end\nend\n</cell>\n<cell>\n\
    choose_num.call(12, 15)\n</cell>\n<text>\nThe function above is called a higher-order\
    \ function. It takes a function as an argument and returns a new function that\
    \ takes the arguments of the original function and returns a result of the same\
    \ type.", "  \n  # Initialize a variable called \"result\" to the value -1.\n\
    \  result = -1\n  \n  # Initialize a variable called \"even\" to the value 0.\n\
    \  even = 0\n  \n  # Initialize a variable called \"odd\" to the value 1.\n  odd\
    \ = 1\n  \n  # Initialize a variable called \"x\" to the first argument.\n  x\
    \ = x\n  \n  # Initialize a variable called \"y\" to the second argument.\n  y\
    \ = y\n  \n  # While the value of \"x\" is less than or equal to \"y\", do:\n\
    \  while x <= y\n  \n    # If the value of \"x\" is even, then:\n    if x % 2\
    \ == 0\n    \n      # Increment the value of \"even\" by 1.\n      even = even\
    \ + 1\n      \n      # If the value of \"even\" is greater than \"result\", then:\n\
    \      if even > result\n      \n        # Set the value of \"result\" to the\
    \ value of \"even\".\n        result = even\n      \n      # If the value of \"\
    even\" is equal to \"result\", then:\n      else\n      \n        # Increment\
    \ the value of \"odd\" by 1.\n        odd = odd + 1\n      \n        # Set the\
    \ value of \"result\" to the value of \"odd\".\n        result = odd\n      \n\
    \    # If the value of \"x\" is odd, then:\n    else\n    \n      # Increment\
    \ the value of \"odd\" by 1.\n      odd = odd + 1\n      \n      # Set the value\
    \ of \"result\" to the value of \"odd\".\n      result = odd\n    \n    # Increment\
    \ the value of \"x\" by 1.\n    x = x + 1\n  \n  # Return the value of \"result\"\
    .\n  return result\n  ", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n   \
    \ x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    y -=\
    \ 1\n    if x % 2 == 0\n      return x\n  return -1\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\n\
    end", '  ((x >= 0) and (y >= 0)) and ((x <= y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == 0) and (y % 2 ==
    0)) and ((x != 0) and (y != 0)) and ((x != y)) and ((x % 2 == ', "  even = x %\
    \ 2 == 0\n  odd = x % 2 != 0\n  if even\n    y -= 1\n  end\n  if odd\n    x -=\
    \ 1\n  end\n  while x >= y\n    x -= 1\n  end\n  while x <= y\n    y -= 1\n  end\n\
    \  if x > y\n    x\n  else\n    y\n  end\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n\
    \      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n \
    \ if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x %\
    \ 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x % 2 == 0\n\
    \      return x\n    \n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x < y\n    min = x\n  else\n    min = y\n  end\n  \n \
    \ max = min + 1\n  \n  while max <= y\n    max = max * 2\n  end\n  \n  while min\
    \ >= x\n    min = min / 2\n  end\n  \n  return max\nend", "  x = x.to_i\n  y =\
    \ y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n\
    \    x += 1\n    \n    if x % 2 == 0\n      break\n    end\n  end\n  \n  x\nend",
  "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x % 2 == 0 && y %\
    \ 2 == 0 \n  \n  # If x is even, return x if y is even or x if y is odd.\n  #\
    \ If x is odd, return y if y is even or x if y is odd.\n  # If x is even, return\
    \ y if y is even or x if y is odd.\n  # If x is odd, return x if y is even or\
    \ x if y is odd.\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y,\
    \ x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return\
    \ -1\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails |>\n<| c |>\nThanks for your\
    \ answer! I understand your code, but I still don't understand why my code doesn't\
    \ work. Could you explain to me why my code doesn't work?\n<|/ c |>\n<| c |>\n\
    I added some explanation to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your explanation! I understand now!\n<|/ c |>\n<| a tags=ruby,ruby-on-rails\
    \ |>\n<code>", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x\
    \ + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n \
    \   x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n\
    \  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n \
    \   if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n\
    \  elsif x == y\n    return x\n  elsif x == 0\n    return y\n  elsif y == 0\n\
    \    return x\n  elsif x % 2 == 0\n    return choose_num(x - 1, y)\n  elsif y\
    \ % 2 == 0\n    return choose_num(x, y - 1)\n  else\n    return -1\n  end\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x + 2\n    end\n  end\n  \n  x\nend\n</cell>\n<cell>", "  if x > y\n\
    \    x, y = y, x\n  while x <= y\n    x += 1\n    y -= 1\n    break if x % 2 ==\
    \ 0\n  end\n  x\nend", "  x = x.to_i\n  y = y.to_i\n  if x < y\n    x, y = y,\
    \ x\n  end\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  \
    \  end\n  end\n  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n  \
    \  x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n \
    \   x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x = x + 2\n\
    \    else\n      x = x + 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if\
    \ x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    \n    break if x % 2 == 0\n    x += 1\n  end\n  \n  while y >= x\n    \n\
    \    break if y % 2 == 0\n    y -= 1\n  end\n  \n  x -= 1\n  y += 1\n  \n  return\
    \ x if y > x\n  \n  return y if x < y\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 24)\n</cell>\n<code language=julia-",
  "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      x = x\
    \ + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 || (x < y &&\
    \ y % x == 0) || y == -1 else -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2\
    \ == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  if x > y\n \
    \   x, y = y, x\n  while x <= y\n    x += 1\n    y -= 1\n    if x % 2 == 0\n \
    \     return x\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x\
    \ <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x - 1\n    end\n\
    \  end\n  \n  x\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\n\
    choose_num.call(13, 12)\n</cell>\n<text>\nNow let's write an even more general\
    \ function which takes any number of arguments and returns the biggest even number\
    \ in that range.", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  elsif\
    \ x == 0\n    return y\n  elsif y == 0\n    return x\n  elsif x % 2 == 0\n   \
    \ return choose_num(x / 2, y)\n  else\n    return choose_num(x / 2, y + 1)\n \
    \ end\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 ==\
    \ 0\n      x = x + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend",
  "  ((x > y) ? x : y).to_i\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x,\
    \ y = y, x\n  while x <= y\n    x += 1\n    y -= 1\n    return x if x % 2 == 0\
    \ else -1\n  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  -1\nend", "  if x > y\n    x, y = y, x\n  \n  while\
    \ x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x\
    \ <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    x += 1\n    \n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend\n</cell>\n<cell>", "  ((x > y) ? x :\
    \ y).to_i(2)\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      x = x + 1\n    else\n      x = x - 1\n    end\n  end\n  \n \
    \ x\nend\n</cell>\n<text>\nNow let's test our function by calling it with the\
    \ arguments we defined earlier. We'll also use Ruby's puts method to print out\
    \ the result of the function call.", "  x = x.to_i\n  y = y.to_i\n  \n  if x >\
    \ y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n\
    \      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x +=\
    \ 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n \
    \   x, y = y, x\n  while x != y\n    x, y = y, x % y\n  end\n  x\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if x is negative.\n<|/ c |>\n<|\
    \ c |>\n: It doesn't work if x is negative. Try it yourself. It returns -1 for\
    \ negative numbers. Try it yourself. It returns -1 for negative numbers. Try it\
    \ yourself. It returns -1 for negative numbers. Try it yourself. It returns -1\
    \ for negative numbers. Try it yourself. It returns -1 for negative numbers. Try\
    \ it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 for negative numbers. Try it yourself. It returns\
    \ -1 for negative numbers. Try it yourself. It returns -1 for negative numbers.\
    \ Try it yourself. It returns -1 ", "  if x > y\n    x, y = y, x\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\n\
    end\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13,\
    \ 12)\n</cell>\n<cell>\nchoose_num.call(15, 12)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 15)\n</cell>\n<cell>\nchoose_num.call(15, 16)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 17)\n</cell>\n<cell>\nchoose_num.call(15, 18)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 19)\n</cell>\n<cell>\nchoose_num.call(15, 20)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 21)\n</cell>\n<cell>\nchoose_num.call(15, 22)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 23)\n</cell>\n<cell>\nchoose_num.call(15, 24)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 25)\n</cell>\n<cell>\nchoose_num.call(15, 26)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 27)\n</cell>\n<cell>\nchoose_num.call(15, 28)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 29)\n</cell>\n<cell>\nchoose_num.call(15, 30)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 31)\n</cell>\n<cell>\nchoose_num.call(15, 32)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 33)\n</cell>\n<cell>\nchoose_num.call(15, 34)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 35)\n</cell>\n<cell>\nchoose_num.call(15, 36)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 37)\n</cell>\n<cell>\nchoose_num.call(15, 38)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 39)\n</cell>\n<cell>\nchoose_num.call(15, 40)\n</cell>\n<cell>\nchoose_num.call(15,\
    \ 41)\n</cell>\n<cell>\ncho", "  x = x.to_i\n  y = y.to_i\n  return x if x > y\
    \ || x == y || x == 0 || y == 0 || (x % 2 == 0 && y % 2 == 0) || x == y || y ==\
    \ -1\n  ", "  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    y -=\
    \ 1\n    return x if x % 2 == 0 and y % 2 == 0 else -1\n  return -1\nend", " \
    \ x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y\
    \ || x % 2 == 0 && y % 2 == 0 \n  \n  ", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x < y\n    x += 1\n    \n    if x\
    \ % 2 == 0\n      return x\n    end\n  end\n  \n  -1\nend", "  x = x.to_i\n  y\
    \ = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 || (x % 2 == 0 &&\
    \ y % 2 == 0) ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n  \
    \  x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n   \
    \   return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    return\
    \ x if x % 2 == 0 && !(x % 4 == 0 && x % 8 == 0) else -1\n  end\n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n   \
    \ if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nThe function choose_num\
    \ takes two positive numbers x and y and returns the biggest even integer number\
    \ that is in the range [x, y] inclusive. If there's no such number, then the function\
    \ should return -1.", "  x = x.to_i\n  y = y.to_i\n  return x if x == y || x >\
    \ y ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  elsif x\
    \ == 0\n    return y\n  elsif y == 0\n    return x\n  elsif x % 2 == 0\n    return\
    \ choose_num(x / 2, y)\n  else\n    return choose_num(x / 2, y + 1)\n  end\nend\n\
    </code>\n<|/ a tags=ruby |>\n<| c |>\nThe OP wants the biggest even number in\
    \ the range. Your code returns `-1` for `choose_num.call(12, 15)`.\n<|/ c |>\n\
    <| c |>\n: I didn't notice that requirement. I've updated my answer to include\
    \ a solution that returns the biggest even number in the range.\n<|/ c |>\n<|\
    \ c |>\nThe OP wants the biggest even number in the range. Your code returns `-1`\
    \ for `choose_num.call(12, 15)`.\n<|/ c |>\n<| c |>\n: I didn't notice that requirement.\
    \ I've updated my answer to include a solution that returns the biggest even number\
    \ in the range.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  if x > y\n    x, y =\
    \ y, x\n  while x < y\n    x, y = y, x + y\n  end\n  x\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if\
    \ x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 1\n    \n\
    \    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", " \
    \ if x > y\n    x, y = y, x\n  while x < y\n    x, y = y, x + y\n  end\n  x\n\
    end", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x % 2 == 0\
    \ && y % 2 == 0 \n  \n  ", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n  \
    \  x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n\
    \  while x <= y\n    \n    if x % 2 == 0\n      return x\n    end\n    \n    x\
    \ += 1\n  end\n  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(22, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(22, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(23, 22)\n</cell>\n<code language=julia-1.5>\nchoose_num(23, 23)\n</cell>\n\
    <code language=juli", "  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x\
    \ += 1\n    \n    if x % 2 == 0\n      return x\n    \n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      x = x + 1\n    else\n      x = x + 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y =\
    \ y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n \
    \ while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x < y\n    x = x + 2\n  end\n  \n  while x > y\n    x = x - 2\n \
    \ end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n\
    \  while x <= y\n    x += 1\n    y -= 1\n    return x if x % 2 == 0 and y % 2\
    \ == 0 else -1\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n\
    \    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n\
    \    end\n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<cell>", "  x = x.to_i\n\
    \  y = y.to_i\n  if x > y\n    x, y = y, x\n  end\n  while x < y\n    x += 1\n\
    \    if x % 2 == 0\n      return x\n    end\n  end\n  return -1\nend", "  x =\
    \ x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x +=\
    \ 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x < y\n    if x % 2 == 0\n      x += 1\n    else\n\
    \      x -= 1\n    end\n  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  while x < y\n    x += 1\n    \n    break if x % 2 == 0\n  end\n  \n  while\
    \ x > y\n    x -= 1\n    \n    break if x % 2 == 0\n  end\n  \n  x\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    return x if\
    \ x % 2 == 0 \n    \n    return -1 if y % 2 == 0\n  end\nend\n</cell>\n<cell>\n\
    choose_num.call(12, 15)\n</cell>\n<cell>\nchoose_num.call(13, 12)\n</cell>\n<cell>\n\
    choose_num.call(13, 13)\n</cell>\n<cell>\nchoose_num.call(13, 14)\n</cell>\n<cell>\n\
    choose_num.call(13, 15)\n</cell>\n<cell>\nchoose_num.call(13, 16)\n</cell>\n<cell>\n\
    choose_num.call(13, 17)\n</cell>\n<cell>\nchoose_num.call(13, 18)\n</cell>\n<cell>\n\
    choose_num.call(13, 19)\n</cell>\n<cell>\nchoose_num.call(13, 20)\n</cell>\n<cell>\n\
    choose_num.call(13, 21)\n</cell>\n<cell>\nchoose_num.call(13, 22)\n</cell>\n<cell>\n\
    choose_num.call(13, 23)\n</cell>\n<cell>\nchoose_num.call(13, 24)\n</cell>\n<cell>\n\
    choose_num.call(13, 25)\n</cell>\n<cell>\nchoose_num.call(13, 26)\n</cell>\n<cell>\n\
    choose_num.call(13, 27)\n</cell>\n<cell>\nchoose_num.call(13, 28)\n</cell>\n<cell>\n\
    choose_num.call(13, 29)\n</cell>\n<cell>\nchoose_num.call(13, 30)\n</cell>\n<cell>\n\
    choose_num.call(13, 31)\n</cell>\n<cell>\nchoose_num.call(13, 32)\n</cell>\n<cell>\n\
    choose_num.call(13, 33)\n</cell>\n<cell>\nchoose_num.call(13, 34)\n</cell>\n<cell>\n\
    choose_num.call(13, 35)\n</cell>\n<cell>\nchoose_num.call(13, 36)\n</cell>\n<cell>\n\
    choose_num.call(13, 37)\n</cell>\n<cell>\nchoose_num.call(13, 38)\n</cell>\n<cell>\n\
    choose_num.call(13, 39)\n</cell>\n<cell>\nchoose_num.call(13, 40)\n</", "  x =\
    \ x.to_i\n  y = y.to_i\n  \n  while x <= y\n    \n    if x % 2 == 0\n      x =\
    \ x + 1\n    else\n      x = x - 1\n    end\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  if\
    \ x > y\n    x, y = y, x\n  elsif x < y\n    x, y = y, x\n  elsif x == y\n   \
    \ return x if x.is_a?(Fixnum)\n    return -1 if x.is_a?(Bignum)\n  end\n  \n \
    \ while x <= y\n    x += 1\n    y -= 1\n    break if x.is_a?(Fixnum) && y.is_a?(Fixnum)\n\
    \    break if x.is_a?(Bignum) && y.is_a?(Bignum)\n  end\n  \n  x -= 1 if x.is_a?(Fixnum)\n\
    \  y -= 1 if y.is_a?(Fixnum)\n  \n  x = x.to_i if x.is_a?(Bignum)\n  y = y.to_i\
    \ if y.is_a?(Bignum)\n  \n  return x if x == y\n  \n  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    x += 1\n    y -= 1\n    break if x.is_a?(Fixnum) && y.is_a?(Fixnum)\n\
    \    break if x.is_a?(Bignum) && y.is_a?(Bignum)\n  end\n  \n  x -= 1 if x.is_a?(Fixnum)\n\
    \  y -= 1 if y.is_a?(Fixnum)\n  \n  x = x.to_i if x.is_a?(Bignum)\n  y = y.to_i\
    \ if y.is_a?(Bignum)\n  \n  return x if x == y\n  \n  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    x += 1\n    y -= 1\n    break if x.is_a?(Fixnum) && y.is_a?(Fixnum)\n\
    \    break if x.is_a?(Bignum) && y.is_a?(Bignum)\n  end\n  \n  x -= 1 if x.is_a?(Fixnum)\n\
    \  y -= 1 if y.is_a?(Fixnum)\n  \n  x = x.to_i if x.is_a?(Bignum)\n  y = y.to_i\
    \ if y.is_a?(Bignum)\n  \n  return x if x == y\n  \n  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    x += 1\n    y -= 1\n    break if x.is_a?(Fixnum) && y.is_a?(Fixnum)\n\
    \    break if x.is_a?(Bignum) && y.is_a?(Bignum)\n  end\n  \n  x -= 1 if x.is_a?(",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 16)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 19)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 22)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 25)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 28)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 29)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 31)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 32)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 34)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 35)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 36)\n</", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n\
    \    \n    if x % 2 == 0\n      return x\n  end\n  \n  return -1\nend", "  if\
    \ x > y\n    x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 ==\
    \ 0\n      return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  if x < y\n    min = x\n  else\n    min = y\n  end\n  \n  max = min\n  \n  while\
    \ max < y\n    max = max + 1\n  end\n  \n  while min > x\n    min = min - 1\n\
    \  end\n  \n  while min <= max\n    min = min + 1\n  end\n  \n  return min\nend\n\
    </cell>\n<code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes in two positive integers x and y and returns\
    \ true if and only if x is less than or equal to y and y is less than or equal\
    \ to x.", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x += 1\n\
    \  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n\
    \    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif\
    \ x < y\n    x, y = y, x\n  elsif x == y\n    return x\n  end\n  \n  while x %\
    \ 2 == 0\n    x /= 2\n  end\n  \n  while y % 2 == 0\n    y /= 2\n  end\n  \n \
    \ while x != y\n    if x % 2 == 0\n      x /= 2\n    else\n      y /= 2\n    end\n\
    \  end\n  \n  x\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y,\
    \ x\n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  \n\
    \  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n  end\n\
    \  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y\
    \ = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n\
    \    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return\
    \ x if x > y || x == y || x == y - 1 || (x == y - 1 && y % 2 == 0) || y == y -\
    \ 1 || (y == y - 1 && x % 2 == 0) else -1\nend\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThis doesn't work. Try `choose_num.call(12, 15)`.\n<|/ c |>\n<| c |>\n\
    Yes, it does. Try it yourself. It returns 14. What's the problem?\n<|/ c |>\n\
    <| c |>\nIt returns 14 for `choose_num.call(12, 15)` but returns -1 for `choose_num.call(13,\
    \ 12)`.\n<|/ c |>\n<| c |>\nOh, I see. Yes, you're right. I've edited my answer\
    \ to fix it.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm sorry I didn't explain\
    \ my question clearly. I meant that if there's no such number, then the function\
    \ should return -1.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  x = x.to_i\n  y =\
    \ y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x %\
    \ 2 == 0\n      return x\n  end\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x < y\n    if x % 2 == 0\n      x = x + 1\n    else\n\
    \      x = x - 1\n    end\n  end\n  \n  if x == y\n    return x\n  else\n    return\
    \ -1\n  end\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  \n  if x >\
    \ y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return\
    \ x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n\
    \  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x +=\
    \ 1\n  end\n  \n  return -1\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x <= y\n\
    \    x += 1\n    if x % 2 == 0\n      return x\n  end\n  return -1\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  elsif x == y\n    return\
    \ x\n  elsif x % 2 == 0\n    x /= 2\n    y /= 2\n    choose_num(x, y)\n  else\n\
    \    y /= 2\n    choose_num(x, y)\n  end\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n\
    \      return x\n    end\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  while x < y\n    x += 1\n    \n    if x % 2 == 0\n      return\
    \ x\n    end\n  end\n  \n  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    end\n  end\n\
    \  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x < y && x\
    \ % 2 == 0 && y % 2 == 0 && (x != y) && y > 0 && (x != y-1) && y > x-1 && (x !=\
    \ y+1)\n  -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x < y\n    x += 1\n\
    \    \n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend\n\
    </cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n \
    \ end\n  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n   \
    \ end\n  end\n  \n  return -1\nend\n</cell>\n<cell>", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  while x <= y\n    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n\
    \  -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x < y && x % 2 == 0 &&\
    \ y % 2 == 0 else -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n\
    \    if x % 2 == 0\n      return x\n    x += 1\n  end\n  \n  return -1\nend",
  "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y,\
    \ x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n \
    \   \n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n<text>\nNow let's test\
    \ the function by calling it with the arguments we defined earlier:", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend", "  x = x.to_i\n  y = y.to_i\n  return x if x > y || x == y || x ==\
    \ y - 1 || (y == x - 1 && x % 2 == 0) || y == x + 1 || (y == x - 1 && x % 2 ==\
    \ 1) ? x : -1\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

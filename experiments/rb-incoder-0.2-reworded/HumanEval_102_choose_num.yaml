name: HumanEval_102_choose_num
language: rb
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num.call(12,\
  \ 15)\n# 14\n# >>> choose_num.call(13, 12)\n# -1\ndef choose_num(x, y)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_choose_num\n\
  \    candidate = method(:choose_num)\n    assert_equal(14, candidate.call(12, 15))\n\
  \    assert_equal(-1, candidate.call(13, 12))\n    assert_equal(12354, candidate.call(33,\
  \ 12354))\n    assert_equal(-1, candidate.call(5234, 5233))\n    assert_equal(28,\
  \ candidate.call(6, 29))\n    assert_equal(-1, candidate.call(27, 10))\n    assert_equal(-1,\
  \ candidate.call(7, 7))\n    assert_equal(546, candidate.call(546, 546))\n  end\n\
  end\n"
completions: ["  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n\
    \  \n  while x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n\
    \  end\n  \n  return -1\nend", "  if x > y\n    x, y = y, x\n  \n  while x <=\
    \ y\n    x += 1\n    \n    if x % 2 == 0\n      return x\n    \n  return -1\n\
    end", "  if x > y\n    x, y = y, x\n  while x <= y\n    x += 1\n    if x % 2 ==\
    \ 0\n      return x\n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if\
    \ x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n     \
    \ return x\n    end\n    \n    x += 1\n  end\n  \n  return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 12)\n</cell>\n<code language=julia-1.5>\nchoose_", "  x = x.to_i\n\
    \  y = y.to_i\n  return x if x > y || x == y || x == 0 || y == 0 \n  \n  ", " \
    \ x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  while x < y\n    x\
    \ += 1\n    y -= 1\n    break if x % 2 == 0\n  end\n  return x if x == y\n  -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  if x > y\n    x, y = y, x\n  elsif x < y\n\
    \    x, y = y, x\n  elsif x == y\n    return x\n  end\n  \n  while x <= y\n  \
    \  x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n   \
    \   return x\n    x += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n\
    \  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    x += 2\n    if\
    \ x % 2 == 0\n      return x\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n\
    \  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n  \
    \  if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n  \n  return\
    \ -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer $n$ and returns $n$\
    \ if it's even, otherwise returns $n + 1$.", "  x = x.to_i\n  y = y.to_i\n  \n\
    \  if x < y\n    min = x\n    max = y\n  else\n    min = y\n    max = x\n  end\n\
    \  \n  while min <= max\n    mid = (min + max) / 2\n    \n    if mid % 2 == 0\n\
    \      return mid\n    end\n    \n    if mid > max\n      max = mid - 1\n    else\n\
    \      min = mid + 1\n    end\n  end\n  \n  return -1\nend", "  x = x.to_i\n \
    \ y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while x <= y\n   \
    \ if x % 2 == 0\n      return x\n    end\n    x += 1\n  end\n  \n  return -1\n\
    end", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x % 2 == 0\n   \
    \   x = x + 1\n    else\n      x = x - 1\n    end\n  end\n  \n  x\nend", "  x\
    \ = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n  end\n  \n  while\
    \ x <= y\n    if x % 2 == 0\n      return x\n    end\n    \n    x += 1\n  end\n\
    \  \n  return -1\nend\n</cell>\n<cell>\nchoose_num.call(12, 15)\n</cell>\n<cell>\n\
    choose_num.call(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an integer number and returns its factorial. \nThe factorial of a number $n$\
    \ is defined as:", "  x = x.to_i\n  y = y.to_i\n  return x if x == y || x > y\
    \ ? x : -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x > y\n    x, y = y, x\n\
    \  end\n  \n  while x <= y\n    if x % 2 == 0\n      return x\n    end\n    x\
    \ += 1\n  end\n  \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while\
    \ x <= y\n    x += 1\n    if x % 2 == 0\n      return x\n    end\n  end\n  \n\
    \  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  while x <= y\n    if x\
    \ % 2 == 0\n      return x\n    x += 1\n  end\n  \n  -1\nend", "  if x > y\n \
    \   x, y = y, x\n  \n  while x <= y\n    x += 1\n    \n    if x % 2 == 0\n   \
    \   return x\n    \n  return -1\nend", "  x = x.to_i\n  y = y.to_i\n  \n  if x\
    \ > y\n    x, y = y, x\n  end\n  \n  while x <= y\n    if x % 2 == 0\n      x\
    \ = x + 1\n    else\n      x = x + 2\n    end\n  end\n  \n  x\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

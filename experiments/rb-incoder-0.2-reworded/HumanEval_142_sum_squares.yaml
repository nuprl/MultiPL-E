name: HumanEval_142_sum_squares
language: rb
prompt: "# \"\n# This function will take an array of integers. For all entries in\
  \ the array, the function shall square the integer entry if its index is a \n# multiple\
  \ of 3 and will cube the integer entry if its index is a multiple of 4 and not a\
  \ multiple of 3. The function will not \n# change the entries in the array whose\
  \ indexes are not a multiple of 3 or 4. The function shall then return the sum of\
  \ all entries. \n# Examples:\n# >>> lst\n# [1, 2, 3]\n# >>> lst\n# []\n# >>> lst\n\
  # [-1, -5, 2, -1, -5]\ndef sum_squares(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_squares\n\
  \    candidate = method(:sum_squares)\n    assert_equal(6, candidate.call([1, 2,\
  \ 3]))\n    assert_equal(14, candidate.call([1, 4, 9]))\n    assert_equal(0, candidate.call([]))\n\
  \    assert_equal(9, candidate.call([1, 1, 1, 1, 1, 1, 1, 1, 1]))\n    assert_equal(-3,\
  \ candidate.call([-1, -1, -1, -1, -1, -1, -1, -1, -1]))\n    assert_equal(0, candidate.call([0]))\n\
  \    assert_equal(-126, candidate.call([-1, -5, 2, -1, -5]))\n    assert_equal(3030,\
  \ candidate.call([-56, -99, 1, 0, -2]))\n    assert_equal(0, candidate.call([-1,\
  \ 0, 0, 0, 0, 0, 0, 0, -1]))\n    assert_equal(-14196, candidate.call([-16, -9,\
  \ -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]))\n    assert_equal(-1448,\
  \ candidate.call([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13,\
  \ 11, 16, 16, 4, 10]))\n  end\nend\n"
completions: ["  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i * i\n\
    \    elsif i % 4 == 0\n      sum += i * i\n    else\n      sum += i\n  end\n \
    \ return sum\nend", "    sum = 0\n    \n    for n in lst\n        if n % 3 ==\
    \ 0\n            sum += n ** 2\n        elif n % 4 == 0\n            sum += n\
    \ ** 3\n        else\n            sum += n\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<code language=julia-1.5>",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end\n</code>\n<|/ q dscore=0 |>\n<| c |>\nWhat is your question?\n<|/ c |>\n<|\
    \ c |>\nI do not understand why my code is not working. I am new to programming\
    \ and do not understand why my code is not working. I am new to programming and\
    \ do not understand why my code is not working. I am new to programming and do\
    \ not understand why my code is not working. I am new to programming and do not\
    \ understand why my code is not working. I am new to programming and do not understand\
    \ why my code is not working. I am new to programming and do not understand why\
    \ my code is not working. I am new to programming and do not understand why my\
    \ code is not working. I am new to programming and do not understand why my code\
    \ is not working. I am new to programming and do not understand why my code is\
    \ not working. I am new to programming and do not understand why my code is not\
    \ working. I am new to programming and do not understand why my code is not working.\
    \ I am new to programming and do not understand why my code is not working. I\
    \ am new to programming and do not understand why my code is not working. I am\
    \ new to programming and do not understand why my code is not working. I am new\
    \ to programming and do not understand why my code is not working. I am new to\
    \ programming and do not understand why my code is not working. I am new to programming\
    \ and do not understand why my code is not working. I am new to programming and\
    \ do not understand why my code is not working. I am new to programming and do\
    \ not understand why my code is not working. I am new to programming and do not\
    \ understand why my code is not working. I am new to programming and do not understand\
    \ why my code is not working. I am new to programming and do not understand why\
    \ my code is not working. I am new to programming and do not understand why my\
    \ code is not working. I am new to programming and do not understand why my code\
    \ is not working. I am new to programming and do not understand why my code is\
    \ not working. I am new to programming and do not understand why my code is not\
    \ working. I am new to programming and do not understand why my code is not working.\
    \ I am new to programming and do not understand why my code is not working. I\
    \ am new to programming and do not understand why my code is not working. I am\
    \ new to programming and do not understand why my code is not working. I am new\
    \ to programming and do not understand why my code is not working. I am new to\
    \ programming and do not understand why my code is not working. I am new to programming\
    \ and do not understand why my code is not working. I am new to programming and\
    \ do not understand why my code is not working. I am new to programming and do\
    \ not understand why my code is not working. I am new to programming and do not ",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum\
    \ += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n\
    \      sum += i * i\n    else\n      sum += i\n  end\n  return sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell", "  sum = 0\n  for i in lst\n \
    \   if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of integers and returns the sum of all odd entries in the array. The function\
    \ shall not change the entries in the array whose indexes are not a multiple of\
    \ 3. \nThe function shall then return the sum of all odd entries in the array.\
    \ \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n\
    >>> sumOdds(lst)\n5\n</text>\n<code language=julia-1.5>\nfunction sumOdds(lst)\n\
    \  sum = 0\n  for i in lst\n    if i % 3 != 0\n      sum += i\n    end\n  end\n\
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\nsumOdds(lst)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of integers and returns\
    \ the sum of all even entries in the array. The function shall not change the\
    \ entries in the array whose indexes are not a multiple of 4. \nThe function shall\
    \ then return the sum of all even entries in the array. \nExamples:\n>>> lst\n\
    [1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> sumEvens(lst)\n5\n</text>\n\
    <code language=julia-1.5>\nfunction sumEvens(lst)\n  sum = 0\n  for i in lst\n\
    \    if i % 4 != 0\n      sum += i\n    end\n  end\n  return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsumEvens(lst)\n</cell>\n<text>\nExercise 5\nWrite a\
    \ function that takes an array of integers and returns the product of all entries\
    \ in the array. The function shall not change the entries in the array whose indexes\
    \ are not a multiple of 3. \nThe function shall then return the product of all\
    \ entries in the array. \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n\
    [-1, -5, 2, -1, -5]\n>>> productOfAllEntries(lst)\n120\n</text>\n<code language=julia-1.5>\n\
    function productOfAllEntries(lst)\n  product = 1\n  for i in lst\n    if i % 3\
    \ != 0\n      product *= i\n    end\n  end\n  return product\nend\n</cell>\n<code\
    \ language=julia-1.5>\nproductOfAllEntries(lst)\n</cell>\n<text>", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "    sum = 0\n    \n    for x in lst\n        if x % 3 == 0\n          \
    \  sum += x ** 2\n        elif x % 4 == 0\n            sum += x ** 3\n       \
    \ else\n            sum += x\n    end\n    \n    return sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "    sum =\
    \ 0\n    for i in lst\n        if i % 3 == 0\n            sum += i\n        elif\
    \ i % 4 == 0\n            sum += i * i\n    return sum", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum\
    \ += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        if i % 3 == 0\n         \
    \   sum += i ** 2\n        elif i % 4 == 0\n            sum += i ** 3\n      \
    \  else\n            sum += i\n    return sum\n</code>\n<|/ a tags=python,python-3.x\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to write\
    \ this in Python.\n<|/ c |>\n<| c |>\nThe OP has already written the code in the\
    \ question. He wants to know how to write it in Python.\n<|/ c |>\n<| c |>\nThe\
    \ OP has already written the code in the question. He wants to know how to write\
    \ it in Python.\n<|/ c |>\n<| c |>\nThe OP has already written the code in the\
    \ question. He wants to know how to write it in Python.\n<|/ c |>\n<| c |>\nThe\
    \ OP has already written the code in the question. He wants to know how to write\
    \ it in Python.\n<|/ c |>\n<| a tags=python,python-3.x |>\n<code>", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", " \
    \   sum = 0\n    for i in lst\n        if i % 3 == 0\n            sum += i **\
    \ 2\n        elif i % 4 == 0\n            sum += i ** 3\n        else\n      \
    \      sum += i\n    return sum\n</code>\n<|/ q |>\n<| c |>\n`def sum_squares(lst)`\
    \ should be `def sum_squares(lst)`\n<|/ c |>\n<| c |>\n`def sum_squares(lst)`\
    \ should be `def sum_squares(lst)`\n<|/ c |>\n<| c |>\n`def sum_squares(lst)`\
    \ should be `def sum_squares(lst)`\n<|/ c |>\n<| c |>\n`def sum_squares(lst)`\
    \ should be `def sum_squares(lst)`\n<|/ c |>\n<| c |>\n`def sum_squares(lst)`\
    \ should be `def sum_squares(lst)`\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ positive integers in the array. \nThe function shall not change the entries\
    \ in the array whose indexes are not a multiple of 3 or 4. The function shall\
    \ then return the number of positive integers in the array. \nExamples:\n>>> lst\n\
    [1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> num_positives(lst)\n\
    3\n</text>\n<code language=julia-1.0>", "  sum = 0\n  for i in lst\n    if i %\
    \ 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n   \
    \ else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.0>", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum\
    \ += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements that are not divisible by 3. The function shall not change the entries\
    \ in the array whose indexes are not a multiple of 3. \nExamples:\n>>> lst\n[1,\
    \ 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> lst\n[4, 6, 8, 10, 12,\
    \ 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6,\
    \ 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>>\
    \ lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12,\
    \ 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6,\
    \ 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>>\
    \ lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12,\
    \ 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6,\
    \ 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>>\
    \ lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12,\
    \ 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6,\
    \ 8, 10, 12, 14, 16, 18, 20]\n>>> lst\n[4, 6, 8, 10, 12, 14, 16, 18, 20]\n>>>\
    \ lst\n[4, 6, 8, ", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum +=\
    \ i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n\
    \  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n  \
    \    sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n    \
    \  sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i %\
    \ 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n   \
    \ else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "    sum = 0\n\
    \    \n    for entry in lst\n        if entry % 3 == 0\n            sum += entry**2\n\
    \        elif entry % 4 == 0\n            sum += entry**3\n        else\n    \
    \        sum += entry\n    end\n    \n    return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "    sum = 0\n    for i in lst\n        if i % 3 == 0\n \
    \           sum += i ** 2\n        elif i % 4 == 0\n            sum += i ** 3\n\
    \        else\n            sum += i\n    return sum\n</code>\n<|/ q |>\n<| c |>\n\
    What is the problem you are facing?\n<|/ c |>\n<| c |>\nPlease read [ask] and\
    \ [edit] your question to include a [mcve]. Also, please take the [tour] and read\
    \ [ask]. Welcome to Stack Overflow!\n<|/ c |>\n<| c |>\nPlease read [Why is \u201C\
    Can someone help me?\u201D not an actual question?](https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question)\n\
    <|/ c |>\n<| c |>\nPlease read [Why is \u201CCan someone help me?\u201D not an\
    \ actual question?](https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question)\n\
    <|/ c |>\n<| c |>\nPlease read [Why is \u201CCan someone help me?\u201D not an\
    \ actual question?](https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question)\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  sum = 0\n  for i in lst\n    if i % 3\
    \ == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n\
    \      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if\
    \ i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n\
    \    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n  \
    \  if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend\n</cell>\n<cell>",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n\
    <code language=julia-1.0>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n  \
    \    sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n    \
    \  sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i %\
    \ 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n   \
    \ else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n    \
    \  sum += i * i\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell", "  sum = 0\n  for i in lst\n \
    \   if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend\n</cell>\n<cell>",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend\n\
    </cell>\n<cell>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum +=\
    \ i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n\
    \  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n  \
    \    sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n    \
    \  sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell", "  sum = 0\n  for i in lst\n \
    \   if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum += i *\
    \ i\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n\
    <cell>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n\
    \    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  sum\nend\n</cell>\n<cell>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.5>", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum\
    \ += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of integers and returns the number of positive\
    \ integers in the array. \nThe function shall not change the entries in the array\
    \ whose indexes are not a multiple of 3 or 4. The function shall then return the\
    \ number of positive integers in the array. \nExamples:\n>>> lst\n[1, 2, 3]\n\
    >>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> num_positives(lst)\n3\n</text>\n\
    <code language=julia-1.5>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n  \
    \    sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n    \
    \  sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i %\
    \ 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n   \
    \ else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if\
    \ i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n\
    \    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend\n\
    </cell>\n<cell>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum +=\
    \ i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n\
    \  end\n  sum\nend\n</cell>\n<cell>\nsum_squares([1, 2, 3])\n</cell>\n<cell>\n\
    sum_squares([-1, -5, 2, -1, -5])\n</cell>\n<cell>\nsum_squares([-1, -5, 2, -1,\
    \ -5, 2, -1, -5])\n</cell>\n<cell>\nsum_squares([-1, -5, 2, -1, -5, 2, -1, -5,\
    \ 2, -1, -5])\n</cell>\n<cell>\nsum_squares([-1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, 2,\
    \ -1, -5, 2, -1, -5, 2, -1, -5, 2, -1, -5, ", "  sum = 0\n  for i in lst\n   \
    \ if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum += i * i\n\
    \    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum +=\
    \ i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n\
    \  end\n  sum\nend\n</cell>\n<cell>", "  sum = 0\n  for i in lst\n    if i % 3\
    \ == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n\
    \      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3\
    \ == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum += i * i\n    else\n\
    \      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if\
    \ i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n\
    \    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n\
    <cell>", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n\
    \    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that will take an array of integers and return\
    \ an array of the same size with only the even entries in the array. \nThe function\
    \ shall not change the entries in the array whose indexes are not a multiple of\
    \ 2. \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n\
    >>> evens(lst)\n[2, 4]\n</text>\n<code language=julia-1.0>\nfunction evens(lst)\n\
    \  evens = []\n  for i in lst\n    if i % 2 == 0\n      push!(evens, i)\n    end\n\
    \  end\n  return evens\nend\n</cell>\n<code language=julia-1.0>\nevens(lst)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that will take an array of integers\
    \ and return an array of the same size with only the odd entries in the array.\
    \ \nThe function shall not change the entries in the array whose indexes are not\
    \ a multiple of 2. \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1,\
    \ -5, 2, -1, -5]\n>>> odds(lst)\n[1, 3]\n</text>\n<code language=julia-1.0>\n\
    function odds(lst)\n  odds = []\n  for i in lst\n    if i % 2 == 1\n      push!(odds,\
    \ i)\n    end\n  end\n  return odds\nend\n</cell>\n<code language=julia-1.0>\n\
    odds(lst)\n</cell>\n<text>\nExercise 4\nWrite a function that will take an array\
    \ of integers and return an array of the same size with only the entries that\
    \ are divisible by 3 or 4 but not both. \nThe function shall not change the entries\
    \ in the array whose indexes are not a multiple of 3 or 4. \nExamples:\n>>> lst\n\
    [1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> divisibles(lst)\n[1,\
    \ 3]\n</text>\n<code language=julia-1.0>\nfunction divisibles(lst)\n  divisibles\
    \ = []\n  for i in lst\n    if i % 3 == 0 || i % 4 == 0\n      push!(divisibles,\
    \ i)\n    end\n  end\n  return divisibles\nend\n</cell>\n<code language=julia-1.0>\n\
    divisibles(lst)\n</cell>\n<text>\nExercise 5\nWrite a function that will take\
    \ an array of integer", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n   \
    \ if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<cell>", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n     \
    \ sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum\
    \ += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 ==\
    \ 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n\
    \      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if\
    \ i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n\
    \    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.0>", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum\
    \ += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  sum\nend\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell", "  sum = 0\n  for i in lst\n \
    \   if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end\n</code>\n<|/ q tags=ruby,arrays |>\n<| c |>\nWhat is your question?\n<|/\
    \ c |>\n<| c |>\nPlease read \"[ask]\" including the linked pages, \"[mcve]\"\
    \ and \u201C[How much research effort is expected of Stack Overflow users?](http://meta.stackoverflow.com/questions/261592)\"\
    . We'd like to see evidence of your effort. What did you try? Did you search and\
    \ not find anything? Did you find stuff but it didn't help? Did you try writing\
    \ code? If not, why? If so, what is the smallest code example that shows what\
    \ you tried and why didn't it work? Without that it looks like you didn't try\
    \ and want us to write it for you.\n<|/ c |>\n<| c |>\nPlease read \"[ask]\" including\
    \ the linked pages, \"[mcve]\" and \u201C[How much research effort is expected\
    \ of Stack Overflow users?](http://meta.stackoverflow.com/questions/261592)\"\
    . We'd like to see evidence of your effort. What did you try? Did you search and\
    \ not find anything? Did you find stuff but it didn't help? Did you try writing\
    \ code? If not, why? If so, what is the smallest code example that shows what\
    \ you tried and why didn't it work? Without that it looks like you didn't try\
    \ and want us to write it for you.\n<|/ c |>\n<| c |>\nPlease read \"[ask]\" including\
    \ the linked pages, \"[mcve]\" and \u201C[How much research effort is expected\
    \ of Stack Overflow users?](http://meta.stackoverflow.com/questions/261592)\"\
    . We'd like to see evidence of your effort. What did you try? Did you search and\
    \ not find anything? Did you find stuff but it didn't help? Did you try writing\
    \ code? If not, why? If so, what is the smallest code example that shows what\
    \ you tried and why didn't it work? Without that it looks like you didn't try\
    \ and want us to write it for you.\n<|/ c |>\n<| c |>\nPlease read \"[ask]\" including\
    \ the linked pages, \"[mcve]\" and \u201C[How much research effort is expected\
    \ of Stack Overflow users?](http://meta.stackoverflow.com/questions/261592)\"\
    . We'd like to see evidence of your effort. What did you try? Did you search and\
    \ not find ", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n     \
    \ sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum\
    \ += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 ==\
    \ 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n\
    \      sum += i\n  end\n  sum\nend\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n\
    <cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.5>", "  sum = 0\n  for i in\
    \ lst\n    if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum\
    \ += i * i\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n", "    sum = 0\n    for i in lst\n        if i % 3 == 0\n\
    \            sum += i ** 2\n        elif i % 4 == 0\n            sum += i ** 3\n\
    \        else\n            sum += i\n    return sum\n</code>\n<|/ q dscore=0 |>\n\
    <| c |>\nWhat is your question?\n<|/ c |>\n<| c |>\nWhat is your question?\n<|/\
    \ c |>\n<| c |>\nWhat is your question?\n<|/ c |>\n<| c |>\nWhat is your question?\n\
    <|/ c |>\n<| c |>\nWhat is your question?\n<|/ c |>\n<| a tags=python |>\n<code>",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to know how to use `if` statements inside a `for` loop.\n\
    <|/ c |>\n<| c |>\nI did answer it. I explained how to use if statements inside\
    \ a `for` loop. OP asked how to use `if` statements inside a `for` loop. He also\
    \ asked how to use `if` statements inside a `for` loop. He also asked how to use\
    \ `if` statements inside a `for` loop. He also asked how to use `if` statements\
    \ inside a `for` loop. He also asked how to use `if` statements inside a `for`\
    \ loop. He also asked how to use `if` statements inside a `for` loop. He also\
    \ asked how to use `if` statements inside a `for` loop. He also asked how to use\
    \ `if` statements inside a `for` loop. He also asked how to use `if` statements\
    \ inside a `for` loop. He also asked how to use `if` statements inside a `for`\
    \ loop. He also asked how to use `if` statements inside a `for` loop. He also\
    \ asked how to use `if` statements inside a `for` loop. He also asked how to use\
    \ `if` statements inside a `for` loop. He also asked how to use `if` statements\
    \ inside a `for` loop. He also asked how to use `if` statements inside a `for`\
    \ loop. He also asked how to use `if` statements inside a `for` loop. He also\
    \ asked how to use `if` statements inside a `for` loop. He also asked how to use\
    \ `if` statements inside a `for` loop. He also asked how to use `if` statements\
    \ inside a `for` loop. He also asked how to use `if` statements inside a `for`\
    \ loop. He also asked how to use `if` statements inside a `for` loop. He also\
    \ asked how to use `if` statements inside a `for` loop. He also as", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "    sum = 0\n    \n    for num in lst\n        if num % 3 == 0\n      \
    \      sum += num * num\n        elif num % 4 == 0\n            sum += num * num\n\
    \        else\n            sum += num\n    end\n    \n    return sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "    sum = 0\n    \n    for entry in lst\n        if entry\
    \ % 3 == 0\n            sum += entry**2\n        elif entry % 4 == 0\n       \
    \     sum += entry**3\n        else\n            sum += entry\n    end\n    \n\
    \    return sum\nend", "    sum = 0\n    \n    for entry in lst\n        if entry\
    \ % 3 == 0\n            sum += entry**2\n        elif entry % 4 == 0\n       \
    \     sum += entry**3\n        else\n            sum += entry\n    end\n    \n\
    \    return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  sum\nend\n</cell>\n<cell>", "  sum = 0\n  for\
    \ i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n   \
    \   sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum\
    \ = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4\
    \ == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n   \
    \ if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of integers in the array that are a\
    \ multiple of 3. The function shall not change the entries in the array whose\
    \ indexes are not a multiple of 3. \nThe function shall then return the number\
    \ of integers in the array that are a multiple of 3. Examples:\n>>> lst\n[1, 2,\
    \ 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n\
    [1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, 1]\n>>> lst\n[1, 1, ", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of integers and returns the number of positive integers in the array.\
    \ \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n\
    >>> count_positive(lst)\n3\n</text>\n<code language=julia-1.0>\nfunction count_positive(lst)\n\
    \  count = 0\n  for i in lst\n    if i > 0\n      count += 1\n    end\n  end\n\
    \  return count\nend\n</cell>\n<code language=julia-1.0>\ncount_positive(lst)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and returns the number of negative integers in the array. \nExamples:\n>>> lst\n\
    [1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> count_negative(lst)\n\
    3\n</text>\n<code language=julia-1.0>\nfunction count_negative(lst)\n  count =\
    \ 0\n  for i in lst\n    if i < 0\n      count += 1\n    end\n  end\n  return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_negative(lst)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of integers and returns\
    \ the number of zeros in the array. \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n\
    []\n>>> lst\n[-1, -5, 2, -1, -5]\n>>> count_zeros(lst)\n3\n</text>\n<code language=julia-1.0>\n\
    function count_zeros(lst)\n  count = 0\n  for i in lst\n    if i == 0\n      count\
    \ += 1\n    end\n  end\n  return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_zeros(lst)\n</cell>\n<text>\nExercise 5\nWrite a function that takes an\
    \ array of integers and returns the number of integers in the array that are divisible\
    \ by 7. \nExamples:\n>>> lst\n[1, 2, 3]\n>>> lst\n[]\n>>> lst\n[-1, -5, 2, -1,\
    \ -5]\n>>> count_divisible(lst)\n2\n</text>\n<code language=julia-1.0>\nfunction\
    \ count_divisible(lst)\n  count = 0\n  for i in lst\n    if i % 7 == 0\n     \
    \ count += 1\n    end\n  end\n  return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n\
    \    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend\n</cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell>\n<cell>\nsum_squares([1,2,3])\n\
    </cell>\n<cell>\nsum_squares([1,2,3])\n</cell", "    sum = 0\n    \n    for entry\
    \ in lst\n        if entry % 3 == 0\n            sum += entry\n        elif entry\
    \ % 4 == 0\n            sum += entry\n        else\n            sum -= entry\n\
    \    end\n    \n    return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3\
    \ == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n\
    \      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if\
    \ i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum += i * i\n \
    \   else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n   \
    \ if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i **\
    \ 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 ==\
    \ 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend",
  "    sum = 0\n    \n    for i in lst\n        if i % 3 == 0\n            sum +=\
    \ i\n        elif i % 4 == 0\n            sum += i * i\n        else \n      \
    \      sum += i * i * i\n    \n    return sum\n</cell>\n<cell>", "  sum = 0\n\
    \  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n\
    \      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", " \
    \ sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i\
    \ % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n \
    \   else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  sum\nend", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i * i\n    elsif i % 4 == 0\n      sum += i *\
    \ i\n    else\n      sum += i\n  end\n  return sum\nend", "  sum = 0\n  for i\
    \ in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n     \
    \ sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\nend", "  sum =\
    \ 0\n  for i in lst\n    if i % 3 == 0\n      sum += i * i\n    elsif i % 4 ==\
    \ 0\n      sum += i * i\n    else\n      sum += i\n  end\n  return sum\nend",
  "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n    elsif i\
    \ % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return sum\n\
    end", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i ** 2\n   \
    \ elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum += i **\
    \ 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum += i\n  end\n\
    \  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i * i\n    elsif i % 4 == 0\n      sum += i * i\n    else\n      sum += i\n\
    \  end\n  sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n      sum\
    \ += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n      sum +=\
    \ i\n  end\n  return sum\nend", "  sum = 0\n  for i in lst\n    if i % 3 == 0\n\
    \      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i ** 3\n    else\n  \
    \    sum += i\n  end\n  sum\nend\n</cell>\n<cell>", "  sum = 0\n  for i in lst\n\
    \    if i % 3 == 0\n      sum += i ** 2\n    elsif i % 4 == 0\n      sum += i\
    \ ** 3\n    else\n      sum += i\n  end\n  return sum\nend\n</cell>\n<cell>"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

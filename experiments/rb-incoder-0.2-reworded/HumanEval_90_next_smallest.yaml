name: HumanEval_90_next_smallest
language: rb
prompt: "# You are given an array of integers.\n# Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n# Return nil if there is\
  \ no such element.\n# >>> next_smallest.call([1, 2, 3, 4, 5])\n# 2\n# >>> next_smallest.call([5,\
  \ 1, 4, 3, 2])\n# 2\n# >>> next_smallest.call([])\n# nil\n# >>> next_smallest.call([1,\
  \ 1])\n# nil\ndef next_smallest(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_next_smallest\n\
  \    candidate = method(:next_smallest)\n    assert_equal(2, candidate.call([1,\
  \ 2, 3, 4, 5]))\n    assert_equal(2, candidate.call([5, 1, 4, 3, 2]))\n    assert_equal(nil,\
  \ candidate.call([]))\n    assert_equal(nil, candidate.call([1, 1]))\n    assert_equal(1,\
  \ candidate.call([1, 1, 1, 1, 0]))\n    assert_equal(nil, candidate.call([1, 1]))\n\
  \    assert_equal(-35, candidate.call([-35, 34, 12, -45]))\n  end\nend\n"
completions: ["  lst.sort.last\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst[0]\nend", "  lst.sort.first(2)\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst\nend", "  lst.sort.last\nend", "  return nil if lst.empty?\n\
    \  lst.sort!\n  lst.shift\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n \
    \ lst[1]\nend", "  lst.sort.reverse.first\nend", "  lst.sort!\n  lst.shift if\
    \ lst.size < 2\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\n\
    end", "  lst.sort!\n  lst.shift\nend", "  lst.sort.last\nend", "  return nil if\
    \ lst.empty?\n  lst.sort!\n  lst.shift if lst.size == 1\n  lst[0]\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.last\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort.last\nend",
  "  lst.sort.each_with_index do |e, i|\n    return e if i == 0 || e < lst[i-1]\n\
    \  end\n  nil\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort.first(2)\nend", "  lst.sort.first\nend", "  lst.sort!\n  lst.shift if\
    \ lst.size < 2\n  lst[0]\nend", "  lst.sort.last\nend", "  lst.sort.find { |x|\
    \ x < lst.last }\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort!\n  lst.shift\n  lst.shift\n  return lst.first if lst.size > 0\n  nil\n\
    end", "  lst.sort\n  lst.shift\n  lst.shift\n  lst.shift\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort.first(2).last\nend", "  return nil if lst.empty?\n\
    \  lst.sort!\n  lst.shift if lst.size > 1\n  lst\nend", "  lst.sort.find { |x|\
    \ x < lst.last }\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift\
    \ if lst.size > 1\n  lst\nend", "  lst.sort!\n  lst.shift\n  lst.shift\n  return\
    \ lst.first if lst.size > 0\n  return nil\nend", "  lst.sort.find { |x| x < lst.last\
    \ ? x : nil }\nend", "  lst.sort.reverse.first\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst\nend", "  lst.sort.reverse.first\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort.first(2).last\nend", "  lst.sort.first(2)\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort!\n \
    \ lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", " \
    \ lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.find { |x|\
    \ x < lst.last }\nend", "  lst.sort.first(2)\nend", "  lst.sort.reverse.first\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.find\
    \ { |x| x < lst.min }\nend", "  lst.sort.reverse.first\nend", "  lst.sort\n  lst.shift\
    \ if lst.size > 1\n  lst\nend", "  lst.sort.first(2)\nend", "  lst.sort.find {\
    \ |x| x < lst.min }\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort.reverse.first\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort.first(2)\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort!\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  ", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if lst.size\
    \ > 1\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", " \
    \ return nil if lst.empty?\n  lst.sort!\n  lst.shift if lst.size < 2\n  lst\n\
    end", "  lst.sort.find { |x| x < lst.last ? x : lst.last }\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort.each_with_index do |e, i|\n    return e if\
    \ i == 0\n    return e if e < lst[i-1]\n  end\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", " \
    \ lst.sort.reverse.first\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.reverse.first\n\
    end", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if lst.size\
    \ > 1\n  lst\nend", "  lst.sort.last\nend", "  lst.sort.first(2)\nend", "  lst.sort.first\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.last\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.last\nend", "  return nil\
    \ if lst.empty?\n  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", " \
    \ lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.first(2)\n\
    end", "  lst.sort.each_with_index do |x, i|\n    return x if i == 0\n    return\
    \ x if x < lst[i-1]\n  end\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", " \
    \ lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.reverse.first\n\
    end", "  lst.sort.find { |x| x < lst.min }\nend", "  lst.sort.first(2)\nend",
  "  lst.sort.last\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort.first\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.find { |x| x\
    \ < lst.last }\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend",
  "  lst.sort.reverse.first\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift\
    \ if lst.size == 1\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst[1]\nend", "  lst.sort.reverse.first\nend", "  lst.sort.last\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort.first\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort.first(2)\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if\
    \ lst.size > 1\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.last\n\
    end", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort\n\
    \  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst\nend", "  lst.sort\n  lst.shift if lst.size < 2\n  lst[0]\nend",
  "  lst.sort!\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n  lst.shift\n\
    \  ", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.each_with_index do |e,\
    \ i|\n    return e if i == 0\n    return e if e < lst[i - 1]\n  end\nend", " \
    \ lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst[0]\nend", "  lst.sort.first(2)\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst\nend", "  lst.sort\n  lst.shift if lst.size <= 1\n  lst[1]\nend",
  "  lst.sort.last\nend", "  lst.sort\n  lst.shift if lst.size < 2\n  lst[0]\nend",
  "  lst.sort.first(2)\nend", "  lst.sort\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst[0]\nend", "  lst.sort.first(2)\nend", "  lst.sort.last\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.first(2)\nend", "  lst.sort.find\
    \ { |x| x < lst.min }\nend", "  lst.sort.reverse.first\nend", "  lst.sort.find\
    \ { |x| x < lst.min }\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\n\
    end", "  lst.sort.last\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\n\
    end", "  lst.sort.find { |x| x < lst.last ? false : x }\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[1]\nend", "  return nil if lst.empty?\n  lst.sort!\n\
    \  lst.shift if lst.size == 1\n  lst[1]\nend", "  lst.sort.first(2)\nend", " \
    \ lst.sort.last\nend", "  lst.sort.last\nend", "  lst.sort.reverse.first\nend",
  "  lst.sort.last\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if\
    \ lst.size == 1\n  lst.shift\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n\
    \  lst\nend", "  lst.sort.first(2)\nend", "  lst.sort.last\nend", "  lst.sort.last\n\
    end", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if lst.size == 1\n\
    \  lst[1]\nend", "  lst.sort.find { |x| x < lst.first }\nend", "  lst.sort\n \
    \ lst.shift if lst.size < 2\n  lst\nend", "  lst.sort\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend", "  lst.sort.find { |x| x\
    \ < lst.last }\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort.first\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend",
  "  lst.sort.first\nend", "  return nil if lst.empty?\n  lst.sort!\n  lst.shift if\
    \ lst.size == 1\n  lst[1]\nend", "  lst.sort.last\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst[1]\nend", "  return nil if lst.empty?\n  lst.sort!\n\
    \  lst.shift if lst.size > 1\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift\
    \ if lst.size < 2\n  lst\nend", "  lst.sort.first(2).last\nend", "  lst.sort!\n\
    \  lst.shift if lst.size < 2\n  lst[0]\nend", "  lst.sort!\n  lst.shift if lst.size\
    \ < 2\n  lst\nend", "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[0]\nend",
  "  lst.sort!\n  lst.shift if lst.size < 2\n  lst[1]\nend", "  lst.sort.reverse.first\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

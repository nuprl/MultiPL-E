name: HumanEval_84_solve
language: rb
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve.call(1000)\n# \"1\"\n# >>> solve.call(150)\n# \"110\"\n#\
  \ >>> solve.call(147)\n# \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0\
  \ \u2264 N \u2264 10000.\n# Output:\n# a string of binary number\ndef solve(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
  \    candidate = method(:solve)\n    assert_equal(\"1\", candidate.call(1000))\n\
  \    assert_equal(\"110\", candidate.call(150))\n    assert_equal(\"1100\", candidate.call(147))\n\
  \    assert_equal(\"1001\", candidate.call(333))\n    assert_equal(\"10010\", candidate.call(963))\n\
  \  end\nend\n"
completions: ["  s = \"\"\n  while n > 0\n    s << (n % 2)\n    n /= 2\n  end\n  s\n\
    end", "  result = ''\n  while n > 0\n    result += (n % 2 == 0 ? '1' : '0')\n\
    \    n /= 2\n  end\n  result\nend", "  s = \"\"\n  while n > 0\n    s += \"1\"\
    \ * (n % 2)\n    n /= 2\n  end\n  s\nend", "  result = ''\n  while n > 0\n   \
    \ digit = n % 10\n    result += \"#{digit}\"\n    n /= 10\n  end\n  result\nend",
  "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(",
  "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\nend", "  sum = 0\n  while\
    \ n > 0\n    sum = sum + n % 2\n    n = n / 2\n  end\n  return sum.to_s\nend",
  "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  result\
    \ = ''\n  while n > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n  result\n\
    end", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\n\
    end", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(",
  "  n.to_s(2).reverse.gsub(/../).reverse.gsub(/0/, '1').to_i\nend", "  n.to_s(2).reverse.gsub(/(.)(\\\
    d)/, '\\1\\2').to_i(2).to_s(2)\nend", "  binary = n.to_s(2)\n  binary = binary.reverse\n\
    \  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.",
  "  n.to_s.split(\"\").map { |i| i.to_i(2) }.inject(:+)\nend", "  s = \"\"\n  while\
    \ n > 0\n    s += \"1\" * (n % 2)\n    n /= 2\n  end\n  s\nend", "  s = n.to_s(2)\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/../).reverse.gsub(/0/,\
    \ '1').to_i\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\n\
    end", "  n.to_s.split(\"\").map {|x| x.to_i(2) }.inject(:+)\nend", "  s = ''\n\
    \  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.to_s(2)\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n\
    \    n /= 2\n  end\n  return sum.to_s\nend", "  n.to_s.reverse.scan(/../).map(&:to_i).reduce(:+)\n\
    end", "  result = ''\n  while n > 0\n    result += (n % 2 == 0 and '1' or '0')\n\
    \    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2)\
    \ }.reverse\nend", "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n\
    \  s\nend", "  binary = n.to_s(2)\n  sum = 0\n  for i in 0...binary.length\n \
    \   sum += binary.chars.to_i(i).to_s(2)\n  end\n  sum.to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').to_i(2).to_s(2).reverse\nend", "  result = ''\n  while n > 0\n   \
    \ result += (n % 10).to_s(2)\n    n /= 10\n  end\n  result\nend", "  result =\
    \ ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n\
    \  result\nend", "  result = ''\n  while n > 0\n    digit = n % 10\n    result\
    \ += (digit * '1')\n    n /= 10\n  end\n  result\nend", "  binary = n.to_s(2)\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_i(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n", "  n.to_s.split(\"\
    \").map {|i| i.to_i(2).to_s(2)}.join\nend\n</cell>\n<text>\nProblem 4\nThe Fibonacci\
    \ sequence is defined by the formula:", "  s = ''\n  while n > 0\n    s << n %\
    \ 2\n    n /= 2\n  end\n  s\nend", "  result = ''\n  while n > 0\n    result +=\
    \ (n % 2).to_s\n    n /= 2\n  end\n  result\nend", "  s = \"\"\n  while n > 0\n\
    \    s << (n % 2).to_s\n    n /= 2\n  end\n  s\nend", "  sum = 0\n  while n >\
    \ 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  s = \"\"\n \
    \ while n > 0\n    s += \"1\"\n    n -= 1\n  end\n  s\nend", "  result = ''\n\
    \  while n > 0\n    result += (n % 2 == 0 ? '1' : '0')\n    n /= 2\n  end\n  result\n\
    end", "  n.to_s(2).reverse.gsub(/(.{8})/, '\\1').to_i(2).to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').to_i(2).to_s(2).reverse\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = \"\"\n  while n > 0\n    s\
    \ << (n % 2)\n    n /= 2\n  end\n  s\nend", "  result = ''\n  while n > 0\n  \
    \  digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", " \
    \ s = \"\"\n  while n > 0\n    s << (n % 2).to_s(2)\n    n /= 2\n  end\n  s\n\
    end", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/,\
    \ '0')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.", "  n.to_s.reverse.scan(/../).map\
    \ { |x| x.to_i(2) }.inject(:+)\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = ''\n  while n > 0\n    s <<\
    \ (n % 2).to_s\n    n /= 2\n  end\n  s\nend", "  s = \"\"\n  while n > 0\n   \
    \ s << n % 2\n    n /= 2\n  end\n  s\nend", "  s = n.to_s(2)\n  s.reverse!\n \
    \ s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  sum = 0\n  while\
    \ n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.reverse\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n\
    \    n /= 2\n  end\n  return sum.to_s\nend", "  sum = 0\n  while n > 0\n    sum\
    \ += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  result = ''\n  while\
    \ n > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n  result\nend", "  s\
    \ = ''\n  while n > 0\n    s = n.to_s(2).rjust(8, '0') + s\n    n -= 1\n  end\n\
    \  s\nend", "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\n\
    end", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return\
    \ sum.to_s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\n\
    end", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/,\
    \ '0')\n  binary.gsub!(/10/, '10')\n  binary.gsub!(/11/, '11')\n  binary.gsub!(/12/,\
    \ '100')\n  binary.gsub!(/13/, '101')\n  binary.gsub!(/14/, '110')\n  binary.gsub!(/15/,\
    \ '111')\n  binary.gsub!(/16/, '1000')\n  binary.gsub!(/17/, '1001')\n  binary.gsub!(/18/,\
    \ '1010')\n  binary.gsub!(/19/, '1011')\n  binary.gsub!(/20/, '1100')\n  binary.gsub!(/21/,\
    \ '1101')\n  binary.gsub!(/22/, '1110')\n  binary.gsub!(/23/, '1111')\n  binary.gsub!(/24/,\
    \ '10000')\n  binary.gsub!(/25/, '10001')\n  binary.gsub!(/26/, '10010')\n  binary.gsub!(/27/,\
    \ '10011')\n  binary.gsub!(/28/, '10100')\n  binary.gsub!(/29/, '10101')\n  binary.gsub!(/30/,\
    \ '10110')\n  binary.gsub!(/31/, '10111')\n  binary.gsub!(/32/, '11000')\n  binary.gsub!(/33/,\
    \ '11001')\n  binary.gsub!(/34/, '11010')\n  binary.gsub!(/35/, '11011')\n  binary.gsub!(/36/,\
    \ '11100')\n  binary.gsub!(/37/, '11101')\n  binary.gsub!(/38/, '11110')\n  binary.gsub!(/39/,\
    \ '11111')\n  binary.gsub!(/40/, '100000')\n  binary.gsub!(/41/, '100001')\n \
    \ binary.gsub!(/42/, '100010')\n  binary.gsub!(/43/, '100011')\n  binary.gsub!(/44/,\
    \ '100100')\n  binary.gsub!(/45/, '100101')\n  bin", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  result = ''\n \
    \ while n > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n  result\nend",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  n.to_s.reverse.scan(/../).map\
    \ { |x| x.to_s(2) }.join(\"\")\nend", "  n.to_s.split(\"\").map {|i| i.to_i(2).to_s(2)}.join\n\
    end", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\n\
    end", "  binary = n.to_s(2)\n  sum = 0\n  for i in 0...binary.length\n    sum\
    \ += binary.chars.to_i(i)\n  end\n  return sum.to_s(2)\nend", "  n.to_s.reverse.chars.map\
    \ { |x| x.to_i(2) }.inject(:+).to_s(2)\nend", "  result = ''\n  while n > 0\n\
    \    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend",
  "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  result\
    \ = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n\
    \  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').to_i(2).to_s(2)\n\
    end", "  n.to_s(2).reverse.scan(/../).map { |x| x.to_i(2) }.inject(:+)\nend",
  "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\nend", "  n.to_s(2).reverse.scan(/../).join\n\
    end", "  s = ''\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend",
  "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n    n /=\
    \ 10\n  end\n  return result\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/00/, '0')\n\
    \  binary.gsub!(/01/, '1')\n  binary.gsub!(/10/, '0')\n  binary.gsub!(/11/, '1')\n\
    \  binary.gsub!(/100/, '0')\n  binary.gsub!(/101/, '1')\n  binary.gsub!(/1000/,\
    \ '0')\n  binary.gsub!(/1001/, '1')\n  binary.gsub!(/10000/, '0')\n  binary.gsub!(/10001/,\
    \ '1')\n  binary.gsub!(/100000/, '0')\n  binary.gsub!(/100001/, '1')\n  binary.gsub!(/1000000/,\
    \ '0')\n  binary.gsub!(/1000001/, '1')\n  binary.gsub!(/10000000/, '0')\n  binary.gsub!(/10000001/,\
    \ '1')\n  binary.gsub!(/100000000/, '0')\n  binary.gsub!(/1000000001/, '1')\n\
    \  binary.gsub!(/1000000000/, '0')\n  binary.gsub!(/1000000001/, '1')\n  binary.gsub!(/10000000000/,\
    \ '0')\n  binary.gsub!(/10000000001/, '1')\n  binary.gsub!(/100000000000/, '0')\n\
    \  binary.gsub!(/100000000001/, '1')\n  binary.gsub!(/1000000000000/, '0')\n \
    \ binary.gsub!(/1000000000001/, '1')\n  binary.gsub!(/10000000000000/, '0')\n\
    \  binary.gsub!(/10000000000001/, '1')\n  binary.gsub!(/10000000000000/, '0')\n\
    \  binary.gsub!(/10000000000001/, '1')\n  binary.gsub!(/100000000000000/, '0')\n\
    \  binary.gsub!(/100000000000001/, '1')\n  binary.gsub!(/100000000000000/, '0')\n\
    \  binary.gsub!(/100000000000001/, '1')\n  binary.gsub!(/1000000000000000/, '0')\n\
    \  binary.gsub!(/1000000000000001/, '1')\n  binary.gsub!(/1000000000000000/, '0')\n\
    \  ", "  binary = n.to_s(2)\n  sum = 0\n  binary.reverse!\n  binary.each_char\
    \ {|c| sum += c.to_i(2) }\n  sum.to_s(2)\nend", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  result = ''\n \
    \ while n > 0\n    digit = n % 10\n    result << digit\n    n /= 10\n  end\n \
    \ result\nend", "  result = ''\n  while n > 0\n    digit = n % 10\n    result\
    \ << digit\n    n /= 10\n  end\n  return result\nend", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/../, '').to_i\nend", "  result = ''\n  while n > 0\n    digit\
    \ = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", "  s = \"\
    \"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.scan(/../).map\
    \ { |x| x.to_i(2) }.inject(:+)\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n", "  binary = n.to_s(2)\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n",
  "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\n\
    end", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/,\
    \ '0')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/,\
    \ '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/,\
    \ '1')\n  binary.gsub!(/0/, '0')\n  binary.", "  s = \"\"\n  while n > 0\n   \
    \ s << n % 2\n    n /= 2\n  end\n  s\nend", "  sum = 0\n  while n > 0\n    sum\
    \ += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  n.to_s(2).reverse.scan(/../).map\
    \ { |x| x.to_i(2) }.reduce(:+)\nend", "  sum = 0\n  while n > 0\n    sum += n\
    \ % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  binary = n.to_s(2)\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n\
    \  binary.reverse!\n  binary.reverse!\n  binary.reverse!\n", "  result = ''\n\
    \  while n > 0\n    digit = n % 10\n    n /= 10\n    result << digit\n  end\n\
    \  result\nend", "  binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_i(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n", "  result = ''\n  while n > 0\n    digit = n % 10\n  \
    \  result += \"#{digit}\"\n    n /= 10\n  end\n  result\nend", "  sum = 0\n  while\
    \ n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  result\
    \ = ''\n  while n > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n  result\n\
    end", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n\
    \  return sum.to_s\nend", "  s = ''\n  while n > 0\n    s << n % 2\n    n /= 2\n\
    \  end\n  s\nend", "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n\
    \  s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').to_i(2)\nend", "  binary\
    \ = n.to_s(2)\n  sum = 0\n  binary.split('').each do |i|\n    sum += i.to_i\n\
    \  end\n  return sum.to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  s = n.to_s(2)\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  sum = 0\n  while n > 0\n    sum\
    \ += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\nend", "  result = ''\n  while n\
    \ > 0\n    digit = n % 10\n    result += \"#{digit}\"\n    n /= 10\n  end\n  result\n\
    end", "  n.to_s(2).reverse.chars.map { |x| x.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  result = ''\n  while n > 0\n \
    \   digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", " \
    \ binary = n.to_s(2)\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_i(2)\
    \ }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n\
    \  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n\
    \  binary.gsub!(/../) { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../)\
    \ { |s| s.to_s(2) }\n  binary.reverse!\n  binary.gsub!(/../) { |s| s.to_s(2) }\n",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  sum.to_s(2)\n\
    end", "  s = \"\"\n  while n > 0\n    s << (n % 2).to_s(2)\n    n /= 2\n  end\n\
    \  s\nend", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\nend", " \
    \ result = ''\n  while n > 0\n    result += (n % 10).to_s(2).rjust(2, '0')\n \
    \   n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = \"\"\n  while n > 0\n    s = n.to_s(2)\
    \ + s\n    n /= 2\n  end\n  s\nend", "  s = \"\"\n  while n > 0\n    s << n %\
    \ 2\n    n /= 2\n  end\n  s\nend", "  sum = 0\n  while n > 0\n    sum += n % 2\n\
    \    n /= 2\n  end\n  return sum.to_s\nend", "  n.to_s(2).reverse.gsub(/../).reverse.gsub(/0/,\
    \ '1').scan(/../).join\nend", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2)\
    \ }.reverse\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  result = ''\n  while n > 0\n    digit = n % 10\n    result\
    \ << digit\n    n /= 10\n  end\n  result\nend", "  result = ''\n  while n > 0\n\
    \    digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend",
  "  s = \"\"\n  while n > 0\n    s += \"1\" * (n % 2)\n    n /= 2\n  end\n  s\nend",
  "  n.to_s.reverse.scan(/../).map(&:to_i).reduce(:+)\nend", "  s = ''\n  while n\
    \ > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  sum = \"\"\n  while n\
    \ > 0\n    sum += n.to_s(2).rjust(8, \"0\")\n    n /= 2\n  end\n  sum\nend", " \
    \ result = ''\n  while n > 0\n    result += (n % 2) + '0'\n    n /= 2\n  end\n\
    \  result\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n", "  binary = n.to_s(2)\n  binary = binary.reverse\n\
    \  binary.gsub!(/0/, '1')\n  binary.gsub!(/1/, '0')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n\
    \  binary.gsub!(/0/, '0')\n  binary.gsub!(/1/, '1')\n  binary.gsub!(/0/, '0')\n\
    \  bin", "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n\
    \    n /= 10\n  end\n  result\nend", "  n.to_s.split(\"\").map {|x| x.to_i(2).to_s(2)}.join\n\
    end\n</cell>\n<cell>", "  binary = \"\"\n  while n > 0\n    binary = n.to_s(2).rjust(8,\
    \ \"0\") + binary\n    n -= 1\n  end\n  binary.reverse!\n  binary.gsub!(/[^01]/,\
    \ \"\")\n  binary.gsub!(/0/, \"\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/,\
    \ \"0\")\n  binary.gsub!(/1/, \"1\")\n  binary.gsub!(/1/, \"0\")\n  binary.gsub!(/1/,\
    \ \"1\")", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').to_i(2).to_s(2)\nend",
  "  result = ''\n  while n > 0\n    result += (n % 10).to_s(2)\n    n /= 10\n  end\n\
    \  result\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\nend",
  "  s = \"\"\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  s =\
    \ ''\n  while n > 0\n    s = s.to_s + n.to_s(2)\n    n -= 1\n  end\n  s\nend",
  "  s = ''\n  while n > 0\n    s << n % 2\n    n /= 2\n  end\n  s\nend", "  n.to_s.split(\"\
    \").map { |x| x.to_i(2) }.inject(:+)\nend", "  result = ''\n  while n > 0\n  \
    \  digit = n % 10\n    result << digit\n    n /= 10\n  end\n  result\nend", " \
    \ n.to_s.split(\"\").map { |i| i.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(", "  s = \"\"\n  while n > 0\n    s\
    \ << (n % 2).to_s\n    n /= 2\n  end\n  s\nend", "  n.to_s.split(\"\").map { |i|\
    \ i.to_i(2) }.inject(:+)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n\
    \  end\n  sum.to_s(2)\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../,\
    \ '').to_i\nend", "  result = ''\n  while n > 0\n    result += (n % 2) + '0'\n\
    \    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').reverse\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }\nend", "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').to_i(2).to_s(2).reverse\n\
    end", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(",
  "  sum = \"\"\n  while n > 0\n    sum = sum * 10 + n % 10\n    n /= 10\n  end\n\
    \  return sum\nend", "  binary = n.to_s(2)\n  binary = binary.reverse\n  binary\
    \ = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n\
    \  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.)/,\
    \ '\\1\\2')\n  binary = binary.gsub(/(.)(.)/, '\\1\\2')\n  binary = binary.gsub(/(.)(.",
  "  s = n.to_s(2)\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n\
    \  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n  s.reverse!\n",
  "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }\nend", "  result = ''\n  while\
    \ n > 0\n    digit = n % 10\n    result += \"#{digit}\"\n    n /= 10\n  end\n\
    \  result\nend", "  result = ''\n  while n > 0\n    digit = n % 10\n    n /= 10\n\
    \    result << digit\n  end\n  return result\nend", "  sum = 0\n  while n > 0\n\
    \    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\nend", "  s = \"\"\n \
    \ while n > 0\n    s = n.to_s(2).rjust(8, \"0\") + s\n    n -= n % 2\n  end\n\
    \  s\nend", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\1\\2').to_i(2)\nend", " \
    \ n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/../, '').to_i\nend", "  n.to_s(2).reverse.gsub(/../)\
    \ { |s| s.to_i(2) }.reverse\nend", "  sum = 0\n  while n > 0\n    sum = sum +\
    \ n % 2\n    n = n / 2\n  end\n  return sum.to_s\nend", "  binary = \"\"\n  while\
    \ n > 0\n    digit = n % 10\n    binary = digit.to_s + binary\n    n /= 10\n \
    \ end\n  binary.to_s\nend", "  n.to_s(2).reverse.gsub(/../) { |s| s.to_i(2) }.reverse\n\
    end", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(",
  "  sum = 0\n  while n > 0\n    sum += n % 2\n    n /= 2\n  end\n  return sum.to_s\n\
    end", "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n\
    \    n /= 10\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/(.)(\\d)/, '\\\
    1\\2').to_i(2).to_s(2)\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n\
    \    n /= 10\n  end\n  result\nend", "  s = ''\n  while n > 0\n    s << n % 2\n\
    \    n /= 2\n  end\n  s\nend", "  s = ''\n  while n > 0\n    s << (n % 2)\n  \
    \  n /= 2\n  end\n  s\nend", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  n.to_s(2).reverse.gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\\
    1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\\
    2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/, '\\1\\2').gsub(/(.)(.)/,\
    \ '\\1\\2').gsub(", "  result = ''\n  while n > 0\n    result += (n % 2) + '0'\n\
    \    n /= 2\n  end\n  result\nend", "  n.to_s(2).reverse.gsub(/../).reverse.scan(/../).join\n\
    end", "  result = ''\n  while n > 0\n    digit = n % 10\n    result << digit\n\
    \    n /= 10\n  end\n  result\nend", "  n.to_s.split(\"\").map {|i| i.to_i(2)\
    \ }.inject(:+)\nend", "  n.to_s(2).reverse.chars.map { |c| c.to_i(2) }.inject(0,\
    \ :+)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

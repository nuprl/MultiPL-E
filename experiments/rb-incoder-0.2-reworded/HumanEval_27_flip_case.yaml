name: HumanEval_27_flip_case
language: rb
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case.call(\"Hello\")\n# \"hELLO\"\ndef flip_case(string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_flip_case\n\
  \    candidate = method(:flip_case)\n    assert_equal(\"\", candidate.call(\"\"\
  ))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"))\n    assert_equal(\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"These violent delights\
  \ have violent ends\"))\n  end\nend\n"
completions: ["  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.gsub(/./) { |c| c.upcase == c.downcase ? c.downcase : c.upcase\
    \ }\nend\n</code>\n<|/ a tags=ruby,string |>\n<| a dscore=0 |>\n<code>", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/) { |c| c.upcase }\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/) { |c| c.upcase }.gsub(/[A-Z]/)\
    \ { |c| c.downcase }\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.gsub(/[a-z]/) { |char| char.upcase }\n  string.gsub(/[A-Z]/) {\
    \ |char| char.downcase }\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/)\
    \ { |char| char.upcase }\n  string.gsub(/[A-Z]/) { |char| char.downcase }\nend",
  "  string.gsub(/[a-z]/) { |char| char.upcase }\n  string.gsub(/[A-Z]/) { |char|\
    \ char.downcase }\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for strings\
    \ with multiple uppercase letters.\n<|/ c |>\n<| c |>\nIt does work. Try it out\
    \ and see for yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if you have a string\
    \ like \"HelloWorld\"\n<|/ c |>\n<| c |>\nIt does work. Try it out and see for\
    \ yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if you have a string like \"HelloWorld\"\
    \n<|/ c |>\n<| a |>\n<code>", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.gsub(/./) { |c| c.upcase == c.downcase\
    \ ? c.downcase : c.upcase }\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.gsub(/[a-z]/) { |c| c.upcase }\nend", "  string.downcase!\n  string.upcase!\n\
    \  string\nend", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/./)\
    \ { |c| c.upcase == c.downcase ? c.downcase : c.upcase }\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/)\
    \ do |char|\n    char.upcase + char.downcase\n  end\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/) { |char| char.upcase\
    \ }\n  string.gsub(/[A-Z]/) { |char| char.downcase }\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/./)\
    \ { |c| c.upcase == c.downcase ? c.downcase : c.upcase }\nend\n</code>\n<|/ a\
    \ tags=ruby |>\n<| c |>\n`string.gsub(/./) { |c| c.upcase == c.downcase ? c.downcase\
    \ : c.upcase }` can be written as `string.gsub(/./).map(&:upcase)`\n<|/ c |>\n\
    <| c |>\nI like that one. Thanks.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/./)\
    \ do |char|\n    char.upcase == char.downcase ? char.downcase : char.upcase\n\
    \  end\nend", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/[a-z]/)\
    \ { |char| char.upcase }\n  string.gsub(/[A-Z]/) { |char| char.downcase }\nend",
  "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n\
    \  string\nend", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.gsub(/[a-z]/) { |c| c.upcase }\n  string.gsub(/[A-Z]/) { |c| c.downcase\
    \ }\nend", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.gsub(/./)\
    \ { |c| c.upcase == c.downcase ? c.downcase : c.upcase }\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end", "  string.downcase!\n  string.upcase!\n  string\nend", "  string.downcase!\n\
    \  string.upcase!\n  string\nend", "  string.downcase!\n  string.upcase!\n  string\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_122_add_elements
language: rust
prompt: "/// Given a non-empty array of integers arr and an integer k, return\n///\
  \ the sum of the elements with at most two digits from the first k elements of arr.\n\
  /// Example:\n/// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n/// Output: 24\
  \ # sum of 21 + 3\n/// Constraints:\n/// 1. 1 <= len(arr) <= 100\n/// 2. 1 <= k\
  \ <= len(arr)\nfn add_elements(arr: Vec<isize>, k: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = add_elements;\n    assert_eq!(candidate(vec![1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99], 3), -4);\n    assert_eq!(candidate(vec![111,\
  \ 121, 3, 4000, 5, 6], 2), 0);\n    assert_eq!(candidate(vec![11, 21, 3, 90, 5,\
  \ 6, 7, 8, 9], 4), 125);\n    assert_eq!(candidate(vec![111, 21, 3, 4000, 5, 6,\
  \ 7, 8, 9], 4), 24);\n    assert_eq!(candidate(vec![1], 1), 1);\n}\n"
completions: ["    let mut sum = 0;\n    for (i, x) in arr.iter().enumerate() {\n\
    \        if x >= &100 {\n            break;\n        }\n        sum += x;\n  \
    \      if i as isize == k - 1 {\n            break;\n        }\n    }\n    sum",
  "    arr.iter().take(k as usize).map(|x| {\n        if *x < 100 {\n            *x\n\
    \        } else {\n            (x / 100) % 10 + x % 10\n        }\n    }).sum()",
  "    let mut sum = 0;\n    for n in arr {\n        if n < 10 || n < 100 {\n    \
    \        sum += n;\n        }\n        if k == 0 {\n            break;\n     \
    \   }\n        k -= 1;\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        if arr[i as usize] < 100 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    arr.iter().take(k as usize).map(|x| {\n    \
    \    let mut tmp = *x;\n        let mut res = 0;\n        for _ in 0..2 {\n  \
    \          res += tmp % 10;\n            tmp /= 10;\n        }\n        res\n\
    \    }).sum()", '    arr.iter().take(k as usize).filter(|e| e < &100).sum()',
  "    let mut count = 0;\n    let mut result = 0;\n    for a in arr {\n        if\
    \ a >= 0 && a < 100 {\n            count += 1;\n            result += a;\n   \
    \     }\n        if count == k {\n            break;\n        }\n    }\n    result",
  "    let mut result = 0;\n    for i in 0..k {\n        let number = arr[i as usize];\n\
    \        if number <= 99 {\n            result += number;\n        }\n    }\n\
    \    result", '    arr.iter().take(k as usize).filter(|&x| x > &9 && x < &100).sum()',
  "    // Sort the array descending.\n    let mut array = arr.to_vec();\n    array.sort_by(|a,\
    \ b| b.cmp(a));\n    // PrintSortedArray(array);\n    let mut sum = 0;\n    for\
    \ i in 0..k {\n        let mut arr_element = array[i as usize];\n        if arr_element\
    \ < 10 {\n            sum += arr_element;\n        } else if arr_element < 100\
    \ {\n            sum += arr_element % 10;\n            sum += arr_element / 10;\n\
    \        } else {\n            sum += arr_element % 10;\n            sum += arr_element\
    \ / 10 % 10;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for i in\
    \ 0..k {\n        let n = arr[i as usize];\n        if n <= 99 {\n           \
    \ sum += n;\n        }\n    }\n    sum", "    let mut s = 0;\n    for i in 0..k\
    \ {\n        let x = arr[i as usize];\n        if x < 100 {\n            s +=\
    \ x;\n        }\n    }\n    s", "    if k <= 0 {\n        return 0;\n    }\n \
    \   let mut sum = 0;\n    for i in 0..k {\n        if arr[i as usize] < 100 {\n\
    \            sum += arr[i as usize];\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).filter(|n| *n < 100).sum()', "    let mut sum = 0;\n    for a in arr.iter().take(k\
    \ as usize) {\n        if (a.abs() / 10) < 1 {\n            sum += a;\n      \
    \  }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n        if\
    \ arr[i as usize] < 100 {\n            sum += arr[i as usize];\n        }\n  \
    \  }\n    sum", "    let mut digits = Vec::with_capacity(k as usize);\n    let\
    \ mut sum = 0;\n    for i in 0..k {\n        digits.push(arr[i as usize]);\n \
    \       sum += digits[i as usize];\n    }\n    for i in k..arr.len() as isize\
    \ {\n        digits.push(arr[i as usize]);\n        sum += digits[i as usize];\n\
    \        let min = digits.iter().min().unwrap();\n        let min_pos = digits.iter().position(|x|\
    \ x == min).unwrap();\n        sum -= digits[min_pos];\n        digits.remove(min_pos);\n\
    \    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n        if arr[i\
    \ as usize] > 99 {\n            sum += arr[i as usize] / 100 + (arr[i as usize]\
    \ / 10) % 10;\n        } else {\n            sum += arr[i as usize];\n       \
    \ }\n    }\n    sum", "    let mut i = 0;\n    let mut sum = 0;\n    while i <\
    \ k && i < arr.len() as isize {\n        let elem = arr[i as usize];\n       \
    \ if elem < 100 {\n            sum += elem;\n        }\n        i += 1;\n    }\n\
    \    sum", "    let mut result = 0;\n    for i in 0..k {\n        let str_num\
    \ = arr[i as usize].to_string();\n        if str_num.len() < 3 {\n           \
    \ result += arr[i as usize];\n        }\n    }\n    result", "    let mut sum\
    \ = 0;\n    for i in 0..k {\n        let num = arr[i as usize];\n        if num\
    \ < 100 {\n            sum += num;\n        }\n    }\n    sum", "    let mut result\
    \ = 0;\n    for i in 0..k {\n        let x = arr[i as usize];\n        if x <\
    \ 10 {\n            result += x;\n        } else if x < 100 {\n            result\
    \ += x / 10 + x % 10;\n        } else {\n            result += 3;\n        }\n\
    \    }\n    result", "    let mut sum = 0;\n    for i in 0..k {\n        let n\
    \ = arr[i as usize];\n        if n >= 100 {\n            continue;\n        }\n\
    \        sum += n;\n    }\n    sum", "    let mut result = 0;\n    for i in 0..k\
    \ {\n        let number = arr[i as usize];\n        if number < 100 {\n      \
    \      result += number;\n        }\n    }\n    result", "    let mut ret = 0;\n\
    \    for n in arr.iter().take(k as usize) {\n        if *n < 100 {\n         \
    \   ret += *n;\n        }\n    }\n    ret", "    let mut count = 0;\n    let mut\
    \ ret = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 99 {\n          \
    \  continue;\n        } else {\n            ret += arr[i];\n            count\
    \ += 1;\n            if count == k {\n                break;\n            }\n\
    \        }\n    }\n    ret", '    return arr.iter().take(k as usize).map(|&x|
    if x < 100 { x } else { 0 }).sum();', "    let mut result = 0;\n    for i in 0..k\
    \ {\n        let elem = arr[i as usize];\n        if elem < 100 {\n          \
    \  result += elem;\n        }\n    }\n    result", '    arr.iter().take(k as usize).filter(|&x|
    x.abs() <= 99).sum()', "    let mut result = 0;\n    for x in arr.iter().take(k\
    \ as usize) {\n        if *x < 100 {\n            result += *x;\n        }\n \
    \   }\n    result", "    // \u65B9\u6CD51\n    // let mut res = 0;\n    // for\
    \ i in 0..k {\n    //     if arr[i as usize] <= 99 {\n    //         res += arr[i\
    \ as usize];\n    //     }\n    // }\n    // res\n\n    // \u65B9\u6CD52\n   \
    \ arr.iter().take(k as usize).filter(|&x| *x <= 99).sum()", "    let mut sum =\
    \ 0;\n    for i in 0..k {\n        if arr[i as usize] < 100 {\n            sum\
    \ += arr[i as usize];\n        }\n    }\n    sum", "    // Initialize result\n\
    \    let mut result = 0;\n\n    // Traverse given array\n    for i in 0..k {\n\
    \        // If current element is less than 10\n        // then add it to result\n\
    \        if arr[i as usize] < 10 {\n            result += arr[i as usize];\n \
    \       }\n\n        // Else If first digit is 1\n        // then add last digit\
    \ to result\n        else if arr[i as usize] / 10 == 1 {\n            result +=\
    \ arr[i as usize] % 10;\n        }\n    }\n\n    // Return result\n    result",
  "    let limit = 10;\n\n    let mut sum = 0;\n    for i in 0..k {\n        let num\
    \ = arr[i as usize];\n        if num > limit {\n            sum += num % limit;\n\
    \        } else {\n            sum += num;\n        }\n    }\n\n    sum", "  \
    \  let mut answer = 0;\n    for i in 0..k {\n        if arr[i as usize] < 100\
    \ {\n            answer += arr[i as usize];\n        }\n    }\n    answer", " \
    \   let mut sum = 0;\n    for (i, a) in arr.iter().enumerate() {\n        if a\
    \ < 100 {\n            sum += a;\n        }\n        if i as isize >= k {\n  \
    \          break;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i as\
    \ usize];\n        }\n    }\n    sum", '    arr.iter().map(|x| *x as i32).take(k
    as usize).map(|x| if x < 100 { x } else { 0 }).sum()', "    let mut sum = 0;\n\
    \    for e in arr.iter().take(k as usize) {\n        if *e > 99 {\n          \
    \  sum += 99;\n        } else {\n            sum += *e;\n        }\n    }\n  \
    \  sum", '    arr.iter().take(k as usize).filter(|&x| *x >= 10 && *x < 100).sum()',
  "    let mut sum = 0;\n    for i in 0..k {\n        let num = arr[i as usize];\n\
    \        if num < 10 {\n            sum += num;\n        } else if num < 100 {\n\
    \            sum += num / 10 + num % 10;\n        } else {\n            sum +=\
    \ 1;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for &n in arr.iter().take(k\
    \ as usize) {\n        if n >= 10 && n < 100 {\n            sum += n;\n      \
    \  }\n    }\n    sum", "    let n = arr.len();\n    let mut sum = 0;\n    for\
    \ i in 0..n {\n        if arr[i] < 100 {\n            sum += arr[i];\n       \
    \     k -= 1;\n            if k == 0 {\n                break;\n            }\n\
    \        }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n    \
    \    let n = arr[i as usize];\n        if n < 10 {\n            sum += n;\n  \
    \      } else if n < 100 {\n            sum += n / 10 + n % 10;\n        } else\
    \ {\n            sum += n / 100 + (n % 100) / 10 + n % 10;\n        }\n    }\n\
    \    sum", "    let mut sum = 0;\n    for i in 0..k {\n        let num = arr[i\
    \ as usize];\n        if (num / 10) == 0 {\n            sum += num;\n        }\
    \ else if (num / 100) == 0 {\n            sum += num;\n        }\n    }\n    sum",
  "    let mut sum = 0;\n    for (i, n) in arr.iter().enumerate() {\n        if i\
    \ >= k as usize {\n            break;\n        }\n        if n < 10 {\n      \
    \      sum += n;\n        } else if n < 100 {\n            sum += n / 10 + n %\
    \ 10;\n        } else {\n            sum += 1;\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).filter(|&i| i < 100).sum()', "    let arr: Vec<_> = arr.into_iter().filter(|x|\
    \ x < &100).collect();\n    let mut k = k as usize;\n    let mut sum = 0;\n  \
    \  for &elem in arr.iter() {\n        if k > 0 {\n            sum += elem;\n \
    \           k -= 1;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..arr.len() {\n        if i == k as usize {\n            break;\n    \
    \    }\n        if arr[i] > 99 {\n            continue;\n        }\n        sum\
    \ += arr[i];\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n  \
    \      let mut x = arr[i as usize];\n        while x > 9 {\n            x /= 10;\n\
    \        }\n        sum += x;\n    }\n    sum", "    let mut result = 0;\n   \
    \ for num in arr.iter().take(k as usize) {\n        if *num < 100 {\n        \
    \    result += *num;\n        }\n    }\n    result", "    let mut res = 0;\n \
    \   for elem in arr {\n        if elem <= 99 {\n            res += elem;\n   \
    \     }\n        if k == 0 {\n            break;\n        }\n        k -= 1;\n\
    \    }\n    res", "    let mut res = 0;\n    for &x in arr.iter().take(k as usize)\
    \ {\n        if x > 99 {\n            res += 99;\n        } else {\n         \
    \   res += x;\n        }\n    }\n    res", "    if k < 1 {\n        return 0;\n\
    \    }\n    let mut sum = 0;\n    for &elem in arr.iter().take(k as usize) {\n\
    \        if elem > 99 {\n            continue;\n        }\n        sum += elem;\n\
    \    }\n    sum", "    // # Show me the code!\n    let mut sum = 0;\n    for i\
    \ in 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    // #1\n    // let mut res = 0;\n    // for i\
    \ in 0..k {\n    //     let mut num = arr[i as usize];\n    //     while num >\
    \ 10 {\n    //         num /= 10;\n    //     }\n    //     res += num;\n    //\
    \ }\n    // res\n\n    // #2\n    arr.iter().take(k as usize).map(|&x| x % 100).sum()",
  "    let mut sum = 0;\n    for i in 0..k {\n        let mut num = arr[i as usize];\n\
    \        while num > 99 {\n            num /= 10;\n        }\n        sum += num;\n\
    \    }\n    sum", "    arr.iter().map(|n| {\n        let s = n.to_string();\n\
    \        if s.len() > 2 {\n            s[..2].parse::<isize>().unwrap()\n    \
    \    } else {\n            *n\n        }\n    }).take(k as usize).sum()", "  \
    \  let k = min(k, arr.len() as isize);\n    let mut sum = 0;\n    for i in 0..k\
    \ {\n        if arr[i as usize] < 100 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..arr.len()\
    \ {\n        if i > k as usize {\n            break;\n        }\n        if arr[i]\
    \ < 100 {\n            sum += arr[i];\n        }\n    }\n    sum", "    let mut\
    \ sum = 0;\n    for (i, &v) in arr.iter().enumerate() {\n        if i == k as\
    \ usize {\n            break;\n        }\n        if v >= 0 && v < 100 {\n   \
    \         sum += v;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..k {\n        let mut x = arr[i as usize];\n        let mut count = 0;\n\
    \        while x > 0 {\n            count += 1;\n            x /= 10;\n      \
    \  }\n        if count <= 2 {\n            sum += arr[i as usize];\n        }\n\
    \    }\n    sum", "    let mut count = 0;\n    let mut sum = 0;\n    for i in\
    \ 0..arr.len() {\n        if count < k {\n            if arr[i] < 100 {\n    \
    \            sum += arr[i];\n                count += 1;\n            }\n    \
    \    } else {\n            break;\n        }\n    }\n    sum", "    let mut sum\
    \ = 0;\n    for i in 0..k {\n        if arr[i as usize] < 10 {\n            sum\
    \ += arr[i as usize];\n        } else if arr[i as usize] < 100 {\n           \
    \ sum += arr[i as usize] % 10;\n            sum += arr[i as usize] / 10;\n   \
    \     } else {\n            sum += arr[i as usize] % 10;\n            sum += arr[i\
    \ as usize] / 10 % 10;\n        }\n    }\n    sum", "    let mut sum = 0;\n  \
    \  for i in 0..k {\n        let val = arr[i as usize];\n        if val > 99 {\n\
    \            continue;\n        } else {\n            sum += val;\n        }\n\
    \    }\n    sum", '    arr.iter().take(k as usize).map(|&x| x.abs() % 100).sum()',
  "    let mut arr = arr;\n    arr.sort();\n    arr.iter().take(k as usize).filter(|x|\
    \ *x < 100).sum()", "    let mut arr = arr;\n    arr.sort();\n    let mut res\
    \ = 0;\n    for i in 0..k {\n        if arr[i as usize] < 100 {\n            res\
    \ += arr[i as usize];\n        }\n    }\n    res", "    let mut sum = 0;\n   \
    \ for i in 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i\
    \ as usize];\n        }\n    }\n    sum", "    let mut res = 0;\n    for i in\
    \ 0..k {\n        if arr[i as usize] >= 10 && arr[i as usize] < 100 {\n      \
    \      res += arr[i as usize];\n        }\n    }\n    res", "    // Pre-calculate\
    \ the digits needed\n    let mut digits_needed = vec![0; 100];\n    for i in 1..=9\
    \ {\n        digits_needed[i] = 1;\n    }\n    for i in 10..=99 {\n        digits_needed[i]\
    \ = 2;\n    }\n\n    // Calculate the sum of digits with at most two digits\n\
    \    let mut sum = 0;\n    for i in 0..k {\n        sum += arr[i as usize] % 100;\n\
    \    }\n\n    // Adjust the sum for numbers with three digits\n    for i in k..arr.len()\
    \ as isize {\n        sum += digits_needed[arr[i as usize] % 100];\n    }\n\n\
    \    // Return the adjusted sum\n    sum", "    let mut result = 0;\n    for i\
    \ in 0..k {\n        if arr[i as usize] > 99 {\n            continue;\n      \
    \  } else {\n            result += arr[i as usize];\n        }\n    }\n    result",
  "    let mut sum = 0;\n    for i in 0..k {\n        let n = arr[i as usize];\n \
    \       if n < 10 {\n            sum += n;\n        } else if n < 100 {\n    \
    \        sum += n;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..k {\n        let arr_i = arr[i as usize];\n        if arr_i >= 10 &&\
    \ arr_i < 100 {\n            sum += arr_i;\n        }\n    }\n    sum", "    let\
    \ mut result = 0;\n    for (i, &x) in arr.iter().enumerate() {\n        if i >=\
    \ k as usize {\n            break;\n        }\n        if x < 100 {\n        \
    \    result += x;\n        }\n    }\n    result", '    arr.iter().take(k as usize).filter(|&&x|
    x < 100).sum()', "    let mut sum = 0;\n    for i in 0..k {\n        if arr[i\
    \ as usize] > 9 && arr[i as usize] < 100 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    if k <= 0 {\n        return 0;\n    }\n    let\
    \ mut result = 0;\n    for &num in arr.iter().take(k as usize) {\n        if num\
    \ < 100 {\n            result += num;\n        }\n    }\n    result", "    let\
    \ mut sum = 0;\n    for a in arr {\n        if a < 100 {\n            sum += a;\n\
    \        }\n        if sum >= k {\n            break;\n        }\n    }\n    sum",
  "    let mut result = 0;\n    for (i, &n) in arr.iter().enumerate() {\n        if\
    \ i >= k as usize {\n            break;\n        }\n        if n < 100 {\n   \
    \         result += n;\n        }\n    }\n    result", "    let mut n = 0;\n \
    \   for i in 0..k {\n        if arr[i as usize] < 100 {\n            n += arr[i\
    \ as usize];\n        }\n    }\n    n", "    let mut vec = arr;\n    vec.sort();\n\
    \    vec.truncate(k as usize);\n    vec.iter().filter(|x| x < &&100).sum()", " \
    \   let mut sum = 0;\n    for i in 0..k {\n        if arr[i as usize] <= 99 {\n\
    \            sum += arr[i as usize];\n        }\n    }\n    sum", "    let mut\
    \ i = 0;\n    let mut sum = 0;\n    for elem in arr {\n        if elem <= 99 {\n\
    \            sum += elem;\n            i += 1;\n        } else if i < k {\n  \
    \          sum += elem / 100;\n            i += 1;\n        } else {\n       \
    \     break;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for x in\
    \ arr.iter().take(k as usize) {\n        if *x < 10 {\n            sum += x;\n\
    \        } else if *x < 100 {\n            sum += x / 10 + x % 10;\n        }\
    \ else {\n            sum += *x / 100 + (*x % 100) / 10 + *x % 10;\n        }\n\
    \    }\n    sum", "    let mut cnt = 0;\n    let mut sum = 0;\n    for i in 0..arr.len()\
    \ {\n        let n = arr[i];\n        if n < 10 {\n            sum += n;\n   \
    \         cnt += 1;\n        } else if n < 100 {\n            sum += n;\n    \
    \        cnt += 2;\n        } else {\n            sum += n;\n            cnt +=\
    \ 3;\n        }\n        if cnt >= k {\n            break;\n        }\n    }\n\
    \    if cnt > k {\n        sum -= 10 * (cnt - k);\n    }\n    sum", "    let mut\
    \ sum = 0;\n    for (i, elem) in arr.iter().enumerate() {\n        if i >= k as\
    \ usize {\n            break;\n        }\n        if elem.abs() < 100 {\n    \
    \        sum += elem;\n        }\n    }\n    sum", "    let mut sum = 0;\n   \
    \ for (i, x) in arr.iter().enumerate() {\n        if i < k as usize && (x > &99\
    \ || x < &-99) {\n            continue;\n        }\n        sum += x;\n    }\n\
    \    sum", "    let mut count = 0;\n    let mut sum = 0;\n    for i in 0..arr.len()\
    \ {\n        let val = arr[i];\n        let digits = val.to_string().len();\n\
    \        if digits <= 2 {\n            sum += val;\n            count += 1;\n\
    \        }\n        if count == k {\n            break;\n        }\n    }\n  \
    \  sum", '    arr.iter().take(k as usize).filter(|&x| *x > 9 && *x < 100).sum()',
  "    let mut k = k as usize;\n    let mut sum = 0;\n    for n in arr {\n       \
    \ if k == 0 {\n            break;\n        }\n        if n < 100 {\n         \
    \   sum += n;\n        }\n        k -= 1;\n    }\n    sum", "    let mut sum =\
    \ 0;\n    for i in 0..k {\n        let num = arr[i as usize];\n        if num\
    \ >= 100 {\n            sum += num / 100;\n        } else if num >= 10 {\n   \
    \         sum += num / 10;\n        } else {\n            sum += num;\n      \
    \  }\n    }\n    sum", "    let mut result = 0;\n    for i in 0..k {\n       \
    \ let n = arr[i as usize];\n        if n > 99 {\n            continue;\n     \
    \   }\n        result += n;\n    }\n    result", "    let mut count = 0;\n   \
    \ let mut result = 0;\n    for i in 0..arr.len() {\n        let mut num = arr[i];\n\
    \        while num > 0 {\n            count += 1;\n            num /= 10;\n  \
    \      }\n        if count <= 2 {\n            result += arr[i];\n        }\n\
    \        count = 0;\n        if i >= k as usize - 1 {\n            break;\n  \
    \      }\n    }\n    result", "    let mut sum = 0;\n    for i in 0..k {\n   \
    \     let num = arr[i as usize];\n        if num < 10 {\n            sum += num;\n\
    \        } else if num < 100 {\n            sum += num;\n        }\n    }\n  \
    \  sum", "    let mut sum = 0;\n    for x in arr {\n        if x < 10 || x < 100\
    \ {\n            sum += x;\n        }\n        if k == 0 {\n            break;\n\
    \        }\n        k -= 1;\n    }\n    sum", "    let mut sum = 0;\n    for i\
    \ in 0..k {\n        let digits = arr[i as usize]\n            .to_string()\n\
    \            .len();\n        if digits <= 2 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    let mut sum = 0;\n    for a in arr {\n     \
    \   if a < 10 || a < 100 {\n            sum += a;\n        }\n        if k ==\
    \ 0 {\n            break;\n        }\n        k -= 1;\n    }\n    sum", "    let\
    \ mut sum = 0;\n    for elem in arr.iter().take(k as usize) {\n        if *elem\
    \ >= 100 {\n            sum += *elem % 100;\n        } else {\n            sum\
    \ += *elem;\n        }\n    }\n    sum", "    let two_digits = |x: isize| x >=\
    \ 10 && x < 100;\n    arr.iter().take(k as usize).filter(|&x| two_digits(*x)).sum()",
  '    arr.iter().take(k as usize).map(|x| x % 100).sum()', "    let mut result =\
    \ 0;\n    for (i, x) in arr.iter().enumerate() {\n        if i >= k as usize {\n\
    \            break;\n        }\n\n        if x < 100 {\n            result +=\
    \ x;\n        }\n    }\n\n    result", "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        let item = arr[i as usize];\n        if item < 100 {\n          \
    \  sum += item;\n        }\n    }\n    sum", '    arr.iter().take(k as usize).map(|&n|
    if n < 100 { n } else { 0 }).sum()', "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        let num = arr[i as usize];\n        if num < 100 {\n            sum\
    \ += num;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        let n = arr[i as usize];\n        if n >= 0 && n < 10 {\n       \
    \     sum += n;\n        } else if n >= 10 && n < 100 {\n            sum += n;\n\
    \        }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n    \
    \    let num = arr[i as usize];\n        if num >= 100 {\n            continue;\n\
    \        }\n        sum += num;\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i as\
    \ usize];\n        }\n    }\n    sum", "    let mut ans = 0;\n    for i in 0..std::cmp::min(k,\
    \ arr.len() as isize) {\n        if arr[i as usize] <= 99 {\n            ans +=\
    \ arr[i as usize];\n        }\n    }\n    ans", "    let result = arr\n      \
    \  .iter()\n        .take(k as usize)\n        .filter(|&n| n < &100)\n      \
    \  .sum();\n    result", "    let mut sum = 0;\n    for i in 0..k {\n        let\
    \ val = arr[i as usize];\n        if val < 100 {\n            sum += val;\n  \
    \      }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n      \
    \  if arr[i as usize] <= 99 {\n            sum += arr[i as usize];\n        }\n\
    \    }\n    sum", "    let mut sum = 0;\n    for i in 0..(k as usize) {\n    \
    \    if arr[i] < 100 {\n            sum += arr[i];\n        }\n    }\n    sum",
  "    let mut sum = 0;\n    for i in 0..k {\n        let num = arr[i as usize];\n\
    \        if num >= 0 && num < 10 {\n            sum += num;\n        } else if\
    \ num >= 10 && num < 100 {\n            sum += num;\n        }\n    }\n    sum",
  "    let mut i = 0;\n    let mut sum = 0;\n    while i < k && i < arr.len() as isize\
    \ {\n        if arr[i as usize] > 9 && arr[i as usize] < 100 {\n            sum\
    \ += arr[i as usize];\n        }\n        i += 1;\n    }\n    sum", "    let mut\
    \ sum = 0;\n    for (i, n) in arr.iter().enumerate() {\n        if i >= k as usize\
    \ {\n            break;\n        }\n        if n < 10 {\n            sum += n;\n\
    \        } else if n < 100 {\n            sum += n;\n        }\n    }\n    sum",
  "    // 36ms, 2.5MB\n    let mut sum = 0;\n    for i in 0..k {\n        if (arr[i\
    \ as usize] as f64).log10() as usize <= 1 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    // Edge case\n    if arr.len() == 0 {\n    \
    \    return 0;\n    }\n\n    let mut result = 0;\n    let mut count = 0;\n   \
    \ let mut i = 0;\n\n    while count < k {\n        // Only add the element if\
    \ it has 2 or less digits\n        if arr[i] >= 10 && arr[i] < 100 {\n       \
    \     result += arr[i];\n            count += 1;\n        }\n        i += 1;\n\
    \    }\n\n    result", "    // # 0, 1, 2 -> [0, 99]\n    let mut sum = 0;\n  \
    \  for i in 0..k {\n        let val = arr[i as usize];\n        if val >= 0 &&\
    \ val <= 99 {\n            sum += val;\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).map(|&x| if x < 100 { x } else { 0 }).sum()', "    let mut sum = 0;\n\
    \    for i in 0..k {\n        let current = arr[i as usize];\n        if current\
    \ < 10 {\n            sum += current;\n        } else if current < 100 {\n   \
    \         sum += current / 10 + current % 10;\n        } else {\n            sum\
    \ += 3;\n        }\n    }\n    sum", '    arr.iter().take(k as usize).map(|&x|
    x.abs() / 10 + x.abs() % 10).sum()', "    let mut result = 0;\n    for i in 0..k\
    \ {\n        let n = arr[i as usize];\n        if n < 10 {\n            result\
    \ += n;\n        } else if n < 100 {\n            result += n / 10 + n % 10;\n\
    \        } else {\n            result += (n / 100) * 10 + (n / 10) % 10 + n %\
    \ 10;\n        }\n    }\n    result", "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        let n = arr[i as usize];\n        if n > 99 {\n            sum +=\
    \ n % 100;\n        } else {\n            sum += n;\n        }\n    }\n    sum",
  "    arr.iter().enumerate().fold(0, |mut acc, (i, &x)| {\n        if i > k as usize\
    \ {\n            return acc;\n        }\n        if x < 100 {\n            acc\
    \ += x;\n        }\n        acc\n    })", "    let mut result = 0;\n    for i\
    \ in 0..arr.len() {\n        if arr[i] >= 0 && arr[i] < 100 {\n            result\
    \ += arr[i];\n        }\n        if i as isize == k - 1 {\n            break;\n\
    \        }\n    }\n    result", "    let mut sum = 0;\n    for &n in arr.iter().take(k\
    \ as usize) {\n        if n < 100 {\n            sum += n;\n        }\n    }\n\
    \    sum", "    // we can do this using a two pass approach, first get the items\n\
    \    // we need to add, then sum them\n    // this takes O(n) time, but lets do\
    \ it with a one pass approach\n    // to save memory\n    let mut sum = 0;\n \
    \   let mut added = 0;\n    for i in 0..arr.len() {\n        let current = arr[i];\n\
    \        // if the current element is not valid, continue\n        if current\
    \ <= 0 || current >= 100 {\n            continue;\n        }\n        // otherwise,\
    \ add it\n        sum += current;\n        added += 1;\n        // if we have\
    \ added all the elements we need, return the answer\n        if added == k {\n\
    \            return sum;\n        }\n    }\n    // if we have not added enough\
    \ items, we just return the sum\n    sum", "    let mut res = 0;\n    for i in\
    \ 0..k {\n        let num = arr[i as usize];\n        if num < 10 {\n        \
    \    res += num;\n        } else if num < 100 {\n            res += num / 10 +\
    \ num % 10;\n        } else {\n            res += (num / 100) + (num / 10 % 10)\
    \ + (num % 10);\n        }\n    }\n    res", "    let mut sum = 0;\n    for i\
    \ in 0..k {\n        let mut n = arr[i as usize];\n        let mut len = 0;\n\
    \        while n > 0 {\n            n /= 10;\n            len += 1;\n        }\n\
    \        if len <= 2 {\n            sum += arr[i as usize];\n        }\n    }\n\
    \    sum", '    arr.iter().take(k as usize).filter(|&x| x < 100).sum()', "   \
    \ let mut sum = 0;\n    for i in 0..k {\n        let digit_1 = arr[i as usize]\
    \ / 10;\n        let digit_2 = arr[i as usize] % 10;\n        if digit_1 != 0\
    \ {\n            sum += digit_1;\n        }\n        if digit_2 != 0 {\n     \
    \       sum += digit_2;\n        }\n    }\n    sum", "    let mut result = 0;\n\
    \    for i in 0..k {\n        let s = arr[i as usize].to_string();\n        let\
    \ length = s.len();\n        if length <= 2 {\n            result += arr[i as\
    \ usize];\n        }\n    }\n    result", "    let mut sum = 0;\n    for i in\
    \ 0..arr.len() {\n        if i >= k as usize {\n            break;\n        }\n\
    \        if arr[i] < 10 {\n            sum += arr[i];\n        } else if arr[i]\
    \ < 100 {\n            sum += arr[i];\n        }\n    }\n    sum", "    let mut\
    \ sum = 0;\n    for x in 0..k {\n        let v = arr[x as usize];\n        if\
    \ v < 100 {\n            sum += v;\n        }\n    }\n    sum", "    let mut total\
    \ = 0;\n    for i in 0..k {\n        let s = arr[i as usize].to_string();\n  \
    \      if s.len() == 1 || s.len() == 2 {\n            total += arr[i as usize];\n\
    \        }\n    }\n    total", "    let mut sum = 0;\n    for i in 0..k {\n  \
    \      let n = arr[i as usize];\n        if n < 10 {\n            sum += n;\n\
    \        } else if n < 100 {\n            sum += n % 10 + n / 10;\n        } else\
    \ {\n            sum += 1;\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).filter(|&x| *x < 100).sum()', "    let mut sum = 0;\n    for i in 0..k\
    \ {\n        let current = arr[i as usize];\n        if current < 10 {\n     \
    \       sum += current;\n        } else if current < 100 {\n            sum +=\
    \ current;\n        }\n    }\n    sum", '    arr.iter().take(k as usize).filter(|&x|
    x > &99).sum()', "    let mut s = 0;\n    for x in arr.iter().take(k as usize)\
    \ {\n        if x < 100 {\n            s += x;\n        }\n    }\n    s", "  \
    \  let mut sum = 0;\n    for i in 0..k {\n        if arr[i as usize] >= 100 {\n\
    \            continue;\n        }\n        sum += arr[i as usize];\n    }\n  \
    \  sum", "    let mut sum = 0;\n    for num in arr {\n        if num.to_string().len()\
    \ <= 2 {\n            sum += num;\n        }\n        k -= 1;\n        if k ==\
    \ 0 {\n            break;\n        }\n    }\n    sum", "    let mut sum = 0;\n\
    \    for i in 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i\
    \ as usize];\n        }\n    }\n    sum", "    let mut sum = 0;\n    for i in\
    \ 0..k {\n        if arr[i as usize] < 100 {\n            sum += arr[i as usize];\n\
    \        }\n    }\n    sum", "    let mut k = k as usize;\n    let mut sum = 0;\n\
    \    for i in 0..arr.len() {\n        if k == 0 {\n            break;\n      \
    \  }\n        if arr[i] >= 0 && arr[i] < 100 {\n            sum += arr[i];\n \
    \           k -= 1;\n        }\n    }\n    sum", "    let mut sum = 0;\n    for\
    \ i in 0..k {\n        let n = arr[i as usize];\n        if n < 10 {\n       \
    \     sum += n;\n        } else if n < 100 {\n            sum += n % 10 + n /\
    \ 10;\n        } else {\n            sum += n % 10 + n / 10 % 10 + n / 100;\n\
    \        }\n    }\n    sum", "    arr.iter().take(k as usize).filter(|x| {\n \
    \       let s = x.to_string();\n        s.len() < 3\n    }).sum()", "    let mut\
    \ sum = 0;\n    for i in 0..k {\n        let n = arr[i as usize];\n        if\
    \ n < 10 {\n            sum += n;\n        } else if n < 100 {\n            sum\
    \ += n / 10 + n % 10;\n        } else {\n            sum += n / 100 + (n % 100)\
    \ / 10 + n % 10;\n        }\n    }\n    sum", '    arr.iter().take(k as usize).map(|&x|
    x / 10 + x % 10).sum()', "    let mut two_digits = false;\n    let mut sum = 0;\n\
    \    for i in 0..arr.len() {\n        if i >= k as usize {\n            break;\n\
    \        }\n        if arr[i] >= 100 {\n            two_digits = true;\n     \
    \   }\n        if arr[i] >= 10 && arr[i] < 100 {\n            sum += arr[i];\n\
    \        }\n    }\n    if two_digits {\n        sum\n    } else {\n        0\n\
    \    }", "    arr.iter().take(k as usize).map(|x| {\n        if *x < 100 {\n \
    \           *x\n        } else {\n            *x / 100 + (*x % 100) / 10\n   \
    \     }\n    }).sum()", "    let mut arr = arr;\n    arr.sort();\n    arr.truncate(k\
    \ as usize);\n    arr.iter().filter(|&e| e < &100).sum()", "    let mut result\
    \ = 0;\n    for i in 0..k {\n        if arr[i as usize] > 9 && arr[i as usize]\
    \ < 100 {\n            result += arr[i as usize];\n        }\n    }\n    result",
  '    arr.iter().take(k as usize).map(|&x| x.abs()).filter(|&x| x < 100).sum()',
  "    let mut sum = 0;\n    for num in arr.iter().take(k as usize) {\n        if\
    \ num < &100 {\n            sum += num;\n        }\n    }\n    sum", "    let\
    \ mut ans = 0;\n    for i in 0..k {\n        let a = arr[i as usize];\n      \
    \  if a < 10 {\n            ans += a;\n        } else if a < 100 {\n         \
    \   ans += a / 10 + a % 10;\n        } else {\n            ans += 1;\n       \
    \ }\n    }\n    ans", "    let mut sum = 0;\n    for i in 0..k {\n        let\
    \ x = arr[i as usize];\n        if x < 10 {\n            sum += x;\n        }\
    \ else if x < 100 {\n            sum += x;\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).filter(|&x| x < &100).sum()', "    // TODO - add your code here!\n \
    \   unimplemented!()", "    let mut result = 0;\n    for i in 0..k {\n       \
    \ if arr[i as usize] >= 10 && arr[i as usize] < 100 {\n            result += arr[i\
    \ as usize];\n        }\n    }\n    result", "    let mut sum = 0;\n    for i\
    \ in 0..k {\n        let n = arr[i as usize];\n        if n >= 100 {\n       \
    \     sum += n / 100;\n        } else if n >= 10 {\n            sum += n / 10;\n\
    \        } else {\n            sum += n;\n        }\n    }\n    sum", "    //\
    \ Check the preconditions.\n    assert!(arr.len() > 0 && arr.len() <= 100);\n\
    \    assert!(k >= 1 && k <= arr.len() as isize);\n\n    let mut i = 0;\n    let\
    \ mut sum = 0;\n    while i < k as usize {\n        let num = arr[i];\n      \
    \  if num >= 100 {\n            i += 1;\n            continue;\n        }\n  \
    \      sum += num;\n        i += 1;\n    }\n    sum", "    arr.iter().take(k as\
    \ usize).map(|n| {\n        let mut n = *n;\n        let mut digits = 0;\n   \
    \     while n > 0 {\n            n /= 10;\n            digits += 1;\n        }\n\
    \        if digits > 2 {\n            return 0;\n        }\n        *n\n    }).sum()",
  "    let mut rv = 0;\n    for i in 0..k {\n        let str_i = arr[i as usize].to_string();\n\
    \        if str_i.len() <= 2 {\n            rv += arr[i as usize];\n        }\n\
    \    }\n    rv", "    let mut result = 0;\n    for i in 0..k {\n        let n\
    \ = arr[i as usize];\n        if n > 99 {\n            continue;\n        }\n\
    \        result += n;\n    }\n    result", "    let mut sum = 0;\n    for n in\
    \ arr.iter().take(k as usize) {\n        if *n < 100 {\n            sum += *n;\n\
    \        }\n    }\n    sum", "    let mut result = 0;\n    for i in 0..k {\n \
    \       let a = arr[i as usize];\n        if a < 100 {\n            result +=\
    \ a;\n        }\n    }\n    result", "    let mut sum = 0;\n    for i in 0..arr.len()\
    \ {\n        if arr[i] <= 99 {\n            sum += arr[i];\n        }\n      \
    \  if i + 1 == k as usize {\n            break;\n        }\n    }\n    sum", '    arr.iter().map(|n|
    n % 100).take(k as usize).sum()', "    let sum: isize = arr.iter().take(k as usize).map(|x|\
    \ if *x > 99 { 100 } else { *x }).sum();\n    sum", "    // Create a vector with\
    \ the first k elements, then find the sum\n    // of all those elements that have\
    \ <= 2 digits\n    let mut first_elements = Vec::new();\n    for (i, elem) in\
    \ arr.iter().enumerate() {\n        if i < k as usize {\n            first_elements.push(*elem);\n\
    \        }\n    }\n    first_elements.iter().filter(|&x| x.to_string().len() <=\
    \ 2).sum()", "    let mut count = 0;\n    let mut sum = 0;\n    for i in 0..arr.len()\
    \ {\n        if arr[i] < 10 {\n            count += 1;\n            sum += arr[i];\n\
    \        } else if arr[i] < 100 {\n            count += 1;\n            sum +=\
    \ arr[i];\n        }\n        if count == k {\n            break;\n        }\n\
    \    }\n    sum", "    let mut x = 0;\n    for i in 0..k {\n        let mut y\
    \ = 0;\n        let mut q = arr[i as usize];\n        while q > 0 {\n        \
    \    y += 1;\n            q /= 10;\n        }\n        if y <= 2 {\n         \
    \   x += arr[i as usize];\n        }\n    }\n    x", "    let mut result = 0;\n\
    \    for i in 0..k {\n        let mut number = arr[i as usize];\n        while\
    \ number >= 10 {\n            number /= 10;\n        }\n        result += arr[i\
    \ as usize];\n    }\n    result", "    let mut result = 0;\n    for &i in arr.iter().take(k\
    \ as usize) {\n        result += i % 100 / 10 + i % 10;\n    }\n    result", " \
    \   if k == 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in\
    \ 0..k {\n        if arr[i as usize] < 10 {\n            sum += arr[i as usize];\n\
    \        } else if arr[i as usize] < 100 {\n            sum += arr[i as usize]\
    \ % 10;\n            sum += arr[i as usize] / 10;\n        } else {\n        \
    \    sum += arr[i as usize] % 10;\n            sum += arr[i as usize] / 10 % 10;\n\
    \        }\n    }\n    sum", '    arr.iter().take(k as usize).filter(|&x| *x <
    100).sum()', "    let mut sum = 0;\n    for i in 0..k {\n        let mut n = arr[i\
    \ as usize];\n        if n >= 100 {\n            n = n % 100;\n        }\n   \
    \     sum += n;\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n\
    \        let n = arr[i as usize];\n        if n > 99 {\n            continue;\n\
    \        }\n        sum += n;\n    }\n    sum", '    arr.iter().take(k as usize).filter(|&x|
    x.abs() < 100).sum()', "    let mut sum = 0;\n    for i in 0..k {\n        if\
    \ arr[i as usize] <= 99 {\n            sum += arr[i as usize];\n        }\n  \
    \  }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n        let num =\
    \ arr[i as usize];\n        if num < 10 {\n            sum += num;\n        }\
    \ else if num < 100 {\n            sum += num / 10 + num % 10;\n        } else\
    \ {\n            sum += 1;\n        }\n    }\n    sum", "    let mut sum = 0;\n\
    \    for i in 0..k {\n        if arr[i as usize] > 9 && arr[i as usize] < 100\
    \ {\n            sum += arr[i as usize];\n        }\n    }\n    sum", "    let\
    \ mut res = 0;\n    for i in 0..k {\n        let arr_i = arr[i as usize];\n  \
    \      if arr_i < 10 {\n            res += arr_i;\n        } else if arr_i < 100\
    \ {\n            res += arr_i;\n        }\n    }\n    res", "    let mut sum =\
    \ 0;\n    for element in arr {\n        if element >= 10 && element < 100 {\n\
    \            sum += element;\n        }\n        if k > 0 {\n            k -=\
    \ 1;\n        } else {\n            break;\n        }\n    }\n    sum", '    arr.iter().take(k
    as usize).filter(|x| **x < 100).sum()', "    let mut result = 0;\n    for v in\
    \ arr.iter().take(k as usize) {\n        if *v < 100 {\n            result +=\
    \ *v;\n        }\n    }\n    result", "    // Subtract len of array from k to\
    \ get the number of values\n    // that need to be subtracted\n    let num_to_subtract\
    \ = arr.len() as isize - k;\n    let mut num_to_subtract = num_to_subtract as\
    \ usize;\n    let mut sum = 0;\n    // Iterate over the array and sum the first\
    \ k elements\n    for i in 0..arr.len() {\n        if i >= num_to_subtract {\n\
    \            sum += arr[i];\n        }\n    }\n    // Iterate over the first k\
    \ elements and subtract values with more than two digits\n    for i in 0..num_to_subtract\
    \ {\n        let num = arr[i];\n        if num > 99 {\n            sum -= num;\n\
    \        }\n    }\n    sum", "    let mut result = 0;\n    for (i, &x) in arr.iter().enumerate()\
    \ {\n        if i >= k as usize {\n            break;\n        }\n        if x\
    \ < 100 {\n            result += x;\n        }\n    }\n    result", "    let mut\
    \ sum = 0;\n    for i in 0..k {\n        if (arr[i as usize] < 10) || (arr[i as\
    \ usize] < 100) {\n            sum += arr[i as usize];\n        }\n    }\n   \
    \ sum", "    let mut sum = 0;\n    for v in arr {\n        if v <= 99 {\n    \
    \        sum += v;\n        }\n        if sum >= k {\n            break;\n   \
    \     }\n    }\n    sum", "    let mut sum = 0;\n    for i in 0..k {\n       \
    \ let n = arr[i as usize];\n        if n < 10 {\n            sum += n;\n     \
    \   } else if n < 100 {\n            sum += n / 10 + n % 10;\n        } else {\n\
    \            sum += (n / 100 + n % 100 / 10 + n % 10);\n        }\n    }\n   \
    \ sum", '    arr.iter().filter(|&x| x.abs() < 100).take(k as usize).sum()', " \
    \   let mut sum = 0;\n    for (i, value) in arr.iter().enumerate() {\n       \
    \ if i >= k as usize {\n            break;\n        }\n        let mut digits\
    \ = value.to_string().chars().map(|x| x.to_digit(10).unwrap()).collect::<Vec<u32>>();\n\
    \        digits.reverse();\n        if digits.len() <= 2 {\n            sum +=\
    \ value;\n        }\n    }\n    sum", "    let mut result = 0;\n    for &i in\
    \ arr.iter().take(k as usize) {\n        if i < 100 {\n            result += i;\n\
    \        }\n    }\n    result", "    let mut sum = 0;\n    for i in 0..k {\n \
    \       if arr[i as usize] < 100 {\n            sum += arr[i as usize];\n    \
    \    }\n    }\n    sum", "    let mut i = 0;\n    let mut sum = 0;\n    while\
    \ i < k && i < arr.len() as isize {\n        let x = arr[i as usize];\n      \
    \  if x <= 99 {\n            sum += x;\n        }\n        i += 1;\n    }\n  \
    \  sum", "    let mut sum = 0;\n    for num in arr.iter().take(k as usize) {\n\
    \        if *num < 100 {\n            sum += *num;\n        }\n    }\n    sum",
  '    arr.iter().take(k as usize).filter(|x| x.abs() < 100).sum()']
stop_tokens:
- "\n}"

name: HumanEval_102_choose_num
language: rust
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// choose_num(12,\
  \ 15) = 14\n/// choose_num(13, 12) = -1\nfn choose_num(x: isize, y: isize) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    if x % 2 == 0 && x >= 0 && y >= 0 {\n        if x >= y {\n    \
    \        x\n        } else {\n            y\n        }\n    } else if x < 0 ||\
    \ y < 0 {\n        -1\n    } else {\n        if x % 2 == 0 {\n            x\n\
    \        } else {\n            x + 1\n        }\n    }", "    if y < x {\n   \
    \     return -1;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    if\
    \ x % 2 == 0 {\n        return x;\n    }\n    return choose_num(x+1, y-1);", " \
    \   if x % 2 == 0 && x <= y { x }\n    else if x % 2 == 1 && x + 1 <= y { x +\
    \ 1 }\n    else { -1 }", '    unimplemented!()', "    let mut result = 0;\n  \
    \  let mut first = x;\n    let mut last = y;\n    if x > y {\n        first =\
    \ y;\n        last = x;\n    }\n    for i in first..last + 1 {\n        if i %\
    \ 2 == 0 {\n            result = i;\n        }\n    }\n    if result == 0 {\n\
    \        result = -1;\n    }\n    result", '    unimplemented!()', '    unimplemented!();',
  "    let mut best_num = -1;\n    let mut i = x;\n    while i <= y {\n        if\
    \ i % 2 == 0 {\n            best_num = i;\n        }\n        i += 1;\n    }\n\
    \    best_num", "    if y < x {\n        return -1;\n    }\n    for i in (x..y+1).rev()\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    return\
    \ -1;", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n    \
    \    return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    if x\
    \ + 1 == y {\n        return -1;\n    }\n    return x + 1;", "    let mut max_even:\
    \ isize = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 {\n            max_even\
    \ = i;\n        }\n    }\n    max_even", '    unimplemented!()', "    let mut\
    \ num: isize = x;\n    if x > y {\n        return -1;\n    } else if x % 2 ==\
    \ 1 {\n        num += 1;\n    }\n\n    while num <= y {\n        if num % 2 ==\
    \ 0 {\n            return num;\n        }\n        num += 1;\n    }\n    return\
    \ -1;", "    if x % 2 == 0 {\n        return x;\n    }\n    for i in (x + 1)..(y\
    \ + 1) {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n \
    \   return -1;", "\tlet mut result: isize = -1;\n\tlet mut x = x;\n\tlet mut y\
    \ = y;\n\tif x > y {\n\t\tlet tmp = x;\n\t\tx = y;\n\t\ty = tmp;\n\t}\n\twhile\
    \ x <= y {\n\t\tif x % 2 == 0 {\n\t\t\tresult = x;\n\t\t}\n\t\tx += 1;\n\t}\n\t\
    result", "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n   \
    \     x\n    } else {\n        x + 1\n    }", "    if x > y {\n        return\
    \ -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    if x + 1 == y\
    \ {\n        return -1;\n    }\n    choose_num(x + 1, y)", "    // TODO: Implement\
    \ this function\n    for i in x..y+1 {\n        if (i%2 == 0) {\n            return\
    \ i;\n        }\n    }\n    return -1;", "    // TODO: replace with your solution\n\
    \    -1", "    for i in x..(y+1) {\n        if i % 2 == 0 {\n            return\
    \ i;\n        }\n    }\n    return -1;", "\tif x % 2 == 0 {\n\t\tif x < y {\n\t\
    \t\treturn x;\n\t\t}\n\t\telse {\n\t\t\treturn -1;\n\t\t}\n\t}\n\telse {\n\t\t\
    let mut new_x = x;\n\t\twhile new_x % 2 != 0 {\n\t\t\tnew_x += 1;\n\t\t}\n\t\t\
    if new_x > y {\n\t\t\treturn -1;\n\t\t}\n\t\telse {\n\t\t\treturn new_x;\n\t\t\
    }\n\t}", '    unimplemented!();', "    for i in (x..y+1).rev() {\n        if i\
    \ % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    let mut candidate\
    \ = y;\n    while candidate >= x {\n        if candidate % 2 == 0 {\n        \
    \    return candidate;\n        }\n        candidate -= 1;\n    }\n    -1", " \
    \   if x > y {\n        return -1;\n    }\n    else if x % 2 == 0 {\n        return\
    \ x;\n    } else {\n        return x + 1;\n    }", "    if x % 2 == 0 {\n    \
    \    x\n    } else if x + 1 > y {\n        -1\n    } else {\n        x + 1\n \
    \   }", "    // TODO: fill the code here\n    for i in x..y+1 {\n        if i\
    \ % 2 == 0 {\n            return i;\n        }\n    }\n    -1", '    unimplemented!();',
  "    for num in (x..y+1).rev() {\n        if num % 2 == 0 {\n            return\
    \ num;\n        }\n    }\n    -1", "    let mut i = x;\n    while i <= y {\n \
    \       if i % 2 == 0 {\n            return i;\n        }\n        i += 1;\n \
    \   }\n    -1", '    unimplemented!();', '    unimplemented!();', "    //implement\
    \ the solution here\n    -1", "    let mut max = -1;\n    let mut counter = x;\n\
    \    while counter <= y {\n        if counter % 2 == 0 {\n            max = counter;\n\
    \        }\n        counter += 1;\n    }\n    max", "    // TODO: Implement me!\n\
    \    -1", "    for n in (x..y + 1).rev() {\n        if n % 2 == 0 {\n        \
    \    return n;\n        }\n    }\n    -1", "    if x % 2 == 0 {\n        return\
    \ x;\n    } else if x + 1 == y {\n        return -1;\n    } else {\n        return\
    \ choose_num(x + 1, y);\n    }", "    for num in (x..=y).rev() {\n        if num\
    \ % 2 == 0 {\n            return num;\n        }\n    }\n    -1", "    if x >\
    \ y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n   \
    \ }\n    return x + 1;", '    unimplemented!();', "    for i in x..y + 1 {\n \
    \       if (i % 2 == 0) {\n            return i;\n        }\n    }\n    return\
    \ -1;", "    if x % 2 == 0 {\n        if x > y {\n            return -1;\n   \
    \     }\n        return x;\n    }\n    if x + 1 > y {\n        return -1;\n  \
    \  }\n    return x + 1;", "    let mut num = -1;\n    if x < y {\n        for\
    \ i in x..(y+1) {\n            if i % 2 == 0 {\n                num = i;\n   \
    \         }\n        }\n    } else if x > y {\n        for i in y..(x+1) {\n \
    \           if i % 2 == 0 {\n                num = i;\n            }\n       \
    \ }\n    } else {\n        if x % 2 == 0 {\n            num = x;\n        }\n\
    \    }\n    num", "    let mut best_num = -1;\n    let mut cur_num = x;\n    while\
    \ cur_num <= y {\n        if cur_num % 2 == 0 {\n            best_num = cur_num;\n\
    \        }\n        cur_num += 1;\n    }\n    best_num", "    let mut z: isize\
    \ = -1;\n    if x < y {\n        for i in x..(y+1) {\n            if i % 2 ==\
    \ 0 {\n                z = i;\n            }\n        }\n    }\n    z", "    if\
    \ x > y {\n        -1\n    } else if x % 2 == 0 {\n        x\n    } else {\n \
    \       choose_num(x + 1, y)\n    }", "    for i in (x..y+1).rev() {\n       \
    \ if is_even(i) {\n            return i;\n        }\n    }\n    -1", "    // TODO:\
    \ implement the choose_num function\n    if x % 2 == 0 {\n        if x >= y {\n\
    \            return x;\n        } else {\n            return y;\n        }\n \
    \   } else {\n        if x == y {\n            return -1;\n        } else {\n\
    \            if x < y {\n                if y % 2 == 0 {\n                   \
    \ return y;\n                } else {\n                    return x + 1;\n   \
    \             }\n            } else {\n                if x % 2 == 0 {\n     \
    \               return x;\n                } else {\n                    return\
    \ y + 1;\n                }\n            }\n        }\n    }", "    let mut res\
    \ = -1;\n    if x%2 == 0 {\n        res = x;\n    } else if x+1 <= y {\n     \
    \   res = x+1;\n    }\n    res", "    // TODO\n    0", "    let mut result = -1;\n\
    \    for num in x..y+1 {\n        if num % 2 == 0 {\n            result = num;\n\
    \        }\n    }\n    result", "    for i in (x..=y).rev() {\n        if i %\
    \ 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    // your code\
    \ here\n    0", "    let mut result = -1;\n    for i in x..y+1 {\n        if i\
    \ % 2 == 0 {\n            result = i;\n        }\n    }\n    result", "    if\
    \ x % 2 == 0 {\n        if x == y {\n            return x;\n        } else {\n\
    \            for i in x..y+1 {\n                if i % 2 == 0 {\n            \
    \        return i;\n                }\n            }\n        }\n    } else {\n\
    \        for i in x..y+1 {\n            if i % 2 == 0 {\n                return\
    \ i;\n            }\n        }\n    }\n    return -1;", "    if x > y {\n    \
    \    -1\n    } else if x % 2 == 0 {\n        x\n    } else {\n        x + 1\n\
    \    }", "    let mut result = -1;\n    for i in x..y+1 {\n        if i % 2 ==\
    \ 0 {\n            result = i;\n        }\n    }\n    result", "    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    return\
    \ -1;", '    unimplemented!();', "    let mut biggest_even_num = -1;\n    for\
    \ i in x..y + 1 {\n        if i % 2 == 0 {\n            biggest_even_num = i;\n\
    \        }\n    }\n    biggest_even_num", "    let mut num = -1;\n    for i in\
    \ x..(y+1) {\n        if (i % 2 == 0) && (i > num) {\n            num = i;\n \
    \       }\n    }\n    num", '    unimplemented!();', '    unimplemented!();',
  "    let mut max = -1;\n    for i in x..(y+1) {\n        if i % 2 == 0 && i > max\
    \ {\n            max = i;\n        }\n    }\n    max", "    if x % 2 == 0 { return\
    \ x }\n    if y % 2 == 0 { return y }\n    -1", "    if x % 2 == 0 {\n       \
    \ return x;\n    } else if x + 1 == y {\n        return -1;\n    } else {\n  \
    \      return choose_num(x + 1, y);\n    }", "    let mut result = -1;\n    for\
    \ i in x..(y + 1) {\n        if i % 2 == 0 {\n            result = i;\n      \
    \  }\n    }\n    result", "    // YOUR CODE HERE\n    unimplemented!();", "  \
    \  if y < x {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n\n    if y % 2 == 0 {\n        return y;\n    }\n\n    return -1;",
  '    unimplemented!();', '    unimplemented!()', "    let mut result = -1;\n   \
    \ for i in x..y+1 {\n        if i % 2 == 0 {\n            result = i;\n      \
    \  }\n    }\n    result", "    // start from lower number and increment by 2\n\
    \    for n in x..y+1 {\n        if n % 2 == 0 {\n            return n;\n     \
    \   }\n    }\n    return -1;", '    unimplemented!();', "    // TODO\n    unimplemented!()",
  "    // TODO: implement this function\n    let mut count: isize = 0;\n    let mut\
    \ number: isize = x;\n    let mut copy: isize = y;\n    let mut smallest: isize\
    \ = 0;\n    let mut largest: isize = 0;\n    while number != 0 {\n        number\
    \ /= 10;\n        count += 1;\n    }\n    while copy != 0 {\n        copy /= 10;\n\
    \        smallest += 1;\n    }\n    if smallest > count {\n        largest = smallest;\n\
    \    } else {\n        largest = count;\n    }\n    let mut number: isize = x;\n\
    \    let mut copy: isize = y;\n    let mut sum: isize = 0;\n    for i in 1..largest\
    \ + 1 {\n        number %= 10;\n        if number % 2 == 0 {\n            sum\
    \ += number;\n        }\n        number /= 10;\n    }\n    for i in 1..largest\
    \ + 1 {\n        copy %= 10;\n        if copy % 2 == 0 {\n            sum += copy;\n\
    \        }\n        copy /= 10;\n    }\n    if sum % 2 == 0 {\n        sum\n \
    \   } else {\n        -1\n    }", "    if y < x {\n        return -1;\n    }\n\
    \n    if y % 2 == 0 {\n        return y;\n    }\n\n    return y - 1;", '    unimplemented!()',
  "    let mut max = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 && i > max\
    \ {\n            max = i;\n        }\n    }\n    max", "    // TODO: Implement\
    \ this function.\n    unimplemented!();", "    if y < x {\n        return -1;\n\
    \    }\n    if y % 2 == 0 {\n        return y;\n    }\n    if x % 2 == 0 {\n \
    \       return x;\n    }\n    return -1;", '    unimplemented!();', "    for i\
    \ in (x..y+1).rev() {\n        if i % 2 == 0 {\n            return i;\n      \
    \  }\n    }\n    -1", "    if x % 2 == 0 {\n        x\n    } else if x + 1 > y\
    \ {\n        -1\n    } else {\n        x + 1\n    }", '    unimplemented!()',
  "    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n        x\n \
    \   } else {\n        x + 1\n    }", "    let mut counter = x;\n    while counter\
    \ <= y {\n        if counter % 2 == 0 {\n            return counter;\n       \
    \ }\n        counter += 1;\n    }\n    -1", "    if x % 2 == 0 {\n        return\
    \ if x == y {x} else {x + 1};\n    }\n    if y % 2 == 0 {\n        return y;\n\
    \    }\n    -1", '    unimplemented!();', '    unimplemented!();', '    unimplemented!();',
  "    let result = if x % 2 == 0 {\n        x\n    } else {\n        x + 1\n    };\n\
    \    if result > y {\n        -1\n    } else {\n        result\n    }", '    unimplemented!()',
  "    if y < x {\n        return -1;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    return choose_num(x\
    \ - 1, y - 1);", "    if x % 2 == 0 {\n        x\n    } else if x + 1 > y {\n\
    \        -1\n    } else {\n        x + 1\n    }", "    if x % 2 == 0 && x >= y\
    \ {\n        return x;\n    }\n    if y % 2 == 0 && y >= x {\n        return y;\n\
    \    }\n    if y - x == 1 {\n        return -1;\n    }\n    return choose_num(x\
    \ + 1, y - 1);", '    unimplemented!();', "    // TODO: implement this function\n\
    \    for i in x..y+1 {\n        if i % 2 == 0 {\n            return i;\n     \
    \   }\n    }\n    return -1;", "    let (low, high) = if x < y { (x, y) } else\
    \ { (y, x) };\n    if low < 0 {\n        -1\n    } else if low % 2 == 0 {\n  \
    \      low\n    } else {\n        low + 1\n    }", "    if x > y {\n        return\
    \ -1;\n    }\n\n    if x % 2 == 0 {\n        return x;\n    }\n\n    if x + 1\
    \ == y {\n        return -1;\n    }\n\n    return x + 2;", "    // Write your\
    \ implementation here\n    if x > y {\n        return -1;\n    }\n    let mut\
    \ result = 0;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n            result\
    \ = i;\n        }\n    }\n    if result == 0 {\n        return -1;\n    }\n  \
    \  result", "    // TODO\n    let mut big = x;\n    if x < y {\n        big =\
    \ y;\n    }\n    while big > 0 {\n        if big % 2 == 0 {\n            return\
    \ big;\n        }\n        big -= 1;\n    }\n    -1", '    unimplemented!();',
  "    if x > y {\n        // We don't have a number in the range [x, y]\n       \
    \ return -1;\n    }\n\n    if x % 2 == 0 {\n        // The x number is even\n\
    \        return x;\n    }\n\n    // We need to find the next even number that\
    \ is in the range [x, y]\n    for i in x..(y + 1) {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n\n    -1", "    if x%2 != 0 && y%2 !=\
    \ 0 {\n        return -1;\n    }\n    let lower_num = if x%2 == 0 {x} else {x+1};\n\
    \    let upper_num = if y%2 == 0 {y} else {y-1};\n    let mut curr_num = lower_num;\n\
    \    for i in lower_num..upper_num {\n        if i % 2 == 0 {\n            curr_num\
    \ = i;\n        }\n    }\n    curr_num", "    if x < y {\n        let mut result\
    \ = y - y % 2;\n        for i in (x..=y).rev() {\n            if i % 2 == 0 {\n\
    \                result = i;\n                break;\n            }\n        }\n\
    \        result\n    } else {\n        -1\n    }", "    let mut counter = x;\n\
    \    while counter >= x && counter <= y {\n        if counter % 2 == 0 {\n   \
    \         return counter;\n        }\n        counter += 1;\n    }\n    -1", '    unimplemented!();',
  "    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if x + 1 == y {\n        return -1;\n    }\n    x + 2", "   \
    \ // TODO\n    if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n  \
    \      return x;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    for\
    \ n in (x+1)..y {\n        if n % 2 == 0 {\n            return n;\n        }\n\
    \    }\n    return -1;", "    for i in (x..=y).rev() {\n        if i % 2 == 0\
    \ {\n            return i;\n        }\n    }\n    -1", "    for i in (x..y+1).rev()\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1",
  "    if x <= y {\n        for i in (x..y+1).rev() {\n            if i % 2 == 0 {\n\
    \                return i;\n            }\n        }\n    }\n    -1", "    if\
    \ x % 2 == 0 {\n        if x > y {\n            return -1;\n        }\n      \
    \  return x;\n    }\n    if x == y {\n        return -1;\n    }\n    if x + 1\
    \ > y {\n        return -1;\n    }\n    return x + 1;", "    if x > y {\n    \
    \    return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    return\
    \ choose_num(x + 1, y);", "    if x % 2 == 0 { return x }\n    choose_num(x +\
    \ 1, y)", "    let mut z: isize = -1;\n    for n in (x..y+1).rev() {\n       \
    \ if n % 2 == 0 {\n            z = n;\n            break;\n        }\n    }\n\
    \    z", "    let mut result = -1;\n    for z in x..y+1 {\n        if z % 2 ==\
    \ 0 {\n            result = z;\n        }\n    }\n    result", "    // Add your\
    \ code here.\n    // Feel free to use this function in your test cases.\n    unimplemented!();",
  '    unimplemented!()', '    unimplemented!();', "    if x > y {\n        return\
    \ -1;\n    }\n\n    let mut result = y;\n    while result >= x {\n        if result\
    \ % 2 == 0 {\n            return result;\n        }\n\n        result -= 1;\n\
    \    }\n\n    -1", "    if x <= y {\n        if x%2 == 0 {\n            return\
    \ x;\n        } else {\n            return choose_num(x+1, y);\n        }\n  \
    \  } else {\n        return -1;\n    }", "    let mut temp: isize = 0;\n    for\
    \ num in x..(y + 1) {\n        if num % 2 == 0 {\n            temp = num;\n  \
    \      }\n    }\n    if temp == 0 {\n        return -1;\n    }\n    return temp;",
  '    unimplemented!();', "    if x > y {\n        -1\n    } else if x <= 0 || y\
    \ <= 0 {\n        -1\n    } else if x % 2 == 0 {\n        x\n    } else {\n  \
    \      x + 1\n    }", "    for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n    -1", "    assert!(x > 0);\n    assert!(y\
    \ > 0);\n    let mut temp = y;\n    while temp >= x {\n        if temp % 2 ==\
    \ 0 {\n            return temp;\n        }\n        temp -= 1;\n    }\n    -1",
  "    let mut max = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 && i > max\
    \ {\n            max = i;\n        }\n    }\n    max", "    if x < 0 || y < 0\
    \ {\n        panic!(\"arguments must be positive\");\n    }\n    if x == y {\n\
    \        if x % 2 == 0 {\n            return x;\n        } else {\n          \
    \  return -1;\n        }\n    }\n    if x > y {\n        return choose_num(y,\
    \ x);\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n    if y - 1 % 2\
    \ == 0 {\n        return y - 1;\n    }\n    return choose_num(x, y - 2);", " \
    \   // TODO\n    0", '    unimplemented!();', '    unimplemented!();', "    //\
    \ Your code here\n    unimplemented!();", "    assert!(x > 0 && y > 0);\n    //\
    \ Write code here\n    let mut res = -1;\n    for i in x..y+1 {\n        if i\
    \ % 2 == 0 {\n            res = i;\n        }\n    }\n    res", '    unimplemented!();',
  "    let mut num: isize = x;\n    while num >= x && num <= y {\n        if num %\
    \ 2 == 0 {\n            return num;\n        }\n        num -= 1;\n    }\n   \
    \ return -1;", "    if x > y {\n        return -1;\n    }\n    let mut result\
    \ = y;\n    while result >= x {\n        if result % 2 == 0 {\n            return\
    \ result;\n        }\n        result -= 1;\n    }\n    -1", "    if x % 2 == 0\
    \ && x > y { return x; }\n    if y % 2 == 0 && y > x { return y; }\n    if x %\
    \ 2 == 0 && y % 2 == 0 { return x; }\n    if x % 2 != 0 && y % 2 != 0 { return\
    \ -1; }\n    return -1;", "    if x > y {\n        return -1;\n    }\n    let\
    \ mut max = -1;\n    for i in x..y + 1 {\n        if i % 2 == 0 {\n          \
    \  max = i;\n        }\n    }\n    max", "    if x % 2 == 0 {\n        if x <\
    \ y {\n            x\n        } else {\n            -1\n        }\n    } else\
    \ {\n        if x + 1 <= y {\n            x + 1\n        } else {\n          \
    \  -1\n        }\n    }", "    let mut v = Vec::new();\n    if x > y {\n     \
    \   return -1;\n    }\n    if x % 2 == 0 {\n        v.push(x);\n    }\n    if\
    \ y % 2 == 0 {\n        v.push(y);\n    }\n    if v.len() == 0 {\n        return\
    \ -1;\n    }\n    let max = v.iter().cloned().fold(0, |acc, x| {\n        if x\
    \ > acc {\n            x\n        } else {\n            acc\n        }\n    });\n\
    \    max", '    unimplemented!()', "    if x > y {\n        -1\n    } else if\
    \ x == y {\n        if x % 2 == 0 {\n            x\n        } else {\n       \
    \     -1\n        }\n    } else {\n        let mut ret: isize = -1;\n        for\
    \ i in x..y + 1 {\n            if i % 2 == 0 {\n                ret = i;\n   \
    \         }\n        }\n        ret\n    }", "\treturn -1;", "    if x % 2 ==\
    \ 0 {\n        if x > y {\n            x\n        } else {\n            y\n  \
    \      }\n    } else if y % 2 == 0 {\n        y\n    } else {\n        -1\n  \
    \  }", "    for i in x..y+1 {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n    }\n    return -1;", "    let nums = (x..y + 1).collect::<Vec<isize>>();\n\
    \    let mut result = -1;\n    for i in nums {\n        if i % 2 == 0 {\n    \
    \        result = i;\n        }\n    }\n    result", "    if x % 2 == 0 && x >=\
    \ y {\n        return x;\n    }\n    if y % 2 == 0 && y <= x {\n        return\
    \ y;\n    }\n    if x % 2 == 0 && x <= y {\n        return x;\n    }\n    if y\
    \ % 2 == 0 && y >= x {\n        return y;\n    }\n    -1", "    if y < x {\n \
    \       return -1;\n    }\n    if y % 2 == 0 {\n        return y;\n    }\n   \
    \ if x % 2 == 0 {\n        return x;\n    }\n    return choose_num(x + 1, y -\
    \ 1);", "    if x > y {\n        return -1;\n    }\n    let mut i = y;\n    while\
    \ i >= x {\n        if i % 2 == 0 {\n            return i;\n        }\n      \
    \  i -= 1;\n    }\n    -1", "    let mut num: isize = -1;\n    if x < y {\n  \
    \      for i in x..y + 1 {\n            if i % 2 == 0 {\n                num =\
    \ i;\n            }\n        }\n    }\n    num", "\tif x > y {\n\t\treturn -1;\n\
    \t}\n\tif x % 2 == 0 {\n\t\treturn x;\n\t}\n\treturn choose_num(x + 1, y);", " \
    \   for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n            return i;\n\
    \        }\n    }\n    -1", '    unimplemented!()', "    // TODO: write the function\
    \ body.\n    unimplemented!();", "    // TODO: Implement\n    return -1;", '    unimplemented!();',
  "    let mut c_num = -1;\n    if x > y {\n        return c_num;\n    }\n    for\
    \ i in x..y + 1 {\n        if i % 2 == 0 {\n            c_num = i;\n        }\n\
    \    }\n    c_num", "    if x % 2 == 0 {\n        x\n    } else if x+1 == y {\n\
    \        y\n    } else {\n        choose_num(x+1, y)\n    }", "    // TODO: Implement.\n\
    \    unimplemented!();", '    return (x..y+1).rev().filter(|n| n % 2 == 0).next().unwrap_or(-1);',
  "    // let mut current_num = y;\n    // while current_num >= x {\n    //     if\
    \ current_num % 2 == 0 {\n    //         return current_num;\n    //     }\n \
    \   //     current_num -= 1;\n    // }\n    // -1\n\n    for current_num in (x..y\
    \ + 1).rev() {\n        if current_num % 2 == 0 {\n            return current_num;\n\
    \        }\n    }\n    -1", '    -1', "    if x % 2 == 0 {\n        if x == y\
    \ {\n            return x;\n        } else {\n            return choose_num(x\
    \ + 2, y);\n        }\n    } else {\n        if x + 1 == y {\n            return\
    \ -1;\n        } else {\n            return choose_num(x + 1, y);\n        }\n\
    \    }", "    for n in (x..y+1).rev() {\n        if n % 2 == 0 {\n           \
    \ return n;\n        }\n    }\n    -1", "    if x%2==0{\n        return x;\n \
    \   }\n    if y%2==0{\n        return y;\n    }\n    return -1;", '    unimplemented!();',
  "    if x%2 != 0 {\n        x += 1;\n    }\n    let mut i = x;\n    while i <= y\
    \ {\n        if i%2 == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    -1", "    if x % 2 == 0 {\n        if x == y {\n            return\
    \ x;\n        }\n        let mut result = x;\n        for i in x..=y {\n     \
    \       if i % 2 == 0 && i > result {\n                result = i;\n         \
    \   }\n        }\n        return result;\n    }\n    let mut result = -1;\n  \
    \  for i in x..=y {\n        if i % 2 == 0 && i > result {\n            result\
    \ = i;\n        }\n    }\n    return result;", "    // TODO - add code here!\n\
    \    unimplemented!();", '    unimplemented!();', "\tlet mut max_even:isize =\
    \ -1;\n\tlet mut curr_num:isize = x;\n\twhile curr_num <= y {\n\t\tif curr_num\
    \ % 2 == 0 {\n\t\t\tmax_even = curr_num;\n\t\t}\n\t\tcurr_num += 1;\n\t}\n\treturn\
    \ max_even;", "    let mut result = -1;\n    for i in x..y+1 {\n        if i %\
    \ 2 == 0 {\n            result = i;\n        }\n    }\n    result", "    for i\
    \ in x..y+1 {\n        if i % 2 == 0 {\n            return i;\n        }\n   \
    \ }\n    return -1;", '    unimplemented!();', '    -1', '    unimplemented!()',
  "    if x > y {\n        return -1;\n    }\n    if y % 2 == 0 {\n        return\
    \ y;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n    return -1;", " \
    \   if x > y { return -1; }\n    let mut max_even = -1;\n    for number in x..(y+1)\
    \ {\n        if number % 2 == 0 {\n            max_even = number;\n        }\n\
    \    }\n    max_even", "    // Your solution goes here\n    0", "    let mut i\
    \ = x;\n    while i <= y {\n        if i % 2 == 0 {\n            return i;\n \
    \       }\n        i += 1;\n    }\n    -1", "    for n in (x..=y).rev() {\n  \
    \      if n % 2 == 0 {\n            return n;\n        }\n    }\n    -1", "  \
    \  if x > y {\n        return -1;\n    }\n    if x % 2 == 0 {\n        return\
    \ x;\n    }\n    if x + 1 == y {\n        return -1;\n    }\n    return x + 2;",
  "    let mut max_even: isize = -1;\n    for n in x..y+1 {\n        if n % 2 == 0\
    \ {\n            max_even = n;\n        }\n    }\n    max_even", "    if x%2 !=\
    \ 0 {\n        x += 1;\n    }\n    let mut i = y;\n    while i >= x {\n      \
    \  if i%2 == 0 {\n            return i;\n        }\n        i -= 1;\n    }\n \
    \   -1", "    if x % 2 == 0 {\n        if x > y {\n            x\n        } else\
    \ {\n            y\n        }\n    } else if x < y {\n        choose_num(x + 1,\
    \ y)\n    } else {\n        -1\n    }", "    for i in (x..y+1).rev() {\n     \
    \   if i % 2 == 0 {\n            return i;\n        }\n    }\n    -1", "    if\
    \ x == y {\n        if x % 2 == 0 {\n            return x;\n        } else {\n\
    \            return -1;\n        }\n    } else if x > y {\n        if x % 2 ==\
    \ 0 {\n            return x;\n        } else {\n            return x - 1;\n  \
    \      }\n    } else {\n        if y % 2 == 0 {\n            return y;\n     \
    \   } else {\n            return y - 1;\n        }\n    }", "    if x % 2 == 0\
    \ && x <= y {\n        x\n    } else if y % 2 == 0 {\n        y\n    } else {\n\
    \        -1\n    }", "    // todo!()\n    for i in x..y+1 {\n        if i % 2\
    \ == 0 {\n            return i;\n        }\n    }\n    return -1;", "    let mut\
    \ biggest = -1;\n    for i in x..y+1 {\n        if i % 2 == 0 && i > biggest {\n\
    \            biggest = i;\n        }\n    }\n    biggest", "    // TODO - replace\
    \ with your code\n    -1", '    unimplemented!();', "    if x > y {\n        return\
    \ -1;\n    }\n    let mut num = x;\n    while num <= y {\n        if num % 2 ==\
    \ 0 {\n            return num;\n        }\n        num += 1;\n    }\n    -1",
  "    // TODO: implement this function\n    if x % 2 == 0 {\n        x\n    } else\
    \ if y % 2 == 0 {\n        y\n    } else {\n        -1\n    }", "    let is_even\
    \ = |z: isize| z % 2 == 0;\n    let is_in_range = |z: isize| x <= z && z <= y;\n\
    \    let mut result = -1;\n    let mut i = x;\n    while i <= y {\n        if\
    \ is_even(i) && is_in_range(i) {\n            result = i;\n        }\n       \
    \ i += 1;\n    }\n    result", '    unimplemented!()', "    let mut x = x;\n \
    \   let mut result = -1;\n    while x <= y {\n        if x % 2 == 0 {\n      \
    \      result = x;\n        }\n        x += 1;\n    }\n    result", "    if x\
    \ % 2 == 0 && x <= y {\n        return x;\n    }\n    else if x + 1 <= y {\n \
    \       return x + 1;\n    }\n    else {\n        return -1;\n    }"]
stop_tokens:
- "\n}"

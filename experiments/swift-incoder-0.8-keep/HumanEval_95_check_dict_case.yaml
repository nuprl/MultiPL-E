name: HumanEval_95_check_dict_case
language: swift
prompt: "\n/// Given a dictionary, return True if all keys are strings in lower \n\
  /// case or all keys are strings in upper case, else return False.\n/// The function\
  \ should return False is the given dictionary is empty.\n/// Examples:\n/// check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n/// check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n/// check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n/// check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n///\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  func check_dict_case(dict: [String : String]) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"b\" : \"banana\"]) == true)\nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"A\" : \"banana\", \"B\" : \"banana\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"p\" : \"pineapple\", \"5\" : \"banana\", \"a\" : \"apple\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"Name\" : \"John\", \"Age\" : \"36\", \"City\" : \"Houston\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"STATE\" : \"NC\", \"ZIP\" : \"12345\"]) == true)\nassert(check_dict_case(dict:\
  \ [\"fruit\" : \"Orange\", \"taste\" : \"Sweet\"]) == true)\nassert(check_dict_case(dict:\
  \ [:] as [String : String]) == false)"
completions: []
stop_tokens:
- "\n}"
